android.support.annotation.AnimRes -> android.support.annotation.AnimRes:
android.support.annotation.AnimatorRes -> android.support.annotation.AnimatorRes:
android.support.annotation.AnyRes -> android.support.annotation.AnyRes:
android.support.annotation.AnyThread -> android.support.annotation.AnyThread:
android.support.annotation.ArrayRes -> android.support.annotation.ArrayRes:
android.support.annotation.AttrRes -> android.support.annotation.AttrRes:
android.support.annotation.BinderThread -> android.support.annotation.BinderThread:
android.support.annotation.BoolRes -> android.support.annotation.BoolRes:
android.support.annotation.CallSuper -> android.support.annotation.CallSuper:
android.support.annotation.CheckResult -> android.support.annotation.CheckResult:
    java.lang.String suggest() -> suggest
android.support.annotation.ColorInt -> android.support.annotation.ColorInt:
android.support.annotation.ColorLong -> android.support.annotation.ColorLong:
android.support.annotation.ColorRes -> android.support.annotation.ColorRes:
android.support.annotation.DimenRes -> android.support.annotation.DimenRes:
android.support.annotation.Dimension -> android.support.annotation.Dimension:
    int DP -> DP
    int PX -> PX
    int SP -> SP
    int unit() -> unit
android.support.annotation.DrawableRes -> android.support.annotation.DrawableRes:
android.support.annotation.FloatRange -> android.support.annotation.FloatRange:
    double from() -> from
    double to() -> to
    boolean fromInclusive() -> fromInclusive
    boolean toInclusive() -> toInclusive
android.support.annotation.FontRes -> android.support.annotation.FontRes:
android.support.annotation.FractionRes -> android.support.annotation.FractionRes:
android.support.annotation.GuardedBy -> android.support.annotation.GuardedBy:
    java.lang.String value() -> value
android.support.annotation.HalfFloat -> android.support.annotation.HalfFloat:
android.support.annotation.IdRes -> android.support.annotation.IdRes:
android.support.annotation.IntDef -> android.support.annotation.IntDef:
    long[] value() -> value
    boolean flag() -> flag
android.support.annotation.IntRange -> android.support.annotation.IntRange:
    long from() -> from
    long to() -> to
android.support.annotation.IntegerRes -> android.support.annotation.IntegerRes:
android.support.annotation.InterpolatorRes -> android.support.annotation.InterpolatorRes:
android.support.annotation.Keep -> android.support.annotation.Keep:
android.support.annotation.LayoutRes -> android.support.annotation.LayoutRes:
android.support.annotation.MainThread -> android.support.annotation.MainThread:
android.support.annotation.MenuRes -> android.support.annotation.MenuRes:
android.support.annotation.NonNull -> android.support.annotation.NonNull:
android.support.annotation.Nullable -> android.support.annotation.Nullable:
android.support.annotation.PluralsRes -> android.support.annotation.PluralsRes:
android.support.annotation.Px -> android.support.annotation.Px:
android.support.annotation.RawRes -> android.support.annotation.RawRes:
android.support.annotation.RequiresApi -> android.support.annotation.RequiresApi:
    int value() -> value
    int api() -> api
android.support.annotation.RequiresPermission -> android.support.annotation.RequiresPermission:
    java.lang.String value() -> value
    java.lang.String[] allOf() -> allOf
    java.lang.String[] anyOf() -> anyOf
    boolean conditional() -> conditional
android.support.annotation.RequiresPermission$Read -> android.support.annotation.RequiresPermission$Read:
    android.support.annotation.RequiresPermission value() -> value
android.support.annotation.RequiresPermission$Write -> android.support.annotation.RequiresPermission$Write:
    android.support.annotation.RequiresPermission value() -> value
android.support.annotation.RestrictTo -> android.support.annotation.RestrictTo:
    android.support.annotation.RestrictTo$Scope[] value() -> value
android.support.annotation.RestrictTo$Scope -> android.support.annotation.RestrictTo$Scope:
    android.support.annotation.RestrictTo$Scope LIBRARY -> LIBRARY
    android.support.annotation.RestrictTo$Scope LIBRARY_GROUP -> LIBRARY_GROUP
    android.support.annotation.RestrictTo$Scope GROUP_ID -> GROUP_ID
    android.support.annotation.RestrictTo$Scope TESTS -> TESTS
    android.support.annotation.RestrictTo$Scope SUBCLASSES -> SUBCLASSES
    android.support.annotation.RestrictTo$Scope[] $VALUES -> $VALUES
    android.support.annotation.RestrictTo$Scope[] values() -> values
    android.support.annotation.RestrictTo$Scope valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.annotation.Size -> android.support.annotation.Size:
    long value() -> value
    long min() -> min
    long max() -> max
    long multiple() -> multiple
android.support.annotation.StringDef -> android.support.annotation.StringDef:
    java.lang.String[] value() -> value
android.support.annotation.StringRes -> android.support.annotation.StringRes:
android.support.annotation.StyleRes -> android.support.annotation.StyleRes:
android.support.annotation.StyleableRes -> android.support.annotation.StyleableRes:
android.support.annotation.TransitionRes -> android.support.annotation.TransitionRes:
android.support.annotation.UiThread -> android.support.annotation.UiThread:
android.support.annotation.VisibleForTesting -> android.support.annotation.VisibleForTesting:
    int PRIVATE -> PRIVATE
    int PACKAGE_PRIVATE -> PACKAGE_PRIVATE
    int PROTECTED -> PROTECTED
    int NONE -> NONE
    int otherwise() -> otherwise
android.support.annotation.WorkerThread -> android.support.annotation.WorkerThread:
android.support.annotation.XmlRes -> android.support.annotation.XmlRes:
android.support.compat.BuildConfig -> android.support.compat.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.compat.R -> android.support.compat.R:
    void <init>() -> <init>
android.support.compat.R$attr -> android.support.compat.R$attr:
    int font -> font
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    void <init>() -> <init>
android.support.compat.R$bool -> android.support.compat.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    void <init>() -> <init>
android.support.compat.R$color -> android.support.compat.R$color:
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_light -> secondary_text_default_material_light
    void <init>() -> <init>
android.support.compat.R$dimen -> android.support.compat.R$dimen:
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    void <init>() -> <init>
android.support.compat.R$drawable -> android.support.compat.R$drawable:
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    void <init>() -> <init>
android.support.compat.R$id -> android.support.compat.R$id:
    int action_container -> action_container
    int action_divider -> action_divider
    int action_image -> action_image
    int action_text -> action_text
    int actions -> actions
    int async -> async
    int blocking -> blocking
    int chronometer -> chronometer
    int forever -> forever
    int icon -> icon
    int icon_group -> icon_group
    int info -> info
    int italic -> italic
    int line1 -> line1
    int line3 -> line3
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int right_icon -> right_icon
    int right_side -> right_side
    int text -> text
    int text2 -> text2
    int time -> time
    int title -> title
    void <init>() -> <init>
android.support.compat.R$integer -> android.support.compat.R$integer:
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
android.support.compat.R$layout -> android.support.compat.R$layout:
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    void <init>() -> <init>
android.support.compat.R$string -> android.support.compat.R$string:
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.compat.R$style -> android.support.compat.R$style:
    int TextAppearance_Compat_Notification -> TextAppearance_Compat_Notification
    int TextAppearance_Compat_Notification_Info -> TextAppearance_Compat_Notification_Info
    int TextAppearance_Compat_Notification_Line2 -> TextAppearance_Compat_Notification_Line2
    int TextAppearance_Compat_Notification_Time -> TextAppearance_Compat_Notification_Time
    int TextAppearance_Compat_Notification_Title -> TextAppearance_Compat_Notification_Title
    int Widget_Compat_NotificationActionContainer -> Widget_Compat_NotificationActionContainer
    int Widget_Compat_NotificationActionText -> Widget_Compat_NotificationActionText
    void <init>() -> <init>
android.support.compat.R$styleable -> android.support.compat.R$styleable:
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.constraint.BuildConfig -> android.support.constraint.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.constraint.ConstraintLayout -> android.support.constraint.ConstraintLayout:
    boolean ALLOWS_EMBEDDED -> ALLOWS_EMBEDDED
    java.lang.String VERSION -> VERSION
    java.lang.String TAG -> TAG
    boolean SIMPLE_LAYOUT -> SIMPLE_LAYOUT
    android.util.SparseArray mChildrenByIds -> mChildrenByIds
    java.util.ArrayList mVariableDimensionsWidgets -> mVariableDimensionsWidgets
    android.support.constraint.solver.widgets.ConstraintWidgetContainer mLayoutWidget -> mLayoutWidget
    int mMinWidth -> mMinWidth
    int mMinHeight -> mMinHeight
    int mMaxWidth -> mMaxWidth
    int mMaxHeight -> mMaxHeight
    boolean mDirtyHierarchy -> mDirtyHierarchy
    int mOptimizationLevel -> mOptimizationLevel
    android.support.constraint.ConstraintSet mConstraintSet -> mConstraintSet
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setId(int) -> setId
    void init(android.util.AttributeSet) -> init
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void onViewAdded(android.view.View) -> onViewAdded
    void onViewRemoved(android.view.View) -> onViewRemoved
    void setMinWidth(int) -> setMinWidth
    void setMinHeight(int) -> setMinHeight
    int getMinWidth() -> getMinWidth
    int getMinHeight() -> getMinHeight
    void setMaxWidth(int) -> setMaxWidth
    void setMaxHeight(int) -> setMaxHeight
    int getMaxWidth() -> getMaxWidth
    int getMaxHeight() -> getMaxHeight
    void updateHierarchy() -> updateHierarchy
    void setChildrenConstraints() -> setChildrenConstraints
    android.support.constraint.solver.widgets.ConstraintWidget getTargetWidget(int) -> getTargetWidget
    android.support.constraint.solver.widgets.ConstraintWidget getViewWidget(android.view.View) -> getViewWidget
    void internalMeasureChildren(int,int) -> internalMeasureChildren
    void onMeasure(int,int) -> onMeasure
    void setSelfDimensionBehaviour(int,int) -> setSelfDimensionBehaviour
    void solveLinearSystem() -> solveLinearSystem
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setOptimizationLevel(int) -> setOptimizationLevel
    android.support.constraint.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.constraint.ConstraintLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void setConstraintSet(android.support.constraint.ConstraintSet) -> setConstraintSet
    void requestLayout() -> requestLayout
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.constraint.ConstraintLayout$LayoutParams -> android.support.constraint.ConstraintLayout$LayoutParams:
    int MATCH_CONSTRAINT -> MATCH_CONSTRAINT
    int PARENT_ID -> PARENT_ID
    int UNSET -> UNSET
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int TOP -> TOP
    int BOTTOM -> BOTTOM
    int BASELINE -> BASELINE
    int START -> START
    int END -> END
    int MATCH_CONSTRAINT_WRAP -> MATCH_CONSTRAINT_WRAP
    int MATCH_CONSTRAINT_SPREAD -> MATCH_CONSTRAINT_SPREAD
    int CHAIN_SPREAD -> CHAIN_SPREAD
    int CHAIN_SPREAD_INSIDE -> CHAIN_SPREAD_INSIDE
    int CHAIN_PACKED -> CHAIN_PACKED
    int guideBegin -> guideBegin
    int guideEnd -> guideEnd
    float guidePercent -> guidePercent
    int leftToLeft -> leftToLeft
    int leftToRight -> leftToRight
    int rightToLeft -> rightToLeft
    int rightToRight -> rightToRight
    int topToTop -> topToTop
    int topToBottom -> topToBottom
    int bottomToTop -> bottomToTop
    int bottomToBottom -> bottomToBottom
    int baselineToBaseline -> baselineToBaseline
    int startToEnd -> startToEnd
    int startToStart -> startToStart
    int endToStart -> endToStart
    int endToEnd -> endToEnd
    int goneLeftMargin -> goneLeftMargin
    int goneTopMargin -> goneTopMargin
    int goneRightMargin -> goneRightMargin
    int goneBottomMargin -> goneBottomMargin
    int goneStartMargin -> goneStartMargin
    int goneEndMargin -> goneEndMargin
    float horizontalBias -> horizontalBias
    float verticalBias -> verticalBias
    java.lang.String dimensionRatio -> dimensionRatio
    float dimensionRatioValue -> dimensionRatioValue
    int dimensionRatioSide -> dimensionRatioSide
    float horizontalWeight -> horizontalWeight
    float verticalWeight -> verticalWeight
    int horizontalChainStyle -> horizontalChainStyle
    int verticalChainStyle -> verticalChainStyle
    int matchConstraintDefaultWidth -> matchConstraintDefaultWidth
    int matchConstraintDefaultHeight -> matchConstraintDefaultHeight
    int matchConstraintMinWidth -> matchConstraintMinWidth
    int matchConstraintMinHeight -> matchConstraintMinHeight
    int matchConstraintMaxWidth -> matchConstraintMaxWidth
    int matchConstraintMaxHeight -> matchConstraintMaxHeight
    int editorAbsoluteX -> editorAbsoluteX
    int editorAbsoluteY -> editorAbsoluteY
    int orientation -> orientation
    boolean horizontalDimensionFixed -> horizontalDimensionFixed
    boolean verticalDimensionFixed -> verticalDimensionFixed
    boolean needsBaseline -> needsBaseline
    boolean isGuideline -> isGuideline
    int resolvedLeftToLeft -> resolvedLeftToLeft
    int resolvedLeftToRight -> resolvedLeftToRight
    int resolvedRightToLeft -> resolvedRightToLeft
    int resolvedRightToRight -> resolvedRightToRight
    int resolveGoneLeftMargin -> resolveGoneLeftMargin
    int resolveGoneRightMargin -> resolveGoneRightMargin
    float resolvedHorizontalBias -> resolvedHorizontalBias
    android.support.constraint.solver.widgets.ConstraintWidget widget -> widget
    void <init>(android.support.constraint.ConstraintLayout$LayoutParams) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void validate() -> validate
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void resolveLayoutDirection(int) -> resolveLayoutDirection
android.support.constraint.ConstraintSet -> android.support.constraint.ConstraintSet:
    java.lang.String TAG -> TAG
    int UNSET -> UNSET
    int MATCH_CONSTRAINT -> MATCH_CONSTRAINT
    int WRAP_CONTENT -> WRAP_CONTENT
    int MATCH_CONSTRAINT_WRAP -> MATCH_CONSTRAINT_WRAP
    int MATCH_CONSTRAINT_SPREAD -> MATCH_CONSTRAINT_SPREAD
    int PARENT_ID -> PARENT_ID
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int HORIZONTAL_GUIDELINE -> HORIZONTAL_GUIDELINE
    int VERTICAL_GUIDELINE -> VERTICAL_GUIDELINE
    int VISIBLE -> VISIBLE
    int INVISIBLE -> INVISIBLE
    int GONE -> GONE
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int TOP -> TOP
    int BOTTOM -> BOTTOM
    int BASELINE -> BASELINE
    int START -> START
    int END -> END
    int CHAIN_SPREAD -> CHAIN_SPREAD
    int CHAIN_SPREAD_INSIDE -> CHAIN_SPREAD_INSIDE
    int CHAIN_PACKED -> CHAIN_PACKED
    boolean DEBUG -> DEBUG
    int[] VISIBILITY_FLAGS -> VISIBILITY_FLAGS
    java.util.HashMap mConstraints -> mConstraints
    android.util.SparseIntArray mapToConstant -> mapToConstant
    int BASELINE_TO_BASELINE -> BASELINE_TO_BASELINE
    int BOTTOM_MARGIN -> BOTTOM_MARGIN
    int BOTTOM_TO_BOTTOM -> BOTTOM_TO_BOTTOM
    int BOTTOM_TO_TOP -> BOTTOM_TO_TOP
    int DIMENSION_RATIO -> DIMENSION_RATIO
    int EDITOR_ABSOLUTE_X -> EDITOR_ABSOLUTE_X
    int EDITOR_ABSOLUTE_Y -> EDITOR_ABSOLUTE_Y
    int END_MARGIN -> END_MARGIN
    int END_TO_END -> END_TO_END
    int END_TO_START -> END_TO_START
    int GONE_BOTTOM_MARGIN -> GONE_BOTTOM_MARGIN
    int GONE_END_MARGIN -> GONE_END_MARGIN
    int GONE_LEFT_MARGIN -> GONE_LEFT_MARGIN
    int GONE_RIGHT_MARGIN -> GONE_RIGHT_MARGIN
    int GONE_START_MARGIN -> GONE_START_MARGIN
    int GONE_TOP_MARGIN -> GONE_TOP_MARGIN
    int GUIDE_BEGIN -> GUIDE_BEGIN
    int GUIDE_END -> GUIDE_END
    int GUIDE_PERCENT -> GUIDE_PERCENT
    int HORIZONTAL_BIAS -> HORIZONTAL_BIAS
    int LAYOUT_HEIGHT -> LAYOUT_HEIGHT
    int LAYOUT_VISIBILITY -> LAYOUT_VISIBILITY
    int LAYOUT_WIDTH -> LAYOUT_WIDTH
    int LEFT_MARGIN -> LEFT_MARGIN
    int LEFT_TO_LEFT -> LEFT_TO_LEFT
    int LEFT_TO_RIGHT -> LEFT_TO_RIGHT
    int ORIENTATION -> ORIENTATION
    int RIGHT_MARGIN -> RIGHT_MARGIN
    int RIGHT_TO_LEFT -> RIGHT_TO_LEFT
    int RIGHT_TO_RIGHT -> RIGHT_TO_RIGHT
    int START_MARGIN -> START_MARGIN
    int START_TO_END -> START_TO_END
    int START_TO_START -> START_TO_START
    int TOP_MARGIN -> TOP_MARGIN
    int TOP_TO_BOTTOM -> TOP_TO_BOTTOM
    int TOP_TO_TOP -> TOP_TO_TOP
    int VERTICAL_BIAS -> VERTICAL_BIAS
    int VIEW_ID -> VIEW_ID
    int HORIZONTAL_WEIGHT -> HORIZONTAL_WEIGHT
    int VERTICAL_WEIGHT -> VERTICAL_WEIGHT
    int HORIZONTAL_STYLE -> HORIZONTAL_STYLE
    int VERTICAL_STYLE -> VERTICAL_STYLE
    int ALPHA -> ALPHA
    int ELEVATION -> ELEVATION
    int ROTATION_X -> ROTATION_X
    int ROTATION_Y -> ROTATION_Y
    int SCALE_X -> SCALE_X
    int SCALE_Y -> SCALE_Y
    int TRANSFORM_PIVOT_X -> TRANSFORM_PIVOT_X
    int TRANSFORM_PIVOT_Y -> TRANSFORM_PIVOT_Y
    int TRANSLATION_X -> TRANSLATION_X
    int TRANSLATION_Y -> TRANSLATION_Y
    int TRANSLATION_Z -> TRANSLATION_Z
    int WIDTH_DEFAULT -> WIDTH_DEFAULT
    int HEIGHT_DEFAULT -> HEIGHT_DEFAULT
    int WIDTH_MAX -> WIDTH_MAX
    int HEIGHT_MAX -> HEIGHT_MAX
    int WIDTH_MIN -> WIDTH_MIN
    int HEIGHT_MIN -> HEIGHT_MIN
    int UNUSED -> UNUSED
    void <init>() -> <init>
    void clone(android.content.Context,int) -> clone
    void clone(android.support.constraint.ConstraintSet) -> clone
    void clone(android.support.constraint.ConstraintLayout) -> clone
    void applyTo(android.support.constraint.ConstraintLayout) -> applyTo
    void applyToInternal(android.support.constraint.ConstraintLayout) -> applyToInternal
    void center(int,int,int,int,int,int,int,float) -> center
    void centerHorizontally(int,int,int,int,int,int,int,float) -> centerHorizontally
    void centerHorizontallyRtl(int,int,int,int,int,int,int,float) -> centerHorizontallyRtl
    void centerVertically(int,int,int,int,int,int,int,float) -> centerVertically
    void createVerticalChain(int,int,int,int,int[],float[],int) -> createVerticalChain
    void createHorizontalChain(int,int,int,int,int[],float[],int) -> createHorizontalChain
    void createHorizontalChainRtl(int,int,int,int,int[],float[],int) -> createHorizontalChainRtl
    void createHorizontalChain(int,int,int,int,int[],float[],int,int,int) -> createHorizontalChain
    void connect(int,int,int,int,int) -> connect
    void connect(int,int,int,int) -> connect
    void centerHorizontally(int,int) -> centerHorizontally
    void centerHorizontallyRtl(int,int) -> centerHorizontallyRtl
    void centerVertically(int,int) -> centerVertically
    void clear(int) -> clear
    void clear(int,int) -> clear
    void setMargin(int,int,int) -> setMargin
    void setGoneMargin(int,int,int) -> setGoneMargin
    void setHorizontalBias(int,float) -> setHorizontalBias
    void setVerticalBias(int,float) -> setVerticalBias
    void setDimensionRatio(int,java.lang.String) -> setDimensionRatio
    void setVisibility(int,int) -> setVisibility
    void setAlpha(int,float) -> setAlpha
    boolean getApplyElevation(int) -> getApplyElevation
    void setApplyElevation(int,boolean) -> setApplyElevation
    void setElevation(int,float) -> setElevation
    void setRotationX(int,float) -> setRotationX
    void setRotationY(int,float) -> setRotationY
    void setScaleX(int,float) -> setScaleX
    void setScaleY(int,float) -> setScaleY
    void setTransformPivotX(int,float) -> setTransformPivotX
    void setTransformPivotY(int,float) -> setTransformPivotY
    void setTransformPivot(int,float,float) -> setTransformPivot
    void setTranslationX(int,float) -> setTranslationX
    void setTranslationY(int,float) -> setTranslationY
    void setTranslation(int,float,float) -> setTranslation
    void setTranslationZ(int,float) -> setTranslationZ
    void constrainHeight(int,int) -> constrainHeight
    void constrainWidth(int,int) -> constrainWidth
    void constrainMaxHeight(int,int) -> constrainMaxHeight
    void constrainMaxWidth(int,int) -> constrainMaxWidth
    void constrainMinHeight(int,int) -> constrainMinHeight
    void constrainMinWidth(int,int) -> constrainMinWidth
    void constrainDefaultHeight(int,int) -> constrainDefaultHeight
    void constrainDefaultWidth(int,int) -> constrainDefaultWidth
    void setHorizontalWeight(int,float) -> setHorizontalWeight
    void setVerticalWeight(int,float) -> setVerticalWeight
    void setHorizontalChainStyle(int,int) -> setHorizontalChainStyle
    void setVerticalChainStyle(int,int) -> setVerticalChainStyle
    void addToHorizontalChain(int,int,int) -> addToHorizontalChain
    void addToHorizontalChainRTL(int,int,int) -> addToHorizontalChainRTL
    void addToVerticalChain(int,int,int) -> addToVerticalChain
    void removeFromVerticalChain(int) -> removeFromVerticalChain
    void removeFromHorizontalChain(int) -> removeFromHorizontalChain
    void create(int,int) -> create
    void setGuidelineBegin(int,int) -> setGuidelineBegin
    void setGuidelineEnd(int,int) -> setGuidelineEnd
    void setGuidelinePercent(int,float) -> setGuidelinePercent
    android.support.constraint.ConstraintSet$Constraint get(int) -> get
    java.lang.String sideToString(int) -> sideToString
    void load(android.content.Context,int) -> load
    int lookupID(android.content.res.TypedArray,int,int) -> lookupID
    android.support.constraint.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
    void populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray) -> populateConstraint
    void <clinit>() -> <clinit>
android.support.constraint.ConstraintSet$1 -> android.support.constraint.ConstraintSet$1:
android.support.constraint.ConstraintSet$Constraint -> android.support.constraint.ConstraintSet$Constraint:
    boolean mIsGuideline -> mIsGuideline
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mViewId -> mViewId
    int UNSET -> UNSET
    int guideBegin -> guideBegin
    int guideEnd -> guideEnd
    float guidePercent -> guidePercent
    int leftToLeft -> leftToLeft
    int leftToRight -> leftToRight
    int rightToLeft -> rightToLeft
    int rightToRight -> rightToRight
    int topToTop -> topToTop
    int topToBottom -> topToBottom
    int bottomToTop -> bottomToTop
    int bottomToBottom -> bottomToBottom
    int baselineToBaseline -> baselineToBaseline
    int startToEnd -> startToEnd
    int startToStart -> startToStart
    int endToStart -> endToStart
    int endToEnd -> endToEnd
    float horizontalBias -> horizontalBias
    float verticalBias -> verticalBias
    java.lang.String dimensionRatio -> dimensionRatio
    int editorAbsoluteX -> editorAbsoluteX
    int editorAbsoluteY -> editorAbsoluteY
    int orientation -> orientation
    int leftMargin -> leftMargin
    int rightMargin -> rightMargin
    int topMargin -> topMargin
    int bottomMargin -> bottomMargin
    int endMargin -> endMargin
    int startMargin -> startMargin
    int visibility -> visibility
    int goneLeftMargin -> goneLeftMargin
    int goneTopMargin -> goneTopMargin
    int goneRightMargin -> goneRightMargin
    int goneBottomMargin -> goneBottomMargin
    int goneEndMargin -> goneEndMargin
    int goneStartMargin -> goneStartMargin
    float verticalWeight -> verticalWeight
    float horizontalWeight -> horizontalWeight
    int horizontalChainStyle -> horizontalChainStyle
    int verticalChainStyle -> verticalChainStyle
    float alpha -> alpha
    boolean applyElevation -> applyElevation
    float elevation -> elevation
    float rotationX -> rotationX
    float rotationY -> rotationY
    float scaleX -> scaleX
    float scaleY -> scaleY
    float transformPivotX -> transformPivotX
    float transformPivotY -> transformPivotY
    float translationX -> translationX
    float translationY -> translationY
    float translationZ -> translationZ
    int widthDefault -> widthDefault
    int heightDefault -> heightDefault
    int widthMax -> widthMax
    int heightMax -> heightMax
    int widthMin -> widthMin
    int heightMin -> heightMin
    void <init>() -> <init>
    android.support.constraint.ConstraintSet$Constraint clone() -> clone
    void fillFrom(int,android.support.constraint.ConstraintLayout$LayoutParams) -> fillFrom
    void applyTo(android.support.constraint.ConstraintLayout$LayoutParams) -> applyTo
    java.lang.Object clone() -> clone
    void <init>(android.support.constraint.ConstraintSet$1) -> <init>
    void access$100(android.support.constraint.ConstraintSet$Constraint,int,android.support.constraint.ConstraintLayout$LayoutParams) -> access$100
android.support.constraint.Guideline -> android.support.constraint.Guideline:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setVisibility(int) -> setVisibility
    void draw(android.graphics.Canvas) -> draw
    void onMeasure(int,int) -> onMeasure
android.support.constraint.R -> android.support.constraint.R:
    void <init>() -> <init>
android.support.constraint.R$attr -> android.support.constraint.R$attr:
    int constraintSet -> constraintSet
    int layout_constraintBaseline_creator -> layout_constraintBaseline_creator
    int layout_constraintBaseline_toBaselineOf -> layout_constraintBaseline_toBaselineOf
    int layout_constraintBottom_creator -> layout_constraintBottom_creator
    int layout_constraintBottom_toBottomOf -> layout_constraintBottom_toBottomOf
    int layout_constraintBottom_toTopOf -> layout_constraintBottom_toTopOf
    int layout_constraintDimensionRatio -> layout_constraintDimensionRatio
    int layout_constraintEnd_toEndOf -> layout_constraintEnd_toEndOf
    int layout_constraintEnd_toStartOf -> layout_constraintEnd_toStartOf
    int layout_constraintGuide_begin -> layout_constraintGuide_begin
    int layout_constraintGuide_end -> layout_constraintGuide_end
    int layout_constraintGuide_percent -> layout_constraintGuide_percent
    int layout_constraintHeight_default -> layout_constraintHeight_default
    int layout_constraintHeight_max -> layout_constraintHeight_max
    int layout_constraintHeight_min -> layout_constraintHeight_min
    int layout_constraintHorizontal_bias -> layout_constraintHorizontal_bias
    int layout_constraintHorizontal_chainStyle -> layout_constraintHorizontal_chainStyle
    int layout_constraintHorizontal_weight -> layout_constraintHorizontal_weight
    int layout_constraintLeft_creator -> layout_constraintLeft_creator
    int layout_constraintLeft_toLeftOf -> layout_constraintLeft_toLeftOf
    int layout_constraintLeft_toRightOf -> layout_constraintLeft_toRightOf
    int layout_constraintRight_creator -> layout_constraintRight_creator
    int layout_constraintRight_toLeftOf -> layout_constraintRight_toLeftOf
    int layout_constraintRight_toRightOf -> layout_constraintRight_toRightOf
    int layout_constraintStart_toEndOf -> layout_constraintStart_toEndOf
    int layout_constraintStart_toStartOf -> layout_constraintStart_toStartOf
    int layout_constraintTop_creator -> layout_constraintTop_creator
    int layout_constraintTop_toBottomOf -> layout_constraintTop_toBottomOf
    int layout_constraintTop_toTopOf -> layout_constraintTop_toTopOf
    int layout_constraintVertical_bias -> layout_constraintVertical_bias
    int layout_constraintVertical_chainStyle -> layout_constraintVertical_chainStyle
    int layout_constraintVertical_weight -> layout_constraintVertical_weight
    int layout_constraintWidth_default -> layout_constraintWidth_default
    int layout_constraintWidth_max -> layout_constraintWidth_max
    int layout_constraintWidth_min -> layout_constraintWidth_min
    int layout_editor_absoluteX -> layout_editor_absoluteX
    int layout_editor_absoluteY -> layout_editor_absoluteY
    int layout_goneMarginBottom -> layout_goneMarginBottom
    int layout_goneMarginEnd -> layout_goneMarginEnd
    int layout_goneMarginLeft -> layout_goneMarginLeft
    int layout_goneMarginRight -> layout_goneMarginRight
    int layout_goneMarginStart -> layout_goneMarginStart
    int layout_goneMarginTop -> layout_goneMarginTop
    int layout_optimizationLevel -> layout_optimizationLevel
    void <init>() -> <init>
android.support.constraint.R$id -> android.support.constraint.R$id:
    int all -> all
    int basic -> basic
    int chains -> chains
    int none -> none
    int packed -> packed
    int parent -> parent
    int spread -> spread
    int spread_inside -> spread_inside
    int wrap -> wrap
    void <init>() -> <init>
android.support.constraint.R$styleable -> android.support.constraint.R$styleable:
    int[] ConstraintLayout_Layout -> ConstraintLayout_Layout
    int ConstraintLayout_Layout_android_orientation -> ConstraintLayout_Layout_android_orientation
    int ConstraintLayout_Layout_android_maxWidth -> ConstraintLayout_Layout_android_maxWidth
    int ConstraintLayout_Layout_android_maxHeight -> ConstraintLayout_Layout_android_maxHeight
    int ConstraintLayout_Layout_android_minWidth -> ConstraintLayout_Layout_android_minWidth
    int ConstraintLayout_Layout_android_minHeight -> ConstraintLayout_Layout_android_minHeight
    int ConstraintLayout_Layout_constraintSet -> ConstraintLayout_Layout_constraintSet
    int ConstraintLayout_Layout_layout_constraintBaseline_creator -> ConstraintLayout_Layout_layout_constraintBaseline_creator
    int ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf -> ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf
    int ConstraintLayout_Layout_layout_constraintBottom_creator -> ConstraintLayout_Layout_layout_constraintBottom_creator
    int ConstraintLayout_Layout_layout_constraintBottom_toBottomOf -> ConstraintLayout_Layout_layout_constraintBottom_toBottomOf
    int ConstraintLayout_Layout_layout_constraintBottom_toTopOf -> ConstraintLayout_Layout_layout_constraintBottom_toTopOf
    int ConstraintLayout_Layout_layout_constraintDimensionRatio -> ConstraintLayout_Layout_layout_constraintDimensionRatio
    int ConstraintLayout_Layout_layout_constraintEnd_toEndOf -> ConstraintLayout_Layout_layout_constraintEnd_toEndOf
    int ConstraintLayout_Layout_layout_constraintEnd_toStartOf -> ConstraintLayout_Layout_layout_constraintEnd_toStartOf
    int ConstraintLayout_Layout_layout_constraintGuide_begin -> ConstraintLayout_Layout_layout_constraintGuide_begin
    int ConstraintLayout_Layout_layout_constraintGuide_end -> ConstraintLayout_Layout_layout_constraintGuide_end
    int ConstraintLayout_Layout_layout_constraintGuide_percent -> ConstraintLayout_Layout_layout_constraintGuide_percent
    int ConstraintLayout_Layout_layout_constraintHeight_default -> ConstraintLayout_Layout_layout_constraintHeight_default
    int ConstraintLayout_Layout_layout_constraintHeight_max -> ConstraintLayout_Layout_layout_constraintHeight_max
    int ConstraintLayout_Layout_layout_constraintHeight_min -> ConstraintLayout_Layout_layout_constraintHeight_min
    int ConstraintLayout_Layout_layout_constraintHorizontal_bias -> ConstraintLayout_Layout_layout_constraintHorizontal_bias
    int ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle -> ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle
    int ConstraintLayout_Layout_layout_constraintHorizontal_weight -> ConstraintLayout_Layout_layout_constraintHorizontal_weight
    int ConstraintLayout_Layout_layout_constraintLeft_creator -> ConstraintLayout_Layout_layout_constraintLeft_creator
    int ConstraintLayout_Layout_layout_constraintLeft_toLeftOf -> ConstraintLayout_Layout_layout_constraintLeft_toLeftOf
    int ConstraintLayout_Layout_layout_constraintLeft_toRightOf -> ConstraintLayout_Layout_layout_constraintLeft_toRightOf
    int ConstraintLayout_Layout_layout_constraintRight_creator -> ConstraintLayout_Layout_layout_constraintRight_creator
    int ConstraintLayout_Layout_layout_constraintRight_toLeftOf -> ConstraintLayout_Layout_layout_constraintRight_toLeftOf
    int ConstraintLayout_Layout_layout_constraintRight_toRightOf -> ConstraintLayout_Layout_layout_constraintRight_toRightOf
    int ConstraintLayout_Layout_layout_constraintStart_toEndOf -> ConstraintLayout_Layout_layout_constraintStart_toEndOf
    int ConstraintLayout_Layout_layout_constraintStart_toStartOf -> ConstraintLayout_Layout_layout_constraintStart_toStartOf
    int ConstraintLayout_Layout_layout_constraintTop_creator -> ConstraintLayout_Layout_layout_constraintTop_creator
    int ConstraintLayout_Layout_layout_constraintTop_toBottomOf -> ConstraintLayout_Layout_layout_constraintTop_toBottomOf
    int ConstraintLayout_Layout_layout_constraintTop_toTopOf -> ConstraintLayout_Layout_layout_constraintTop_toTopOf
    int ConstraintLayout_Layout_layout_constraintVertical_bias -> ConstraintLayout_Layout_layout_constraintVertical_bias
    int ConstraintLayout_Layout_layout_constraintVertical_chainStyle -> ConstraintLayout_Layout_layout_constraintVertical_chainStyle
    int ConstraintLayout_Layout_layout_constraintVertical_weight -> ConstraintLayout_Layout_layout_constraintVertical_weight
    int ConstraintLayout_Layout_layout_constraintWidth_default -> ConstraintLayout_Layout_layout_constraintWidth_default
    int ConstraintLayout_Layout_layout_constraintWidth_max -> ConstraintLayout_Layout_layout_constraintWidth_max
    int ConstraintLayout_Layout_layout_constraintWidth_min -> ConstraintLayout_Layout_layout_constraintWidth_min
    int ConstraintLayout_Layout_layout_editor_absoluteX -> ConstraintLayout_Layout_layout_editor_absoluteX
    int ConstraintLayout_Layout_layout_editor_absoluteY -> ConstraintLayout_Layout_layout_editor_absoluteY
    int ConstraintLayout_Layout_layout_goneMarginBottom -> ConstraintLayout_Layout_layout_goneMarginBottom
    int ConstraintLayout_Layout_layout_goneMarginEnd -> ConstraintLayout_Layout_layout_goneMarginEnd
    int ConstraintLayout_Layout_layout_goneMarginLeft -> ConstraintLayout_Layout_layout_goneMarginLeft
    int ConstraintLayout_Layout_layout_goneMarginRight -> ConstraintLayout_Layout_layout_goneMarginRight
    int ConstraintLayout_Layout_layout_goneMarginStart -> ConstraintLayout_Layout_layout_goneMarginStart
    int ConstraintLayout_Layout_layout_goneMarginTop -> ConstraintLayout_Layout_layout_goneMarginTop
    int ConstraintLayout_Layout_layout_optimizationLevel -> ConstraintLayout_Layout_layout_optimizationLevel
    int[] ConstraintSet -> ConstraintSet
    int ConstraintSet_android_orientation -> ConstraintSet_android_orientation
    int ConstraintSet_android_id -> ConstraintSet_android_id
    int ConstraintSet_android_visibility -> ConstraintSet_android_visibility
    int ConstraintSet_android_layout_width -> ConstraintSet_android_layout_width
    int ConstraintSet_android_layout_height -> ConstraintSet_android_layout_height
    int ConstraintSet_android_layout_marginLeft -> ConstraintSet_android_layout_marginLeft
    int ConstraintSet_android_layout_marginTop -> ConstraintSet_android_layout_marginTop
    int ConstraintSet_android_layout_marginRight -> ConstraintSet_android_layout_marginRight
    int ConstraintSet_android_layout_marginBottom -> ConstraintSet_android_layout_marginBottom
    int ConstraintSet_android_alpha -> ConstraintSet_android_alpha
    int ConstraintSet_android_transformPivotX -> ConstraintSet_android_transformPivotX
    int ConstraintSet_android_transformPivotY -> ConstraintSet_android_transformPivotY
    int ConstraintSet_android_translationX -> ConstraintSet_android_translationX
    int ConstraintSet_android_translationY -> ConstraintSet_android_translationY
    int ConstraintSet_android_scaleX -> ConstraintSet_android_scaleX
    int ConstraintSet_android_scaleY -> ConstraintSet_android_scaleY
    int ConstraintSet_android_rotationX -> ConstraintSet_android_rotationX
    int ConstraintSet_android_rotationY -> ConstraintSet_android_rotationY
    int ConstraintSet_android_layout_marginStart -> ConstraintSet_android_layout_marginStart
    int ConstraintSet_android_layout_marginEnd -> ConstraintSet_android_layout_marginEnd
    int ConstraintSet_android_translationZ -> ConstraintSet_android_translationZ
    int ConstraintSet_android_elevation -> ConstraintSet_android_elevation
    int ConstraintSet_layout_constraintBaseline_creator -> ConstraintSet_layout_constraintBaseline_creator
    int ConstraintSet_layout_constraintBaseline_toBaselineOf -> ConstraintSet_layout_constraintBaseline_toBaselineOf
    int ConstraintSet_layout_constraintBottom_creator -> ConstraintSet_layout_constraintBottom_creator
    int ConstraintSet_layout_constraintBottom_toBottomOf -> ConstraintSet_layout_constraintBottom_toBottomOf
    int ConstraintSet_layout_constraintBottom_toTopOf -> ConstraintSet_layout_constraintBottom_toTopOf
    int ConstraintSet_layout_constraintDimensionRatio -> ConstraintSet_layout_constraintDimensionRatio
    int ConstraintSet_layout_constraintEnd_toEndOf -> ConstraintSet_layout_constraintEnd_toEndOf
    int ConstraintSet_layout_constraintEnd_toStartOf -> ConstraintSet_layout_constraintEnd_toStartOf
    int ConstraintSet_layout_constraintGuide_begin -> ConstraintSet_layout_constraintGuide_begin
    int ConstraintSet_layout_constraintGuide_end -> ConstraintSet_layout_constraintGuide_end
    int ConstraintSet_layout_constraintGuide_percent -> ConstraintSet_layout_constraintGuide_percent
    int ConstraintSet_layout_constraintHeight_default -> ConstraintSet_layout_constraintHeight_default
    int ConstraintSet_layout_constraintHeight_max -> ConstraintSet_layout_constraintHeight_max
    int ConstraintSet_layout_constraintHeight_min -> ConstraintSet_layout_constraintHeight_min
    int ConstraintSet_layout_constraintHorizontal_bias -> ConstraintSet_layout_constraintHorizontal_bias
    int ConstraintSet_layout_constraintHorizontal_chainStyle -> ConstraintSet_layout_constraintHorizontal_chainStyle
    int ConstraintSet_layout_constraintHorizontal_weight -> ConstraintSet_layout_constraintHorizontal_weight
    int ConstraintSet_layout_constraintLeft_creator -> ConstraintSet_layout_constraintLeft_creator
    int ConstraintSet_layout_constraintLeft_toLeftOf -> ConstraintSet_layout_constraintLeft_toLeftOf
    int ConstraintSet_layout_constraintLeft_toRightOf -> ConstraintSet_layout_constraintLeft_toRightOf
    int ConstraintSet_layout_constraintRight_creator -> ConstraintSet_layout_constraintRight_creator
    int ConstraintSet_layout_constraintRight_toLeftOf -> ConstraintSet_layout_constraintRight_toLeftOf
    int ConstraintSet_layout_constraintRight_toRightOf -> ConstraintSet_layout_constraintRight_toRightOf
    int ConstraintSet_layout_constraintStart_toEndOf -> ConstraintSet_layout_constraintStart_toEndOf
    int ConstraintSet_layout_constraintStart_toStartOf -> ConstraintSet_layout_constraintStart_toStartOf
    int ConstraintSet_layout_constraintTop_creator -> ConstraintSet_layout_constraintTop_creator
    int ConstraintSet_layout_constraintTop_toBottomOf -> ConstraintSet_layout_constraintTop_toBottomOf
    int ConstraintSet_layout_constraintTop_toTopOf -> ConstraintSet_layout_constraintTop_toTopOf
    int ConstraintSet_layout_constraintVertical_bias -> ConstraintSet_layout_constraintVertical_bias
    int ConstraintSet_layout_constraintVertical_chainStyle -> ConstraintSet_layout_constraintVertical_chainStyle
    int ConstraintSet_layout_constraintVertical_weight -> ConstraintSet_layout_constraintVertical_weight
    int ConstraintSet_layout_constraintWidth_default -> ConstraintSet_layout_constraintWidth_default
    int ConstraintSet_layout_constraintWidth_max -> ConstraintSet_layout_constraintWidth_max
    int ConstraintSet_layout_constraintWidth_min -> ConstraintSet_layout_constraintWidth_min
    int ConstraintSet_layout_editor_absoluteX -> ConstraintSet_layout_editor_absoluteX
    int ConstraintSet_layout_editor_absoluteY -> ConstraintSet_layout_editor_absoluteY
    int ConstraintSet_layout_goneMarginBottom -> ConstraintSet_layout_goneMarginBottom
    int ConstraintSet_layout_goneMarginEnd -> ConstraintSet_layout_goneMarginEnd
    int ConstraintSet_layout_goneMarginLeft -> ConstraintSet_layout_goneMarginLeft
    int ConstraintSet_layout_goneMarginRight -> ConstraintSet_layout_goneMarginRight
    int ConstraintSet_layout_goneMarginStart -> ConstraintSet_layout_goneMarginStart
    int ConstraintSet_layout_goneMarginTop -> ConstraintSet_layout_goneMarginTop
    int[] LinearConstraintLayout -> LinearConstraintLayout
    int LinearConstraintLayout_android_orientation -> LinearConstraintLayout_android_orientation
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.constraint.solver.ArrayLinkedVariables -> android.support.constraint.solver.ArrayLinkedVariables:
    boolean DEBUG -> DEBUG
    int NONE -> NONE
    int currentSize -> currentSize
    android.support.constraint.solver.ArrayRow mRow -> mRow
    android.support.constraint.solver.Cache mCache -> mCache
    int ROW_SIZE -> ROW_SIZE
    android.support.constraint.solver.SolverVariable candidate -> candidate
    int[] mArrayIndices -> mArrayIndices
    int[] mArrayNextIndices -> mArrayNextIndices
    float[] mArrayValues -> mArrayValues
    int mHead -> mHead
    int mLast -> mLast
    boolean mDidFillOnce -> mDidFillOnce
    void <init>(android.support.constraint.solver.ArrayRow,android.support.constraint.solver.Cache) -> <init>
    void put(android.support.constraint.solver.SolverVariable,float) -> put
    void add(android.support.constraint.solver.SolverVariable,float) -> add
    float remove(android.support.constraint.solver.SolverVariable) -> remove
    void clear() -> clear
    boolean containsKey(android.support.constraint.solver.SolverVariable) -> containsKey
    boolean hasAtLeastOnePositiveVariable() -> hasAtLeastOnePositiveVariable
    void invert() -> invert
    void divideByAmount(float) -> divideByAmount
    void updateClientEquations(android.support.constraint.solver.ArrayRow) -> updateClientEquations
    android.support.constraint.solver.SolverVariable pickPivotCandidate() -> pickPivotCandidate
    void updateFromRow(android.support.constraint.solver.ArrayRow,android.support.constraint.solver.ArrayRow) -> updateFromRow
    void updateFromSystem(android.support.constraint.solver.ArrayRow,android.support.constraint.solver.ArrayRow[]) -> updateFromSystem
    android.support.constraint.solver.SolverVariable getPivotCandidate() -> getPivotCandidate
    android.support.constraint.solver.SolverVariable getVariable(int) -> getVariable
    float getVariableValue(int) -> getVariableValue
    float get(android.support.constraint.solver.SolverVariable) -> get
    int sizeInBytes() -> sizeInBytes
    void display() -> display
    java.lang.String toString() -> toString
android.support.constraint.solver.ArrayRow -> android.support.constraint.solver.ArrayRow:
    boolean DEBUG -> DEBUG
    android.support.constraint.solver.SolverVariable variable -> variable
    float constantValue -> constantValue
    boolean used -> used
    android.support.constraint.solver.ArrayLinkedVariables variables -> variables
    boolean isSimpleDefinition -> isSimpleDefinition
    void <init>(android.support.constraint.solver.Cache) -> <init>
    void updateClientEquations() -> updateClientEquations
    boolean hasAtLeastOnePositiveVariable() -> hasAtLeastOnePositiveVariable
    boolean hasKeyVariable() -> hasKeyVariable
    java.lang.String toString() -> toString
    java.lang.String toReadableString() -> toReadableString
    void reset() -> reset
    boolean hasVariable(android.support.constraint.solver.SolverVariable) -> hasVariable
    android.support.constraint.solver.ArrayRow createRowDefinition(android.support.constraint.solver.SolverVariable,int) -> createRowDefinition
    android.support.constraint.solver.ArrayRow createRowEquals(android.support.constraint.solver.SolverVariable,int) -> createRowEquals
    android.support.constraint.solver.ArrayRow createRowEquals(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int) -> createRowEquals
    android.support.constraint.solver.ArrayRow addSingleError(android.support.constraint.solver.SolverVariable,int) -> addSingleError
    android.support.constraint.solver.ArrayRow createRowGreaterThan(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int) -> createRowGreaterThan
    android.support.constraint.solver.ArrayRow createRowLowerThan(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int) -> createRowLowerThan
    android.support.constraint.solver.ArrayRow createRowEqualDimension(float,float,float,android.support.constraint.solver.SolverVariable,int,android.support.constraint.solver.SolverVariable,int,android.support.constraint.solver.SolverVariable,int,android.support.constraint.solver.SolverVariable,int) -> createRowEqualDimension
    android.support.constraint.solver.ArrayRow createRowCentering(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,float,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int) -> createRowCentering
    android.support.constraint.solver.ArrayRow addError(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable) -> addError
    android.support.constraint.solver.ArrayRow createRowDimensionPercent(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,float) -> createRowDimensionPercent
    android.support.constraint.solver.ArrayRow createRowDimensionRatio(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,float) -> createRowDimensionRatio
    int sizeInBytes() -> sizeInBytes
    boolean updateRowWithEquation(android.support.constraint.solver.ArrayRow) -> updateRowWithEquation
    void ensurePositiveConstant() -> ensurePositiveConstant
    void pickRowVariable() -> pickRowVariable
    void pivot(android.support.constraint.solver.SolverVariable) -> pivot
android.support.constraint.solver.Cache -> android.support.constraint.solver.Cache:
    android.support.constraint.solver.Pools$Pool arrayRowPool -> arrayRowPool
    android.support.constraint.solver.Pools$Pool solverVariablePool -> solverVariablePool
    android.support.constraint.solver.SolverVariable[] mIndexedVariables -> mIndexedVariables
    void <init>() -> <init>
android.support.constraint.solver.Goal -> android.support.constraint.solver.Goal:
    java.util.ArrayList variables -> variables
    void <init>() -> <init>
    android.support.constraint.solver.SolverVariable getPivotCandidate() -> getPivotCandidate
    void initFromSystemErrors(android.support.constraint.solver.LinearSystem) -> initFromSystemErrors
    void updateFromSystem(android.support.constraint.solver.LinearSystem) -> updateFromSystem
    java.lang.String toString() -> toString
android.support.constraint.solver.LinearSystem -> android.support.constraint.solver.LinearSystem:
    boolean DEBUG -> DEBUG
    int POOL_SIZE -> POOL_SIZE
    int mVariablesID -> mVariablesID
    java.util.HashMap mVariables -> mVariables
    android.support.constraint.solver.Goal mGoal -> mGoal
    int TABLE_SIZE -> TABLE_SIZE
    int mMaxColumns -> mMaxColumns
    android.support.constraint.solver.ArrayRow[] mRows -> mRows
    boolean[] mAlreadyTestedCandidates -> mAlreadyTestedCandidates
    int mNumColumns -> mNumColumns
    int mNumRows -> mNumRows
    int mMaxRows -> mMaxRows
    android.support.constraint.solver.Cache mCache -> mCache
    android.support.constraint.solver.SolverVariable[] mPoolVariables -> mPoolVariables
    int mPoolVariablesCount -> mPoolVariablesCount
    android.support.constraint.solver.ArrayRow[] tempClientsCopy -> tempClientsCopy
    void <init>() -> <init>
    void increaseTableSize() -> increaseTableSize
    void releaseRows() -> releaseRows
    void reset() -> reset
    android.support.constraint.solver.SolverVariable createObjectVariable(java.lang.Object) -> createObjectVariable
    android.support.constraint.solver.ArrayRow createRow() -> createRow
    android.support.constraint.solver.SolverVariable createSlackVariable() -> createSlackVariable
    void addError(android.support.constraint.solver.ArrayRow) -> addError
    void addSingleError(android.support.constraint.solver.ArrayRow,int) -> addSingleError
    android.support.constraint.solver.SolverVariable createVariable(java.lang.String,android.support.constraint.solver.SolverVariable$Type) -> createVariable
    android.support.constraint.solver.SolverVariable createErrorVariable() -> createErrorVariable
    android.support.constraint.solver.SolverVariable acquireSolverVariable(android.support.constraint.solver.SolverVariable$Type) -> acquireSolverVariable
    android.support.constraint.solver.Goal getGoal() -> getGoal
    android.support.constraint.solver.ArrayRow getRow(int) -> getRow
    float getValueFor(java.lang.String) -> getValueFor
    int getObjectVariableValue(java.lang.Object) -> getObjectVariableValue
    android.support.constraint.solver.SolverVariable getVariable(java.lang.String,android.support.constraint.solver.SolverVariable$Type) -> getVariable
    void rebuildGoalFromErrors() -> rebuildGoalFromErrors
    void minimize() -> minimize
    void minimizeGoal(android.support.constraint.solver.Goal) -> minimizeGoal
    void updateRowFromVariables(android.support.constraint.solver.ArrayRow) -> updateRowFromVariables
    void addConstraint(android.support.constraint.solver.ArrayRow) -> addConstraint
    int optimize(android.support.constraint.solver.Goal) -> optimize
    int enforceBFS(android.support.constraint.solver.Goal) -> enforceBFS
    void computeValues() -> computeValues
    void displayRows() -> displayRows
    void displayReadableRows() -> displayReadableRows
    void displayVariablesReadableRows() -> displayVariablesReadableRows
    int getMemoryUsed() -> getMemoryUsed
    int getNumEquations() -> getNumEquations
    int getNumVariables() -> getNumVariables
    void displaySystemInformations() -> displaySystemInformations
    void displaySolverVariables() -> displaySolverVariables
    java.lang.String getDisplaySize(int) -> getDisplaySize
    android.support.constraint.solver.Cache getCache() -> getCache
    void addGreaterThan(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,int) -> addGreaterThan
    void addLowerThan(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,int) -> addLowerThan
    void addCentering(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,float,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,int) -> addCentering
    android.support.constraint.solver.ArrayRow addEquality(android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,int) -> addEquality
    void addEquality(android.support.constraint.solver.SolverVariable,int) -> addEquality
    android.support.constraint.solver.ArrayRow createRowEquals(android.support.constraint.solver.LinearSystem,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,boolean) -> createRowEquals
    android.support.constraint.solver.ArrayRow createRowDimensionPercent(android.support.constraint.solver.LinearSystem,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,float,boolean) -> createRowDimensionPercent
    android.support.constraint.solver.ArrayRow createRowGreaterThan(android.support.constraint.solver.LinearSystem,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,boolean) -> createRowGreaterThan
    android.support.constraint.solver.ArrayRow createRowLowerThan(android.support.constraint.solver.LinearSystem,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,boolean) -> createRowLowerThan
    android.support.constraint.solver.ArrayRow createRowCentering(android.support.constraint.solver.LinearSystem,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,float,android.support.constraint.solver.SolverVariable,android.support.constraint.solver.SolverVariable,int,boolean) -> createRowCentering
    void <clinit>() -> <clinit>
android.support.constraint.solver.Pools -> android.support.constraint.solver.Pools:
    boolean DEBUG -> DEBUG
    void <init>() -> <init>
android.support.constraint.solver.Pools$Pool -> android.support.constraint.solver.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    void releaseAll(java.lang.Object[],int) -> releaseAll
android.support.constraint.solver.Pools$SimplePool -> android.support.constraint.solver.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    void <init>(int) -> <init>
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    void releaseAll(java.lang.Object[],int) -> releaseAll
    boolean isInPool(java.lang.Object) -> isInPool
android.support.constraint.solver.SolverVariable -> android.support.constraint.solver.SolverVariable:
    boolean INTERNAL_DEBUG -> INTERNAL_DEBUG
    int STRENGTH_NONE -> STRENGTH_NONE
    int STRENGTH_LOW -> STRENGTH_LOW
    int STRENGTH_MEDIUM -> STRENGTH_MEDIUM
    int STRENGTH_HIGH -> STRENGTH_HIGH
    int STRENGTH_HIGHEST -> STRENGTH_HIGHEST
    int STRENGTH_EQUALITY -> STRENGTH_EQUALITY
    int uniqueId -> uniqueId
    java.lang.String mName -> mName
    int id -> id
    int definitionId -> definitionId
    int strength -> strength
    float computedValue -> computedValue
    int MAX_STRENGTH -> MAX_STRENGTH
    float[] strengthVector -> strengthVector
    android.support.constraint.solver.SolverVariable$Type mType -> mType
    android.support.constraint.solver.ArrayRow[] mClientEquations -> mClientEquations
    int mClientEquationsCount -> mClientEquationsCount
    java.lang.String getUniqueName(android.support.constraint.solver.SolverVariable$Type) -> getUniqueName
    void <init>(java.lang.String,android.support.constraint.solver.SolverVariable$Type) -> <init>
    void <init>(android.support.constraint.solver.SolverVariable$Type) -> <init>
    void clearStrengths() -> clearStrengths
    java.lang.String strengthsToString() -> strengthsToString
    void addClientEquation(android.support.constraint.solver.ArrayRow) -> addClientEquation
    void removeClientEquation(android.support.constraint.solver.ArrayRow) -> removeClientEquation
    void reset() -> reset
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    void setType(android.support.constraint.solver.SolverVariable$Type) -> setType
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
android.support.constraint.solver.SolverVariable$1 -> android.support.constraint.solver.SolverVariable$1:
    int[] $SwitchMap$android$support$constraint$solver$SolverVariable$Type -> $SwitchMap$android$support$constraint$solver$SolverVariable$Type
    void <clinit>() -> <clinit>
android.support.constraint.solver.SolverVariable$Type -> android.support.constraint.solver.SolverVariable$Type:
    android.support.constraint.solver.SolverVariable$Type UNRESTRICTED -> UNRESTRICTED
    android.support.constraint.solver.SolverVariable$Type CONSTANT -> CONSTANT
    android.support.constraint.solver.SolverVariable$Type SLACK -> SLACK
    android.support.constraint.solver.SolverVariable$Type ERROR -> ERROR
    android.support.constraint.solver.SolverVariable$Type UNKNOWN -> UNKNOWN
    android.support.constraint.solver.SolverVariable$Type[] $VALUES -> $VALUES
    android.support.constraint.solver.SolverVariable$Type[] values() -> values
    android.support.constraint.solver.SolverVariable$Type valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.ConstraintAnchor -> android.support.constraint.solver.widgets.ConstraintAnchor:
    boolean USE_CENTER_ANCHOR -> USE_CENTER_ANCHOR
    boolean ALLOW_BINARY -> ALLOW_BINARY
    int ANY_GROUP -> ANY_GROUP
    int APPLY_GROUP_RESULTS -> APPLY_GROUP_RESULTS
    int USER_CREATOR -> USER_CREATOR
    int SCOUT_CREATOR -> SCOUT_CREATOR
    int AUTO_CONSTRAINT_CREATOR -> AUTO_CONSTRAINT_CREATOR
    int UNSET_GONE_MARGIN -> UNSET_GONE_MARGIN
    android.support.constraint.solver.widgets.ConstraintWidget mOwner -> mOwner
    android.support.constraint.solver.widgets.ConstraintAnchor$Type mType -> mType
    android.support.constraint.solver.widgets.ConstraintAnchor mTarget -> mTarget
    int mMargin -> mMargin
    int mGoneMargin -> mGoneMargin
    android.support.constraint.solver.widgets.ConstraintAnchor$Strength mStrength -> mStrength
    android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType -> mConnectionType
    int mConnectionCreator -> mConnectionCreator
    android.support.constraint.solver.SolverVariable mSolverVariable -> mSolverVariable
    int mGroup -> mGroup
    void <init>(android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type) -> <init>
    android.support.constraint.solver.SolverVariable getSolverVariable() -> getSolverVariable
    void resetSolverVariable(android.support.constraint.solver.Cache) -> resetSolverVariable
    void setGroup(int) -> setGroup
    int getGroup() -> getGroup
    android.support.constraint.solver.widgets.ConstraintWidget getOwner() -> getOwner
    android.support.constraint.solver.widgets.ConstraintAnchor$Type getType() -> getType
    int getMargin() -> getMargin
    android.support.constraint.solver.widgets.ConstraintAnchor$Strength getStrength() -> getStrength
    android.support.constraint.solver.widgets.ConstraintAnchor getTarget() -> getTarget
    android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType getConnectionType() -> getConnectionType
    void setConnectionType(android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType) -> setConnectionType
    int getConnectionCreator() -> getConnectionCreator
    void setConnectionCreator(int) -> setConnectionCreator
    void reset() -> reset
    boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength,int) -> connect
    boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength,int,boolean) -> connect
    boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int,int) -> connect
    boolean connect(android.support.constraint.solver.widgets.ConstraintAnchor,int) -> connect
    boolean isConnected() -> isConnected
    boolean isValidConnection(android.support.constraint.solver.widgets.ConstraintAnchor) -> isValidConnection
    boolean isSideAnchor() -> isSideAnchor
    boolean isSimilarDimensionConnection(android.support.constraint.solver.widgets.ConstraintAnchor) -> isSimilarDimensionConnection
    void setStrength(android.support.constraint.solver.widgets.ConstraintAnchor$Strength) -> setStrength
    void setMargin(int) -> setMargin
    void setGoneMargin(int) -> setGoneMargin
    boolean isVerticalAnchor() -> isVerticalAnchor
    java.lang.String toString() -> toString
    java.lang.String toString(java.util.HashSet) -> toString
    int getSnapPriorityLevel() -> getSnapPriorityLevel
    int getPriorityLevel() -> getPriorityLevel
    boolean isSnapCompatibleWith(android.support.constraint.solver.widgets.ConstraintAnchor) -> isSnapCompatibleWith
    boolean isConnectionAllowed(android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor) -> isConnectionAllowed
    boolean isConnectionAllowed(android.support.constraint.solver.widgets.ConstraintWidget) -> isConnectionAllowed
    boolean isConnectionToMe(android.support.constraint.solver.widgets.ConstraintWidget,java.util.HashSet) -> isConnectionToMe
    android.support.constraint.solver.widgets.ConstraintAnchor getOpposite() -> getOpposite
android.support.constraint.solver.widgets.ConstraintAnchor$1 -> android.support.constraint.solver.widgets.ConstraintAnchor$1:
    int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type -> $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType -> android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType:
    android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType RELAXED -> RELAXED
    android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType STRICT -> STRICT
    android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType[] $VALUES -> $VALUES
    android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType[] values() -> values
    android.support.constraint.solver.widgets.ConstraintAnchor$ConnectionType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.ConstraintAnchor$Strength -> android.support.constraint.solver.widgets.ConstraintAnchor$Strength:
    android.support.constraint.solver.widgets.ConstraintAnchor$Strength NONE -> NONE
    android.support.constraint.solver.widgets.ConstraintAnchor$Strength STRONG -> STRONG
    android.support.constraint.solver.widgets.ConstraintAnchor$Strength WEAK -> WEAK
    android.support.constraint.solver.widgets.ConstraintAnchor$Strength[] $VALUES -> $VALUES
    android.support.constraint.solver.widgets.ConstraintAnchor$Strength[] values() -> values
    android.support.constraint.solver.widgets.ConstraintAnchor$Strength valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.ConstraintAnchor$Type -> android.support.constraint.solver.widgets.ConstraintAnchor$Type:
    android.support.constraint.solver.widgets.ConstraintAnchor$Type NONE -> NONE
    android.support.constraint.solver.widgets.ConstraintAnchor$Type LEFT -> LEFT
    android.support.constraint.solver.widgets.ConstraintAnchor$Type TOP -> TOP
    android.support.constraint.solver.widgets.ConstraintAnchor$Type RIGHT -> RIGHT
    android.support.constraint.solver.widgets.ConstraintAnchor$Type BOTTOM -> BOTTOM
    android.support.constraint.solver.widgets.ConstraintAnchor$Type BASELINE -> BASELINE
    android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER -> CENTER
    android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_X -> CENTER_X
    android.support.constraint.solver.widgets.ConstraintAnchor$Type CENTER_Y -> CENTER_Y
    android.support.constraint.solver.widgets.ConstraintAnchor$Type[] $VALUES -> $VALUES
    android.support.constraint.solver.widgets.ConstraintAnchor$Type[] values() -> values
    android.support.constraint.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.ConstraintHorizontalLayout -> android.support.constraint.solver.widgets.ConstraintHorizontalLayout:
    android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment mAlignment -> mAlignment
    void <init>() -> <init>
    void <init>(int,int,int,int) -> <init>
    void <init>(int,int) -> <init>
    void addToSolver(android.support.constraint.solver.LinearSystem,int) -> addToSolver
android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment -> android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment:
    android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment BEGIN -> BEGIN
    android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment MIDDLE -> MIDDLE
    android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment END -> END
    android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment TOP -> TOP
    android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment VERTICAL_MIDDLE -> VERTICAL_MIDDLE
    android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment BOTTOM -> BOTTOM
    android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment LEFT -> LEFT
    android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment RIGHT -> RIGHT
    android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment[] $VALUES -> $VALUES
    android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment[] values() -> values
    android.support.constraint.solver.widgets.ConstraintHorizontalLayout$ContentAlignment valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.ConstraintTableLayout -> android.support.constraint.solver.widgets.ConstraintTableLayout:
    boolean mVerticalGrowth -> mVerticalGrowth
    int mNumCols -> mNumCols
    int mNumRows -> mNumRows
    int mPadding -> mPadding
    java.util.ArrayList mVerticalSlices -> mVerticalSlices
    java.util.ArrayList mHorizontalSlices -> mHorizontalSlices
    java.util.ArrayList mVerticalGuidelines -> mVerticalGuidelines
    java.util.ArrayList mHorizontalGuidelines -> mHorizontalGuidelines
    int ALIGN_CENTER -> ALIGN_CENTER
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_FULL -> ALIGN_FULL
    android.support.constraint.solver.LinearSystem system -> system
    void <init>() -> <init>
    void <init>(int,int,int,int) -> <init>
    void <init>(int,int) -> <init>
    java.lang.String getType() -> getType
    int getNumRows() -> getNumRows
    int getNumCols() -> getNumCols
    int getPadding() -> getPadding
    java.lang.String getColumnsAlignmentRepresentation() -> getColumnsAlignmentRepresentation
    java.lang.String getColumnAlignmentRepresentation(int) -> getColumnAlignmentRepresentation
    void setNumCols(int) -> setNumCols
    void setNumRows(int) -> setNumRows
    boolean isVerticalGrowth() -> isVerticalGrowth
    void setVerticalGrowth(boolean) -> setVerticalGrowth
    void setPadding(int) -> setPadding
    void setColumnAlignment(int,int) -> setColumnAlignment
    void cycleColumnAlignment(int) -> cycleColumnAlignment
    void setColumnAlignment(java.lang.String) -> setColumnAlignment
    java.util.ArrayList getVerticalGuidelines() -> getVerticalGuidelines
    java.util.ArrayList getHorizontalGuidelines() -> getHorizontalGuidelines
    void addToSolver(android.support.constraint.solver.LinearSystem,int) -> addToSolver
    void setTableDimensions() -> setTableDimensions
    void setDebugSolverName(android.support.constraint.solver.LinearSystem,java.lang.String) -> setDebugSolverName
    void updateDebugSolverNames() -> updateDebugSolverNames
    void setVerticalSlices() -> setVerticalSlices
    void setHorizontalSlices() -> setHorizontalSlices
    void setChildrenConnections() -> setChildrenConnections
    void updateFromSolver(android.support.constraint.solver.LinearSystem,int) -> updateFromSolver
    boolean handlesInternalConstraints() -> handlesInternalConstraints
    void computeGuidelinesPercentPositions() -> computeGuidelinesPercentPositions
android.support.constraint.solver.widgets.ConstraintTableLayout$HorizontalSlice -> android.support.constraint.solver.widgets.ConstraintTableLayout$HorizontalSlice:
    android.support.constraint.solver.widgets.ConstraintWidget top -> top
    android.support.constraint.solver.widgets.ConstraintWidget bottom -> bottom
    int padding -> padding
    android.support.constraint.solver.widgets.ConstraintTableLayout this$0 -> this$0
    void <init>(android.support.constraint.solver.widgets.ConstraintTableLayout) -> <init>
android.support.constraint.solver.widgets.ConstraintTableLayout$VerticalSlice -> android.support.constraint.solver.widgets.ConstraintTableLayout$VerticalSlice:
    android.support.constraint.solver.widgets.ConstraintWidget left -> left
    android.support.constraint.solver.widgets.ConstraintWidget right -> right
    int alignment -> alignment
    int padding -> padding
    android.support.constraint.solver.widgets.ConstraintTableLayout this$0 -> this$0
    void <init>(android.support.constraint.solver.widgets.ConstraintTableLayout) -> <init>
android.support.constraint.solver.widgets.ConstraintWidget -> android.support.constraint.solver.widgets.ConstraintWidget:
    boolean AUTOTAG_CENTER -> AUTOTAG_CENTER
    int SOLVER -> SOLVER
    int DIRECT -> DIRECT
    int MATCH_CONSTRAINT_SPREAD -> MATCH_CONSTRAINT_SPREAD
    int MATCH_CONSTRAINT_WRAP -> MATCH_CONSTRAINT_WRAP
    int UNKNOWN -> UNKNOWN
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int VISIBLE -> VISIBLE
    int INVISIBLE -> INVISIBLE
    int GONE -> GONE
    int CHAIN_SPREAD -> CHAIN_SPREAD
    int CHAIN_SPREAD_INSIDE -> CHAIN_SPREAD_INSIDE
    int CHAIN_PACKED -> CHAIN_PACKED
    int mHorizontalResolution -> mHorizontalResolution
    int mVerticalResolution -> mVerticalResolution
    int mMatchConstraintDefaultWidth -> mMatchConstraintDefaultWidth
    int mMatchConstraintDefaultHeight -> mMatchConstraintDefaultHeight
    int mMatchConstraintMinWidth -> mMatchConstraintMinWidth
    int mMatchConstraintMaxWidth -> mMatchConstraintMaxWidth
    int mMatchConstraintMinHeight -> mMatchConstraintMinHeight
    int mMatchConstraintMaxHeight -> mMatchConstraintMaxHeight
    android.support.constraint.solver.widgets.ConstraintAnchor mLeft -> mLeft
    android.support.constraint.solver.widgets.ConstraintAnchor mTop -> mTop
    android.support.constraint.solver.widgets.ConstraintAnchor mRight -> mRight
    android.support.constraint.solver.widgets.ConstraintAnchor mBottom -> mBottom
    android.support.constraint.solver.widgets.ConstraintAnchor mBaseline -> mBaseline
    android.support.constraint.solver.widgets.ConstraintAnchor mCenterX -> mCenterX
    android.support.constraint.solver.widgets.ConstraintAnchor mCenterY -> mCenterY
    android.support.constraint.solver.widgets.ConstraintAnchor mCenter -> mCenter
    java.util.ArrayList mAnchors -> mAnchors
    android.support.constraint.solver.widgets.ConstraintWidget mParent -> mParent
    int mWidth -> mWidth
    int mHeight -> mHeight
    float mDimensionRatio -> mDimensionRatio
    int mDimensionRatioSide -> mDimensionRatioSide
    int mSolverLeft -> mSolverLeft
    int mSolverTop -> mSolverTop
    int mSolverRight -> mSolverRight
    int mSolverBottom -> mSolverBottom
    int mX -> mX
    int mY -> mY
    int mDrawX -> mDrawX
    int mDrawY -> mDrawY
    int mDrawWidth -> mDrawWidth
    int mDrawHeight -> mDrawHeight
    int mOffsetX -> mOffsetX
    int mOffsetY -> mOffsetY
    int mBaselineDistance -> mBaselineDistance
    int mMinWidth -> mMinWidth
    int mMinHeight -> mMinHeight
    int mWrapWidth -> mWrapWidth
    int mWrapHeight -> mWrapHeight
    float DEFAULT_BIAS -> DEFAULT_BIAS
    float mHorizontalBiasPercent -> mHorizontalBiasPercent
    float mVerticalBiasPercent -> mVerticalBiasPercent
    android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour mHorizontalDimensionBehaviour -> mHorizontalDimensionBehaviour
    android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour mVerticalDimensionBehaviour -> mVerticalDimensionBehaviour
    java.lang.Object mCompanionWidget -> mCompanionWidget
    int mContainerItemSkip -> mContainerItemSkip
    int mVisibility -> mVisibility
    java.lang.String mDebugName -> mDebugName
    java.lang.String mType -> mType
    int mDistToTop -> mDistToTop
    int mDistToLeft -> mDistToLeft
    int mDistToRight -> mDistToRight
    int mDistToBottom -> mDistToBottom
    boolean mLeftHasCentered -> mLeftHasCentered
    boolean mRightHasCentered -> mRightHasCentered
    boolean mTopHasCentered -> mTopHasCentered
    boolean mBottomHasCentered -> mBottomHasCentered
    boolean mHorizontalWrapVisited -> mHorizontalWrapVisited
    boolean mVerticalWrapVisited -> mVerticalWrapVisited
    int mHorizontalChainStyle -> mHorizontalChainStyle
    int mVerticalChainStyle -> mVerticalChainStyle
    boolean mHorizontalChainFixedPosition -> mHorizontalChainFixedPosition
    boolean mVerticalChainFixedPosition -> mVerticalChainFixedPosition
    float mHorizontalWeight -> mHorizontalWeight
    float mVerticalWeight -> mVerticalWeight
    android.support.constraint.solver.widgets.ConstraintWidget mHorizontalNextWidget -> mHorizontalNextWidget
    android.support.constraint.solver.widgets.ConstraintWidget mVerticalNextWidget -> mVerticalNextWidget
    void reset() -> reset
    void <init>() -> <init>
    void <init>(int,int,int,int) -> <init>
    void <init>(int,int) -> <init>
    void resetSolverVariables(android.support.constraint.solver.Cache) -> resetSolverVariables
    void resetGroups() -> resetGroups
    void addAnchors() -> addAnchors
    boolean isRoot() -> isRoot
    boolean isRootContainer() -> isRootContainer
    boolean isInsideConstraintLayout() -> isInsideConstraintLayout
    boolean hasAncestor(android.support.constraint.solver.widgets.ConstraintWidget) -> hasAncestor
    android.support.constraint.solver.widgets.WidgetContainer getRootWidgetContainer() -> getRootWidgetContainer
    android.support.constraint.solver.widgets.ConstraintWidget getParent() -> getParent
    void setParent(android.support.constraint.solver.widgets.ConstraintWidget) -> setParent
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    void setVisibility(int) -> setVisibility
    int getVisibility() -> getVisibility
    java.lang.String getDebugName() -> getDebugName
    void setDebugName(java.lang.String) -> setDebugName
    void setDebugSolverName(android.support.constraint.solver.LinearSystem,java.lang.String) -> setDebugSolverName
    java.lang.String toString() -> toString
    int getInternalDrawX() -> getInternalDrawX
    int getInternalDrawY() -> getInternalDrawY
    int getInternalDrawRight() -> getInternalDrawRight
    int getInternalDrawBottom() -> getInternalDrawBottom
    int getX() -> getX
    int getY() -> getY
    int getWidth() -> getWidth
    int getOptimizerWrapWidth() -> getOptimizerWrapWidth
    int getOptimizerWrapHeight() -> getOptimizerWrapHeight
    int getWrapWidth() -> getWrapWidth
    int getHeight() -> getHeight
    int getWrapHeight() -> getWrapHeight
    int getDrawX() -> getDrawX
    int getDrawY() -> getDrawY
    int getDrawWidth() -> getDrawWidth
    int getDrawHeight() -> getDrawHeight
    int getDrawBottom() -> getDrawBottom
    int getDrawRight() -> getDrawRight
    int getRootX() -> getRootX
    int getRootY() -> getRootY
    int getMinWidth() -> getMinWidth
    int getMinHeight() -> getMinHeight
    int getLeft() -> getLeft
    int getTop() -> getTop
    int getRight() -> getRight
    int getBottom() -> getBottom
    float getHorizontalBiasPercent() -> getHorizontalBiasPercent
    float getVerticalBiasPercent() -> getVerticalBiasPercent
    boolean hasBaseline() -> hasBaseline
    int getBaselineDistance() -> getBaselineDistance
    java.lang.Object getCompanionWidget() -> getCompanionWidget
    java.util.ArrayList getAnchors() -> getAnchors
    void setX(int) -> setX
    void setY(int) -> setY
    void setOrigin(int,int) -> setOrigin
    void setOffset(int,int) -> setOffset
    void setGoneMargin(android.support.constraint.solver.widgets.ConstraintAnchor$Type,int) -> setGoneMargin
    void updateDrawPosition() -> updateDrawPosition
    void forceUpdateDrawPosition() -> forceUpdateDrawPosition
    void setDrawOrigin(int,int) -> setDrawOrigin
    void setDrawX(int) -> setDrawX
    void setDrawY(int) -> setDrawY
    void setDrawWidth(int) -> setDrawWidth
    void setDrawHeight(int) -> setDrawHeight
    void setWidth(int) -> setWidth
    void setHeight(int) -> setHeight
    void setHorizontalMatchStyle(int,int,int) -> setHorizontalMatchStyle
    void setVerticalMatchStyle(int,int,int) -> setVerticalMatchStyle
    void setDimensionRatio(java.lang.String) -> setDimensionRatio
    void setDimensionRatio(float,int) -> setDimensionRatio
    float getDimensionRatio() -> getDimensionRatio
    int getDimensionRatioSide() -> getDimensionRatioSide
    void setHorizontalBiasPercent(float) -> setHorizontalBiasPercent
    void setVerticalBiasPercent(float) -> setVerticalBiasPercent
    void setMinWidth(int) -> setMinWidth
    void setMinHeight(int) -> setMinHeight
    void setWrapWidth(int) -> setWrapWidth
    void setWrapHeight(int) -> setWrapHeight
    void setDimension(int,int) -> setDimension
    void setFrame(int,int,int,int) -> setFrame
    void setHorizontalDimension(int,int) -> setHorizontalDimension
    void setVerticalDimension(int,int) -> setVerticalDimension
    void setBaselineDistance(int) -> setBaselineDistance
    void setCompanionWidget(java.lang.Object) -> setCompanionWidget
    void setContainerItemSkip(int) -> setContainerItemSkip
    int getContainerItemSkip() -> getContainerItemSkip
    void setHorizontalWeight(float) -> setHorizontalWeight
    void setVerticalWeight(float) -> setVerticalWeight
    void setHorizontalChainStyle(int) -> setHorizontalChainStyle
    int getHorizontalChainStyle() -> getHorizontalChainStyle
    void setVerticalChainStyle(int) -> setVerticalChainStyle
    int getVerticalChainStyle() -> getVerticalChainStyle
    void connectedTo(android.support.constraint.solver.widgets.ConstraintWidget) -> connectedTo
    void immediateConnect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,int) -> immediateConnect
    void connect(android.support.constraint.solver.widgets.ConstraintAnchor,android.support.constraint.solver.widgets.ConstraintAnchor,int,int) -> connect
    void connect(android.support.constraint.solver.widgets.ConstraintAnchor,android.support.constraint.solver.widgets.ConstraintAnchor,int) -> connect
    void connect(android.support.constraint.solver.widgets.ConstraintAnchor,android.support.constraint.solver.widgets.ConstraintAnchor,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength,int) -> connect
    void connect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int) -> connect
    void connect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type) -> connect
    void connect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength) -> connect
    void connect(android.support.constraint.solver.widgets.ConstraintAnchor$Type,android.support.constraint.solver.widgets.ConstraintWidget,android.support.constraint.solver.widgets.ConstraintAnchor$Type,int,android.support.constraint.solver.widgets.ConstraintAnchor$Strength,int) -> connect
    void resetAllConstraints() -> resetAllConstraints
    void resetAnchor(android.support.constraint.solver.widgets.ConstraintAnchor) -> resetAnchor
    void resetAnchors() -> resetAnchors
    void resetAnchors(int) -> resetAnchors
    void disconnectWidget(android.support.constraint.solver.widgets.ConstraintWidget) -> disconnectWidget
    void disconnectUnlockedWidget(android.support.constraint.solver.widgets.ConstraintWidget) -> disconnectUnlockedWidget
    android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour() -> getHorizontalDimensionBehaviour
    android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour() -> getVerticalDimensionBehaviour
    void setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setHorizontalDimensionBehaviour
    void setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setVerticalDimensionBehaviour
    boolean isInHorizontalChain() -> isInHorizontalChain
    android.support.constraint.solver.widgets.ConstraintWidget getHorizontalChainControlWidget() -> getHorizontalChainControlWidget
    boolean isInVerticalChain() -> isInVerticalChain
    android.support.constraint.solver.widgets.ConstraintWidget getVerticalChainControlWidget() -> getVerticalChainControlWidget
    void addToSolver(android.support.constraint.solver.LinearSystem) -> addToSolver
    void addToSolver(android.support.constraint.solver.LinearSystem,int) -> addToSolver
    void applyConstraints(android.support.constraint.solver.LinearSystem,boolean,boolean,android.support.constraint.solver.widgets.ConstraintAnchor,android.support.constraint.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,int,int,int) -> applyConstraints
    void updateFromSolver(android.support.constraint.solver.LinearSystem,int) -> updateFromSolver
    void updateFromSolver(android.support.constraint.solver.LinearSystem) -> updateFromSolver
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.ConstraintWidget$1 -> android.support.constraint.solver.widgets.ConstraintWidget$1:
    int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type -> $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment -> android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment:
    android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment BEGIN -> BEGIN
    android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment MIDDLE -> MIDDLE
    android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment END -> END
    android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment TOP -> TOP
    android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment VERTICAL_MIDDLE -> VERTICAL_MIDDLE
    android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment BOTTOM -> BOTTOM
    android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment LEFT -> LEFT
    android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment RIGHT -> RIGHT
    android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment[] $VALUES -> $VALUES
    android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment[] values() -> values
    android.support.constraint.solver.widgets.ConstraintWidget$ContentAlignment valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour -> android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour:
    android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED -> FIXED
    android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT -> WRAP_CONTENT
    android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT -> MATCH_CONSTRAINT
    android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT -> MATCH_PARENT
    android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour[] $VALUES -> $VALUES
    android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour[] values() -> values
    android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.ConstraintWidgetContainer -> android.support.constraint.solver.widgets.ConstraintWidgetContainer:
    boolean USE_THREAD -> USE_THREAD
    boolean USE_SNAPSHOT -> USE_SNAPSHOT
    int MAX_ITERATIONS -> MAX_ITERATIONS
    boolean DEBUG -> DEBUG
    boolean DEBUG_OPTIMIZE -> DEBUG_OPTIMIZE
    boolean DEBUG_LAYOUT -> DEBUG_LAYOUT
    android.support.constraint.solver.LinearSystem mSystem -> mSystem
    android.support.constraint.solver.LinearSystem mBackgroundSystem -> mBackgroundSystem
    android.support.constraint.solver.widgets.Snapshot mSnapshot -> mSnapshot
    boolean ALLOW_ROOT_GROUP -> ALLOW_ROOT_GROUP
    int mWrapWidth -> mWrapWidth
    int mWrapHeight -> mWrapHeight
    int mPaddingLeft -> mPaddingLeft
    int mPaddingTop -> mPaddingTop
    int mPaddingRight -> mPaddingRight
    int mPaddingBottom -> mPaddingBottom
    int mHorizontalChainsSize -> mHorizontalChainsSize
    int mVerticalChainsSize -> mVerticalChainsSize
    android.support.constraint.solver.widgets.ConstraintWidget[] mMatchConstraintsChainedWidgets -> mMatchConstraintsChainedWidgets
    android.support.constraint.solver.widgets.ConstraintWidget[] mVerticalChainsArray -> mVerticalChainsArray
    android.support.constraint.solver.widgets.ConstraintWidget[] mHorizontalChainsArray -> mHorizontalChainsArray
    int OPTIMIZATION_NONE -> OPTIMIZATION_NONE
    int OPTIMIZATION_ALL -> OPTIMIZATION_ALL
    int OPTIMIZATION_BASIC -> OPTIMIZATION_BASIC
    int OPTIMIZATION_CHAIN -> OPTIMIZATION_CHAIN
    int mOptimizationLevel -> mOptimizationLevel
    boolean[] flags -> flags
    int FLAG_CHAIN_OPTIMIZE -> FLAG_CHAIN_OPTIMIZE
    int FLAG_CHAIN_DANGLING -> FLAG_CHAIN_DANGLING
    int FLAG_RECOMPUTE_BOUNDS -> FLAG_RECOMPUTE_BOUNDS
    android.support.constraint.solver.widgets.ConstraintWidget[] mChainEnds -> mChainEnds
    int CHAIN_FIRST -> CHAIN_FIRST
    int CHAIN_LAST -> CHAIN_LAST
    int CHAIN_FIRST_VISIBLE -> CHAIN_FIRST_VISIBLE
    int CHAIN_LAST_VISIBLE -> CHAIN_LAST_VISIBLE
    boolean mWidthMeasuredTooSmall -> mWidthMeasuredTooSmall
    boolean mHeightMeasuredTooSmall -> mHeightMeasuredTooSmall
    void <init>() -> <init>
    void <init>(int,int,int,int) -> <init>
    void <init>(int,int) -> <init>
    void setOptimizationLevel(int) -> setOptimizationLevel
    java.lang.String getType() -> getType
    void reset() -> reset
    boolean isWidthMeasuredTooSmall() -> isWidthMeasuredTooSmall
    boolean isHeightMeasuredTooSmall() -> isHeightMeasuredTooSmall
    android.support.constraint.solver.widgets.ConstraintWidgetContainer createContainer(android.support.constraint.solver.widgets.ConstraintWidgetContainer,java.lang.String,java.util.ArrayList,int) -> createContainer
    boolean addChildrenToSolver(android.support.constraint.solver.LinearSystem,int) -> addChildrenToSolver
    boolean optimize(android.support.constraint.solver.LinearSystem) -> optimize
    void applyHorizontalChain(android.support.constraint.solver.LinearSystem) -> applyHorizontalChain
    void applyVerticalChain(android.support.constraint.solver.LinearSystem) -> applyVerticalChain
    void updateChildrenFromSolver(android.support.constraint.solver.LinearSystem,int,boolean[]) -> updateChildrenFromSolver
    void setPadding(int,int,int,int) -> setPadding
    void layout() -> layout
    int setGroup(android.support.constraint.solver.widgets.ConstraintAnchor,int) -> setGroup
    int layoutFindGroupsSimple() -> layoutFindGroupsSimple
    void findHorizontalWrapRecursive(android.support.constraint.solver.widgets.ConstraintWidget,boolean[]) -> findHorizontalWrapRecursive
    void findVerticalWrapRecursive(android.support.constraint.solver.widgets.ConstraintWidget,boolean[]) -> findVerticalWrapRecursive
    void findWrapSize(java.util.ArrayList,boolean[]) -> findWrapSize
    int layoutFindGroups() -> layoutFindGroups
    void layoutWithGroup(int) -> layoutWithGroup
    boolean handlesInternalConstraints() -> handlesInternalConstraints
    java.util.ArrayList getVerticalGuidelines() -> getVerticalGuidelines
    java.util.ArrayList getHorizontalGuidelines() -> getHorizontalGuidelines
    android.support.constraint.solver.LinearSystem getSystem() -> getSystem
    void resetChains() -> resetChains
    void addChain(android.support.constraint.solver.widgets.ConstraintWidget,int) -> addChain
    void addHorizontalChain(android.support.constraint.solver.widgets.ConstraintWidget) -> addHorizontalChain
    void addVerticalChain(android.support.constraint.solver.widgets.ConstraintWidget) -> addVerticalChain
    int countMatchConstraintsChainedWidgets(android.support.constraint.solver.LinearSystem,android.support.constraint.solver.widgets.ConstraintWidget[],android.support.constraint.solver.widgets.ConstraintWidget,int,boolean[]) -> countMatchConstraintsChainedWidgets
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.ConstraintWidgetContainer$2 -> android.support.constraint.solver.widgets.ConstraintWidgetContainer$2:
    int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type -> $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.Guideline -> android.support.constraint.solver.widgets.Guideline:
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int RELATIVE_PERCENT -> RELATIVE_PERCENT
    int RELATIVE_BEGIN -> RELATIVE_BEGIN
    int RELATIVE_END -> RELATIVE_END
    int RELATIVE_UNKNWON -> RELATIVE_UNKNWON
    float mRelativePercent -> mRelativePercent
    int mRelativeBegin -> mRelativeBegin
    int mRelativeEnd -> mRelativeEnd
    android.support.constraint.solver.widgets.ConstraintAnchor mAnchor -> mAnchor
    int mOrientation -> mOrientation
    boolean mIsPositionRelaxed -> mIsPositionRelaxed
    int mMinimumPosition -> mMinimumPosition
    android.support.constraint.solver.widgets.Rectangle mHead -> mHead
    int mHeadSize -> mHeadSize
    void <init>() -> <init>
    int getRelativeBehaviour() -> getRelativeBehaviour
    android.support.constraint.solver.widgets.Rectangle getHead() -> getHead
    void setOrientation(int) -> setOrientation
    android.support.constraint.solver.widgets.ConstraintAnchor getAnchor() -> getAnchor
    java.lang.String getType() -> getType
    int getOrientation() -> getOrientation
    void setMinimumPosition(int) -> setMinimumPosition
    void setPositionRelaxed(boolean) -> setPositionRelaxed
    android.support.constraint.solver.widgets.ConstraintAnchor getAnchor(android.support.constraint.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    java.util.ArrayList getAnchors() -> getAnchors
    void setGuidePercent(int) -> setGuidePercent
    void setGuidePercent(float) -> setGuidePercent
    void setGuideBegin(int) -> setGuideBegin
    void setGuideEnd(int) -> setGuideEnd
    float getRelativePercent() -> getRelativePercent
    int getRelativeBegin() -> getRelativeBegin
    int getRelativeEnd() -> getRelativeEnd
    void addToSolver(android.support.constraint.solver.LinearSystem,int) -> addToSolver
    void updateFromSolver(android.support.constraint.solver.LinearSystem,int) -> updateFromSolver
    void setDrawOrigin(int,int) -> setDrawOrigin
    void inferRelativePercentPosition() -> inferRelativePercentPosition
    void inferRelativeBeginPosition() -> inferRelativeBeginPosition
    void inferRelativeEndPosition() -> inferRelativeEndPosition
    void cyclePosition() -> cyclePosition
android.support.constraint.solver.widgets.Guideline$1 -> android.support.constraint.solver.widgets.Guideline$1:
    int[] $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type -> $SwitchMap$android$support$constraint$solver$widgets$ConstraintAnchor$Type
    void <clinit>() -> <clinit>
android.support.constraint.solver.widgets.Optimizer -> android.support.constraint.solver.widgets.Optimizer:
    void <init>() -> <init>
    void applyDirectResolutionHorizontalChain(android.support.constraint.solver.widgets.ConstraintWidgetContainer,android.support.constraint.solver.LinearSystem,int,android.support.constraint.solver.widgets.ConstraintWidget) -> applyDirectResolutionHorizontalChain
    void applyDirectResolutionVerticalChain(android.support.constraint.solver.widgets.ConstraintWidgetContainer,android.support.constraint.solver.LinearSystem,int,android.support.constraint.solver.widgets.ConstraintWidget) -> applyDirectResolutionVerticalChain
    void checkMatchParent(android.support.constraint.solver.widgets.ConstraintWidgetContainer,android.support.constraint.solver.LinearSystem,android.support.constraint.solver.widgets.ConstraintWidget) -> checkMatchParent
    void checkHorizontalSimpleDependency(android.support.constraint.solver.widgets.ConstraintWidgetContainer,android.support.constraint.solver.LinearSystem,android.support.constraint.solver.widgets.ConstraintWidget) -> checkHorizontalSimpleDependency
    void checkVerticalSimpleDependency(android.support.constraint.solver.widgets.ConstraintWidgetContainer,android.support.constraint.solver.LinearSystem,android.support.constraint.solver.widgets.ConstraintWidget) -> checkVerticalSimpleDependency
android.support.constraint.solver.widgets.Rectangle -> android.support.constraint.solver.widgets.Rectangle:
    int x -> x
    int y -> y
    int width -> width
    int height -> height
    void <init>() -> <init>
    void setBounds(int,int,int,int) -> setBounds
    void grow(int,int) -> grow
    boolean intersects(android.support.constraint.solver.widgets.Rectangle) -> intersects
    boolean contains(int,int) -> contains
    int getCenterX() -> getCenterX
    int getCenterY() -> getCenterY
android.support.constraint.solver.widgets.Snapshot -> android.support.constraint.solver.widgets.Snapshot:
    int mX -> mX
    int mY -> mY
    int mWidth -> mWidth
    int mHeight -> mHeight
    java.util.ArrayList mConnections -> mConnections
    void <init>(android.support.constraint.solver.widgets.ConstraintWidget) -> <init>
    void updateFrom(android.support.constraint.solver.widgets.ConstraintWidget) -> updateFrom
    void applyTo(android.support.constraint.solver.widgets.ConstraintWidget) -> applyTo
android.support.constraint.solver.widgets.Snapshot$Connection -> android.support.constraint.solver.widgets.Snapshot$Connection:
    android.support.constraint.solver.widgets.ConstraintAnchor mAnchor -> mAnchor
    android.support.constraint.solver.widgets.ConstraintAnchor mTarget -> mTarget
    int mMargin -> mMargin
    android.support.constraint.solver.widgets.ConstraintAnchor$Strength mStrengh -> mStrengh
    int mCreator -> mCreator
    void <init>(android.support.constraint.solver.widgets.ConstraintAnchor) -> <init>
    void updateFrom(android.support.constraint.solver.widgets.ConstraintWidget) -> updateFrom
    void applyTo(android.support.constraint.solver.widgets.ConstraintWidget) -> applyTo
android.support.constraint.solver.widgets.WidgetContainer -> android.support.constraint.solver.widgets.WidgetContainer:
    java.util.ArrayList mChildren -> mChildren
    void <init>() -> <init>
    void <init>(int,int,int,int) -> <init>
    void <init>(int,int) -> <init>
    void reset() -> reset
    void add(android.support.constraint.solver.widgets.ConstraintWidget) -> add
    void remove(android.support.constraint.solver.widgets.ConstraintWidget) -> remove
    java.util.ArrayList getChildren() -> getChildren
    android.support.constraint.solver.widgets.ConstraintWidgetContainer getRootConstraintContainer() -> getRootConstraintContainer
    android.support.constraint.solver.widgets.ConstraintWidget findWidget(float,float) -> findWidget
    java.util.ArrayList findWidgets(int,int,int,int) -> findWidgets
    android.support.constraint.solver.widgets.Rectangle getBounds(java.util.ArrayList) -> getBounds
    void setOffset(int,int) -> setOffset
    void updateDrawPosition() -> updateDrawPosition
    void layout() -> layout
    void resetSolverVariables(android.support.constraint.solver.Cache) -> resetSolverVariables
    void resetGroups() -> resetGroups
    void removeAllChildren() -> removeAllChildren
android.support.coreui.BuildConfig -> android.support.coreui.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.coreui.R -> android.support.coreui.R:
    void <init>() -> <init>
android.support.coreui.R$attr -> android.support.coreui.R$attr:
    int font -> font
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    void <init>() -> <init>
android.support.coreui.R$bool -> android.support.coreui.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    void <init>() -> <init>
android.support.coreui.R$color -> android.support.coreui.R$color:
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_light -> secondary_text_default_material_light
    void <init>() -> <init>
android.support.coreui.R$dimen -> android.support.coreui.R$dimen:
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    void <init>() -> <init>
android.support.coreui.R$drawable -> android.support.coreui.R$drawable:
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    void <init>() -> <init>
android.support.coreui.R$id -> android.support.coreui.R$id:
    int action_container -> action_container
    int action_divider -> action_divider
    int action_image -> action_image
    int action_text -> action_text
    int actions -> actions
    int async -> async
    int blocking -> blocking
    int chronometer -> chronometer
    int forever -> forever
    int icon -> icon
    int icon_group -> icon_group
    int info -> info
    int italic -> italic
    int line1 -> line1
    int line3 -> line3
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int right_icon -> right_icon
    int right_side -> right_side
    int text -> text
    int text2 -> text2
    int time -> time
    int title -> title
    void <init>() -> <init>
android.support.coreui.R$integer -> android.support.coreui.R$integer:
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
android.support.coreui.R$layout -> android.support.coreui.R$layout:
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    void <init>() -> <init>
android.support.coreui.R$string -> android.support.coreui.R$string:
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.coreui.R$style -> android.support.coreui.R$style:
    int TextAppearance_Compat_Notification -> TextAppearance_Compat_Notification
    int TextAppearance_Compat_Notification_Info -> TextAppearance_Compat_Notification_Info
    int TextAppearance_Compat_Notification_Line2 -> TextAppearance_Compat_Notification_Line2
    int TextAppearance_Compat_Notification_Time -> TextAppearance_Compat_Notification_Time
    int TextAppearance_Compat_Notification_Title -> TextAppearance_Compat_Notification_Title
    int Widget_Compat_NotificationActionContainer -> Widget_Compat_NotificationActionContainer
    int Widget_Compat_NotificationActionText -> Widget_Compat_NotificationActionText
    void <init>() -> <init>
android.support.coreui.R$styleable -> android.support.coreui.R$styleable:
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.coreutils.BuildConfig -> android.support.coreutils.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.coreutils.R -> android.support.coreutils.R:
    void <init>() -> <init>
android.support.coreutils.R$attr -> android.support.coreutils.R$attr:
    int font -> font
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    void <init>() -> <init>
android.support.coreutils.R$bool -> android.support.coreutils.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    void <init>() -> <init>
android.support.coreutils.R$color -> android.support.coreutils.R$color:
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_light -> secondary_text_default_material_light
    void <init>() -> <init>
android.support.coreutils.R$dimen -> android.support.coreutils.R$dimen:
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    void <init>() -> <init>
android.support.coreutils.R$drawable -> android.support.coreutils.R$drawable:
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    void <init>() -> <init>
android.support.coreutils.R$id -> android.support.coreutils.R$id:
    int action_container -> action_container
    int action_divider -> action_divider
    int action_image -> action_image
    int action_text -> action_text
    int actions -> actions
    int async -> async
    int blocking -> blocking
    int chronometer -> chronometer
    int forever -> forever
    int icon -> icon
    int icon_group -> icon_group
    int info -> info
    int italic -> italic
    int line1 -> line1
    int line3 -> line3
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int right_icon -> right_icon
    int right_side -> right_side
    int text -> text
    int text2 -> text2
    int time -> time
    int title -> title
    void <init>() -> <init>
android.support.coreutils.R$integer -> android.support.coreutils.R$integer:
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
android.support.coreutils.R$layout -> android.support.coreutils.R$layout:
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    void <init>() -> <init>
android.support.coreutils.R$string -> android.support.coreutils.R$string:
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.coreutils.R$style -> android.support.coreutils.R$style:
    int TextAppearance_Compat_Notification -> TextAppearance_Compat_Notification
    int TextAppearance_Compat_Notification_Info -> TextAppearance_Compat_Notification_Info
    int TextAppearance_Compat_Notification_Line2 -> TextAppearance_Compat_Notification_Line2
    int TextAppearance_Compat_Notification_Time -> TextAppearance_Compat_Notification_Time
    int TextAppearance_Compat_Notification_Title -> TextAppearance_Compat_Notification_Title
    int Widget_Compat_NotificationActionContainer -> Widget_Compat_NotificationActionContainer
    int Widget_Compat_NotificationActionText -> Widget_Compat_NotificationActionText
    void <init>() -> <init>
android.support.coreutils.R$styleable -> android.support.coreutils.R$styleable:
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.design.BuildConfig -> android.support.design.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.design.R -> android.support.design.R:
    void <init>() -> <init>
android.support.design.R$anim -> android.support.design.R$anim:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_grow_fade_in_from_bottom -> abc_grow_fade_in_from_bottom
    int abc_popup_enter -> abc_popup_enter
    int abc_popup_exit -> abc_popup_exit
    int abc_shrink_fade_out_from_bottom -> abc_shrink_fade_out_from_bottom
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
    int design_bottom_sheet_slide_in -> design_bottom_sheet_slide_in
    int design_bottom_sheet_slide_out -> design_bottom_sheet_slide_out
    int design_snackbar_in -> design_snackbar_in
    int design_snackbar_out -> design_snackbar_out
    int tooltip_enter -> tooltip_enter
    int tooltip_exit -> tooltip_exit
    void <init>() -> <init>
android.support.design.R$animator -> android.support.design.R$animator:
    int design_appbar_state_list_animator -> design_appbar_state_list_animator
    void <init>() -> <init>
android.support.design.R$attr -> android.support.design.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogButtonGroupStyle -> alertDialogButtonGroupStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int allowStacking -> allowStacking
    int alpha -> alpha
    int alphabeticModifiers -> alphabeticModifiers
    int arrowHeadLength -> arrowHeadLength
    int arrowShaftLength -> arrowShaftLength
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int autoSizeMaxTextSize -> autoSizeMaxTextSize
    int autoSizeMinTextSize -> autoSizeMinTextSize
    int autoSizePresetSizes -> autoSizePresetSizes
    int autoSizeStepGranularity -> autoSizeStepGranularity
    int autoSizeTextType -> autoSizeTextType
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int backgroundTint -> backgroundTint
    int backgroundTintMode -> backgroundTintMode
    int barLength -> barLength
    int behavior_autoHide -> behavior_autoHide
    int behavior_hideable -> behavior_hideable
    int behavior_overlapTop -> behavior_overlapTop
    int behavior_peekHeight -> behavior_peekHeight
    int behavior_skipCollapsed -> behavior_skipCollapsed
    int borderWidth -> borderWidth
    int borderlessButtonStyle -> borderlessButtonStyle
    int bottomSheetDialogTheme -> bottomSheetDialogTheme
    int bottomSheetStyle -> bottomSheetStyle
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarNegativeButtonStyle -> buttonBarNegativeButtonStyle
    int buttonBarNeutralButtonStyle -> buttonBarNeutralButtonStyle
    int buttonBarPositiveButtonStyle -> buttonBarPositiveButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int buttonGravity -> buttonGravity
    int buttonPanelSideLayout -> buttonPanelSideLayout
    int buttonStyle -> buttonStyle
    int buttonStyleSmall -> buttonStyleSmall
    int buttonTint -> buttonTint
    int buttonTintMode -> buttonTintMode
    int checkboxStyle -> checkboxStyle
    int checkedTextViewStyle -> checkedTextViewStyle
    int closeIcon -> closeIcon
    int closeItemLayout -> closeItemLayout
    int collapseContentDescription -> collapseContentDescription
    int collapseIcon -> collapseIcon
    int collapsedTitleGravity -> collapsedTitleGravity
    int collapsedTitleTextAppearance -> collapsedTitleTextAppearance
    int color -> color
    int colorAccent -> colorAccent
    int colorBackgroundFloating -> colorBackgroundFloating
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorError -> colorError
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int commitIcon -> commitIcon
    int contentDescription -> contentDescription
    int contentInsetEnd -> contentInsetEnd
    int contentInsetEndWithActions -> contentInsetEndWithActions
    int contentInsetLeft -> contentInsetLeft
    int contentInsetRight -> contentInsetRight
    int contentInsetStart -> contentInsetStart
    int contentInsetStartWithNavigation -> contentInsetStartWithNavigation
    int contentScrim -> contentScrim
    int controlBackground -> controlBackground
    int counterEnabled -> counterEnabled
    int counterMaxLength -> counterMaxLength
    int counterOverflowTextAppearance -> counterOverflowTextAppearance
    int counterTextAppearance -> counterTextAppearance
    int customNavigationLayout -> customNavigationLayout
    int defaultQueryHint -> defaultQueryHint
    int dialogPreferredPadding -> dialogPreferredPadding
    int dialogTheme -> dialogTheme
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int drawableSize -> drawableSize
    int drawerArrowStyle -> drawerArrowStyle
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int editTextBackground -> editTextBackground
    int editTextColor -> editTextColor
    int editTextStyle -> editTextStyle
    int elevation -> elevation
    int errorEnabled -> errorEnabled
    int errorTextAppearance -> errorTextAppearance
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int expanded -> expanded
    int expandedTitleGravity -> expandedTitleGravity
    int expandedTitleMargin -> expandedTitleMargin
    int expandedTitleMarginBottom -> expandedTitleMarginBottom
    int expandedTitleMarginEnd -> expandedTitleMarginEnd
    int expandedTitleMarginStart -> expandedTitleMarginStart
    int expandedTitleMarginTop -> expandedTitleMarginTop
    int expandedTitleTextAppearance -> expandedTitleTextAppearance
    int fabSize -> fabSize
    int fastScrollEnabled -> fastScrollEnabled
    int fastScrollHorizontalThumbDrawable -> fastScrollHorizontalThumbDrawable
    int fastScrollHorizontalTrackDrawable -> fastScrollHorizontalTrackDrawable
    int fastScrollVerticalThumbDrawable -> fastScrollVerticalThumbDrawable
    int fastScrollVerticalTrackDrawable -> fastScrollVerticalTrackDrawable
    int font -> font
    int fontFamily -> fontFamily
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    int foregroundInsidePadding -> foregroundInsidePadding
    int gapBetweenBars -> gapBetweenBars
    int goIcon -> goIcon
    int headerLayout -> headerLayout
    int height -> height
    int hideOnContentScroll -> hideOnContentScroll
    int hintAnimationEnabled -> hintAnimationEnabled
    int hintEnabled -> hintEnabled
    int hintTextAppearance -> hintTextAppearance
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconTint -> iconTint
    int iconTintMode -> iconTintMode
    int iconifiedByDefault -> iconifiedByDefault
    int imageButtonStyle -> imageButtonStyle
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int insetForeground -> insetForeground
    int isLightTheme -> isLightTheme
    int itemBackground -> itemBackground
    int itemIconTint -> itemIconTint
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int itemTextColor -> itemTextColor
    int keylines -> keylines
    int layout -> layout
    int layoutManager -> layoutManager
    int layout_anchor -> layout_anchor
    int layout_anchorGravity -> layout_anchorGravity
    int layout_behavior -> layout_behavior
    int layout_collapseMode -> layout_collapseMode
    int layout_collapseParallaxMultiplier -> layout_collapseParallaxMultiplier
    int layout_dodgeInsetEdges -> layout_dodgeInsetEdges
    int layout_insetEdge -> layout_insetEdge
    int layout_keyline -> layout_keyline
    int layout_scrollFlags -> layout_scrollFlags
    int layout_scrollInterpolator -> layout_scrollInterpolator
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listMenuViewStyle -> listMenuViewStyle
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int logoDescription -> logoDescription
    int maxActionInlineWidth -> maxActionInlineWidth
    int maxButtonHeight -> maxButtonHeight
    int measureWithLargestChild -> measureWithLargestChild
    int menu -> menu
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationContentDescription -> navigationContentDescription
    int navigationIcon -> navigationIcon
    int navigationMode -> navigationMode
    int numericModifiers -> numericModifiers
    int overlapAnchor -> overlapAnchor
    int paddingBottomNoButtons -> paddingBottomNoButtons
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int paddingTopNoTitle -> paddingTopNoTitle
    int panelBackground -> panelBackground
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int passwordToggleContentDescription -> passwordToggleContentDescription
    int passwordToggleDrawable -> passwordToggleDrawable
    int passwordToggleEnabled -> passwordToggleEnabled
    int passwordToggleTint -> passwordToggleTint
    int passwordToggleTintMode -> passwordToggleTintMode
    int popupMenuStyle -> popupMenuStyle
    int popupTheme -> popupTheme
    int popupWindowStyle -> popupWindowStyle
    int preserveIconSpacing -> preserveIconSpacing
    int pressedTranslationZ -> pressedTranslationZ
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryBackground -> queryBackground
    int queryHint -> queryHint
    int radioButtonStyle -> radioButtonStyle
    int ratingBarStyle -> ratingBarStyle
    int ratingBarStyleIndicator -> ratingBarStyleIndicator
    int ratingBarStyleSmall -> ratingBarStyleSmall
    int reverseLayout -> reverseLayout
    int rippleColor -> rippleColor
    int scrimAnimationDuration -> scrimAnimationDuration
    int scrimVisibleHeightTrigger -> scrimVisibleHeightTrigger
    int searchHintIcon -> searchHintIcon
    int searchIcon -> searchIcon
    int searchViewStyle -> searchViewStyle
    int seekBarStyle -> seekBarStyle
    int selectableItemBackground -> selectableItemBackground
    int selectableItemBackgroundBorderless -> selectableItemBackgroundBorderless
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int showText -> showText
    int showTitle -> showTitle
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int spanCount -> spanCount
    int spinBars -> spinBars
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerStyle -> spinnerStyle
    int splitTrack -> splitTrack
    int srcCompat -> srcCompat
    int stackFromEnd -> stackFromEnd
    int state_above_anchor -> state_above_anchor
    int state_collapsed -> state_collapsed
    int state_collapsible -> state_collapsible
    int statusBarBackground -> statusBarBackground
    int statusBarScrim -> statusBarScrim
    int subMenuArrow -> subMenuArrow
    int submitBackground -> submitBackground
    int subtitle -> subtitle
    int subtitleTextAppearance -> subtitleTextAppearance
    int subtitleTextColor -> subtitleTextColor
    int subtitleTextStyle -> subtitleTextStyle
    int suggestionRowLayout -> suggestionRowLayout
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int tabBackground -> tabBackground
    int tabContentStart -> tabContentStart
    int tabGravity -> tabGravity
    int tabIndicatorColor -> tabIndicatorColor
    int tabIndicatorHeight -> tabIndicatorHeight
    int tabMaxWidth -> tabMaxWidth
    int tabMinWidth -> tabMinWidth
    int tabMode -> tabMode
    int tabPadding -> tabPadding
    int tabPaddingBottom -> tabPaddingBottom
    int tabPaddingEnd -> tabPaddingEnd
    int tabPaddingStart -> tabPaddingStart
    int tabPaddingTop -> tabPaddingTop
    int tabSelectedTextColor -> tabSelectedTextColor
    int tabTextAppearance -> tabTextAppearance
    int tabTextColor -> tabTextColor
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSecondary -> textAppearanceListItemSecondary
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearancePopupMenuHeader -> textAppearancePopupMenuHeader
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorError -> textColorError
    int textColorSearchUrl -> textColorSearchUrl
    int theme -> theme
    int thickness -> thickness
    int thumbTextPadding -> thumbTextPadding
    int thumbTint -> thumbTint
    int thumbTintMode -> thumbTintMode
    int tickMark -> tickMark
    int tickMarkTint -> tickMarkTint
    int tickMarkTintMode -> tickMarkTintMode
    int tint -> tint
    int tintMode -> tintMode
    int title -> title
    int titleEnabled -> titleEnabled
    int titleMargin -> titleMargin
    int titleMarginBottom -> titleMarginBottom
    int titleMarginEnd -> titleMarginEnd
    int titleMarginStart -> titleMarginStart
    int titleMarginTop -> titleMarginTop
    int titleMargins -> titleMargins
    int titleTextAppearance -> titleTextAppearance
    int titleTextColor -> titleTextColor
    int titleTextStyle -> titleTextStyle
    int toolbarId -> toolbarId
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarStyle -> toolbarStyle
    int tooltipForegroundColor -> tooltipForegroundColor
    int tooltipFrameBackground -> tooltipFrameBackground
    int tooltipText -> tooltipText
    int track -> track
    int trackTint -> trackTint
    int trackTintMode -> trackTintMode
    int useCompatPadding -> useCompatPadding
    int voiceIcon -> voiceIcon
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    void <init>() -> <init>
android.support.design.R$bool -> android.support.design.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    int abc_allow_stacked_button_bar -> abc_allow_stacked_button_bar
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_closeDialogWhenTouchOutside -> abc_config_closeDialogWhenTouchOutside
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    void <init>() -> <init>
android.support.design.R$color -> android.support.design.R$color:
    int abc_background_cache_hint_selector_material_dark -> abc_background_cache_hint_selector_material_dark
    int abc_background_cache_hint_selector_material_light -> abc_background_cache_hint_selector_material_light
    int abc_btn_colored_borderless_text_material -> abc_btn_colored_borderless_text_material
    int abc_btn_colored_text_material -> abc_btn_colored_text_material
    int abc_color_highlight_material -> abc_color_highlight_material
    int abc_hint_foreground_material_dark -> abc_hint_foreground_material_dark
    int abc_hint_foreground_material_light -> abc_hint_foreground_material_light
    int abc_input_method_navigation_guard -> abc_input_method_navigation_guard
    int abc_primary_text_disable_only_material_dark -> abc_primary_text_disable_only_material_dark
    int abc_primary_text_disable_only_material_light -> abc_primary_text_disable_only_material_light
    int abc_primary_text_material_dark -> abc_primary_text_material_dark
    int abc_primary_text_material_light -> abc_primary_text_material_light
    int abc_search_url_text -> abc_search_url_text
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int abc_secondary_text_material_dark -> abc_secondary_text_material_dark
    int abc_secondary_text_material_light -> abc_secondary_text_material_light
    int abc_tint_btn_checkable -> abc_tint_btn_checkable
    int abc_tint_default -> abc_tint_default
    int abc_tint_edittext -> abc_tint_edittext
    int abc_tint_seek_thumb -> abc_tint_seek_thumb
    int abc_tint_spinner -> abc_tint_spinner
    int abc_tint_switch_track -> abc_tint_switch_track
    int accent_material_dark -> accent_material_dark
    int accent_material_light -> accent_material_light
    int background_floating_material_dark -> background_floating_material_dark
    int background_floating_material_light -> background_floating_material_light
    int background_material_dark -> background_material_dark
    int background_material_light -> background_material_light
    int bright_foreground_disabled_material_dark -> bright_foreground_disabled_material_dark
    int bright_foreground_disabled_material_light -> bright_foreground_disabled_material_light
    int bright_foreground_inverse_material_dark -> bright_foreground_inverse_material_dark
    int bright_foreground_inverse_material_light -> bright_foreground_inverse_material_light
    int bright_foreground_material_dark -> bright_foreground_material_dark
    int bright_foreground_material_light -> bright_foreground_material_light
    int button_material_dark -> button_material_dark
    int button_material_light -> button_material_light
    int design_bottom_navigation_shadow_color -> design_bottom_navigation_shadow_color
    int design_error -> design_error
    int design_fab_shadow_end_color -> design_fab_shadow_end_color
    int design_fab_shadow_mid_color -> design_fab_shadow_mid_color
    int design_fab_shadow_start_color -> design_fab_shadow_start_color
    int design_fab_stroke_end_inner_color -> design_fab_stroke_end_inner_color
    int design_fab_stroke_end_outer_color -> design_fab_stroke_end_outer_color
    int design_fab_stroke_top_inner_color -> design_fab_stroke_top_inner_color
    int design_fab_stroke_top_outer_color -> design_fab_stroke_top_outer_color
    int design_snackbar_background_color -> design_snackbar_background_color
    int design_tint_password_toggle -> design_tint_password_toggle
    int dim_foreground_disabled_material_dark -> dim_foreground_disabled_material_dark
    int dim_foreground_disabled_material_light -> dim_foreground_disabled_material_light
    int dim_foreground_material_dark -> dim_foreground_material_dark
    int dim_foreground_material_light -> dim_foreground_material_light
    int error_color_material -> error_color_material
    int foreground_material_dark -> foreground_material_dark
    int foreground_material_light -> foreground_material_light
    int highlighted_text_material_dark -> highlighted_text_material_dark
    int highlighted_text_material_light -> highlighted_text_material_light
    int material_blue_grey_800 -> material_blue_grey_800
    int material_blue_grey_900 -> material_blue_grey_900
    int material_blue_grey_950 -> material_blue_grey_950
    int material_deep_teal_200 -> material_deep_teal_200
    int material_deep_teal_500 -> material_deep_teal_500
    int material_grey_100 -> material_grey_100
    int material_grey_300 -> material_grey_300
    int material_grey_50 -> material_grey_50
    int material_grey_600 -> material_grey_600
    int material_grey_800 -> material_grey_800
    int material_grey_850 -> material_grey_850
    int material_grey_900 -> material_grey_900
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int notification_material_background_media_default_color -> notification_material_background_media_default_color
    int primary_dark_material_dark -> primary_dark_material_dark
    int primary_dark_material_light -> primary_dark_material_light
    int primary_material_dark -> primary_material_dark
    int primary_material_light -> primary_material_light
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int primary_text_default_material_light -> primary_text_default_material_light
    int primary_text_disabled_material_dark -> primary_text_disabled_material_dark
    int primary_text_disabled_material_light -> primary_text_disabled_material_light
    int ripple_material_dark -> ripple_material_dark
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    int secondary_text_disabled_material_dark -> secondary_text_disabled_material_dark
    int secondary_text_disabled_material_light -> secondary_text_disabled_material_light
    int switch_thumb_disabled_material_dark -> switch_thumb_disabled_material_dark
    int switch_thumb_disabled_material_light -> switch_thumb_disabled_material_light
    int switch_thumb_material_dark -> switch_thumb_material_dark
    int switch_thumb_material_light -> switch_thumb_material_light
    int switch_thumb_normal_material_dark -> switch_thumb_normal_material_dark
    int switch_thumb_normal_material_light -> switch_thumb_normal_material_light
    int tooltip_background_dark -> tooltip_background_dark
    int tooltip_background_light -> tooltip_background_light
    void <init>() -> <init>
android.support.design.R$dimen -> android.support.design.R$dimen:
    int abc_action_bar_content_inset_material -> abc_action_bar_content_inset_material
    int abc_action_bar_content_inset_with_nav -> abc_action_bar_content_inset_with_nav
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_end_material -> abc_action_bar_default_padding_end_material
    int abc_action_bar_default_padding_start_material -> abc_action_bar_default_padding_start_material
    int abc_action_bar_elevation_material -> abc_action_bar_elevation_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_overflow_padding_end_material -> abc_action_bar_overflow_padding_end_material
    int abc_action_bar_overflow_padding_start_material -> abc_action_bar_overflow_padding_start_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_alert_dialog_button_bar_height -> abc_alert_dialog_button_bar_height
    int abc_button_inset_horizontal_material -> abc_button_inset_horizontal_material
    int abc_button_inset_vertical_material -> abc_button_inset_vertical_material
    int abc_button_padding_horizontal_material -> abc_button_padding_horizontal_material
    int abc_button_padding_vertical_material -> abc_button_padding_vertical_material
    int abc_cascading_menus_min_smallest_width -> abc_cascading_menus_min_smallest_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_corner_material -> abc_control_corner_material
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dialog_fixed_height_major -> abc_dialog_fixed_height_major
    int abc_dialog_fixed_height_minor -> abc_dialog_fixed_height_minor
    int abc_dialog_fixed_width_major -> abc_dialog_fixed_width_major
    int abc_dialog_fixed_width_minor -> abc_dialog_fixed_width_minor
    int abc_dialog_list_padding_bottom_no_buttons -> abc_dialog_list_padding_bottom_no_buttons
    int abc_dialog_list_padding_top_no_title -> abc_dialog_list_padding_top_no_title
    int abc_dialog_min_width_major -> abc_dialog_min_width_major
    int abc_dialog_min_width_minor -> abc_dialog_min_width_minor
    int abc_dialog_padding_material -> abc_dialog_padding_material
    int abc_dialog_padding_top_material -> abc_dialog_padding_top_material
    int abc_dialog_title_divider_material -> abc_dialog_title_divider_material
    int abc_disabled_alpha_material_dark -> abc_disabled_alpha_material_dark
    int abc_disabled_alpha_material_light -> abc_disabled_alpha_material_light
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_edit_text_inset_bottom_material -> abc_edit_text_inset_bottom_material
    int abc_edit_text_inset_horizontal_material -> abc_edit_text_inset_horizontal_material
    int abc_edit_text_inset_top_material -> abc_edit_text_inset_top_material
    int abc_floating_window_z -> abc_floating_window_z
    int abc_list_item_padding_horizontal_material -> abc_list_item_padding_horizontal_material
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_progress_bar_height_material -> abc_progress_bar_height_material
    int abc_search_view_preferred_height -> abc_search_view_preferred_height
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_seekbar_track_background_height_material -> abc_seekbar_track_background_height_material
    int abc_seekbar_track_progress_height_material -> abc_seekbar_track_progress_height_material
    int abc_select_dialog_padding_start_material -> abc_select_dialog_padding_start_material
    int abc_switch_padding -> abc_switch_padding
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_header_material -> abc_text_size_menu_header_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int design_appbar_elevation -> design_appbar_elevation
    int design_bottom_navigation_active_item_max_width -> design_bottom_navigation_active_item_max_width
    int design_bottom_navigation_active_text_size -> design_bottom_navigation_active_text_size
    int design_bottom_navigation_elevation -> design_bottom_navigation_elevation
    int design_bottom_navigation_height -> design_bottom_navigation_height
    int design_bottom_navigation_item_max_width -> design_bottom_navigation_item_max_width
    int design_bottom_navigation_item_min_width -> design_bottom_navigation_item_min_width
    int design_bottom_navigation_margin -> design_bottom_navigation_margin
    int design_bottom_navigation_shadow_height -> design_bottom_navigation_shadow_height
    int design_bottom_navigation_text_size -> design_bottom_navigation_text_size
    int design_bottom_sheet_modal_elevation -> design_bottom_sheet_modal_elevation
    int design_bottom_sheet_peek_height_min -> design_bottom_sheet_peek_height_min
    int design_fab_border_width -> design_fab_border_width
    int design_fab_elevation -> design_fab_elevation
    int design_fab_image_size -> design_fab_image_size
    int design_fab_size_mini -> design_fab_size_mini
    int design_fab_size_normal -> design_fab_size_normal
    int design_fab_translation_z_pressed -> design_fab_translation_z_pressed
    int design_navigation_elevation -> design_navigation_elevation
    int design_navigation_icon_padding -> design_navigation_icon_padding
    int design_navigation_icon_size -> design_navigation_icon_size
    int design_navigation_max_width -> design_navigation_max_width
    int design_navigation_padding_bottom -> design_navigation_padding_bottom
    int design_navigation_separator_vertical_padding -> design_navigation_separator_vertical_padding
    int design_snackbar_action_inline_max_width -> design_snackbar_action_inline_max_width
    int design_snackbar_background_corner_radius -> design_snackbar_background_corner_radius
    int design_snackbar_elevation -> design_snackbar_elevation
    int design_snackbar_extra_spacing_horizontal -> design_snackbar_extra_spacing_horizontal
    int design_snackbar_max_width -> design_snackbar_max_width
    int design_snackbar_min_width -> design_snackbar_min_width
    int design_snackbar_padding_horizontal -> design_snackbar_padding_horizontal
    int design_snackbar_padding_vertical -> design_snackbar_padding_vertical
    int design_snackbar_padding_vertical_2lines -> design_snackbar_padding_vertical_2lines
    int design_snackbar_text_size -> design_snackbar_text_size
    int design_tab_max_width -> design_tab_max_width
    int design_tab_scrollable_min_width -> design_tab_scrollable_min_width
    int design_tab_text_size -> design_tab_text_size
    int design_tab_text_size_2line -> design_tab_text_size_2line
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int fastscroll_default_thickness -> fastscroll_default_thickness
    int fastscroll_margin -> fastscroll_margin
    int fastscroll_minimum_range -> fastscroll_minimum_range
    int highlight_alpha_material_colored -> highlight_alpha_material_colored
    int highlight_alpha_material_dark -> highlight_alpha_material_dark
    int highlight_alpha_material_light -> highlight_alpha_material_light
    int hint_alpha_material_dark -> hint_alpha_material_dark
    int hint_alpha_material_light -> hint_alpha_material_light
    int hint_pressed_alpha_material_dark -> hint_pressed_alpha_material_dark
    int hint_pressed_alpha_material_light -> hint_pressed_alpha_material_light
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
    int item_touch_helper_swipe_escape_max_velocity -> item_touch_helper_swipe_escape_max_velocity
    int item_touch_helper_swipe_escape_velocity -> item_touch_helper_swipe_escape_velocity
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    int tooltip_corner_radius -> tooltip_corner_radius
    int tooltip_horizontal_padding -> tooltip_horizontal_padding
    int tooltip_margin -> tooltip_margin
    int tooltip_precise_anchor_extra_offset -> tooltip_precise_anchor_extra_offset
    int tooltip_precise_anchor_threshold -> tooltip_precise_anchor_threshold
    int tooltip_vertical_padding -> tooltip_vertical_padding
    int tooltip_y_offset_non_touch -> tooltip_y_offset_non_touch
    int tooltip_y_offset_touch -> tooltip_y_offset_touch
    void <init>() -> <init>
android.support.design.R$drawable -> android.support.design.R$drawable:
    int abc_ab_share_pack_mtrl_alpha -> abc_ab_share_pack_mtrl_alpha
    int abc_action_bar_item_background_material -> abc_action_bar_item_background_material
    int abc_btn_borderless_material -> abc_btn_borderless_material
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_colored_material -> abc_btn_colored_material
    int abc_btn_default_mtrl_shape -> abc_btn_default_mtrl_shape
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_control_background_material -> abc_control_background_material
    int abc_dialog_material_background -> abc_dialog_material_background
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_material -> abc_ic_ab_back_material
    int abc_ic_arrow_drop_right_black_24dp -> abc_ic_arrow_drop_right_black_24dp
    int abc_ic_clear_material -> abc_ic_clear_material
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_material -> abc_ic_go_search_api_material
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_overflow_material -> abc_ic_menu_overflow_material
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_material -> abc_ic_search_api_material
    int abc_ic_star_black_16dp -> abc_ic_star_black_16dp
    int abc_ic_star_black_36dp -> abc_ic_star_black_36dp
    int abc_ic_star_black_48dp -> abc_ic_star_black_48dp
    int abc_ic_star_half_black_16dp -> abc_ic_star_half_black_16dp
    int abc_ic_star_half_black_36dp -> abc_ic_star_half_black_36dp
    int abc_ic_star_half_black_48dp -> abc_ic_star_half_black_48dp
    int abc_ic_voice_search_api_material -> abc_ic_voice_search_api_material
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_ratingbar_indicator_material -> abc_ratingbar_indicator_material
    int abc_ratingbar_material -> abc_ratingbar_material
    int abc_ratingbar_small_material -> abc_ratingbar_small_material
    int abc_scrubber_control_off_mtrl_alpha -> abc_scrubber_control_off_mtrl_alpha
    int abc_scrubber_control_to_pressed_mtrl_000 -> abc_scrubber_control_to_pressed_mtrl_000
    int abc_scrubber_control_to_pressed_mtrl_005 -> abc_scrubber_control_to_pressed_mtrl_005
    int abc_scrubber_primary_mtrl_alpha -> abc_scrubber_primary_mtrl_alpha
    int abc_scrubber_track_mtrl_alpha -> abc_scrubber_track_mtrl_alpha
    int abc_seekbar_thumb_material -> abc_seekbar_thumb_material
    int abc_seekbar_tick_mark_material -> abc_seekbar_tick_mark_material
    int abc_seekbar_track_material -> abc_seekbar_track_material
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_spinner_textfield_background_material -> abc_spinner_textfield_background_material
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_text_cursor_material -> abc_text_cursor_material
    int abc_text_select_handle_left_mtrl_dark -> abc_text_select_handle_left_mtrl_dark
    int abc_text_select_handle_left_mtrl_light -> abc_text_select_handle_left_mtrl_light
    int abc_text_select_handle_middle_mtrl_dark -> abc_text_select_handle_middle_mtrl_dark
    int abc_text_select_handle_middle_mtrl_light -> abc_text_select_handle_middle_mtrl_light
    int abc_text_select_handle_right_mtrl_dark -> abc_text_select_handle_right_mtrl_dark
    int abc_text_select_handle_right_mtrl_light -> abc_text_select_handle_right_mtrl_light
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int abc_vector_test -> abc_vector_test
    int avd_hide_password -> avd_hide_password
    int avd_show_password -> avd_show_password
    int design_bottom_navigation_item_background -> design_bottom_navigation_item_background
    int design_fab_background -> design_fab_background
    int design_ic_visibility -> design_ic_visibility
    int design_ic_visibility_off -> design_ic_visibility_off
    int design_password_eye -> design_password_eye
    int design_snackbar_background -> design_snackbar_background
    int navigation_empty_icon -> navigation_empty_icon
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    int tooltip_frame_dark -> tooltip_frame_dark
    int tooltip_frame_light -> tooltip_frame_light
    void <init>() -> <init>
android.support.design.R$id -> android.support.design.R$id:
    int action0 -> action0
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_container -> action_container
    int action_context_bar -> action_context_bar
    int action_divider -> action_divider
    int action_image -> action_image
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int action_text -> action_text
    int actions -> actions
    int activity_chooser_view_content -> activity_chooser_view_content
    int add -> add
    int alertTitle -> alertTitle
    int async -> async
    int auto -> auto
    int blocking -> blocking
    int bottom -> bottom
    int buttonPanel -> buttonPanel
    int cancel_action -> cancel_action
    int center -> center
    int checkbox -> checkbox
    int chronometer -> chronometer
    int container -> container
    int contentPanel -> contentPanel
    int coordinator -> coordinator
    int custom -> custom
    int customPanel -> customPanel
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int design_bottom_sheet -> design_bottom_sheet
    int design_menu_item_action_area -> design_menu_item_action_area
    int design_menu_item_action_area_stub -> design_menu_item_action_area_stub
    int design_menu_item_text -> design_menu_item_text
    int design_navigation_view -> design_navigation_view
    int edit_query -> edit_query
    int end -> end
    int end_padder -> end_padder
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int fill -> fill
    int fixed -> fixed
    int forever -> forever
    int ghost_view -> ghost_view
    int home -> home
    int icon -> icon
    int icon_group -> icon_group
    int image -> image
    int info -> info
    int italic -> italic
    int item_touch_helper_previous_elevation -> item_touch_helper_previous_elevation
    int largeLabel -> largeLabel
    int left -> left
    int line1 -> line1
    int line3 -> line3
    int listMode -> listMode
    int list_item -> list_item
    int masked -> masked
    int media_actions -> media_actions
    int message -> message
    int mini -> mini
    int multiply -> multiply
    int navigation_header_container -> navigation_header_container
    int none -> none
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int parallax -> parallax
    int parentPanel -> parentPanel
    int parent_matrix -> parent_matrix
    int pin -> pin
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int right -> right
    int right_icon -> right_icon
    int right_side -> right_side
    int save_image_matrix -> save_image_matrix
    int save_non_transition_alpha -> save_non_transition_alpha
    int save_scale_type -> save_scale_type
    int screen -> screen
    int scrollIndicatorDown -> scrollIndicatorDown
    int scrollIndicatorUp -> scrollIndicatorUp
    int scrollView -> scrollView
    int scrollable -> scrollable
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int select_dialog_listview -> select_dialog_listview
    int shortcut -> shortcut
    int smallLabel -> smallLabel
    int snackbar_action -> snackbar_action
    int snackbar_text -> snackbar_text
    int spacer -> spacer
    int split_action_bar -> split_action_bar
    int src_atop -> src_atop
    int src_in -> src_in
    int src_over -> src_over
    int start -> start
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int submenuarrow -> submenuarrow
    int submit_area -> submit_area
    int tabMode -> tabMode
    int text -> text
    int text2 -> text2
    int textSpacerNoButtons -> textSpacerNoButtons
    int textSpacerNoTitle -> textSpacerNoTitle
    int text_input_password_toggle -> text_input_password_toggle
    int textinput_counter -> textinput_counter
    int textinput_error -> textinput_error
    int time -> time
    int title -> title
    int titleDividerNoCustom -> titleDividerNoCustom
    int title_template -> title_template
    int top -> top
    int topPanel -> topPanel
    int touch_outside -> touch_outside
    int transition_current_scene -> transition_current_scene
    int transition_layout_save -> transition_layout_save
    int transition_position -> transition_position
    int transition_scene_layoutid_cache -> transition_scene_layoutid_cache
    int transition_transform -> transition_transform
    int uniform -> uniform
    int up -> up
    int view_offset_helper -> view_offset_helper
    int visible -> visible
    int wrap_content -> wrap_content
    void <init>() -> <init>
android.support.design.R$integer -> android.support.design.R$integer:
    int abc_config_activityDefaultDur -> abc_config_activityDefaultDur
    int abc_config_activityShortDur -> abc_config_activityShortDur
    int app_bar_elevation_anim_duration -> app_bar_elevation_anim_duration
    int bottom_sheet_slide_duration -> bottom_sheet_slide_duration
    int cancel_button_image_alpha -> cancel_button_image_alpha
    int config_tooltipAnimTime -> config_tooltipAnimTime
    int design_snackbar_text_max_lines -> design_snackbar_text_max_lines
    int hide_password_duration -> hide_password_duration
    int show_password_duration -> show_password_duration
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
android.support.design.R$layout -> android.support.design.R$layout:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_alert_dialog_button_bar_material -> abc_alert_dialog_button_bar_material
    int abc_alert_dialog_material -> abc_alert_dialog_material
    int abc_alert_dialog_title_material -> abc_alert_dialog_title_material
    int abc_dialog_title_material -> abc_dialog_title_material
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_header_item_layout -> abc_popup_menu_header_item_layout
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_select_dialog_material -> abc_select_dialog_material
    int design_bottom_navigation_item -> design_bottom_navigation_item
    int design_bottom_sheet_dialog -> design_bottom_sheet_dialog
    int design_layout_snackbar -> design_layout_snackbar
    int design_layout_snackbar_include -> design_layout_snackbar_include
    int design_layout_tab_icon -> design_layout_tab_icon
    int design_layout_tab_text -> design_layout_tab_text
    int design_menu_item_action_area -> design_menu_item_action_area
    int design_navigation_item -> design_navigation_item
    int design_navigation_item_header -> design_navigation_item_header
    int design_navigation_item_separator -> design_navigation_item_separator
    int design_navigation_item_subheader -> design_navigation_item_subheader
    int design_navigation_menu -> design_navigation_menu
    int design_navigation_menu_item -> design_navigation_menu_item
    int design_text_input_password_icon -> design_text_input_password_icon
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_custom -> notification_template_big_media_custom
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_big_media_narrow_custom -> notification_template_big_media_narrow_custom
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_lines_media -> notification_template_lines_media
    int notification_template_media -> notification_template_media
    int notification_template_media_custom -> notification_template_media_custom
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    int select_dialog_item_material -> select_dialog_item_material
    int select_dialog_multichoice_material -> select_dialog_multichoice_material
    int select_dialog_singlechoice_material -> select_dialog_singlechoice_material
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
    int tooltip -> tooltip
    void <init>() -> <init>
android.support.design.R$string -> android.support.design.R$string:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_home_description_format -> abc_action_bar_home_description_format
    int abc_action_bar_home_subtitle_description_format -> abc_action_bar_home_subtitle_description_format
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_capital_off -> abc_capital_off
    int abc_capital_on -> abc_capital_on
    int abc_font_family_body_1_material -> abc_font_family_body_1_material
    int abc_font_family_body_2_material -> abc_font_family_body_2_material
    int abc_font_family_button_material -> abc_font_family_button_material
    int abc_font_family_caption_material -> abc_font_family_caption_material
    int abc_font_family_display_1_material -> abc_font_family_display_1_material
    int abc_font_family_display_2_material -> abc_font_family_display_2_material
    int abc_font_family_display_3_material -> abc_font_family_display_3_material
    int abc_font_family_display_4_material -> abc_font_family_display_4_material
    int abc_font_family_headline_material -> abc_font_family_headline_material
    int abc_font_family_menu_material -> abc_font_family_menu_material
    int abc_font_family_subhead_material -> abc_font_family_subhead_material
    int abc_font_family_title_material -> abc_font_family_title_material
    int abc_search_hint -> abc_search_hint
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int abc_toolbar_collapse_description -> abc_toolbar_collapse_description
    int appbar_scrolling_view_behavior -> appbar_scrolling_view_behavior
    int bottom_sheet_behavior -> bottom_sheet_behavior
    int character_counter_pattern -> character_counter_pattern
    int password_toggle_content_description -> password_toggle_content_description
    int path_password_eye -> path_password_eye
    int path_password_eye_mask_strike_through -> path_password_eye_mask_strike_through
    int path_password_eye_mask_visible -> path_password_eye_mask_visible
    int path_password_strike_through -> path_password_strike_through
    int search_menu_title -> search_menu_title
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.design.R$style -> android.support.design.R$style:
    int AlertDialog_AppCompat -> AlertDialog_AppCompat
    int AlertDialog_AppCompat_Light -> AlertDialog_AppCompat_Light
    int Animation_AppCompat_Dialog -> Animation_AppCompat_Dialog
    int Animation_AppCompat_DropDownUp -> Animation_AppCompat_DropDownUp
    int Animation_AppCompat_Tooltip -> Animation_AppCompat_Tooltip
    int Animation_Design_BottomSheetDialog -> Animation_Design_BottomSheetDialog
    int Base_AlertDialog_AppCompat -> Base_AlertDialog_AppCompat
    int Base_AlertDialog_AppCompat_Light -> Base_AlertDialog_AppCompat_Light
    int Base_Animation_AppCompat_Dialog -> Base_Animation_AppCompat_Dialog
    int Base_Animation_AppCompat_DropDownUp -> Base_Animation_AppCompat_DropDownUp
    int Base_Animation_AppCompat_Tooltip -> Base_Animation_AppCompat_Tooltip
    int Base_DialogWindowTitleBackground_AppCompat -> Base_DialogWindowTitleBackground_AppCompat
    int Base_DialogWindowTitle_AppCompat -> Base_DialogWindowTitle_AppCompat
    int Base_TextAppearance_AppCompat -> Base_TextAppearance_AppCompat
    int Base_TextAppearance_AppCompat_Body1 -> Base_TextAppearance_AppCompat_Body1
    int Base_TextAppearance_AppCompat_Body2 -> Base_TextAppearance_AppCompat_Body2
    int Base_TextAppearance_AppCompat_Button -> Base_TextAppearance_AppCompat_Button
    int Base_TextAppearance_AppCompat_Caption -> Base_TextAppearance_AppCompat_Caption
    int Base_TextAppearance_AppCompat_Display1 -> Base_TextAppearance_AppCompat_Display1
    int Base_TextAppearance_AppCompat_Display2 -> Base_TextAppearance_AppCompat_Display2
    int Base_TextAppearance_AppCompat_Display3 -> Base_TextAppearance_AppCompat_Display3
    int Base_TextAppearance_AppCompat_Display4 -> Base_TextAppearance_AppCompat_Display4
    int Base_TextAppearance_AppCompat_Headline -> Base_TextAppearance_AppCompat_Headline
    int Base_TextAppearance_AppCompat_Inverse -> Base_TextAppearance_AppCompat_Inverse
    int Base_TextAppearance_AppCompat_Large -> Base_TextAppearance_AppCompat_Large
    int Base_TextAppearance_AppCompat_Large_Inverse -> Base_TextAppearance_AppCompat_Large_Inverse
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Medium -> Base_TextAppearance_AppCompat_Medium
    int Base_TextAppearance_AppCompat_Medium_Inverse -> Base_TextAppearance_AppCompat_Medium_Inverse
    int Base_TextAppearance_AppCompat_Menu -> Base_TextAppearance_AppCompat_Menu
    int Base_TextAppearance_AppCompat_SearchResult -> Base_TextAppearance_AppCompat_SearchResult
    int Base_TextAppearance_AppCompat_SearchResult_Subtitle -> Base_TextAppearance_AppCompat_SearchResult_Subtitle
    int Base_TextAppearance_AppCompat_SearchResult_Title -> Base_TextAppearance_AppCompat_SearchResult_Title
    int Base_TextAppearance_AppCompat_Small -> Base_TextAppearance_AppCompat_Small
    int Base_TextAppearance_AppCompat_Small_Inverse -> Base_TextAppearance_AppCompat_Small_Inverse
    int Base_TextAppearance_AppCompat_Subhead -> Base_TextAppearance_AppCompat_Subhead
    int Base_TextAppearance_AppCompat_Subhead_Inverse -> Base_TextAppearance_AppCompat_Subhead_Inverse
    int Base_TextAppearance_AppCompat_Title -> Base_TextAppearance_AppCompat_Title
    int Base_TextAppearance_AppCompat_Title_Inverse -> Base_TextAppearance_AppCompat_Title_Inverse
    int Base_TextAppearance_AppCompat_Tooltip -> Base_TextAppearance_AppCompat_Tooltip
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu -> Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Title -> Base_TextAppearance_AppCompat_Widget_ActionMode_Title
    int Base_TextAppearance_AppCompat_Widget_Button -> Base_TextAppearance_AppCompat_Widget_Button
    int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored -> Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
    int Base_TextAppearance_AppCompat_Widget_Button_Colored -> Base_TextAppearance_AppCompat_Widget_Button_Colored
    int Base_TextAppearance_AppCompat_Widget_Button_Inverse -> Base_TextAppearance_AppCompat_Widget_Button_Inverse
    int Base_TextAppearance_AppCompat_Widget_DropDownItem -> Base_TextAppearance_AppCompat_Widget_DropDownItem
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Widget_Switch -> Base_TextAppearance_AppCompat_Widget_Switch
    int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Title -> Base_TextAppearance_Widget_AppCompat_Toolbar_Title
    int Base_ThemeOverlay_AppCompat -> Base_ThemeOverlay_AppCompat
    int Base_ThemeOverlay_AppCompat_ActionBar -> Base_ThemeOverlay_AppCompat_ActionBar
    int Base_ThemeOverlay_AppCompat_Dark -> Base_ThemeOverlay_AppCompat_Dark
    int Base_ThemeOverlay_AppCompat_Dark_ActionBar -> Base_ThemeOverlay_AppCompat_Dark_ActionBar
    int Base_ThemeOverlay_AppCompat_Dialog -> Base_ThemeOverlay_AppCompat_Dialog
    int Base_ThemeOverlay_AppCompat_Dialog_Alert -> Base_ThemeOverlay_AppCompat_Dialog_Alert
    int Base_ThemeOverlay_AppCompat_Light -> Base_ThemeOverlay_AppCompat_Light
    int Base_Theme_AppCompat -> Base_Theme_AppCompat
    int Base_Theme_AppCompat_CompactMenu -> Base_Theme_AppCompat_CompactMenu
    int Base_Theme_AppCompat_Dialog -> Base_Theme_AppCompat_Dialog
    int Base_Theme_AppCompat_DialogWhenLarge -> Base_Theme_AppCompat_DialogWhenLarge
    int Base_Theme_AppCompat_Dialog_Alert -> Base_Theme_AppCompat_Dialog_Alert
    int Base_Theme_AppCompat_Dialog_FixedSize -> Base_Theme_AppCompat_Dialog_FixedSize
    int Base_Theme_AppCompat_Dialog_MinWidth -> Base_Theme_AppCompat_Dialog_MinWidth
    int Base_Theme_AppCompat_Light -> Base_Theme_AppCompat_Light
    int Base_Theme_AppCompat_Light_DarkActionBar -> Base_Theme_AppCompat_Light_DarkActionBar
    int Base_Theme_AppCompat_Light_Dialog -> Base_Theme_AppCompat_Light_Dialog
    int Base_Theme_AppCompat_Light_DialogWhenLarge -> Base_Theme_AppCompat_Light_DialogWhenLarge
    int Base_Theme_AppCompat_Light_Dialog_Alert -> Base_Theme_AppCompat_Light_Dialog_Alert
    int Base_Theme_AppCompat_Light_Dialog_FixedSize -> Base_Theme_AppCompat_Light_Dialog_FixedSize
    int Base_Theme_AppCompat_Light_Dialog_MinWidth -> Base_Theme_AppCompat_Light_Dialog_MinWidth
    int Base_V11_ThemeOverlay_AppCompat_Dialog -> Base_V11_ThemeOverlay_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Dialog -> Base_V11_Theme_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Light_Dialog -> Base_V11_Theme_AppCompat_Light_Dialog
    int Base_V12_Widget_AppCompat_AutoCompleteTextView -> Base_V12_Widget_AppCompat_AutoCompleteTextView
    int Base_V12_Widget_AppCompat_EditText -> Base_V12_Widget_AppCompat_EditText
    int Base_V14_Widget_Design_AppBarLayout -> Base_V14_Widget_Design_AppBarLayout
    int Base_V21_ThemeOverlay_AppCompat_Dialog -> Base_V21_ThemeOverlay_AppCompat_Dialog
    int Base_V21_Theme_AppCompat -> Base_V21_Theme_AppCompat
    int Base_V21_Theme_AppCompat_Dialog -> Base_V21_Theme_AppCompat_Dialog
    int Base_V21_Theme_AppCompat_Light -> Base_V21_Theme_AppCompat_Light
    int Base_V21_Theme_AppCompat_Light_Dialog -> Base_V21_Theme_AppCompat_Light_Dialog
    int Base_V21_Widget_Design_AppBarLayout -> Base_V21_Widget_Design_AppBarLayout
    int Base_V22_Theme_AppCompat -> Base_V22_Theme_AppCompat
    int Base_V22_Theme_AppCompat_Light -> Base_V22_Theme_AppCompat_Light
    int Base_V23_Theme_AppCompat -> Base_V23_Theme_AppCompat
    int Base_V23_Theme_AppCompat_Light -> Base_V23_Theme_AppCompat_Light
    int Base_V26_Theme_AppCompat -> Base_V26_Theme_AppCompat
    int Base_V26_Theme_AppCompat_Light -> Base_V26_Theme_AppCompat_Light
    int Base_V26_Widget_AppCompat_Toolbar -> Base_V26_Widget_AppCompat_Toolbar
    int Base_V26_Widget_Design_AppBarLayout -> Base_V26_Widget_Design_AppBarLayout
    int Base_V7_ThemeOverlay_AppCompat_Dialog -> Base_V7_ThemeOverlay_AppCompat_Dialog
    int Base_V7_Theme_AppCompat -> Base_V7_Theme_AppCompat
    int Base_V7_Theme_AppCompat_Dialog -> Base_V7_Theme_AppCompat_Dialog
    int Base_V7_Theme_AppCompat_Light -> Base_V7_Theme_AppCompat_Light
    int Base_V7_Theme_AppCompat_Light_Dialog -> Base_V7_Theme_AppCompat_Light_Dialog
    int Base_V7_Widget_AppCompat_AutoCompleteTextView -> Base_V7_Widget_AppCompat_AutoCompleteTextView
    int Base_V7_Widget_AppCompat_EditText -> Base_V7_Widget_AppCompat_EditText
    int Base_V7_Widget_AppCompat_Toolbar -> Base_V7_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_ActionBar -> Base_Widget_AppCompat_ActionBar
    int Base_Widget_AppCompat_ActionBar_Solid -> Base_Widget_AppCompat_ActionBar_Solid
    int Base_Widget_AppCompat_ActionBar_TabBar -> Base_Widget_AppCompat_ActionBar_TabBar
    int Base_Widget_AppCompat_ActionBar_TabText -> Base_Widget_AppCompat_ActionBar_TabText
    int Base_Widget_AppCompat_ActionBar_TabView -> Base_Widget_AppCompat_ActionBar_TabView
    int Base_Widget_AppCompat_ActionButton -> Base_Widget_AppCompat_ActionButton
    int Base_Widget_AppCompat_ActionButton_CloseMode -> Base_Widget_AppCompat_ActionButton_CloseMode
    int Base_Widget_AppCompat_ActionButton_Overflow -> Base_Widget_AppCompat_ActionButton_Overflow
    int Base_Widget_AppCompat_ActionMode -> Base_Widget_AppCompat_ActionMode
    int Base_Widget_AppCompat_ActivityChooserView -> Base_Widget_AppCompat_ActivityChooserView
    int Base_Widget_AppCompat_AutoCompleteTextView -> Base_Widget_AppCompat_AutoCompleteTextView
    int Base_Widget_AppCompat_Button -> Base_Widget_AppCompat_Button
    int Base_Widget_AppCompat_ButtonBar -> Base_Widget_AppCompat_ButtonBar
    int Base_Widget_AppCompat_ButtonBar_AlertDialog -> Base_Widget_AppCompat_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Borderless -> Base_Widget_AppCompat_Button_Borderless
    int Base_Widget_AppCompat_Button_Borderless_Colored -> Base_Widget_AppCompat_Button_Borderless_Colored
    int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog -> Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Colored -> Base_Widget_AppCompat_Button_Colored
    int Base_Widget_AppCompat_Button_Small -> Base_Widget_AppCompat_Button_Small
    int Base_Widget_AppCompat_CompoundButton_CheckBox -> Base_Widget_AppCompat_CompoundButton_CheckBox
    int Base_Widget_AppCompat_CompoundButton_RadioButton -> Base_Widget_AppCompat_CompoundButton_RadioButton
    int Base_Widget_AppCompat_CompoundButton_Switch -> Base_Widget_AppCompat_CompoundButton_Switch
    int Base_Widget_AppCompat_DrawerArrowToggle -> Base_Widget_AppCompat_DrawerArrowToggle
    int Base_Widget_AppCompat_DrawerArrowToggle_Common -> Base_Widget_AppCompat_DrawerArrowToggle_Common
    int Base_Widget_AppCompat_DropDownItem_Spinner -> Base_Widget_AppCompat_DropDownItem_Spinner
    int Base_Widget_AppCompat_EditText -> Base_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_ImageButton -> Base_Widget_AppCompat_ImageButton
    int Base_Widget_AppCompat_Light_ActionBar -> Base_Widget_AppCompat_Light_ActionBar
    int Base_Widget_AppCompat_Light_ActionBar_Solid -> Base_Widget_AppCompat_Light_ActionBar_Solid
    int Base_Widget_AppCompat_Light_ActionBar_TabBar -> Base_Widget_AppCompat_Light_ActionBar_TabBar
    int Base_Widget_AppCompat_Light_ActionBar_TabText -> Base_Widget_AppCompat_Light_ActionBar_TabText
    int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Base_Widget_AppCompat_Light_ActionBar_TabView -> Base_Widget_AppCompat_Light_ActionBar_TabView
    int Base_Widget_AppCompat_Light_PopupMenu -> Base_Widget_AppCompat_Light_PopupMenu
    int Base_Widget_AppCompat_Light_PopupMenu_Overflow -> Base_Widget_AppCompat_Light_PopupMenu_Overflow
    int Base_Widget_AppCompat_ListMenuView -> Base_Widget_AppCompat_ListMenuView
    int Base_Widget_AppCompat_ListPopupWindow -> Base_Widget_AppCompat_ListPopupWindow
    int Base_Widget_AppCompat_ListView -> Base_Widget_AppCompat_ListView
    int Base_Widget_AppCompat_ListView_DropDown -> Base_Widget_AppCompat_ListView_DropDown
    int Base_Widget_AppCompat_ListView_Menu -> Base_Widget_AppCompat_ListView_Menu
    int Base_Widget_AppCompat_PopupMenu -> Base_Widget_AppCompat_PopupMenu
    int Base_Widget_AppCompat_PopupMenu_Overflow -> Base_Widget_AppCompat_PopupMenu_Overflow
    int Base_Widget_AppCompat_PopupWindow -> Base_Widget_AppCompat_PopupWindow
    int Base_Widget_AppCompat_ProgressBar -> Base_Widget_AppCompat_ProgressBar
    int Base_Widget_AppCompat_ProgressBar_Horizontal -> Base_Widget_AppCompat_ProgressBar_Horizontal
    int Base_Widget_AppCompat_RatingBar -> Base_Widget_AppCompat_RatingBar
    int Base_Widget_AppCompat_RatingBar_Indicator -> Base_Widget_AppCompat_RatingBar_Indicator
    int Base_Widget_AppCompat_RatingBar_Small -> Base_Widget_AppCompat_RatingBar_Small
    int Base_Widget_AppCompat_SearchView -> Base_Widget_AppCompat_SearchView
    int Base_Widget_AppCompat_SearchView_ActionBar -> Base_Widget_AppCompat_SearchView_ActionBar
    int Base_Widget_AppCompat_SeekBar -> Base_Widget_AppCompat_SeekBar
    int Base_Widget_AppCompat_SeekBar_Discrete -> Base_Widget_AppCompat_SeekBar_Discrete
    int Base_Widget_AppCompat_Spinner -> Base_Widget_AppCompat_Spinner
    int Base_Widget_AppCompat_Spinner_Underlined -> Base_Widget_AppCompat_Spinner_Underlined
    int Base_Widget_AppCompat_TextView_SpinnerItem -> Base_Widget_AppCompat_TextView_SpinnerItem
    int Base_Widget_AppCompat_Toolbar -> Base_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_Toolbar_Button_Navigation -> Base_Widget_AppCompat_Toolbar_Button_Navigation
    int Base_Widget_Design_AppBarLayout -> Base_Widget_Design_AppBarLayout
    int Base_Widget_Design_TabLayout -> Base_Widget_Design_TabLayout
    int Platform_AppCompat -> Platform_AppCompat
    int Platform_AppCompat_Light -> Platform_AppCompat_Light
    int Platform_ThemeOverlay_AppCompat -> Platform_ThemeOverlay_AppCompat
    int Platform_ThemeOverlay_AppCompat_Dark -> Platform_ThemeOverlay_AppCompat_Dark
    int Platform_ThemeOverlay_AppCompat_Light -> Platform_ThemeOverlay_AppCompat_Light
    int Platform_V11_AppCompat -> Platform_V11_AppCompat
    int Platform_V11_AppCompat_Light -> Platform_V11_AppCompat_Light
    int Platform_V14_AppCompat -> Platform_V14_AppCompat
    int Platform_V14_AppCompat_Light -> Platform_V14_AppCompat_Light
    int Platform_V21_AppCompat -> Platform_V21_AppCompat
    int Platform_V21_AppCompat_Light -> Platform_V21_AppCompat_Light
    int Platform_V25_AppCompat -> Platform_V25_AppCompat
    int Platform_V25_AppCompat_Light -> Platform_V25_AppCompat_Light
    int Platform_Widget_AppCompat_Spinner -> Platform_Widget_AppCompat_Spinner
    int RtlOverlay_DialogWindowTitle_AppCompat -> RtlOverlay_DialogWindowTitle_AppCompat
    int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem -> RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
    int RtlOverlay_Widget_AppCompat_DialogTitle_Icon -> RtlOverlay_Widget_AppCompat_DialogTitle_Icon
    int RtlOverlay_Widget_AppCompat_PopupMenuItem -> RtlOverlay_Widget_AppCompat_PopupMenuItem
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup -> RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text -> RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
    int RtlOverlay_Widget_AppCompat_SearchView_MagIcon -> RtlOverlay_Widget_AppCompat_SearchView_MagIcon
    int RtlOverlay_Widget_AppCompat_Search_DropDown -> RtlOverlay_Widget_AppCompat_Search_DropDown
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Query -> RtlOverlay_Widget_AppCompat_Search_DropDown_Query
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Text -> RtlOverlay_Widget_AppCompat_Search_DropDown_Text
    int RtlUnderlay_Widget_AppCompat_ActionButton -> RtlUnderlay_Widget_AppCompat_ActionButton
    int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow -> RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
    int TextAppearance_AppCompat -> TextAppearance_AppCompat
    int TextAppearance_AppCompat_Body1 -> TextAppearance_AppCompat_Body1
    int TextAppearance_AppCompat_Body2 -> TextAppearance_AppCompat_Body2
    int TextAppearance_AppCompat_Button -> TextAppearance_AppCompat_Button
    int TextAppearance_AppCompat_Caption -> TextAppearance_AppCompat_Caption
    int TextAppearance_AppCompat_Display1 -> TextAppearance_AppCompat_Display1
    int TextAppearance_AppCompat_Display2 -> TextAppearance_AppCompat_Display2
    int TextAppearance_AppCompat_Display3 -> TextAppearance_AppCompat_Display3
    int TextAppearance_AppCompat_Display4 -> TextAppearance_AppCompat_Display4
    int TextAppearance_AppCompat_Headline -> TextAppearance_AppCompat_Headline
    int TextAppearance_AppCompat_Inverse -> TextAppearance_AppCompat_Inverse
    int TextAppearance_AppCompat_Large -> TextAppearance_AppCompat_Large
    int TextAppearance_AppCompat_Large_Inverse -> TextAppearance_AppCompat_Large_Inverse
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Medium -> TextAppearance_AppCompat_Medium
    int TextAppearance_AppCompat_Medium_Inverse -> TextAppearance_AppCompat_Medium_Inverse
    int TextAppearance_AppCompat_Menu -> TextAppearance_AppCompat_Menu
    int TextAppearance_AppCompat_Notification -> TextAppearance_AppCompat_Notification
    int TextAppearance_AppCompat_Notification_Info -> TextAppearance_AppCompat_Notification_Info
    int TextAppearance_AppCompat_Notification_Info_Media -> TextAppearance_AppCompat_Notification_Info_Media
    int TextAppearance_AppCompat_Notification_Line2 -> TextAppearance_AppCompat_Notification_Line2
    int TextAppearance_AppCompat_Notification_Line2_Media -> TextAppearance_AppCompat_Notification_Line2_Media
    int TextAppearance_AppCompat_Notification_Media -> TextAppearance_AppCompat_Notification_Media
    int TextAppearance_AppCompat_Notification_Time -> TextAppearance_AppCompat_Notification_Time
    int TextAppearance_AppCompat_Notification_Time_Media -> TextAppearance_AppCompat_Notification_Time_Media
    int TextAppearance_AppCompat_Notification_Title -> TextAppearance_AppCompat_Notification_Title
    int TextAppearance_AppCompat_Notification_Title_Media -> TextAppearance_AppCompat_Notification_Title_Media
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Small -> TextAppearance_AppCompat_Small
    int TextAppearance_AppCompat_Small_Inverse -> TextAppearance_AppCompat_Small_Inverse
    int TextAppearance_AppCompat_Subhead -> TextAppearance_AppCompat_Subhead
    int TextAppearance_AppCompat_Subhead_Inverse -> TextAppearance_AppCompat_Subhead_Inverse
    int TextAppearance_AppCompat_Title -> TextAppearance_AppCompat_Title
    int TextAppearance_AppCompat_Title_Inverse -> TextAppearance_AppCompat_Title_Inverse
    int TextAppearance_AppCompat_Tooltip -> TextAppearance_AppCompat_Tooltip
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Button -> TextAppearance_AppCompat_Widget_Button
    int TextAppearance_AppCompat_Widget_Button_Borderless_Colored -> TextAppearance_AppCompat_Widget_Button_Borderless_Colored
    int TextAppearance_AppCompat_Widget_Button_Colored -> TextAppearance_AppCompat_Widget_Button_Colored
    int TextAppearance_AppCompat_Widget_Button_Inverse -> TextAppearance_AppCompat_Widget_Button_Inverse
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Header -> TextAppearance_AppCompat_Widget_PopupMenu_Header
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Widget_Switch -> TextAppearance_AppCompat_Widget_Switch
    int TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int TextAppearance_Compat_Notification -> TextAppearance_Compat_Notification
    int TextAppearance_Compat_Notification_Info -> TextAppearance_Compat_Notification_Info
    int TextAppearance_Compat_Notification_Info_Media -> TextAppearance_Compat_Notification_Info_Media
    int TextAppearance_Compat_Notification_Line2 -> TextAppearance_Compat_Notification_Line2
    int TextAppearance_Compat_Notification_Line2_Media -> TextAppearance_Compat_Notification_Line2_Media
    int TextAppearance_Compat_Notification_Media -> TextAppearance_Compat_Notification_Media
    int TextAppearance_Compat_Notification_Time -> TextAppearance_Compat_Notification_Time
    int TextAppearance_Compat_Notification_Time_Media -> TextAppearance_Compat_Notification_Time_Media
    int TextAppearance_Compat_Notification_Title -> TextAppearance_Compat_Notification_Title
    int TextAppearance_Compat_Notification_Title_Media -> TextAppearance_Compat_Notification_Title_Media
    int TextAppearance_Design_CollapsingToolbar_Expanded -> TextAppearance_Design_CollapsingToolbar_Expanded
    int TextAppearance_Design_Counter -> TextAppearance_Design_Counter
    int TextAppearance_Design_Counter_Overflow -> TextAppearance_Design_Counter_Overflow
    int TextAppearance_Design_Error -> TextAppearance_Design_Error
    int TextAppearance_Design_Hint -> TextAppearance_Design_Hint
    int TextAppearance_Design_Snackbar_Message -> TextAppearance_Design_Snackbar_Message
    int TextAppearance_Design_Tab -> TextAppearance_Design_Tab
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int TextAppearance_Widget_AppCompat_Toolbar_Title -> TextAppearance_Widget_AppCompat_Toolbar_Title
    int ThemeOverlay_AppCompat -> ThemeOverlay_AppCompat
    int ThemeOverlay_AppCompat_ActionBar -> ThemeOverlay_AppCompat_ActionBar
    int ThemeOverlay_AppCompat_Dark -> ThemeOverlay_AppCompat_Dark
    int ThemeOverlay_AppCompat_Dark_ActionBar -> ThemeOverlay_AppCompat_Dark_ActionBar
    int ThemeOverlay_AppCompat_Dialog -> ThemeOverlay_AppCompat_Dialog
    int ThemeOverlay_AppCompat_Dialog_Alert -> ThemeOverlay_AppCompat_Dialog_Alert
    int ThemeOverlay_AppCompat_Light -> ThemeOverlay_AppCompat_Light
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_DayNight -> Theme_AppCompat_DayNight
    int Theme_AppCompat_DayNight_DarkActionBar -> Theme_AppCompat_DayNight_DarkActionBar
    int Theme_AppCompat_DayNight_Dialog -> Theme_AppCompat_DayNight_Dialog
    int Theme_AppCompat_DayNight_DialogWhenLarge -> Theme_AppCompat_DayNight_DialogWhenLarge
    int Theme_AppCompat_DayNight_Dialog_Alert -> Theme_AppCompat_DayNight_Dialog_Alert
    int Theme_AppCompat_DayNight_Dialog_MinWidth -> Theme_AppCompat_DayNight_Dialog_MinWidth
    int Theme_AppCompat_DayNight_NoActionBar -> Theme_AppCompat_DayNight_NoActionBar
    int Theme_AppCompat_Dialog -> Theme_AppCompat_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Dialog_Alert -> Theme_AppCompat_Dialog_Alert
    int Theme_AppCompat_Dialog_MinWidth -> Theme_AppCompat_Dialog_MinWidth
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_Dialog -> Theme_AppCompat_Light_Dialog
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_AppCompat_Light_Dialog_Alert -> Theme_AppCompat_Light_Dialog_Alert
    int Theme_AppCompat_Light_Dialog_MinWidth -> Theme_AppCompat_Light_Dialog_MinWidth
    int Theme_AppCompat_Light_NoActionBar -> Theme_AppCompat_Light_NoActionBar
    int Theme_AppCompat_NoActionBar -> Theme_AppCompat_NoActionBar
    int Theme_Design -> Theme_Design
    int Theme_Design_BottomSheetDialog -> Theme_Design_BottomSheetDialog
    int Theme_Design_Light -> Theme_Design_Light
    int Theme_Design_Light_BottomSheetDialog -> Theme_Design_Light_BottomSheetDialog
    int Theme_Design_Light_NoActionBar -> Theme_Design_Light_NoActionBar
    int Theme_Design_NoActionBar -> Theme_Design_NoActionBar
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Button -> Widget_AppCompat_Button
    int Widget_AppCompat_ButtonBar -> Widget_AppCompat_ButtonBar
    int Widget_AppCompat_ButtonBar_AlertDialog -> Widget_AppCompat_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Borderless -> Widget_AppCompat_Button_Borderless
    int Widget_AppCompat_Button_Borderless_Colored -> Widget_AppCompat_Button_Borderless_Colored
    int Widget_AppCompat_Button_ButtonBar_AlertDialog -> Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Colored -> Widget_AppCompat_Button_Colored
    int Widget_AppCompat_Button_Small -> Widget_AppCompat_Button_Small
    int Widget_AppCompat_CompoundButton_CheckBox -> Widget_AppCompat_CompoundButton_CheckBox
    int Widget_AppCompat_CompoundButton_RadioButton -> Widget_AppCompat_CompoundButton_RadioButton
    int Widget_AppCompat_CompoundButton_Switch -> Widget_AppCompat_CompoundButton_Switch
    int Widget_AppCompat_DrawerArrowToggle -> Widget_AppCompat_DrawerArrowToggle
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_EditText -> Widget_AppCompat_EditText
    int Widget_AppCompat_ImageButton -> Widget_AppCompat_ImageButton
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_PopupMenu_Overflow -> Widget_AppCompat_Light_PopupMenu_Overflow
    int Widget_AppCompat_Light_SearchView -> Widget_AppCompat_Light_SearchView
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListMenuView -> Widget_AppCompat_ListMenuView
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView -> Widget_AppCompat_ListView
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_PopupMenu_Overflow -> Widget_AppCompat_PopupMenu_Overflow
    int Widget_AppCompat_PopupWindow -> Widget_AppCompat_PopupWindow
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_RatingBar -> Widget_AppCompat_RatingBar
    int Widget_AppCompat_RatingBar_Indicator -> Widget_AppCompat_RatingBar_Indicator
    int Widget_AppCompat_RatingBar_Small -> Widget_AppCompat_RatingBar_Small
    int Widget_AppCompat_SearchView -> Widget_AppCompat_SearchView
    int Widget_AppCompat_SearchView_ActionBar -> Widget_AppCompat_SearchView_ActionBar
    int Widget_AppCompat_SeekBar -> Widget_AppCompat_SeekBar
    int Widget_AppCompat_SeekBar_Discrete -> Widget_AppCompat_SeekBar_Discrete
    int Widget_AppCompat_Spinner -> Widget_AppCompat_Spinner
    int Widget_AppCompat_Spinner_DropDown -> Widget_AppCompat_Spinner_DropDown
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
    int Widget_AppCompat_Spinner_Underlined -> Widget_AppCompat_Spinner_Underlined
    int Widget_AppCompat_TextView_SpinnerItem -> Widget_AppCompat_TextView_SpinnerItem
    int Widget_AppCompat_Toolbar -> Widget_AppCompat_Toolbar
    int Widget_AppCompat_Toolbar_Button_Navigation -> Widget_AppCompat_Toolbar_Button_Navigation
    int Widget_Compat_NotificationActionContainer -> Widget_Compat_NotificationActionContainer
    int Widget_Compat_NotificationActionText -> Widget_Compat_NotificationActionText
    int Widget_Design_AppBarLayout -> Widget_Design_AppBarLayout
    int Widget_Design_BottomNavigationView -> Widget_Design_BottomNavigationView
    int Widget_Design_BottomSheet_Modal -> Widget_Design_BottomSheet_Modal
    int Widget_Design_CollapsingToolbar -> Widget_Design_CollapsingToolbar
    int Widget_Design_CoordinatorLayout -> Widget_Design_CoordinatorLayout
    int Widget_Design_FloatingActionButton -> Widget_Design_FloatingActionButton
    int Widget_Design_NavigationView -> Widget_Design_NavigationView
    int Widget_Design_ScrimInsetsFrameLayout -> Widget_Design_ScrimInsetsFrameLayout
    int Widget_Design_Snackbar -> Widget_Design_Snackbar
    int Widget_Design_TabLayout -> Widget_Design_TabLayout
    int Widget_Design_TextInputLayout -> Widget_Design_TextInputLayout
    void <init>() -> <init>
android.support.design.R$styleable -> android.support.design.R$styleable:
    int[] ActionBar -> ActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetEndWithActions -> ActionBar_contentInsetEndWithActions
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_contentInsetStartWithNavigation -> ActionBar_contentInsetStartWithNavigation
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_showTitle -> AlertDialog_showTitle
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AppBarLayout -> AppBarLayout
    int AppBarLayout_android_background -> AppBarLayout_android_background
    int AppBarLayout_android_touchscreenBlocksFocus -> AppBarLayout_android_touchscreenBlocksFocus
    int AppBarLayout_android_keyboardNavigationCluster -> AppBarLayout_android_keyboardNavigationCluster
    int AppBarLayout_elevation -> AppBarLayout_elevation
    int AppBarLayout_expanded -> AppBarLayout_expanded
    int[] AppBarLayoutStates -> AppBarLayoutStates
    int AppBarLayoutStates_state_collapsed -> AppBarLayoutStates_state_collapsed
    int AppBarLayoutStates_state_collapsible -> AppBarLayoutStates_state_collapsible
    int[] AppBarLayout_Layout -> AppBarLayout_Layout
    int AppBarLayout_Layout_layout_scrollFlags -> AppBarLayout_Layout_layout_scrollFlags
    int AppBarLayout_Layout_layout_scrollInterpolator -> AppBarLayout_Layout_layout_scrollInterpolator
    int[] AppCompatImageView -> AppCompatImageView
    int AppCompatImageView_android_src -> AppCompatImageView_android_src
    int AppCompatImageView_srcCompat -> AppCompatImageView_srcCompat
    int AppCompatImageView_tint -> AppCompatImageView_tint
    int AppCompatImageView_tintMode -> AppCompatImageView_tintMode
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int AppCompatSeekBar_android_thumb -> AppCompatSeekBar_android_thumb
    int AppCompatSeekBar_tickMark -> AppCompatSeekBar_tickMark
    int AppCompatSeekBar_tickMarkTint -> AppCompatSeekBar_tickMarkTint
    int AppCompatSeekBar_tickMarkTintMode -> AppCompatSeekBar_tickMarkTintMode
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int AppCompatTextHelper_android_textAppearance -> AppCompatTextHelper_android_textAppearance
    int AppCompatTextHelper_android_drawableTop -> AppCompatTextHelper_android_drawableTop
    int AppCompatTextHelper_android_drawableBottom -> AppCompatTextHelper_android_drawableBottom
    int AppCompatTextHelper_android_drawableLeft -> AppCompatTextHelper_android_drawableLeft
    int AppCompatTextHelper_android_drawableRight -> AppCompatTextHelper_android_drawableRight
    int AppCompatTextHelper_android_drawableStart -> AppCompatTextHelper_android_drawableStart
    int AppCompatTextHelper_android_drawableEnd -> AppCompatTextHelper_android_drawableEnd
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_autoSizeMaxTextSize -> AppCompatTextView_autoSizeMaxTextSize
    int AppCompatTextView_autoSizeMinTextSize -> AppCompatTextView_autoSizeMinTextSize
    int AppCompatTextView_autoSizePresetSizes -> AppCompatTextView_autoSizePresetSizes
    int AppCompatTextView_autoSizeStepGranularity -> AppCompatTextView_autoSizeStepGranularity
    int AppCompatTextView_autoSizeTextType -> AppCompatTextView_autoSizeTextType
    int AppCompatTextView_fontFamily -> AppCompatTextView_fontFamily
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] AppCompatTheme -> AppCompatTheme
    int AppCompatTheme_android_windowIsFloating -> AppCompatTheme_android_windowIsFloating
    int AppCompatTheme_android_windowAnimationStyle -> AppCompatTheme_android_windowAnimationStyle
    int AppCompatTheme_actionBarDivider -> AppCompatTheme_actionBarDivider
    int AppCompatTheme_actionBarItemBackground -> AppCompatTheme_actionBarItemBackground
    int AppCompatTheme_actionBarPopupTheme -> AppCompatTheme_actionBarPopupTheme
    int AppCompatTheme_actionBarSize -> AppCompatTheme_actionBarSize
    int AppCompatTheme_actionBarSplitStyle -> AppCompatTheme_actionBarSplitStyle
    int AppCompatTheme_actionBarStyle -> AppCompatTheme_actionBarStyle
    int AppCompatTheme_actionBarTabBarStyle -> AppCompatTheme_actionBarTabBarStyle
    int AppCompatTheme_actionBarTabStyle -> AppCompatTheme_actionBarTabStyle
    int AppCompatTheme_actionBarTabTextStyle -> AppCompatTheme_actionBarTabTextStyle
    int AppCompatTheme_actionBarTheme -> AppCompatTheme_actionBarTheme
    int AppCompatTheme_actionBarWidgetTheme -> AppCompatTheme_actionBarWidgetTheme
    int AppCompatTheme_actionButtonStyle -> AppCompatTheme_actionButtonStyle
    int AppCompatTheme_actionDropDownStyle -> AppCompatTheme_actionDropDownStyle
    int AppCompatTheme_actionMenuTextAppearance -> AppCompatTheme_actionMenuTextAppearance
    int AppCompatTheme_actionMenuTextColor -> AppCompatTheme_actionMenuTextColor
    int AppCompatTheme_actionModeBackground -> AppCompatTheme_actionModeBackground
    int AppCompatTheme_actionModeCloseButtonStyle -> AppCompatTheme_actionModeCloseButtonStyle
    int AppCompatTheme_actionModeCloseDrawable -> AppCompatTheme_actionModeCloseDrawable
    int AppCompatTheme_actionModeCopyDrawable -> AppCompatTheme_actionModeCopyDrawable
    int AppCompatTheme_actionModeCutDrawable -> AppCompatTheme_actionModeCutDrawable
    int AppCompatTheme_actionModeFindDrawable -> AppCompatTheme_actionModeFindDrawable
    int AppCompatTheme_actionModePasteDrawable -> AppCompatTheme_actionModePasteDrawable
    int AppCompatTheme_actionModePopupWindowStyle -> AppCompatTheme_actionModePopupWindowStyle
    int AppCompatTheme_actionModeSelectAllDrawable -> AppCompatTheme_actionModeSelectAllDrawable
    int AppCompatTheme_actionModeShareDrawable -> AppCompatTheme_actionModeShareDrawable
    int AppCompatTheme_actionModeSplitBackground -> AppCompatTheme_actionModeSplitBackground
    int AppCompatTheme_actionModeStyle -> AppCompatTheme_actionModeStyle
    int AppCompatTheme_actionModeWebSearchDrawable -> AppCompatTheme_actionModeWebSearchDrawable
    int AppCompatTheme_actionOverflowButtonStyle -> AppCompatTheme_actionOverflowButtonStyle
    int AppCompatTheme_actionOverflowMenuStyle -> AppCompatTheme_actionOverflowMenuStyle
    int AppCompatTheme_activityChooserViewStyle -> AppCompatTheme_activityChooserViewStyle
    int AppCompatTheme_alertDialogButtonGroupStyle -> AppCompatTheme_alertDialogButtonGroupStyle
    int AppCompatTheme_alertDialogCenterButtons -> AppCompatTheme_alertDialogCenterButtons
    int AppCompatTheme_alertDialogStyle -> AppCompatTheme_alertDialogStyle
    int AppCompatTheme_alertDialogTheme -> AppCompatTheme_alertDialogTheme
    int AppCompatTheme_autoCompleteTextViewStyle -> AppCompatTheme_autoCompleteTextViewStyle
    int AppCompatTheme_borderlessButtonStyle -> AppCompatTheme_borderlessButtonStyle
    int AppCompatTheme_buttonBarButtonStyle -> AppCompatTheme_buttonBarButtonStyle
    int AppCompatTheme_buttonBarNegativeButtonStyle -> AppCompatTheme_buttonBarNegativeButtonStyle
    int AppCompatTheme_buttonBarNeutralButtonStyle -> AppCompatTheme_buttonBarNeutralButtonStyle
    int AppCompatTheme_buttonBarPositiveButtonStyle -> AppCompatTheme_buttonBarPositiveButtonStyle
    int AppCompatTheme_buttonBarStyle -> AppCompatTheme_buttonBarStyle
    int AppCompatTheme_buttonStyle -> AppCompatTheme_buttonStyle
    int AppCompatTheme_buttonStyleSmall -> AppCompatTheme_buttonStyleSmall
    int AppCompatTheme_checkboxStyle -> AppCompatTheme_checkboxStyle
    int AppCompatTheme_checkedTextViewStyle -> AppCompatTheme_checkedTextViewStyle
    int AppCompatTheme_colorAccent -> AppCompatTheme_colorAccent
    int AppCompatTheme_colorBackgroundFloating -> AppCompatTheme_colorBackgroundFloating
    int AppCompatTheme_colorButtonNormal -> AppCompatTheme_colorButtonNormal
    int AppCompatTheme_colorControlActivated -> AppCompatTheme_colorControlActivated
    int AppCompatTheme_colorControlHighlight -> AppCompatTheme_colorControlHighlight
    int AppCompatTheme_colorControlNormal -> AppCompatTheme_colorControlNormal
    int AppCompatTheme_colorError -> AppCompatTheme_colorError
    int AppCompatTheme_colorPrimary -> AppCompatTheme_colorPrimary
    int AppCompatTheme_colorPrimaryDark -> AppCompatTheme_colorPrimaryDark
    int AppCompatTheme_colorSwitchThumbNormal -> AppCompatTheme_colorSwitchThumbNormal
    int AppCompatTheme_controlBackground -> AppCompatTheme_controlBackground
    int AppCompatTheme_dialogPreferredPadding -> AppCompatTheme_dialogPreferredPadding
    int AppCompatTheme_dialogTheme -> AppCompatTheme_dialogTheme
    int AppCompatTheme_dividerHorizontal -> AppCompatTheme_dividerHorizontal
    int AppCompatTheme_dividerVertical -> AppCompatTheme_dividerVertical
    int AppCompatTheme_dropDownListViewStyle -> AppCompatTheme_dropDownListViewStyle
    int AppCompatTheme_dropdownListPreferredItemHeight -> AppCompatTheme_dropdownListPreferredItemHeight
    int AppCompatTheme_editTextBackground -> AppCompatTheme_editTextBackground
    int AppCompatTheme_editTextColor -> AppCompatTheme_editTextColor
    int AppCompatTheme_editTextStyle -> AppCompatTheme_editTextStyle
    int AppCompatTheme_homeAsUpIndicator -> AppCompatTheme_homeAsUpIndicator
    int AppCompatTheme_imageButtonStyle -> AppCompatTheme_imageButtonStyle
    int AppCompatTheme_listChoiceBackgroundIndicator -> AppCompatTheme_listChoiceBackgroundIndicator
    int AppCompatTheme_listDividerAlertDialog -> AppCompatTheme_listDividerAlertDialog
    int AppCompatTheme_listMenuViewStyle -> AppCompatTheme_listMenuViewStyle
    int AppCompatTheme_listPopupWindowStyle -> AppCompatTheme_listPopupWindowStyle
    int AppCompatTheme_listPreferredItemHeight -> AppCompatTheme_listPreferredItemHeight
    int AppCompatTheme_listPreferredItemHeightLarge -> AppCompatTheme_listPreferredItemHeightLarge
    int AppCompatTheme_listPreferredItemHeightSmall -> AppCompatTheme_listPreferredItemHeightSmall
    int AppCompatTheme_listPreferredItemPaddingLeft -> AppCompatTheme_listPreferredItemPaddingLeft
    int AppCompatTheme_listPreferredItemPaddingRight -> AppCompatTheme_listPreferredItemPaddingRight
    int AppCompatTheme_panelBackground -> AppCompatTheme_panelBackground
    int AppCompatTheme_panelMenuListTheme -> AppCompatTheme_panelMenuListTheme
    int AppCompatTheme_panelMenuListWidth -> AppCompatTheme_panelMenuListWidth
    int AppCompatTheme_popupMenuStyle -> AppCompatTheme_popupMenuStyle
    int AppCompatTheme_popupWindowStyle -> AppCompatTheme_popupWindowStyle
    int AppCompatTheme_radioButtonStyle -> AppCompatTheme_radioButtonStyle
    int AppCompatTheme_ratingBarStyle -> AppCompatTheme_ratingBarStyle
    int AppCompatTheme_ratingBarStyleIndicator -> AppCompatTheme_ratingBarStyleIndicator
    int AppCompatTheme_ratingBarStyleSmall -> AppCompatTheme_ratingBarStyleSmall
    int AppCompatTheme_searchViewStyle -> AppCompatTheme_searchViewStyle
    int AppCompatTheme_seekBarStyle -> AppCompatTheme_seekBarStyle
    int AppCompatTheme_selectableItemBackground -> AppCompatTheme_selectableItemBackground
    int AppCompatTheme_selectableItemBackgroundBorderless -> AppCompatTheme_selectableItemBackgroundBorderless
    int AppCompatTheme_spinnerDropDownItemStyle -> AppCompatTheme_spinnerDropDownItemStyle
    int AppCompatTheme_spinnerStyle -> AppCompatTheme_spinnerStyle
    int AppCompatTheme_switchStyle -> AppCompatTheme_switchStyle
    int AppCompatTheme_textAppearanceLargePopupMenu -> AppCompatTheme_textAppearanceLargePopupMenu
    int AppCompatTheme_textAppearanceListItem -> AppCompatTheme_textAppearanceListItem
    int AppCompatTheme_textAppearanceListItemSecondary -> AppCompatTheme_textAppearanceListItemSecondary
    int AppCompatTheme_textAppearanceListItemSmall -> AppCompatTheme_textAppearanceListItemSmall
    int AppCompatTheme_textAppearancePopupMenuHeader -> AppCompatTheme_textAppearancePopupMenuHeader
    int AppCompatTheme_textAppearanceSearchResultSubtitle -> AppCompatTheme_textAppearanceSearchResultSubtitle
    int AppCompatTheme_textAppearanceSearchResultTitle -> AppCompatTheme_textAppearanceSearchResultTitle
    int AppCompatTheme_textAppearanceSmallPopupMenu -> AppCompatTheme_textAppearanceSmallPopupMenu
    int AppCompatTheme_textColorAlertDialogListItem -> AppCompatTheme_textColorAlertDialogListItem
    int AppCompatTheme_textColorSearchUrl -> AppCompatTheme_textColorSearchUrl
    int AppCompatTheme_toolbarNavigationButtonStyle -> AppCompatTheme_toolbarNavigationButtonStyle
    int AppCompatTheme_toolbarStyle -> AppCompatTheme_toolbarStyle
    int AppCompatTheme_tooltipForegroundColor -> AppCompatTheme_tooltipForegroundColor
    int AppCompatTheme_tooltipFrameBackground -> AppCompatTheme_tooltipFrameBackground
    int AppCompatTheme_windowActionBar -> AppCompatTheme_windowActionBar
    int AppCompatTheme_windowActionBarOverlay -> AppCompatTheme_windowActionBarOverlay
    int AppCompatTheme_windowActionModeOverlay -> AppCompatTheme_windowActionModeOverlay
    int AppCompatTheme_windowFixedHeightMajor -> AppCompatTheme_windowFixedHeightMajor
    int AppCompatTheme_windowFixedHeightMinor -> AppCompatTheme_windowFixedHeightMinor
    int AppCompatTheme_windowFixedWidthMajor -> AppCompatTheme_windowFixedWidthMajor
    int AppCompatTheme_windowFixedWidthMinor -> AppCompatTheme_windowFixedWidthMinor
    int AppCompatTheme_windowMinWidthMajor -> AppCompatTheme_windowMinWidthMajor
    int AppCompatTheme_windowMinWidthMinor -> AppCompatTheme_windowMinWidthMinor
    int AppCompatTheme_windowNoTitle -> AppCompatTheme_windowNoTitle
    int[] BottomNavigationView -> BottomNavigationView
    int BottomNavigationView_elevation -> BottomNavigationView_elevation
    int BottomNavigationView_itemBackground -> BottomNavigationView_itemBackground
    int BottomNavigationView_itemIconTint -> BottomNavigationView_itemIconTint
    int BottomNavigationView_itemTextColor -> BottomNavigationView_itemTextColor
    int BottomNavigationView_menu -> BottomNavigationView_menu
    int[] BottomSheetBehavior_Layout -> BottomSheetBehavior_Layout
    int BottomSheetBehavior_Layout_behavior_hideable -> BottomSheetBehavior_Layout_behavior_hideable
    int BottomSheetBehavior_Layout_behavior_peekHeight -> BottomSheetBehavior_Layout_behavior_peekHeight
    int BottomSheetBehavior_Layout_behavior_skipCollapsed -> BottomSheetBehavior_Layout_behavior_skipCollapsed
    int[] ButtonBarLayout -> ButtonBarLayout
    int ButtonBarLayout_allowStacking -> ButtonBarLayout_allowStacking
    int[] CollapsingToolbarLayout -> CollapsingToolbarLayout
    int CollapsingToolbarLayout_collapsedTitleGravity -> CollapsingToolbarLayout_collapsedTitleGravity
    int CollapsingToolbarLayout_collapsedTitleTextAppearance -> CollapsingToolbarLayout_collapsedTitleTextAppearance
    int CollapsingToolbarLayout_contentScrim -> CollapsingToolbarLayout_contentScrim
    int CollapsingToolbarLayout_expandedTitleGravity -> CollapsingToolbarLayout_expandedTitleGravity
    int CollapsingToolbarLayout_expandedTitleMargin -> CollapsingToolbarLayout_expandedTitleMargin
    int CollapsingToolbarLayout_expandedTitleMarginBottom -> CollapsingToolbarLayout_expandedTitleMarginBottom
    int CollapsingToolbarLayout_expandedTitleMarginEnd -> CollapsingToolbarLayout_expandedTitleMarginEnd
    int CollapsingToolbarLayout_expandedTitleMarginStart -> CollapsingToolbarLayout_expandedTitleMarginStart
    int CollapsingToolbarLayout_expandedTitleMarginTop -> CollapsingToolbarLayout_expandedTitleMarginTop
    int CollapsingToolbarLayout_expandedTitleTextAppearance -> CollapsingToolbarLayout_expandedTitleTextAppearance
    int CollapsingToolbarLayout_scrimAnimationDuration -> CollapsingToolbarLayout_scrimAnimationDuration
    int CollapsingToolbarLayout_scrimVisibleHeightTrigger -> CollapsingToolbarLayout_scrimVisibleHeightTrigger
    int CollapsingToolbarLayout_statusBarScrim -> CollapsingToolbarLayout_statusBarScrim
    int CollapsingToolbarLayout_title -> CollapsingToolbarLayout_title
    int CollapsingToolbarLayout_titleEnabled -> CollapsingToolbarLayout_titleEnabled
    int CollapsingToolbarLayout_toolbarId -> CollapsingToolbarLayout_toolbarId
    int[] CollapsingToolbarLayout_Layout -> CollapsingToolbarLayout_Layout
    int CollapsingToolbarLayout_Layout_layout_collapseMode -> CollapsingToolbarLayout_Layout_layout_collapseMode
    int CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier -> CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier
    int[] ColorStateListItem -> ColorStateListItem
    int ColorStateListItem_android_color -> ColorStateListItem_android_color
    int ColorStateListItem_android_alpha -> ColorStateListItem_android_alpha
    int ColorStateListItem_alpha -> ColorStateListItem_alpha
    int[] CompoundButton -> CompoundButton
    int CompoundButton_android_button -> CompoundButton_android_button
    int CompoundButton_buttonTint -> CompoundButton_buttonTint
    int CompoundButton_buttonTintMode -> CompoundButton_buttonTintMode
    int[] CoordinatorLayout -> CoordinatorLayout
    int CoordinatorLayout_keylines -> CoordinatorLayout_keylines
    int CoordinatorLayout_statusBarBackground -> CoordinatorLayout_statusBarBackground
    int[] CoordinatorLayout_Layout -> CoordinatorLayout_Layout
    int CoordinatorLayout_Layout_android_layout_gravity -> CoordinatorLayout_Layout_android_layout_gravity
    int CoordinatorLayout_Layout_layout_anchor -> CoordinatorLayout_Layout_layout_anchor
    int CoordinatorLayout_Layout_layout_anchorGravity -> CoordinatorLayout_Layout_layout_anchorGravity
    int CoordinatorLayout_Layout_layout_behavior -> CoordinatorLayout_Layout_layout_behavior
    int CoordinatorLayout_Layout_layout_dodgeInsetEdges -> CoordinatorLayout_Layout_layout_dodgeInsetEdges
    int CoordinatorLayout_Layout_layout_insetEdge -> CoordinatorLayout_Layout_layout_insetEdge
    int CoordinatorLayout_Layout_layout_keyline -> CoordinatorLayout_Layout_layout_keyline
    int[] DesignTheme -> DesignTheme
    int DesignTheme_bottomSheetDialogTheme -> DesignTheme_bottomSheetDialogTheme
    int DesignTheme_bottomSheetStyle -> DesignTheme_bottomSheetStyle
    int DesignTheme_textColorError -> DesignTheme_textColorError
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_arrowHeadLength -> DrawerArrowToggle_arrowHeadLength
    int DrawerArrowToggle_arrowShaftLength -> DrawerArrowToggle_arrowShaftLength
    int DrawerArrowToggle_barLength -> DrawerArrowToggle_barLength
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int[] FloatingActionButton -> FloatingActionButton
    int FloatingActionButton_backgroundTint -> FloatingActionButton_backgroundTint
    int FloatingActionButton_backgroundTintMode -> FloatingActionButton_backgroundTintMode
    int FloatingActionButton_borderWidth -> FloatingActionButton_borderWidth
    int FloatingActionButton_elevation -> FloatingActionButton_elevation
    int FloatingActionButton_fabSize -> FloatingActionButton_fabSize
    int FloatingActionButton_pressedTranslationZ -> FloatingActionButton_pressedTranslationZ
    int FloatingActionButton_rippleColor -> FloatingActionButton_rippleColor
    int FloatingActionButton_useCompatPadding -> FloatingActionButton_useCompatPadding
    int[] FloatingActionButton_Behavior_Layout -> FloatingActionButton_Behavior_Layout
    int FloatingActionButton_Behavior_Layout_behavior_autoHide -> FloatingActionButton_Behavior_Layout_behavior_autoHide
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    int[] ForegroundLinearLayout -> ForegroundLinearLayout
    int ForegroundLinearLayout_android_foreground -> ForegroundLinearLayout_android_foreground
    int ForegroundLinearLayout_android_foregroundGravity -> ForegroundLinearLayout_android_foregroundGravity
    int ForegroundLinearLayout_foregroundInsidePadding -> ForegroundLinearLayout_foregroundInsidePadding
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int[] MenuItem -> MenuItem
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_alphabeticModifiers -> MenuItem_alphabeticModifiers
    int MenuItem_contentDescription -> MenuItem_contentDescription
    int MenuItem_iconTint -> MenuItem_iconTint
    int MenuItem_iconTintMode -> MenuItem_iconTintMode
    int MenuItem_numericModifiers -> MenuItem_numericModifiers
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int MenuItem_tooltipText -> MenuItem_tooltipText
    int[] MenuView -> MenuView
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int MenuView_subMenuArrow -> MenuView_subMenuArrow
    int[] NavigationView -> NavigationView
    int NavigationView_android_background -> NavigationView_android_background
    int NavigationView_android_fitsSystemWindows -> NavigationView_android_fitsSystemWindows
    int NavigationView_android_maxWidth -> NavigationView_android_maxWidth
    int NavigationView_elevation -> NavigationView_elevation
    int NavigationView_headerLayout -> NavigationView_headerLayout
    int NavigationView_itemBackground -> NavigationView_itemBackground
    int NavigationView_itemIconTint -> NavigationView_itemIconTint
    int NavigationView_itemTextAppearance -> NavigationView_itemTextAppearance
    int NavigationView_itemTextColor -> NavigationView_itemTextColor
    int NavigationView_menu -> NavigationView_menu
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int[] RecycleListView -> RecycleListView
    int RecycleListView_paddingBottomNoButtons -> RecycleListView_paddingBottomNoButtons
    int RecycleListView_paddingTopNoTitle -> RecycleListView_paddingTopNoTitle
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_android_descendantFocusability -> RecyclerView_android_descendantFocusability
    int RecyclerView_fastScrollEnabled -> RecyclerView_fastScrollEnabled
    int RecyclerView_fastScrollHorizontalThumbDrawable -> RecyclerView_fastScrollHorizontalThumbDrawable
    int RecyclerView_fastScrollHorizontalTrackDrawable -> RecyclerView_fastScrollHorizontalTrackDrawable
    int RecyclerView_fastScrollVerticalThumbDrawable -> RecyclerView_fastScrollVerticalThumbDrawable
    int RecyclerView_fastScrollVerticalTrackDrawable -> RecyclerView_fastScrollVerticalTrackDrawable
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    int[] ScrimInsetsFrameLayout -> ScrimInsetsFrameLayout
    int ScrimInsetsFrameLayout_insetForeground -> ScrimInsetsFrameLayout_insetForeground
    int[] ScrollingViewBehavior_Layout -> ScrollingViewBehavior_Layout
    int ScrollingViewBehavior_Layout_behavior_overlapTop -> ScrollingViewBehavior_Layout_behavior_overlapTop
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] SnackbarLayout -> SnackbarLayout
    int SnackbarLayout_android_maxWidth -> SnackbarLayout_android_maxWidth
    int SnackbarLayout_elevation -> SnackbarLayout_elevation
    int SnackbarLayout_maxActionInlineWidth -> SnackbarLayout_maxActionInlineWidth
    int[] Spinner -> Spinner
    int Spinner_android_entries -> Spinner_android_entries
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_popupTheme -> Spinner_popupTheme
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_thumbTint -> SwitchCompat_thumbTint
    int SwitchCompat_thumbTintMode -> SwitchCompat_thumbTintMode
    int SwitchCompat_track -> SwitchCompat_track
    int SwitchCompat_trackTint -> SwitchCompat_trackTint
    int SwitchCompat_trackTintMode -> SwitchCompat_trackTintMode
    int[] TabItem -> TabItem
    int TabItem_android_icon -> TabItem_android_icon
    int TabItem_android_layout -> TabItem_android_layout
    int TabItem_android_text -> TabItem_android_text
    int[] TabLayout -> TabLayout
    int TabLayout_tabBackground -> TabLayout_tabBackground
    int TabLayout_tabContentStart -> TabLayout_tabContentStart
    int TabLayout_tabGravity -> TabLayout_tabGravity
    int TabLayout_tabIndicatorColor -> TabLayout_tabIndicatorColor
    int TabLayout_tabIndicatorHeight -> TabLayout_tabIndicatorHeight
    int TabLayout_tabMaxWidth -> TabLayout_tabMaxWidth
    int TabLayout_tabMinWidth -> TabLayout_tabMinWidth
    int TabLayout_tabMode -> TabLayout_tabMode
    int TabLayout_tabPadding -> TabLayout_tabPadding
    int TabLayout_tabPaddingBottom -> TabLayout_tabPaddingBottom
    int TabLayout_tabPaddingEnd -> TabLayout_tabPaddingEnd
    int TabLayout_tabPaddingStart -> TabLayout_tabPaddingStart
    int TabLayout_tabPaddingTop -> TabLayout_tabPaddingTop
    int TabLayout_tabSelectedTextColor -> TabLayout_tabSelectedTextColor
    int TabLayout_tabTextAppearance -> TabLayout_tabTextAppearance
    int TabLayout_tabTextColor -> TabLayout_tabTextColor
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textColorHint -> TextAppearance_android_textColorHint
    int TextAppearance_android_textColorLink -> TextAppearance_android_textColorLink
    int TextAppearance_android_shadowColor -> TextAppearance_android_shadowColor
    int TextAppearance_android_shadowDx -> TextAppearance_android_shadowDx
    int TextAppearance_android_shadowDy -> TextAppearance_android_shadowDy
    int TextAppearance_android_shadowRadius -> TextAppearance_android_shadowRadius
    int TextAppearance_android_fontFamily -> TextAppearance_android_fontFamily
    int TextAppearance_fontFamily -> TextAppearance_fontFamily
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] TextInputLayout -> TextInputLayout
    int TextInputLayout_android_textColorHint -> TextInputLayout_android_textColorHint
    int TextInputLayout_android_hint -> TextInputLayout_android_hint
    int TextInputLayout_counterEnabled -> TextInputLayout_counterEnabled
    int TextInputLayout_counterMaxLength -> TextInputLayout_counterMaxLength
    int TextInputLayout_counterOverflowTextAppearance -> TextInputLayout_counterOverflowTextAppearance
    int TextInputLayout_counterTextAppearance -> TextInputLayout_counterTextAppearance
    int TextInputLayout_errorEnabled -> TextInputLayout_errorEnabled
    int TextInputLayout_errorTextAppearance -> TextInputLayout_errorTextAppearance
    int TextInputLayout_hintAnimationEnabled -> TextInputLayout_hintAnimationEnabled
    int TextInputLayout_hintEnabled -> TextInputLayout_hintEnabled
    int TextInputLayout_hintTextAppearance -> TextInputLayout_hintTextAppearance
    int TextInputLayout_passwordToggleContentDescription -> TextInputLayout_passwordToggleContentDescription
    int TextInputLayout_passwordToggleDrawable -> TextInputLayout_passwordToggleDrawable
    int TextInputLayout_passwordToggleEnabled -> TextInputLayout_passwordToggleEnabled
    int TextInputLayout_passwordToggleTint -> TextInputLayout_passwordToggleTint
    int TextInputLayout_passwordToggleTintMode -> TextInputLayout_passwordToggleTintMode
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_buttonGravity -> Toolbar_buttonGravity
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetEndWithActions -> Toolbar_contentInsetEndWithActions
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_contentInsetStartWithNavigation -> Toolbar_contentInsetStartWithNavigation
    int Toolbar_logo -> Toolbar_logo
    int Toolbar_logoDescription -> Toolbar_logoDescription
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_subtitleTextColor -> Toolbar_subtitleTextColor
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMargin -> Toolbar_titleMargin
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int Toolbar_titleTextColor -> Toolbar_titleTextColor
    int[] View -> View
    int View_android_theme -> View_android_theme
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int ViewBackgroundHelper_android_background -> ViewBackgroundHelper_android_background
    int ViewBackgroundHelper_backgroundTint -> ViewBackgroundHelper_backgroundTint
    int ViewBackgroundHelper_backgroundTintMode -> ViewBackgroundHelper_backgroundTintMode
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.design.internal.BaselineLayout -> android.support.design.internal.BaselineLayout:
    int mBaseline -> mBaseline
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getBaseline() -> getBaseline
android.support.design.internal.BottomNavigationItemView -> android.support.design.internal.BottomNavigationItemView:
    int INVALID_ITEM_POSITION -> INVALID_ITEM_POSITION
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    int mDefaultMargin -> mDefaultMargin
    int mShiftAmount -> mShiftAmount
    float mScaleUpFactor -> mScaleUpFactor
    float mScaleDownFactor -> mScaleDownFactor
    boolean mShiftingMode -> mShiftingMode
    android.widget.ImageView mIcon -> mIcon
    android.widget.TextView mSmallLabel -> mSmallLabel
    android.widget.TextView mLargeLabel -> mLargeLabel
    int mItemPosition -> mItemPosition
    android.support.v7.view.menu.MenuItemImpl mItemData -> mItemData
    android.content.res.ColorStateList mIconTint -> mIconTint
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
    void setItemPosition(int) -> setItemPosition
    int getItemPosition() -> getItemPosition
    void setShiftingMode(boolean) -> setShiftingMode
    android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    void setTitle(java.lang.CharSequence) -> setTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setEnabled(boolean) -> setEnabled
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
    void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    void setTextColor(android.content.res.ColorStateList) -> setTextColor
    void setItemBackground(int) -> setItemBackground
    void <clinit>() -> <clinit>
android.support.design.internal.BottomNavigationMenu -> android.support.design.internal.BottomNavigationMenu:
    int MAX_ITEM_COUNT -> MAX_ITEM_COUNT
    void <init>(android.content.Context) -> <init>
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
android.support.design.internal.BottomNavigationMenuView -> android.support.design.internal.BottomNavigationMenuView:
    long ACTIVE_ANIMATION_DURATION_MS -> ACTIVE_ANIMATION_DURATION_MS
    android.support.transition.TransitionSet mSet -> mSet
    int mInactiveItemMaxWidth -> mInactiveItemMaxWidth
    int mInactiveItemMinWidth -> mInactiveItemMinWidth
    int mActiveItemMaxWidth -> mActiveItemMaxWidth
    int mItemHeight -> mItemHeight
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    android.support.v4.util.Pools$Pool mItemPool -> mItemPool
    boolean mShiftingMode -> mShiftingMode
    android.support.design.internal.BottomNavigationItemView[] mButtons -> mButtons
    int mSelectedItemId -> mSelectedItemId
    int mSelectedItemPosition -> mSelectedItemPosition
    android.content.res.ColorStateList mItemIconTint -> mItemIconTint
    android.content.res.ColorStateList mItemTextColor -> mItemTextColor
    int mItemBackgroundRes -> mItemBackgroundRes
    int[] mTempChildWidths -> mTempChildWidths
    android.support.design.internal.BottomNavigationPresenter mPresenter -> mPresenter
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void initialize(android.support.v7.view.menu.MenuBuilder) -> initialize
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getWindowAnimations() -> getWindowAnimations
    void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    android.content.res.ColorStateList getIconTintList() -> getIconTintList
    void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    void setItemBackgroundRes(int) -> setItemBackgroundRes
    int getItemBackgroundRes() -> getItemBackgroundRes
    void setPresenter(android.support.design.internal.BottomNavigationPresenter) -> setPresenter
    void buildMenuView() -> buildMenuView
    void updateMenuView() -> updateMenuView
    android.support.design.internal.BottomNavigationItemView getNewItem() -> getNewItem
    int getSelectedItemId() -> getSelectedItemId
    void tryRestoreSelectedItemId(int) -> tryRestoreSelectedItemId
    android.support.design.internal.BottomNavigationPresenter access$000(android.support.design.internal.BottomNavigationMenuView) -> access$000
    android.support.v7.view.menu.MenuBuilder access$100(android.support.design.internal.BottomNavigationMenuView) -> access$100
android.support.design.internal.BottomNavigationMenuView$1 -> android.support.design.internal.BottomNavigationMenuView$1:
    android.support.design.internal.BottomNavigationMenuView this$0 -> this$0
    void <init>(android.support.design.internal.BottomNavigationMenuView) -> <init>
    void onClick(android.view.View) -> onClick
android.support.design.internal.BottomNavigationPresenter -> android.support.design.internal.BottomNavigationPresenter:
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.support.design.internal.BottomNavigationMenuView mMenuView -> mMenuView
    boolean mUpdateSuspended -> mUpdateSuspended
    int mId -> mId
    void <init>() -> <init>
    void setBottomNavigationMenuView(android.support.design.internal.BottomNavigationMenuView) -> setBottomNavigationMenuView
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    void setId(int) -> setId
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setUpdateSuspended(boolean) -> setUpdateSuspended
android.support.design.internal.BottomNavigationPresenter$SavedState -> android.support.design.internal.BottomNavigationPresenter$SavedState:
    int selectedItemId -> selectedItemId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.design.internal.BottomNavigationPresenter$SavedState$1 -> android.support.design.internal.BottomNavigationPresenter$SavedState$1:
    void <init>() -> <init>
    android.support.design.internal.BottomNavigationPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.design.internal.BottomNavigationPresenter$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.design.internal.ForegroundLinearLayout -> android.support.design.internal.ForegroundLinearLayout:
    android.graphics.drawable.Drawable mForeground -> mForeground
    android.graphics.Rect mSelfBounds -> mSelfBounds
    android.graphics.Rect mOverlayBounds -> mOverlayBounds
    int mForegroundGravity -> mForegroundGravity
    boolean mForegroundInPadding -> mForegroundInPadding
    boolean mForegroundBoundsChanged -> mForegroundBoundsChanged
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getForegroundGravity() -> getForegroundGravity
    void setForegroundGravity(int) -> setForegroundGravity
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void drawableStateChanged() -> drawableStateChanged
    void setForeground(android.graphics.drawable.Drawable) -> setForeground
    android.graphics.drawable.Drawable getForeground() -> getForeground
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void draw(android.graphics.Canvas) -> draw
    void drawableHotspotChanged(float,float) -> drawableHotspotChanged
android.support.design.internal.NavigationMenu -> android.support.design.internal.NavigationMenu:
    void <init>(android.content.Context) -> <init>
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
android.support.design.internal.NavigationMenuItemView -> android.support.design.internal.NavigationMenuItemView:
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    int mIconSize -> mIconSize
    boolean mNeedsEmptyIcon -> mNeedsEmptyIcon
    boolean mCheckable -> mCheckable
    android.widget.CheckedTextView mTextView -> mTextView
    android.widget.FrameLayout mActionArea -> mActionArea
    android.support.v7.view.menu.MenuItemImpl mItemData -> mItemData
    android.content.res.ColorStateList mIconTintList -> mIconTintList
    boolean mHasIconTintList -> mHasIconTintList
    android.graphics.drawable.Drawable mEmptyDrawable -> mEmptyDrawable
    android.support.v4.view.AccessibilityDelegateCompat mAccessibilityDelegate -> mAccessibilityDelegate
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
    boolean shouldExpandActionArea() -> shouldExpandActionArea
    void adjustAppearance() -> adjustAppearance
    void recycle() -> recycle
    void setActionView(android.view.View) -> setActionView
    android.graphics.drawable.StateListDrawable createDefaultBackground() -> createDefaultBackground
    android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    void setTitle(java.lang.CharSequence) -> setTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    void setTextAppearance(int) -> setTextAppearance
    void setTextColor(android.content.res.ColorStateList) -> setTextColor
    void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    void <clinit>() -> <clinit>
android.support.design.internal.NavigationMenuItemView$1 -> android.support.design.internal.NavigationMenuItemView$1:
    android.support.design.internal.NavigationMenuItemView this$0 -> this$0
    void <init>(android.support.design.internal.NavigationMenuItemView) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.design.internal.NavigationMenuPresenter -> android.support.design.internal.NavigationMenuPresenter:
    java.lang.String STATE_HIERARCHY -> STATE_HIERARCHY
    java.lang.String STATE_ADAPTER -> STATE_ADAPTER
    java.lang.String STATE_HEADER -> STATE_HEADER
    android.support.design.internal.NavigationMenuView mMenuView -> mMenuView
    android.widget.LinearLayout mHeaderLayout -> mHeaderLayout
    android.support.v7.view.menu.MenuPresenter$Callback mCallback -> mCallback
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    int mId -> mId
    android.support.design.internal.NavigationMenuPresenter$NavigationMenuAdapter mAdapter -> mAdapter
    android.view.LayoutInflater mLayoutInflater -> mLayoutInflater
    int mTextAppearance -> mTextAppearance
    boolean mTextAppearanceSet -> mTextAppearanceSet
    android.content.res.ColorStateList mTextColor -> mTextColor
    android.content.res.ColorStateList mIconTintList -> mIconTintList
    android.graphics.drawable.Drawable mItemBackground -> mItemBackground
    int mPaddingTopDefault -> mPaddingTopDefault
    int mPaddingSeparator -> mPaddingSeparator
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    void <init>() -> <init>
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    void setId(int) -> setId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setCheckedItem(android.support.v7.view.menu.MenuItemImpl) -> setCheckedItem
    android.view.View inflateHeaderView(int) -> inflateHeaderView
    void addHeaderView(android.view.View) -> addHeaderView
    void removeHeaderView(android.view.View) -> removeHeaderView
    int getHeaderCount() -> getHeaderCount
    android.view.View getHeaderView(int) -> getHeaderView
    android.content.res.ColorStateList getItemTintList() -> getItemTintList
    void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    void setItemTextAppearance(int) -> setItemTextAppearance
    android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    void setUpdateSuspended(boolean) -> setUpdateSuspended
    void dispatchApplyWindowInsets(android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
android.support.design.internal.NavigationMenuPresenter$1 -> android.support.design.internal.NavigationMenuPresenter$1:
    android.support.design.internal.NavigationMenuPresenter this$0 -> this$0
    void <init>(android.support.design.internal.NavigationMenuPresenter) -> <init>
    void onClick(android.view.View) -> onClick
android.support.design.internal.NavigationMenuPresenter$HeaderViewHolder -> android.support.design.internal.NavigationMenuPresenter$HeaderViewHolder:
    void <init>(android.view.View) -> <init>
android.support.design.internal.NavigationMenuPresenter$NavigationMenuAdapter -> android.support.design.internal.NavigationMenuPresenter$NavigationMenuAdapter:
    java.lang.String STATE_CHECKED_ITEM -> STATE_CHECKED_ITEM
    java.lang.String STATE_ACTION_VIEWS -> STATE_ACTION_VIEWS
    int VIEW_TYPE_NORMAL -> VIEW_TYPE_NORMAL
    int VIEW_TYPE_SUBHEADER -> VIEW_TYPE_SUBHEADER
    int VIEW_TYPE_SEPARATOR -> VIEW_TYPE_SEPARATOR
    int VIEW_TYPE_HEADER -> VIEW_TYPE_HEADER
    java.util.ArrayList mItems -> mItems
    android.support.v7.view.menu.MenuItemImpl mCheckedItem -> mCheckedItem
    boolean mUpdateSuspended -> mUpdateSuspended
    android.support.design.internal.NavigationMenuPresenter this$0 -> this$0
    void <init>(android.support.design.internal.NavigationMenuPresenter) -> <init>
    long getItemId(int) -> getItemId
    int getItemCount() -> getItemCount
    int getItemViewType(int) -> getItemViewType
    android.support.design.internal.NavigationMenuPresenter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void onBindViewHolder(android.support.design.internal.NavigationMenuPresenter$ViewHolder,int) -> onBindViewHolder
    void onViewRecycled(android.support.design.internal.NavigationMenuPresenter$ViewHolder) -> onViewRecycled
    void update() -> update
    void prepareMenuItems() -> prepareMenuItems
    void appendTransparentIconIfMissing(int,int) -> appendTransparentIconIfMissing
    void setCheckedItem(android.support.v7.view.menu.MenuItemImpl) -> setCheckedItem
    android.os.Bundle createInstanceState() -> createInstanceState
    void restoreInstanceState(android.os.Bundle) -> restoreInstanceState
    void setUpdateSuspended(boolean) -> setUpdateSuspended
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewRecycled
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
android.support.design.internal.NavigationMenuPresenter$NavigationMenuHeaderItem -> android.support.design.internal.NavigationMenuPresenter$NavigationMenuHeaderItem:
    void <init>() -> <init>
android.support.design.internal.NavigationMenuPresenter$NavigationMenuItem -> android.support.design.internal.NavigationMenuPresenter$NavigationMenuItem:
android.support.design.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem -> android.support.design.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem:
    int mPaddingTop -> mPaddingTop
    int mPaddingBottom -> mPaddingBottom
    void <init>(int,int) -> <init>
    int getPaddingTop() -> getPaddingTop
    int getPaddingBottom() -> getPaddingBottom
android.support.design.internal.NavigationMenuPresenter$NavigationMenuTextItem -> android.support.design.internal.NavigationMenuPresenter$NavigationMenuTextItem:
    android.support.v7.view.menu.MenuItemImpl mMenuItem -> mMenuItem
    boolean needsEmptyIcon -> needsEmptyIcon
    void <init>(android.support.v7.view.menu.MenuItemImpl) -> <init>
    android.support.v7.view.menu.MenuItemImpl getMenuItem() -> getMenuItem
android.support.design.internal.NavigationMenuPresenter$NormalViewHolder -> android.support.design.internal.NavigationMenuPresenter$NormalViewHolder:
    void <init>(android.view.LayoutInflater,android.view.ViewGroup,android.view.View$OnClickListener) -> <init>
android.support.design.internal.NavigationMenuPresenter$SeparatorViewHolder -> android.support.design.internal.NavigationMenuPresenter$SeparatorViewHolder:
    void <init>(android.view.LayoutInflater,android.view.ViewGroup) -> <init>
android.support.design.internal.NavigationMenuPresenter$SubheaderViewHolder -> android.support.design.internal.NavigationMenuPresenter$SubheaderViewHolder:
    void <init>(android.view.LayoutInflater,android.view.ViewGroup) -> <init>
android.support.design.internal.NavigationMenuPresenter$ViewHolder -> android.support.design.internal.NavigationMenuPresenter$ViewHolder:
    void <init>(android.view.View) -> <init>
android.support.design.internal.NavigationMenuView -> android.support.design.internal.NavigationMenuView:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void initialize(android.support.v7.view.menu.MenuBuilder) -> initialize
    int getWindowAnimations() -> getWindowAnimations
android.support.design.internal.NavigationSubMenu -> android.support.design.internal.NavigationSubMenu:
    void <init>(android.content.Context,android.support.design.internal.NavigationMenu,android.support.v7.view.menu.MenuItemImpl) -> <init>
    void onItemsChanged(boolean) -> onItemsChanged
android.support.design.internal.ParcelableSparseArray -> android.support.design.internal.ParcelableSparseArray:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.design.internal.ParcelableSparseArray$1 -> android.support.design.internal.ParcelableSparseArray$1:
    void <init>() -> <init>
    android.support.design.internal.ParcelableSparseArray createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.design.internal.ParcelableSparseArray createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.design.internal.ParcelableSparseArray[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.design.internal.ScrimInsetsFrameLayout -> android.support.design.internal.ScrimInsetsFrameLayout:
    android.graphics.drawable.Drawable mInsetForeground -> mInsetForeground
    android.graphics.Rect mInsets -> mInsets
    android.graphics.Rect mTempRect -> mTempRect
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void draw(android.graphics.Canvas) -> draw
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInsetsChanged(android.support.v4.view.WindowInsetsCompat) -> onInsetsChanged
android.support.design.internal.ScrimInsetsFrameLayout$1 -> android.support.design.internal.ScrimInsetsFrameLayout$1:
    android.support.design.internal.ScrimInsetsFrameLayout this$0 -> this$0
    void <init>(android.support.design.internal.ScrimInsetsFrameLayout) -> <init>
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.design.internal.SnackbarContentLayout -> android.support.design.internal.SnackbarContentLayout:
    android.widget.TextView mMessageView -> mMessageView
    android.widget.Button mActionView -> mActionView
    int mMaxWidth -> mMaxWidth
    int mMaxInlineActionWidth -> mMaxInlineActionWidth
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onFinishInflate() -> onFinishInflate
    android.widget.TextView getMessageView() -> getMessageView
    android.widget.Button getActionView() -> getActionView
    void onMeasure(int,int) -> onMeasure
    boolean updateViewsWithinLayout(int,int,int) -> updateViewsWithinLayout
    void updateTopBottomPadding(android.view.View,int,int) -> updateTopBottomPadding
    void animateContentIn(int,int) -> animateContentIn
    void animateContentOut(int,int) -> animateContentOut
android.support.design.internal.TextScale -> android.support.design.internal.TextScale:
    java.lang.String PROPNAME_SCALE -> PROPNAME_SCALE
    void <init>() -> <init>
    void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    void captureValues(android.support.transition.TransitionValues) -> captureValues
    android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> createAnimator
android.support.design.internal.TextScale$1 -> android.support.design.internal.TextScale$1:
    android.widget.TextView val$view -> val$view
    android.support.design.internal.TextScale this$0 -> this$0
    void <init>(android.support.design.internal.TextScale,android.widget.TextView) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.internal.package-info -> android.support.design.internal.package-info:
android.support.design.widget.AnimationUtils -> android.support.design.widget.AnimationUtils:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> LINEAR_INTERPOLATOR
    android.view.animation.Interpolator FAST_OUT_SLOW_IN_INTERPOLATOR -> FAST_OUT_SLOW_IN_INTERPOLATOR
    android.view.animation.Interpolator FAST_OUT_LINEAR_IN_INTERPOLATOR -> FAST_OUT_LINEAR_IN_INTERPOLATOR
    android.view.animation.Interpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR -> LINEAR_OUT_SLOW_IN_INTERPOLATOR
    android.view.animation.Interpolator DECELERATE_INTERPOLATOR -> DECELERATE_INTERPOLATOR
    void <init>() -> <init>
    float lerp(float,float,float) -> lerp
    int lerp(int,int,float) -> lerp
    void <clinit>() -> <clinit>
android.support.design.widget.AppBarLayout -> android.support.design.widget.AppBarLayout:
    int PENDING_ACTION_NONE -> PENDING_ACTION_NONE
    int PENDING_ACTION_EXPANDED -> PENDING_ACTION_EXPANDED
    int PENDING_ACTION_COLLAPSED -> PENDING_ACTION_COLLAPSED
    int PENDING_ACTION_ANIMATE_ENABLED -> PENDING_ACTION_ANIMATE_ENABLED
    int PENDING_ACTION_FORCE -> PENDING_ACTION_FORCE
    int INVALID_SCROLL_RANGE -> INVALID_SCROLL_RANGE
    int mTotalScrollRange -> mTotalScrollRange
    int mDownPreScrollRange -> mDownPreScrollRange
    int mDownScrollRange -> mDownScrollRange
    boolean mHaveChildWithInterpolator -> mHaveChildWithInterpolator
    int mPendingAction -> mPendingAction
    android.support.v4.view.WindowInsetsCompat mLastInsets -> mLastInsets
    java.util.List mListeners -> mListeners
    boolean mCollapsible -> mCollapsible
    boolean mCollapsed -> mCollapsed
    int[] mTmpStatesArray -> mTmpStatesArray
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void addOnOffsetChangedListener(android.support.design.widget.AppBarLayout$OnOffsetChangedListener) -> addOnOffsetChangedListener
    void removeOnOffsetChangedListener(android.support.design.widget.AppBarLayout$OnOffsetChangedListener) -> removeOnOffsetChangedListener
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void updateCollapsible() -> updateCollapsible
    void invalidateScrollRanges() -> invalidateScrollRanges
    void setOrientation(int) -> setOrientation
    void setExpanded(boolean) -> setExpanded
    void setExpanded(boolean,boolean) -> setExpanded
    void setExpanded(boolean,boolean,boolean) -> setExpanded
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.design.widget.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean hasChildWithInterpolator() -> hasChildWithInterpolator
    int getTotalScrollRange() -> getTotalScrollRange
    boolean hasScrollableChildren() -> hasScrollableChildren
    int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    int getDownNestedScrollRange() -> getDownNestedScrollRange
    void dispatchOffsetUpdates(int) -> dispatchOffsetUpdates
    int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    boolean setCollapsibleState(boolean) -> setCollapsibleState
    boolean setCollapsedState(boolean) -> setCollapsedState
    void setTargetElevation(float) -> setTargetElevation
    float getTargetElevation() -> getTargetElevation
    int getPendingAction() -> getPendingAction
    void resetPendingAction() -> resetPendingAction
    int getTopInset() -> getTopInset
    android.support.v4.view.WindowInsetsCompat onWindowInsetChanged(android.support.v4.view.WindowInsetsCompat) -> onWindowInsetChanged
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.design.widget.AppBarLayout$1 -> android.support.design.widget.AppBarLayout$1:
    android.support.design.widget.AppBarLayout this$0 -> this$0
    void <init>(android.support.design.widget.AppBarLayout) -> <init>
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.design.widget.AppBarLayout$Behavior -> android.support.design.widget.AppBarLayout$Behavior:
    int MAX_OFFSET_ANIMATION_DURATION -> MAX_OFFSET_ANIMATION_DURATION
    int INVALID_POSITION -> INVALID_POSITION
    int mOffsetDelta -> mOffsetDelta
    android.animation.ValueAnimator mOffsetAnimator -> mOffsetAnimator
    int mOffsetToChildIndexOnLayout -> mOffsetToChildIndexOnLayout
    boolean mOffsetToChildIndexOnLayoutIsMinHeight -> mOffsetToChildIndexOnLayoutIsMinHeight
    float mOffsetToChildIndexOnLayoutPerc -> mOffsetToChildIndexOnLayoutPerc
    java.lang.ref.WeakReference mLastNestedScrollingChildRef -> mLastNestedScrollingChildRef
    android.support.design.widget.AppBarLayout$Behavior$DragCallback mOnDragCallback -> mOnDragCallback
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int,int,int) -> onNestedScroll
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    void setDragCallback(android.support.design.widget.AppBarLayout$Behavior$DragCallback) -> setDragCallback
    void animateOffsetTo(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,float) -> animateOffsetTo
    void animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int) -> animateOffsetWithDuration
    int getChildIndexOnOffset(android.support.design.widget.AppBarLayout,int) -> getChildIndexOnOffset
    void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> snapToChildIfNeeded
    boolean checkFlag(int,int) -> checkFlag
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int,int) -> onMeasureChild
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int) -> onLayoutChild
    boolean canDragView(android.support.design.widget.AppBarLayout) -> canDragView
    void onFlingFinished(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> onFlingFinished
    int getMaxDragOffset(android.support.design.widget.AppBarLayout) -> getMaxDragOffset
    int getScrollRangeForDragFling(android.support.design.widget.AppBarLayout) -> getScrollRangeForDragFling
    int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int) -> setHeaderTopBottomOffset
    boolean isOffsetAnimatorRunning() -> isOffsetAnimatorRunning
    int interpolateOffset(android.support.design.widget.AppBarLayout,int) -> interpolateOffset
    void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean) -> updateAppBarLayoutDrawableState
    boolean shouldJumpElevationState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> shouldJumpElevationState
    android.view.View getAppBarChildOnOffset(android.support.design.widget.AppBarLayout,int) -> getAppBarChildOnOffset
    int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> onSaveInstanceState
    void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    boolean canDragView(android.view.View) -> canDragView
    void onFlingFinished(android.support.design.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    int getLeftAndRightOffset() -> getLeftAndRightOffset
    int getTopAndBottomOffset() -> getTopAndBottomOffset
    boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    int access$000(android.support.design.widget.AppBarLayout$Behavior) -> access$000
android.support.design.widget.AppBarLayout$Behavior$1 -> android.support.design.widget.AppBarLayout$Behavior$1:
    android.support.design.widget.CoordinatorLayout val$coordinatorLayout -> val$coordinatorLayout
    android.support.design.widget.AppBarLayout val$child -> val$child
    android.support.design.widget.AppBarLayout$Behavior this$0 -> this$0
    void <init>(android.support.design.widget.AppBarLayout$Behavior,android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.AppBarLayout$Behavior$DragCallback -> android.support.design.widget.AppBarLayout$Behavior$DragCallback:
    void <init>() -> <init>
    boolean canDrag(android.support.design.widget.AppBarLayout) -> canDrag
android.support.design.widget.AppBarLayout$Behavior$SavedState -> android.support.design.widget.AppBarLayout$Behavior$SavedState:
    int firstVisibleChildIndex -> firstVisibleChildIndex
    float firstVisibleChildPercentageShown -> firstVisibleChildPercentageShown
    boolean firstVisibleChildAtMinimumHeight -> firstVisibleChildAtMinimumHeight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.design.widget.AppBarLayout$Behavior$SavedState$1 -> android.support.design.widget.AppBarLayout$Behavior$SavedState$1:
    void <init>() -> <init>
    android.support.design.widget.AppBarLayout$Behavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.design.widget.AppBarLayout$Behavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.design.widget.AppBarLayout$Behavior$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.design.widget.AppBarLayout$LayoutParams -> android.support.design.widget.AppBarLayout$LayoutParams:
    int SCROLL_FLAG_SCROLL -> SCROLL_FLAG_SCROLL
    int SCROLL_FLAG_EXIT_UNTIL_COLLAPSED -> SCROLL_FLAG_EXIT_UNTIL_COLLAPSED
    int SCROLL_FLAG_ENTER_ALWAYS -> SCROLL_FLAG_ENTER_ALWAYS
    int SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED -> SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED
    int SCROLL_FLAG_SNAP -> SCROLL_FLAG_SNAP
    int FLAG_QUICK_RETURN -> FLAG_QUICK_RETURN
    int FLAG_SNAP -> FLAG_SNAP
    int COLLAPSIBLE_FLAGS -> COLLAPSIBLE_FLAGS
    int mScrollFlags -> mScrollFlags
    android.view.animation.Interpolator mScrollInterpolator -> mScrollInterpolator
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(int,int,float) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    void <init>(android.support.design.widget.AppBarLayout$LayoutParams) -> <init>
    void setScrollFlags(int) -> setScrollFlags
    int getScrollFlags() -> getScrollFlags
    void setScrollInterpolator(android.view.animation.Interpolator) -> setScrollInterpolator
    android.view.animation.Interpolator getScrollInterpolator() -> getScrollInterpolator
    boolean isCollapsible() -> isCollapsible
android.support.design.widget.AppBarLayout$LayoutParams$ScrollFlags -> android.support.design.widget.AppBarLayout$LayoutParams$ScrollFlags:
android.support.design.widget.AppBarLayout$OnOffsetChangedListener -> android.support.design.widget.AppBarLayout$OnOffsetChangedListener:
    void onOffsetChanged(android.support.design.widget.AppBarLayout,int) -> onOffsetChanged
android.support.design.widget.AppBarLayout$ScrollingViewBehavior -> android.support.design.widget.AppBarLayout$ScrollingViewBehavior:
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    boolean onRequestChildRectangleOnScreen(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    void offsetChildAsNeeded(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> offsetChildAsNeeded
    float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    int getAppBarLayoutOffset(android.support.design.widget.AppBarLayout) -> getAppBarLayoutOffset
    android.support.design.widget.AppBarLayout findFirstDependency(java.util.List) -> findFirstDependency
    int getScrollRange(android.view.View) -> getScrollRange
    android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    int getLeftAndRightOffset() -> getLeftAndRightOffset
    int getTopAndBottomOffset() -> getTopAndBottomOffset
    boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
android.support.design.widget.BaseTransientBottomBar -> android.support.design.widget.BaseTransientBottomBar:
    int LENGTH_INDEFINITE -> LENGTH_INDEFINITE
    int LENGTH_SHORT -> LENGTH_SHORT
    int LENGTH_LONG -> LENGTH_LONG
    int ANIMATION_DURATION -> ANIMATION_DURATION
    int ANIMATION_FADE_DURATION -> ANIMATION_FADE_DURATION
    android.os.Handler sHandler -> sHandler
    int MSG_SHOW -> MSG_SHOW
    int MSG_DISMISS -> MSG_DISMISS
    boolean USE_OFFSET_API -> USE_OFFSET_API
    android.view.ViewGroup mTargetParent -> mTargetParent
    android.content.Context mContext -> mContext
    android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout mView -> mView
    android.support.design.widget.BaseTransientBottomBar$ContentViewCallback mContentViewCallback -> mContentViewCallback
    int mDuration -> mDuration
    java.util.List mCallbacks -> mCallbacks
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    android.support.design.widget.SnackbarManager$Callback mManagerCallback -> mManagerCallback
    void <init>(android.view.ViewGroup,android.view.View,android.support.design.widget.BaseTransientBottomBar$ContentViewCallback) -> <init>
    android.support.design.widget.BaseTransientBottomBar setDuration(int) -> setDuration
    int getDuration() -> getDuration
    android.content.Context getContext() -> getContext
    android.view.View getView() -> getView
    void show() -> show
    void dismiss() -> dismiss
    void dispatchDismiss(int) -> dispatchDismiss
    android.support.design.widget.BaseTransientBottomBar addCallback(android.support.design.widget.BaseTransientBottomBar$BaseCallback) -> addCallback
    android.support.design.widget.BaseTransientBottomBar removeCallback(android.support.design.widget.BaseTransientBottomBar$BaseCallback) -> removeCallback
    boolean isShown() -> isShown
    boolean isShownOrQueued() -> isShownOrQueued
    void showView() -> showView
    void animateViewIn() -> animateViewIn
    void animateViewOut(int) -> animateViewOut
    void hideView(int) -> hideView
    void onViewShown() -> onViewShown
    void onViewHidden(int) -> onViewHidden
    boolean shouldAnimate() -> shouldAnimate
    android.support.design.widget.BaseTransientBottomBar$ContentViewCallback access$000(android.support.design.widget.BaseTransientBottomBar) -> access$000
    boolean access$100() -> access$100
    void <clinit>() -> <clinit>
android.support.design.widget.BaseTransientBottomBar$1 -> android.support.design.widget.BaseTransientBottomBar$1:
    void <init>() -> <init>
    boolean handleMessage(android.os.Message) -> handleMessage
android.support.design.widget.BaseTransientBottomBar$10 -> android.support.design.widget.BaseTransientBottomBar$10:
    int val$event -> val$event
    android.support.design.widget.BaseTransientBottomBar this$0 -> this$0
    void <init>(android.support.design.widget.BaseTransientBottomBar,int) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.widget.BaseTransientBottomBar$11 -> android.support.design.widget.BaseTransientBottomBar$11:
    int mPreviousAnimatedIntValue -> mPreviousAnimatedIntValue
    android.support.design.widget.BaseTransientBottomBar this$0 -> this$0
    void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.BaseTransientBottomBar$12 -> android.support.design.widget.BaseTransientBottomBar$12:
    int val$event -> val$event
    android.support.design.widget.BaseTransientBottomBar this$0 -> this$0
    void <init>(android.support.design.widget.BaseTransientBottomBar,int) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.design.widget.BaseTransientBottomBar$2 -> android.support.design.widget.BaseTransientBottomBar$2:
    android.support.design.widget.BaseTransientBottomBar this$0 -> this$0
    void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.design.widget.BaseTransientBottomBar$3 -> android.support.design.widget.BaseTransientBottomBar$3:
    android.support.design.widget.BaseTransientBottomBar this$0 -> this$0
    void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    void show() -> show
    void dismiss(int) -> dismiss
android.support.design.widget.BaseTransientBottomBar$4 -> android.support.design.widget.BaseTransientBottomBar$4:
    android.support.design.widget.BaseTransientBottomBar this$0 -> this$0
    void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    void onDismiss(android.view.View) -> onDismiss
    void onDragStateChanged(int) -> onDragStateChanged
android.support.design.widget.BaseTransientBottomBar$5 -> android.support.design.widget.BaseTransientBottomBar$5:
    android.support.design.widget.BaseTransientBottomBar this$0 -> this$0
    void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.design.widget.BaseTransientBottomBar$5$1 -> android.support.design.widget.BaseTransientBottomBar$5$1:
    android.support.design.widget.BaseTransientBottomBar$5 this$1 -> this$1
    void <init>(android.support.design.widget.BaseTransientBottomBar$5) -> <init>
    void run() -> run
android.support.design.widget.BaseTransientBottomBar$6 -> android.support.design.widget.BaseTransientBottomBar$6:
    android.support.design.widget.BaseTransientBottomBar this$0 -> this$0
    void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    void onLayoutChange(android.view.View,int,int,int,int) -> onLayoutChange
android.support.design.widget.BaseTransientBottomBar$7 -> android.support.design.widget.BaseTransientBottomBar$7:
    android.support.design.widget.BaseTransientBottomBar this$0 -> this$0
    void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.widget.BaseTransientBottomBar$8 -> android.support.design.widget.BaseTransientBottomBar$8:
    int mPreviousAnimatedIntValue -> mPreviousAnimatedIntValue
    int val$viewHeight -> val$viewHeight
    android.support.design.widget.BaseTransientBottomBar this$0 -> this$0
    void <init>(android.support.design.widget.BaseTransientBottomBar,int) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.BaseTransientBottomBar$9 -> android.support.design.widget.BaseTransientBottomBar$9:
    android.support.design.widget.BaseTransientBottomBar this$0 -> this$0
    void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.design.widget.BaseTransientBottomBar$BaseCallback -> android.support.design.widget.BaseTransientBottomBar$BaseCallback:
    int DISMISS_EVENT_SWIPE -> DISMISS_EVENT_SWIPE
    int DISMISS_EVENT_ACTION -> DISMISS_EVENT_ACTION
    int DISMISS_EVENT_TIMEOUT -> DISMISS_EVENT_TIMEOUT
    int DISMISS_EVENT_MANUAL -> DISMISS_EVENT_MANUAL
    int DISMISS_EVENT_CONSECUTIVE -> DISMISS_EVENT_CONSECUTIVE
    void <init>() -> <init>
    void onDismissed(java.lang.Object,int) -> onDismissed
    void onShown(java.lang.Object) -> onShown
android.support.design.widget.BaseTransientBottomBar$BaseCallback$DismissEvent -> android.support.design.widget.BaseTransientBottomBar$BaseCallback$DismissEvent:
android.support.design.widget.BaseTransientBottomBar$Behavior -> android.support.design.widget.BaseTransientBottomBar$Behavior:
    android.support.design.widget.BaseTransientBottomBar this$0 -> this$0
    void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout,android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
android.support.design.widget.BaseTransientBottomBar$ContentViewCallback -> android.support.design.widget.BaseTransientBottomBar$ContentViewCallback:
    void animateContentIn(int,int) -> animateContentIn
    void animateContentOut(int,int) -> animateContentOut
android.support.design.widget.BaseTransientBottomBar$Duration -> android.support.design.widget.BaseTransientBottomBar$Duration:
android.support.design.widget.BaseTransientBottomBar$OnAttachStateChangeListener -> android.support.design.widget.BaseTransientBottomBar$OnAttachStateChangeListener:
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.design.widget.BaseTransientBottomBar$OnLayoutChangeListener -> android.support.design.widget.BaseTransientBottomBar$OnLayoutChangeListener:
    void onLayoutChange(android.view.View,int,int,int,int) -> onLayoutChange
android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout -> android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout:
    android.support.design.widget.BaseTransientBottomBar$OnLayoutChangeListener mOnLayoutChangeListener -> mOnLayoutChangeListener
    android.support.design.widget.BaseTransientBottomBar$OnAttachStateChangeListener mOnAttachStateChangeListener -> mOnAttachStateChangeListener
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnLayoutChangeListener(android.support.design.widget.BaseTransientBottomBar$OnLayoutChangeListener) -> setOnLayoutChangeListener
    void setOnAttachStateChangeListener(android.support.design.widget.BaseTransientBottomBar$OnAttachStateChangeListener) -> setOnAttachStateChangeListener
android.support.design.widget.BottomNavigationView -> android.support.design.widget.BottomNavigationView:
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    int[] DISABLED_STATE_SET -> DISABLED_STATE_SET
    int MENU_PRESENTER_ID -> MENU_PRESENTER_ID
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.support.design.internal.BottomNavigationMenuView mMenuView -> mMenuView
    android.support.design.internal.BottomNavigationPresenter mPresenter -> mPresenter
    android.view.MenuInflater mMenuInflater -> mMenuInflater
    android.support.design.widget.BottomNavigationView$OnNavigationItemSelectedListener mSelectedListener -> mSelectedListener
    android.support.design.widget.BottomNavigationView$OnNavigationItemReselectedListener mReselectedListener -> mReselectedListener
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setOnNavigationItemSelectedListener(android.support.design.widget.BottomNavigationView$OnNavigationItemSelectedListener) -> setOnNavigationItemSelectedListener
    void setOnNavigationItemReselectedListener(android.support.design.widget.BottomNavigationView$OnNavigationItemReselectedListener) -> setOnNavigationItemReselectedListener
    android.view.Menu getMenu() -> getMenu
    void inflateMenu(int) -> inflateMenu
    int getMaxItemCount() -> getMaxItemCount
    android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    int getItemBackgroundResource() -> getItemBackgroundResource
    void setItemBackgroundResource(int) -> setItemBackgroundResource
    int getSelectedItemId() -> getSelectedItemId
    void setSelectedItemId(int) -> setSelectedItemId
    void addCompatibilityTopDivider(android.content.Context) -> addCompatibilityTopDivider
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    android.content.res.ColorStateList createDefaultColorStateList(int) -> createDefaultColorStateList
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.support.design.widget.BottomNavigationView$OnNavigationItemReselectedListener access$000(android.support.design.widget.BottomNavigationView) -> access$000
    android.support.design.widget.BottomNavigationView$OnNavigationItemSelectedListener access$100(android.support.design.widget.BottomNavigationView) -> access$100
    void <clinit>() -> <clinit>
android.support.design.widget.BottomNavigationView$1 -> android.support.design.widget.BottomNavigationView$1:
    android.support.design.widget.BottomNavigationView this$0 -> this$0
    void <init>(android.support.design.widget.BottomNavigationView) -> <init>
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
android.support.design.widget.BottomNavigationView$OnNavigationItemReselectedListener -> android.support.design.widget.BottomNavigationView$OnNavigationItemReselectedListener:
    void onNavigationItemReselected(android.view.MenuItem) -> onNavigationItemReselected
android.support.design.widget.BottomNavigationView$OnNavigationItemSelectedListener -> android.support.design.widget.BottomNavigationView$OnNavigationItemSelectedListener:
    boolean onNavigationItemSelected(android.view.MenuItem) -> onNavigationItemSelected
android.support.design.widget.BottomNavigationView$SavedState -> android.support.design.widget.BottomNavigationView$SavedState:
    android.os.Bundle menuPresenterState -> menuPresenterState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    void <clinit>() -> <clinit>
android.support.design.widget.BottomNavigationView$SavedState$1 -> android.support.design.widget.BottomNavigationView$SavedState$1:
    void <init>() -> <init>
    android.support.design.widget.BottomNavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.design.widget.BottomNavigationView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.design.widget.BottomNavigationView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.design.widget.BottomSheetBehavior -> android.support.design.widget.BottomSheetBehavior:
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int STATE_EXPANDED -> STATE_EXPANDED
    int STATE_COLLAPSED -> STATE_COLLAPSED
    int STATE_HIDDEN -> STATE_HIDDEN
    int PEEK_HEIGHT_AUTO -> PEEK_HEIGHT_AUTO
    float HIDE_THRESHOLD -> HIDE_THRESHOLD
    float HIDE_FRICTION -> HIDE_FRICTION
    float mMaximumVelocity -> mMaximumVelocity
    int mPeekHeight -> mPeekHeight
    boolean mPeekHeightAuto -> mPeekHeightAuto
    int mPeekHeightMin -> mPeekHeightMin
    int mMinOffset -> mMinOffset
    int mMaxOffset -> mMaxOffset
    boolean mHideable -> mHideable
    boolean mSkipCollapsed -> mSkipCollapsed
    int mState -> mState
    android.support.v4.widget.ViewDragHelper mViewDragHelper -> mViewDragHelper
    boolean mIgnoreEvents -> mIgnoreEvents
    int mLastNestedScrollDy -> mLastNestedScrollDy
    boolean mNestedScrolled -> mNestedScrolled
    int mParentHeight -> mParentHeight
    java.lang.ref.WeakReference mViewRef -> mViewRef
    java.lang.ref.WeakReference mNestedScrollingChildRef -> mNestedScrollingChildRef
    android.support.design.widget.BottomSheetBehavior$BottomSheetCallback mCallback -> mCallback
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mActivePointerId -> mActivePointerId
    int mInitialY -> mInitialY
    boolean mTouchingScrollingChild -> mTouchingScrollingChild
    android.support.v4.widget.ViewDragHelper$Callback mDragCallback -> mDragCallback
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> onNestedPreScroll
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onStopNestedScroll
    boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    void setPeekHeight(int) -> setPeekHeight
    int getPeekHeight() -> getPeekHeight
    void setHideable(boolean) -> setHideable
    boolean isHideable() -> isHideable
    void setSkipCollapsed(boolean) -> setSkipCollapsed
    boolean getSkipCollapsed() -> getSkipCollapsed
    void setBottomSheetCallback(android.support.design.widget.BottomSheetBehavior$BottomSheetCallback) -> setBottomSheetCallback
    void setState(int) -> setState
    int getState() -> getState
    void setStateInternal(int) -> setStateInternal
    void reset() -> reset
    boolean shouldHide(android.view.View,float) -> shouldHide
    android.view.View findScrollingChild(android.view.View) -> findScrollingChild
    float getYVelocity() -> getYVelocity
    void startSettlingAnimation(android.view.View,int) -> startSettlingAnimation
    void dispatchOnSlide(int) -> dispatchOnSlide
    int getPeekHeightMin() -> getPeekHeightMin
    android.support.design.widget.BottomSheetBehavior from(android.view.View) -> from
android.support.design.widget.BottomSheetBehavior$1 -> android.support.design.widget.BottomSheetBehavior$1:
    android.view.View val$child -> val$child
    int val$state -> val$state
    android.support.design.widget.BottomSheetBehavior this$0 -> this$0
    void <init>(android.support.design.widget.BottomSheetBehavior,android.view.View,int) -> <init>
    void run() -> run
android.support.design.widget.BottomSheetBehavior$2 -> android.support.design.widget.BottomSheetBehavior$2:
    android.support.design.widget.BottomSheetBehavior this$0 -> this$0
    void <init>(android.support.design.widget.BottomSheetBehavior) -> <init>
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
android.support.design.widget.BottomSheetBehavior$BottomSheetCallback -> android.support.design.widget.BottomSheetBehavior$BottomSheetCallback:
    void <init>() -> <init>
    void onStateChanged(android.view.View,int) -> onStateChanged
    void onSlide(android.view.View,float) -> onSlide
android.support.design.widget.BottomSheetBehavior$SavedState -> android.support.design.widget.BottomSheetBehavior$SavedState:
    int state -> state
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable,int) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.design.widget.BottomSheetBehavior$SavedState$1 -> android.support.design.widget.BottomSheetBehavior$SavedState$1:
    void <init>() -> <init>
    android.support.design.widget.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.design.widget.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.design.widget.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.design.widget.BottomSheetBehavior$SettleRunnable -> android.support.design.widget.BottomSheetBehavior$SettleRunnable:
    android.view.View mView -> mView
    int mTargetState -> mTargetState
    android.support.design.widget.BottomSheetBehavior this$0 -> this$0
    void <init>(android.support.design.widget.BottomSheetBehavior,android.view.View,int) -> <init>
    void run() -> run
android.support.design.widget.BottomSheetBehavior$State -> android.support.design.widget.BottomSheetBehavior$State:
android.support.design.widget.BottomSheetDialog -> android.support.design.widget.BottomSheetDialog:
    android.support.design.widget.BottomSheetBehavior mBehavior -> mBehavior
    boolean mCancelable -> mCancelable
    boolean mCanceledOnTouchOutside -> mCanceledOnTouchOutside
    boolean mCanceledOnTouchOutsideSet -> mCanceledOnTouchOutsideSet
    android.support.design.widget.BottomSheetBehavior$BottomSheetCallback mBottomSheetCallback -> mBottomSheetCallback
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,int) -> <init>
    void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    void setContentView(int) -> setContentView
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setCancelable(boolean) -> setCancelable
    void onStart() -> onStart
    void setCanceledOnTouchOutside(boolean) -> setCanceledOnTouchOutside
    android.view.View wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams) -> wrapInBottomSheet
    boolean shouldWindowCloseOnTouchOutside() -> shouldWindowCloseOnTouchOutside
    int getThemeResId(android.content.Context,int) -> getThemeResId
android.support.design.widget.BottomSheetDialog$1 -> android.support.design.widget.BottomSheetDialog$1:
    android.support.design.widget.BottomSheetDialog this$0 -> this$0
    void <init>(android.support.design.widget.BottomSheetDialog) -> <init>
    void onClick(android.view.View) -> onClick
android.support.design.widget.BottomSheetDialog$2 -> android.support.design.widget.BottomSheetDialog$2:
    android.support.design.widget.BottomSheetDialog this$0 -> this$0
    void <init>(android.support.design.widget.BottomSheetDialog) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.design.widget.BottomSheetDialog$3 -> android.support.design.widget.BottomSheetDialog$3:
    android.support.design.widget.BottomSheetDialog this$0 -> this$0
    void <init>(android.support.design.widget.BottomSheetDialog) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.design.widget.BottomSheetDialog$4 -> android.support.design.widget.BottomSheetDialog$4:
    android.support.design.widget.BottomSheetDialog this$0 -> this$0
    void <init>(android.support.design.widget.BottomSheetDialog) -> <init>
    void onStateChanged(android.view.View,int) -> onStateChanged
    void onSlide(android.view.View,float) -> onSlide
android.support.design.widget.BottomSheetDialogFragment -> android.support.design.widget.BottomSheetDialogFragment:
    void <init>() -> <init>
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
android.support.design.widget.CheckableImageButton -> android.support.design.widget.CheckableImageButton:
    int[] DRAWABLE_STATE_CHECKED -> DRAWABLE_STATE_CHECKED
    boolean mChecked -> mChecked
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    void toggle() -> toggle
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void <clinit>() -> <clinit>
android.support.design.widget.CheckableImageButton$1 -> android.support.design.widget.CheckableImageButton$1:
    android.support.design.widget.CheckableImageButton this$0 -> this$0
    void <init>(android.support.design.widget.CheckableImageButton) -> <init>
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.design.widget.CircularBorderDrawable -> android.support.design.widget.CircularBorderDrawable:
    float DRAW_STROKE_WIDTH_MULTIPLE -> DRAW_STROKE_WIDTH_MULTIPLE
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Rect mRect -> mRect
    android.graphics.RectF mRectF -> mRectF
    float mBorderWidth -> mBorderWidth
    int mTopOuterStrokeColor -> mTopOuterStrokeColor
    int mTopInnerStrokeColor -> mTopInnerStrokeColor
    int mBottomOuterStrokeColor -> mBottomOuterStrokeColor
    int mBottomInnerStrokeColor -> mBottomInnerStrokeColor
    android.content.res.ColorStateList mBorderTint -> mBorderTint
    int mCurrentBorderTintColor -> mCurrentBorderTintColor
    boolean mInvalidateShader -> mInvalidateShader
    float mRotation -> mRotation
    void <init>() -> <init>
    void setGradientColors(int,int,int,int) -> setGradientColors
    void setBorderWidth(float) -> setBorderWidth
    void draw(android.graphics.Canvas) -> draw
    boolean getPadding(android.graphics.Rect) -> getPadding
    void setAlpha(int) -> setAlpha
    void setBorderTint(android.content.res.ColorStateList) -> setBorderTint
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void setRotation(float) -> setRotation
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean isStateful() -> isStateful
    boolean onStateChange(int[]) -> onStateChange
    android.graphics.Shader createGradientShader() -> createGradientShader
android.support.design.widget.CircularBorderDrawableLollipop -> android.support.design.widget.CircularBorderDrawableLollipop:
    void <init>() -> <init>
    void getOutline(android.graphics.Outline) -> getOutline
android.support.design.widget.CollapsingTextHelper -> android.support.design.widget.CollapsingTextHelper:
    boolean USE_SCALING_TEXTURE -> USE_SCALING_TEXTURE
    boolean DEBUG_DRAW -> DEBUG_DRAW
    android.graphics.Paint DEBUG_DRAW_PAINT -> DEBUG_DRAW_PAINT
    android.view.View mView -> mView
    boolean mDrawTitle -> mDrawTitle
    float mExpandedFraction -> mExpandedFraction
    android.graphics.Rect mExpandedBounds -> mExpandedBounds
    android.graphics.Rect mCollapsedBounds -> mCollapsedBounds
    android.graphics.RectF mCurrentBounds -> mCurrentBounds
    int mExpandedTextGravity -> mExpandedTextGravity
    int mCollapsedTextGravity -> mCollapsedTextGravity
    float mExpandedTextSize -> mExpandedTextSize
    float mCollapsedTextSize -> mCollapsedTextSize
    android.content.res.ColorStateList mExpandedTextColor -> mExpandedTextColor
    android.content.res.ColorStateList mCollapsedTextColor -> mCollapsedTextColor
    float mExpandedDrawY -> mExpandedDrawY
    float mCollapsedDrawY -> mCollapsedDrawY
    float mExpandedDrawX -> mExpandedDrawX
    float mCollapsedDrawX -> mCollapsedDrawX
    float mCurrentDrawX -> mCurrentDrawX
    float mCurrentDrawY -> mCurrentDrawY
    android.graphics.Typeface mCollapsedTypeface -> mCollapsedTypeface
    android.graphics.Typeface mExpandedTypeface -> mExpandedTypeface
    android.graphics.Typeface mCurrentTypeface -> mCurrentTypeface
    java.lang.CharSequence mText -> mText
    java.lang.CharSequence mTextToDraw -> mTextToDraw
    boolean mIsRtl -> mIsRtl
    boolean mUseTexture -> mUseTexture
    android.graphics.Bitmap mExpandedTitleTexture -> mExpandedTitleTexture
    android.graphics.Paint mTexturePaint -> mTexturePaint
    float mTextureAscent -> mTextureAscent
    float mTextureDescent -> mTextureDescent
    float mScale -> mScale
    float mCurrentTextSize -> mCurrentTextSize
    int[] mState -> mState
    boolean mBoundsChanged -> mBoundsChanged
    android.text.TextPaint mTextPaint -> mTextPaint
    android.view.animation.Interpolator mPositionInterpolator -> mPositionInterpolator
    android.view.animation.Interpolator mTextSizeInterpolator -> mTextSizeInterpolator
    float mCollapsedShadowRadius -> mCollapsedShadowRadius
    float mCollapsedShadowDx -> mCollapsedShadowDx
    float mCollapsedShadowDy -> mCollapsedShadowDy
    int mCollapsedShadowColor -> mCollapsedShadowColor
    float mExpandedShadowRadius -> mExpandedShadowRadius
    float mExpandedShadowDx -> mExpandedShadowDx
    float mExpandedShadowDy -> mExpandedShadowDy
    int mExpandedShadowColor -> mExpandedShadowColor
    void <init>(android.view.View) -> <init>
    void setTextSizeInterpolator(android.view.animation.Interpolator) -> setTextSizeInterpolator
    void setPositionInterpolator(android.view.animation.Interpolator) -> setPositionInterpolator
    void setExpandedTextSize(float) -> setExpandedTextSize
    void setCollapsedTextSize(float) -> setCollapsedTextSize
    void setCollapsedTextColor(android.content.res.ColorStateList) -> setCollapsedTextColor
    void setExpandedTextColor(android.content.res.ColorStateList) -> setExpandedTextColor
    void setExpandedBounds(int,int,int,int) -> setExpandedBounds
    void setCollapsedBounds(int,int,int,int) -> setCollapsedBounds
    void onBoundsChanged() -> onBoundsChanged
    void setExpandedTextGravity(int) -> setExpandedTextGravity
    int getExpandedTextGravity() -> getExpandedTextGravity
    void setCollapsedTextGravity(int) -> setCollapsedTextGravity
    int getCollapsedTextGravity() -> getCollapsedTextGravity
    void setCollapsedTextAppearance(int) -> setCollapsedTextAppearance
    void setExpandedTextAppearance(int) -> setExpandedTextAppearance
    android.graphics.Typeface readFontFamilyTypeface(int) -> readFontFamilyTypeface
    void setCollapsedTypeface(android.graphics.Typeface) -> setCollapsedTypeface
    void setExpandedTypeface(android.graphics.Typeface) -> setExpandedTypeface
    void setTypefaces(android.graphics.Typeface) -> setTypefaces
    android.graphics.Typeface getCollapsedTypeface() -> getCollapsedTypeface
    android.graphics.Typeface getExpandedTypeface() -> getExpandedTypeface
    void setExpansionFraction(float) -> setExpansionFraction
    boolean setState(int[]) -> setState
    boolean isStateful() -> isStateful
    float getExpansionFraction() -> getExpansionFraction
    float getCollapsedTextSize() -> getCollapsedTextSize
    float getExpandedTextSize() -> getExpandedTextSize
    void calculateCurrentOffsets() -> calculateCurrentOffsets
    void calculateOffsets(float) -> calculateOffsets
    int getCurrentExpandedTextColor() -> getCurrentExpandedTextColor
    int getCurrentCollapsedTextColor() -> getCurrentCollapsedTextColor
    void calculateBaseOffsets() -> calculateBaseOffsets
    void interpolateBounds(float) -> interpolateBounds
    void draw(android.graphics.Canvas) -> draw
    boolean calculateIsRtl(java.lang.CharSequence) -> calculateIsRtl
    void setInterpolatedTextSize(float) -> setInterpolatedTextSize
    boolean areTypefacesDifferent(android.graphics.Typeface,android.graphics.Typeface) -> areTypefacesDifferent
    void calculateUsingTextSize(float) -> calculateUsingTextSize
    void ensureExpandedTexture() -> ensureExpandedTexture
    void recalculate() -> recalculate
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getText() -> getText
    void clearTexture() -> clearTexture
    boolean isClose(float,float) -> isClose
    android.content.res.ColorStateList getExpandedTextColor() -> getExpandedTextColor
    android.content.res.ColorStateList getCollapsedTextColor() -> getCollapsedTextColor
    int blendColors(int,int,float) -> blendColors
    float lerp(float,float,float,android.view.animation.Interpolator) -> lerp
    boolean rectEquals(android.graphics.Rect,int,int,int,int) -> rectEquals
    void <clinit>() -> <clinit>
android.support.design.widget.CollapsingToolbarLayout -> android.support.design.widget.CollapsingToolbarLayout:
    int DEFAULT_SCRIM_ANIMATION_DURATION -> DEFAULT_SCRIM_ANIMATION_DURATION
    boolean mRefreshToolbar -> mRefreshToolbar
    int mToolbarId -> mToolbarId
    android.support.v7.widget.Toolbar mToolbar -> mToolbar
    android.view.View mToolbarDirectChild -> mToolbarDirectChild
    android.view.View mDummyView -> mDummyView
    int mExpandedMarginStart -> mExpandedMarginStart
    int mExpandedMarginTop -> mExpandedMarginTop
    int mExpandedMarginEnd -> mExpandedMarginEnd
    int mExpandedMarginBottom -> mExpandedMarginBottom
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper -> mCollapsingTextHelper
    boolean mCollapsingTitleEnabled -> mCollapsingTitleEnabled
    boolean mDrawCollapsingTitle -> mDrawCollapsingTitle
    android.graphics.drawable.Drawable mContentScrim -> mContentScrim
    android.graphics.drawable.Drawable mStatusBarScrim -> mStatusBarScrim
    int mScrimAlpha -> mScrimAlpha
    boolean mScrimsAreShown -> mScrimsAreShown
    android.animation.ValueAnimator mScrimAnimator -> mScrimAnimator
    long mScrimAnimationDuration -> mScrimAnimationDuration
    int mScrimVisibleHeightTrigger -> mScrimVisibleHeightTrigger
    android.support.design.widget.AppBarLayout$OnOffsetChangedListener mOnOffsetChangedListener -> mOnOffsetChangedListener
    int mCurrentOffset -> mCurrentOffset
    android.support.v4.view.WindowInsetsCompat mLastInsets -> mLastInsets
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.support.v4.view.WindowInsetsCompat onWindowInsetChanged(android.support.v4.view.WindowInsetsCompat) -> onWindowInsetChanged
    void draw(android.graphics.Canvas) -> draw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void ensureToolbar() -> ensureToolbar
    boolean isToolbarChild(android.view.View) -> isToolbarChild
    android.view.View findDirectChild(android.view.View) -> findDirectChild
    void updateDummyView() -> updateDummyView
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getHeightWithMargins(android.view.View) -> getHeightWithMargins
    android.support.design.widget.ViewOffsetHelper getViewOffsetHelper(android.view.View) -> getViewOffsetHelper
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    void setTitleEnabled(boolean) -> setTitleEnabled
    boolean isTitleEnabled() -> isTitleEnabled
    void setScrimsShown(boolean) -> setScrimsShown
    void setScrimsShown(boolean,boolean) -> setScrimsShown
    void animateScrim(int) -> animateScrim
    void setScrimAlpha(int) -> setScrimAlpha
    int getScrimAlpha() -> getScrimAlpha
    void setContentScrim(android.graphics.drawable.Drawable) -> setContentScrim
    void setContentScrimColor(int) -> setContentScrimColor
    void setContentScrimResource(int) -> setContentScrimResource
    android.graphics.drawable.Drawable getContentScrim() -> getContentScrim
    void setStatusBarScrim(android.graphics.drawable.Drawable) -> setStatusBarScrim
    void drawableStateChanged() -> drawableStateChanged
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void setVisibility(int) -> setVisibility
    void setStatusBarScrimColor(int) -> setStatusBarScrimColor
    void setStatusBarScrimResource(int) -> setStatusBarScrimResource
    android.graphics.drawable.Drawable getStatusBarScrim() -> getStatusBarScrim
    void setCollapsedTitleTextAppearance(int) -> setCollapsedTitleTextAppearance
    void setCollapsedTitleTextColor(int) -> setCollapsedTitleTextColor
    void setCollapsedTitleTextColor(android.content.res.ColorStateList) -> setCollapsedTitleTextColor
    void setCollapsedTitleGravity(int) -> setCollapsedTitleGravity
    int getCollapsedTitleGravity() -> getCollapsedTitleGravity
    void setExpandedTitleTextAppearance(int) -> setExpandedTitleTextAppearance
    void setExpandedTitleColor(int) -> setExpandedTitleColor
    void setExpandedTitleTextColor(android.content.res.ColorStateList) -> setExpandedTitleTextColor
    void setExpandedTitleGravity(int) -> setExpandedTitleGravity
    int getExpandedTitleGravity() -> getExpandedTitleGravity
    void setCollapsedTitleTypeface(android.graphics.Typeface) -> setCollapsedTitleTypeface
    android.graphics.Typeface getCollapsedTitleTypeface() -> getCollapsedTitleTypeface
    void setExpandedTitleTypeface(android.graphics.Typeface) -> setExpandedTitleTypeface
    android.graphics.Typeface getExpandedTitleTypeface() -> getExpandedTitleTypeface
    void setExpandedTitleMargin(int,int,int,int) -> setExpandedTitleMargin
    int getExpandedTitleMarginStart() -> getExpandedTitleMarginStart
    void setExpandedTitleMarginStart(int) -> setExpandedTitleMarginStart
    int getExpandedTitleMarginTop() -> getExpandedTitleMarginTop
    void setExpandedTitleMarginTop(int) -> setExpandedTitleMarginTop
    int getExpandedTitleMarginEnd() -> getExpandedTitleMarginEnd
    void setExpandedTitleMarginEnd(int) -> setExpandedTitleMarginEnd
    int getExpandedTitleMarginBottom() -> getExpandedTitleMarginBottom
    void setExpandedTitleMarginBottom(int) -> setExpandedTitleMarginBottom
    void setScrimVisibleHeightTrigger(int) -> setScrimVisibleHeightTrigger
    int getScrimVisibleHeightTrigger() -> getScrimVisibleHeightTrigger
    void setScrimAnimationDuration(long) -> setScrimAnimationDuration
    long getScrimAnimationDuration() -> getScrimAnimationDuration
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.design.widget.CollapsingToolbarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.widget.FrameLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void updateScrimVisibility() -> updateScrimVisibility
    int getMaxOffsetForPinChild(android.view.View) -> getMaxOffsetForPinChild
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.design.widget.CollapsingToolbarLayout$1 -> android.support.design.widget.CollapsingToolbarLayout$1:
    android.support.design.widget.CollapsingToolbarLayout this$0 -> this$0
    void <init>(android.support.design.widget.CollapsingToolbarLayout) -> <init>
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.design.widget.CollapsingToolbarLayout$2 -> android.support.design.widget.CollapsingToolbarLayout$2:
    android.support.design.widget.CollapsingToolbarLayout this$0 -> this$0
    void <init>(android.support.design.widget.CollapsingToolbarLayout) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.CollapsingToolbarLayout$LayoutParams -> android.support.design.widget.CollapsingToolbarLayout$LayoutParams:
    float DEFAULT_PARALLAX_MULTIPLIER -> DEFAULT_PARALLAX_MULTIPLIER
    int COLLAPSE_MODE_OFF -> COLLAPSE_MODE_OFF
    int COLLAPSE_MODE_PIN -> COLLAPSE_MODE_PIN
    int COLLAPSE_MODE_PARALLAX -> COLLAPSE_MODE_PARALLAX
    int mCollapseMode -> mCollapseMode
    float mParallaxMult -> mParallaxMult
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(int,int,int) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.widget.FrameLayout$LayoutParams) -> <init>
    void setCollapseMode(int) -> setCollapseMode
    int getCollapseMode() -> getCollapseMode
    void setParallaxMultiplier(float) -> setParallaxMultiplier
    float getParallaxMultiplier() -> getParallaxMultiplier
android.support.design.widget.CollapsingToolbarLayout$LayoutParams$CollapseMode -> android.support.design.widget.CollapsingToolbarLayout$LayoutParams$CollapseMode:
android.support.design.widget.CollapsingToolbarLayout$OffsetUpdateListener -> android.support.design.widget.CollapsingToolbarLayout$OffsetUpdateListener:
    android.support.design.widget.CollapsingToolbarLayout this$0 -> this$0
    void <init>(android.support.design.widget.CollapsingToolbarLayout) -> <init>
    void onOffsetChanged(android.support.design.widget.AppBarLayout,int) -> onOffsetChanged
android.support.design.widget.CoordinatorLayout -> android.support.design.widget.CoordinatorLayout:
    java.lang.String TAG -> TAG
    java.lang.String WIDGET_PACKAGE_NAME -> WIDGET_PACKAGE_NAME
    int TYPE_ON_INTERCEPT -> TYPE_ON_INTERCEPT
    int TYPE_ON_TOUCH -> TYPE_ON_TOUCH
    java.lang.Class[] CONSTRUCTOR_PARAMS -> CONSTRUCTOR_PARAMS
    java.lang.ThreadLocal sConstructors -> sConstructors
    int EVENT_PRE_DRAW -> EVENT_PRE_DRAW
    int EVENT_NESTED_SCROLL -> EVENT_NESTED_SCROLL
    int EVENT_VIEW_REMOVED -> EVENT_VIEW_REMOVED
    java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR -> TOP_SORTED_CHILDREN_COMPARATOR
    android.support.v4.util.Pools$Pool sRectPool -> sRectPool
    java.util.List mDependencySortedChildren -> mDependencySortedChildren
    android.support.design.widget.DirectedAcyclicGraph mChildDag -> mChildDag
    java.util.List mTempList1 -> mTempList1
    java.util.List mTempDependenciesList -> mTempDependenciesList
    int[] mTempIntPair -> mTempIntPair
    android.graphics.Paint mScrimPaint -> mScrimPaint
    boolean mDisallowInterceptReset -> mDisallowInterceptReset
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    int[] mKeylines -> mKeylines
    android.view.View mBehaviorTouchView -> mBehaviorTouchView
    android.view.View mNestedScrollingTarget -> mNestedScrollingTarget
    android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener -> mOnPreDrawListener
    boolean mNeedsPreDrawListener -> mNeedsPreDrawListener
    android.support.v4.view.WindowInsetsCompat mLastInsets -> mLastInsets
    boolean mDrawStatusBarBackground -> mDrawStatusBarBackground
    android.graphics.drawable.Drawable mStatusBarBackground -> mStatusBarBackground
    android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener -> mOnHierarchyChangeListener
    android.support.v4.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener -> mApplyWindowInsetsListener
    android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> mNestedScrollingParentHelper
    android.graphics.Rect acquireTempRect() -> acquireTempRect
    void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    void drawableStateChanged() -> drawableStateChanged
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void setVisibility(int) -> setVisibility
    void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    android.support.v4.view.WindowInsetsCompat setWindowInsets(android.support.v4.view.WindowInsetsCompat) -> setWindowInsets
    android.support.v4.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    void resetTouchBehaviors() -> resetTouchBehaviors
    void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    int getKeyline(int) -> getKeyline
    android.support.design.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    void prepareChildren() -> prepareChildren
    void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    void onMeasure(int,int) -> onMeasure
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    void onLayoutChild(android.view.View,int) -> onLayoutChild
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDraw(android.graphics.Canvas) -> onDraw
    void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,android.support.design.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    void constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    void layoutChild(android.view.View,int) -> layoutChild
    int resolveGravity(int) -> resolveGravity
    int resolveKeylineGravity(int) -> resolveKeylineGravity
    int resolveAnchoredChildGravity(int) -> resolveAnchoredChildGravity
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void onChildViewsChanged(int) -> onChildViewsChanged
    void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    java.util.List getDependencies(android.view.View) -> getDependencies
    java.util.List getDependents(android.view.View) -> getDependents
    java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    void ensurePreDrawListener() -> ensurePreDrawListener
    boolean hasDependencies(android.view.View) -> hasDependencies
    void addPreDrawListener() -> addPreDrawListener
    void removePreDrawListener() -> removePreDrawListener
    void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    boolean doViewsOverlap(android.view.View,android.view.View) -> doViewsOverlap
    android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.support.design.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void setupForInsets() -> setupForInsets
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void <clinit>() -> <clinit>
android.support.design.widget.CoordinatorLayout$1 -> android.support.design.widget.CoordinatorLayout$1:
    android.support.design.widget.CoordinatorLayout this$0 -> this$0
    void <init>(android.support.design.widget.CoordinatorLayout) -> <init>
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.design.widget.CoordinatorLayout$Behavior -> android.support.design.widget.CoordinatorLayout$Behavior:
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToLayoutParams(android.support.design.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    int getScrimColor(android.support.design.widget.CoordinatorLayout,android.view.View) -> getScrimColor
    float getScrimOpacity(android.support.design.widget.CoordinatorLayout,android.view.View) -> getScrimOpacity
    boolean blocksInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    void onDependentViewRemoved(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    void setTag(android.view.View,java.lang.Object) -> setTag
    java.lang.Object getTag(android.view.View) -> getTag
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedScrollAccepted(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onStopNestedScroll
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> onNestedPreScroll
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    boolean onNestedFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.support.design.widget.CoordinatorLayout,android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    boolean onRequestChildRectangleOnScreen(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
android.support.design.widget.CoordinatorLayout$DefaultBehavior -> android.support.design.widget.CoordinatorLayout$DefaultBehavior:
    java.lang.Class value() -> value
android.support.design.widget.CoordinatorLayout$DispatchChangeEvent -> android.support.design.widget.CoordinatorLayout$DispatchChangeEvent:
android.support.design.widget.CoordinatorLayout$HierarchyChangeListener -> android.support.design.widget.CoordinatorLayout$HierarchyChangeListener:
    android.support.design.widget.CoordinatorLayout this$0 -> this$0
    void <init>(android.support.design.widget.CoordinatorLayout) -> <init>
    void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
android.support.design.widget.CoordinatorLayout$LayoutParams -> android.support.design.widget.CoordinatorLayout$LayoutParams:
    android.support.design.widget.CoordinatorLayout$Behavior mBehavior -> mBehavior
    boolean mBehaviorResolved -> mBehaviorResolved
    int gravity -> gravity
    int anchorGravity -> anchorGravity
    int keyline -> keyline
    int mAnchorId -> mAnchorId
    int insetEdge -> insetEdge
    int dodgeInsetEdges -> dodgeInsetEdges
    int mInsetOffsetX -> mInsetOffsetX
    int mInsetOffsetY -> mInsetOffsetY
    android.view.View mAnchorView -> mAnchorView
    android.view.View mAnchorDirectChild -> mAnchorDirectChild
    boolean mDidBlockInteraction -> mDidBlockInteraction
    boolean mDidAcceptNestedScrollTouch -> mDidAcceptNestedScrollTouch
    boolean mDidAcceptNestedScrollNonTouch -> mDidAcceptNestedScrollNonTouch
    boolean mDidChangeAfterNestedScroll -> mDidChangeAfterNestedScroll
    android.graphics.Rect mLastChildRect -> mLastChildRect
    java.lang.Object mBehaviorTag -> mBehaviorTag
    void <init>(int,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.support.design.widget.CoordinatorLayout$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    int getAnchorId() -> getAnchorId
    void setAnchorId(int) -> setAnchorId
    android.support.design.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    void setBehavior(android.support.design.widget.CoordinatorLayout$Behavior) -> setBehavior
    void setLastChildRect(android.graphics.Rect) -> setLastChildRect
    android.graphics.Rect getLastChildRect() -> getLastChildRect
    boolean checkAnchorChanged() -> checkAnchorChanged
    boolean didBlockInteraction() -> didBlockInteraction
    boolean isBlockingInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View) -> isBlockingInteractionBelow
    void resetTouchBehaviorTracking() -> resetTouchBehaviorTracking
    void resetNestedScroll(int) -> resetNestedScroll
    void setNestedScrollAccepted(int,boolean) -> setNestedScrollAccepted
    boolean isNestedScrollAccepted(int) -> isNestedScrollAccepted
    boolean getChangedAfterNestedScroll() -> getChangedAfterNestedScroll
    void setChangedAfterNestedScroll(boolean) -> setChangedAfterNestedScroll
    void resetChangedAfterNestedScroll() -> resetChangedAfterNestedScroll
    boolean dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> dependsOn
    void invalidateAnchor() -> invalidateAnchor
    android.view.View findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View) -> findAnchorView
    void resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout) -> resolveAnchorView
    boolean verifyAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout) -> verifyAnchorView
    boolean shouldDodge(android.view.View,int) -> shouldDodge
android.support.design.widget.CoordinatorLayout$OnPreDrawListener -> android.support.design.widget.CoordinatorLayout$OnPreDrawListener:
    android.support.design.widget.CoordinatorLayout this$0 -> this$0
    void <init>(android.support.design.widget.CoordinatorLayout) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.design.widget.CoordinatorLayout$SavedState -> android.support.design.widget.CoordinatorLayout$SavedState:
    android.util.SparseArray behaviorStates -> behaviorStates
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.design.widget.CoordinatorLayout$SavedState$1 -> android.support.design.widget.CoordinatorLayout$SavedState$1:
    void <init>() -> <init>
    android.support.design.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.design.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.design.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.design.widget.CoordinatorLayout$ViewElevationComparator -> android.support.design.widget.CoordinatorLayout$ViewElevationComparator:
    void <init>() -> <init>
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.design.widget.DirectedAcyclicGraph -> android.support.design.widget.DirectedAcyclicGraph:
    android.support.v4.util.Pools$Pool mListPool -> mListPool
    android.support.v4.util.SimpleArrayMap mGraph -> mGraph
    java.util.ArrayList mSortResult -> mSortResult
    java.util.HashSet mSortTmpMarked -> mSortTmpMarked
    void <init>() -> <init>
    void addNode(java.lang.Object) -> addNode
    boolean contains(java.lang.Object) -> contains
    void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
    void clear() -> clear
    java.util.ArrayList getSortedList() -> getSortedList
    void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> dfs
    int size() -> size
    java.util.ArrayList getEmptyList() -> getEmptyList
    void poolList(java.util.ArrayList) -> poolList
android.support.design.widget.DrawableUtils -> android.support.design.widget.DrawableUtils:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.reflect.Method sSetConstantStateMethod -> sSetConstantStateMethod
    boolean sSetConstantStateMethodFetched -> sSetConstantStateMethodFetched
    void <init>() -> <init>
    boolean setContainerConstantState(android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable$ConstantState) -> setContainerConstantState
    boolean setContainerConstantStateV9(android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable$ConstantState) -> setContainerConstantStateV9
android.support.design.widget.FloatingActionButton -> android.support.design.widget.FloatingActionButton:
    java.lang.String LOG_TAG -> LOG_TAG
    int SIZE_MINI -> SIZE_MINI
    int SIZE_NORMAL -> SIZE_NORMAL
    int SIZE_AUTO -> SIZE_AUTO
    int AUTO_MINI_LARGEST_SCREEN_WIDTH -> AUTO_MINI_LARGEST_SCREEN_WIDTH
    android.content.res.ColorStateList mBackgroundTint -> mBackgroundTint
    android.graphics.PorterDuff$Mode mBackgroundTintMode -> mBackgroundTintMode
    int mBorderWidth -> mBorderWidth
    int mRippleColor -> mRippleColor
    int mSize -> mSize
    int mImagePadding -> mImagePadding
    int mMaxImageSize -> mMaxImageSize
    boolean mCompatPadding -> mCompatPadding
    android.graphics.Rect mShadowPadding -> mShadowPadding
    android.graphics.Rect mTouchArea -> mTouchArea
    android.support.v7.widget.AppCompatImageHelper mImageHelper -> mImageHelper
    android.support.design.widget.FloatingActionButtonImpl mImpl -> mImpl
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onMeasure(int,int) -> onMeasure
    int getRippleColor() -> getRippleColor
    void setRippleColor(int) -> setRippleColor
    android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundColor(int) -> setBackgroundColor
    void setImageResource(int) -> setImageResource
    void show() -> show
    void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> show
    void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean) -> show
    void hide() -> hide
    void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> hide
    void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean) -> hide
    void setUseCompatPadding(boolean) -> setUseCompatPadding
    boolean getUseCompatPadding() -> getUseCompatPadding
    void setSize(int) -> setSize
    int getSize() -> getSize
    android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> wrapOnVisibilityChangedListener
    int getSizeDimension() -> getSizeDimension
    int getSizeDimension(int) -> getSizeDimension
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    boolean getContentRect(android.graphics.Rect) -> getContentRect
    android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    int resolveAdjustedSize(int,int) -> resolveAdjustedSize
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    float getCompatElevation() -> getCompatElevation
    void setCompatElevation(float) -> setCompatElevation
    android.support.design.widget.FloatingActionButtonImpl getImpl() -> getImpl
    android.support.design.widget.FloatingActionButtonImpl createImpl() -> createImpl
    void setVisibility(int) -> setVisibility
    void access$001(android.support.design.widget.FloatingActionButton,android.graphics.drawable.Drawable) -> access$001
android.support.design.widget.FloatingActionButton$1 -> android.support.design.widget.FloatingActionButton$1:
    android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener val$listener -> val$listener
    android.support.design.widget.FloatingActionButton this$0 -> this$0
    void <init>(android.support.design.widget.FloatingActionButton,android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    void onShown() -> onShown
    void onHidden() -> onHidden
android.support.design.widget.FloatingActionButton$Behavior -> android.support.design.widget.FloatingActionButton$Behavior:
    boolean AUTO_HIDE_DEFAULT -> AUTO_HIDE_DEFAULT
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener mInternalAutoHideListener -> mInternalAutoHideListener
    boolean mAutoHideEnabled -> mAutoHideEnabled
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setAutoHideEnabled(boolean) -> setAutoHideEnabled
    boolean isAutoHideEnabled() -> isAutoHideEnabled
    void onAttachedToLayoutParams(android.support.design.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View) -> onDependentViewChanged
    boolean isBottomSheet(android.view.View) -> isBottomSheet
    void setInternalAutoHideListener(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> setInternalAutoHideListener
    boolean shouldUpdateVisibility(android.view.View,android.support.design.widget.FloatingActionButton) -> shouldUpdateVisibility
    boolean updateFabVisibilityForAppBarLayout(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.support.design.widget.FloatingActionButton) -> updateFabVisibilityForAppBarLayout
    boolean updateFabVisibilityForBottomSheet(android.view.View,android.support.design.widget.FloatingActionButton) -> updateFabVisibilityForBottomSheet
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,int) -> onLayoutChild
    boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    void offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton) -> offsetIfNeeded
    boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener -> android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener:
    void <init>() -> <init>
    void onShown(android.support.design.widget.FloatingActionButton) -> onShown
    void onHidden(android.support.design.widget.FloatingActionButton) -> onHidden
android.support.design.widget.FloatingActionButton$ShadowDelegateImpl -> android.support.design.widget.FloatingActionButton$ShadowDelegateImpl:
    android.support.design.widget.FloatingActionButton this$0 -> this$0
    void <init>(android.support.design.widget.FloatingActionButton) -> <init>
    float getRadius() -> getRadius
    void setShadowPadding(int,int,int,int) -> setShadowPadding
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
android.support.design.widget.FloatingActionButton$Size -> android.support.design.widget.FloatingActionButton$Size:
android.support.design.widget.FloatingActionButtonImpl -> android.support.design.widget.FloatingActionButtonImpl:
    android.view.animation.Interpolator ANIM_INTERPOLATOR -> ANIM_INTERPOLATOR
    long PRESSED_ANIM_DURATION -> PRESSED_ANIM_DURATION
    long PRESSED_ANIM_DELAY -> PRESSED_ANIM_DELAY
    int ANIM_STATE_NONE -> ANIM_STATE_NONE
    int ANIM_STATE_HIDING -> ANIM_STATE_HIDING
    int ANIM_STATE_SHOWING -> ANIM_STATE_SHOWING
    int mAnimState -> mAnimState
    android.support.design.widget.StateListAnimator mStateListAnimator -> mStateListAnimator
    android.support.design.widget.ShadowDrawableWrapper mShadowDrawable -> mShadowDrawable
    float mRotation -> mRotation
    android.graphics.drawable.Drawable mShapeDrawable -> mShapeDrawable
    android.graphics.drawable.Drawable mRippleDrawable -> mRippleDrawable
    android.support.design.widget.CircularBorderDrawable mBorderDrawable -> mBorderDrawable
    android.graphics.drawable.Drawable mContentBackground -> mContentBackground
    float mElevation -> mElevation
    float mPressedTranslationZ -> mPressedTranslationZ
    int SHOW_HIDE_ANIM_DURATION -> SHOW_HIDE_ANIM_DURATION
    int[] PRESSED_ENABLED_STATE_SET -> PRESSED_ENABLED_STATE_SET
    int[] FOCUSED_ENABLED_STATE_SET -> FOCUSED_ENABLED_STATE_SET
    int[] ENABLED_STATE_SET -> ENABLED_STATE_SET
    int[] EMPTY_STATE_SET -> EMPTY_STATE_SET
    android.support.design.widget.VisibilityAwareImageButton mView -> mView
    android.support.design.widget.ShadowViewDelegate mShadowViewDelegate -> mShadowViewDelegate
    android.graphics.Rect mTmpRect -> mTmpRect
    android.view.ViewTreeObserver$OnPreDrawListener mPreDrawListener -> mPreDrawListener
    void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate) -> <init>
    void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int,int) -> setBackgroundDrawable
    void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setRippleColor(int) -> setRippleColor
    void setElevation(float) -> setElevation
    float getElevation() -> getElevation
    void setPressedTranslationZ(float) -> setPressedTranslationZ
    void onElevationsChanged(float,float) -> onElevationsChanged
    void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    void hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> hide
    void show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> show
    android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    void onCompatShadowChanged() -> onCompatShadowChanged
    void updatePadding() -> updatePadding
    void getPadding(android.graphics.Rect) -> getPadding
    void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean requirePreDrawListener() -> requirePreDrawListener
    android.support.design.widget.CircularBorderDrawable createBorderDrawable(int,android.content.res.ColorStateList) -> createBorderDrawable
    android.support.design.widget.CircularBorderDrawable newCircularDrawable() -> newCircularDrawable
    void onPreDraw() -> onPreDraw
    void ensurePreDrawListener() -> ensurePreDrawListener
    android.graphics.drawable.GradientDrawable createShapeDrawable() -> createShapeDrawable
    android.graphics.drawable.GradientDrawable newGradientDrawableForShape() -> newGradientDrawableForShape
    boolean isOrWillBeShown() -> isOrWillBeShown
    boolean isOrWillBeHidden() -> isOrWillBeHidden
    android.animation.ValueAnimator createAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl) -> createAnimator
    android.content.res.ColorStateList createColorStateList(int) -> createColorStateList
    boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    void updateFromViewRotation() -> updateFromViewRotation
    void <clinit>() -> <clinit>
android.support.design.widget.FloatingActionButtonImpl$1 -> android.support.design.widget.FloatingActionButtonImpl$1:
    boolean mCancelled -> mCancelled
    boolean val$fromUser -> val$fromUser
    android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener -> val$listener
    android.support.design.widget.FloatingActionButtonImpl this$0 -> this$0
    void <init>(android.support.design.widget.FloatingActionButtonImpl,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.widget.FloatingActionButtonImpl$2 -> android.support.design.widget.FloatingActionButtonImpl$2:
    boolean val$fromUser -> val$fromUser
    android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener val$listener -> val$listener
    android.support.design.widget.FloatingActionButtonImpl this$0 -> this$0
    void <init>(android.support.design.widget.FloatingActionButtonImpl,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.widget.FloatingActionButtonImpl$3 -> android.support.design.widget.FloatingActionButtonImpl$3:
    android.support.design.widget.FloatingActionButtonImpl this$0 -> this$0
    void <init>(android.support.design.widget.FloatingActionButtonImpl) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation -> android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation:
    android.support.design.widget.FloatingActionButtonImpl this$0 -> this$0
    void <init>(android.support.design.widget.FloatingActionButtonImpl) -> <init>
    float getTargetShadowSize() -> getTargetShadowSize
android.support.design.widget.FloatingActionButtonImpl$ElevateToTranslationZAnimation -> android.support.design.widget.FloatingActionButtonImpl$ElevateToTranslationZAnimation:
    android.support.design.widget.FloatingActionButtonImpl this$0 -> this$0
    void <init>(android.support.design.widget.FloatingActionButtonImpl) -> <init>
    float getTargetShadowSize() -> getTargetShadowSize
android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener -> android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener:
    void onShown() -> onShown
    void onHidden() -> onHidden
android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation -> android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation:
    android.support.design.widget.FloatingActionButtonImpl this$0 -> this$0
    void <init>(android.support.design.widget.FloatingActionButtonImpl) -> <init>
    float getTargetShadowSize() -> getTargetShadowSize
android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl -> android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl:
    boolean mValidValues -> mValidValues
    float mShadowSizeStart -> mShadowSizeStart
    float mShadowSizeEnd -> mShadowSizeEnd
    android.support.design.widget.FloatingActionButtonImpl this$0 -> this$0
    void <init>(android.support.design.widget.FloatingActionButtonImpl) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    float getTargetShadowSize() -> getTargetShadowSize
    void <init>(android.support.design.widget.FloatingActionButtonImpl,android.support.design.widget.FloatingActionButtonImpl$1) -> <init>
android.support.design.widget.FloatingActionButtonLollipop -> android.support.design.widget.FloatingActionButtonLollipop:
    android.graphics.drawable.InsetDrawable mInsetDrawable -> mInsetDrawable
    void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate) -> <init>
    void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int,int) -> setBackgroundDrawable
    void setRippleColor(int) -> setRippleColor
    void onElevationsChanged(float,float) -> onElevationsChanged
    float getElevation() -> getElevation
    void onCompatShadowChanged() -> onCompatShadowChanged
    void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    boolean requirePreDrawListener() -> requirePreDrawListener
    android.support.design.widget.CircularBorderDrawable newCircularDrawable() -> newCircularDrawable
    android.graphics.drawable.GradientDrawable newGradientDrawableForShape() -> newGradientDrawableForShape
    void getPadding(android.graphics.Rect) -> getPadding
android.support.design.widget.FloatingActionButtonLollipop$AlwaysStatefulGradientDrawable -> android.support.design.widget.FloatingActionButtonLollipop$AlwaysStatefulGradientDrawable:
    void <init>() -> <init>
    boolean isStateful() -> isStateful
android.support.design.widget.HeaderBehavior -> android.support.design.widget.HeaderBehavior:
    int INVALID_POINTER -> INVALID_POINTER
    java.lang.Runnable mFlingRunnable -> mFlingRunnable
    android.widget.OverScroller mScroller -> mScroller
    boolean mIsBeingDragged -> mIsBeingDragged
    int mActivePointerId -> mActivePointerId
    int mLastMotionY -> mLastMotionY
    int mTouchSlop -> mTouchSlop
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> setHeaderTopBottomOffset
    int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    int scroll(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int) -> scroll
    boolean fling(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,float) -> fling
    void onFlingFinished(android.support.design.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    boolean canDragView(android.view.View) -> canDragView
    int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    void ensureVelocityTracker() -> ensureVelocityTracker
android.support.design.widget.HeaderBehavior$FlingRunnable -> android.support.design.widget.HeaderBehavior$FlingRunnable:
    android.support.design.widget.CoordinatorLayout mParent -> mParent
    android.view.View mLayout -> mLayout
    android.support.design.widget.HeaderBehavior this$0 -> this$0
    void <init>(android.support.design.widget.HeaderBehavior,android.support.design.widget.CoordinatorLayout,android.view.View) -> <init>
    void run() -> run
android.support.design.widget.HeaderScrollingViewBehavior -> android.support.design.widget.HeaderScrollingViewBehavior:
    android.graphics.Rect mTempRect1 -> mTempRect1
    android.graphics.Rect mTempRect2 -> mTempRect2
    int mVerticalLayoutGap -> mVerticalLayoutGap
    int mOverlayTop -> mOverlayTop
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    int getOverlapPixelsForOffset(android.view.View) -> getOverlapPixelsForOffset
    int resolveGravity(int) -> resolveGravity
    android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    int getScrollRange(android.view.View) -> getScrollRange
    int getVerticalLayoutGap() -> getVerticalLayoutGap
    void setOverlayTop(int) -> setOverlayTop
    int getOverlayTop() -> getOverlayTop
android.support.design.widget.NavigationView -> android.support.design.widget.NavigationView:
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    int[] DISABLED_STATE_SET -> DISABLED_STATE_SET
    int PRESENTER_NAVIGATION_VIEW_ID -> PRESENTER_NAVIGATION_VIEW_ID
    android.support.design.internal.NavigationMenu mMenu -> mMenu
    android.support.design.internal.NavigationMenuPresenter mPresenter -> mPresenter
    android.support.design.widget.NavigationView$OnNavigationItemSelectedListener mListener -> mListener
    int mMaxWidth -> mMaxWidth
    android.view.MenuInflater mMenuInflater -> mMenuInflater
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setNavigationItemSelectedListener(android.support.design.widget.NavigationView$OnNavigationItemSelectedListener) -> setNavigationItemSelectedListener
    void onMeasure(int,int) -> onMeasure
    void onInsetsChanged(android.support.v4.view.WindowInsetsCompat) -> onInsetsChanged
    void inflateMenu(int) -> inflateMenu
    android.view.Menu getMenu() -> getMenu
    android.view.View inflateHeaderView(int) -> inflateHeaderView
    void addHeaderView(android.view.View) -> addHeaderView
    void removeHeaderView(android.view.View) -> removeHeaderView
    int getHeaderCount() -> getHeaderCount
    android.view.View getHeaderView(int) -> getHeaderView
    android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    void setItemBackgroundResource(int) -> setItemBackgroundResource
    void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    void setCheckedItem(int) -> setCheckedItem
    void setItemTextAppearance(int) -> setItemTextAppearance
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    android.content.res.ColorStateList createDefaultColorStateList(int) -> createDefaultColorStateList
    void <clinit>() -> <clinit>
android.support.design.widget.NavigationView$1 -> android.support.design.widget.NavigationView$1:
    android.support.design.widget.NavigationView this$0 -> this$0
    void <init>(android.support.design.widget.NavigationView) -> <init>
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
android.support.design.widget.NavigationView$OnNavigationItemSelectedListener -> android.support.design.widget.NavigationView$OnNavigationItemSelectedListener:
    boolean onNavigationItemSelected(android.view.MenuItem) -> onNavigationItemSelected
android.support.design.widget.NavigationView$SavedState -> android.support.design.widget.NavigationView$SavedState:
    android.os.Bundle menuState -> menuState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.design.widget.NavigationView$SavedState$1 -> android.support.design.widget.NavigationView$SavedState$1:
    void <init>() -> <init>
    android.support.design.widget.NavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.design.widget.NavigationView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.design.widget.NavigationView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.design.widget.ShadowDrawableWrapper -> android.support.design.widget.ShadowDrawableWrapper:
    double COS_45 -> COS_45
    float SHADOW_MULTIPLIER -> SHADOW_MULTIPLIER
    float SHADOW_TOP_SCALE -> SHADOW_TOP_SCALE
    float SHADOW_HORIZ_SCALE -> SHADOW_HORIZ_SCALE
    float SHADOW_BOTTOM_SCALE -> SHADOW_BOTTOM_SCALE
    android.graphics.Paint mCornerShadowPaint -> mCornerShadowPaint
    android.graphics.Paint mEdgeShadowPaint -> mEdgeShadowPaint
    android.graphics.RectF mContentBounds -> mContentBounds
    float mCornerRadius -> mCornerRadius
    android.graphics.Path mCornerShadowPath -> mCornerShadowPath
    float mMaxShadowSize -> mMaxShadowSize
    float mRawMaxShadowSize -> mRawMaxShadowSize
    float mShadowSize -> mShadowSize
    float mRawShadowSize -> mRawShadowSize
    boolean mDirty -> mDirty
    int mShadowStartColor -> mShadowStartColor
    int mShadowMiddleColor -> mShadowMiddleColor
    int mShadowEndColor -> mShadowEndColor
    boolean mAddPaddingForCorners -> mAddPaddingForCorners
    float mRotation -> mRotation
    boolean mPrintedShadowClipWarning -> mPrintedShadowClipWarning
    void <init>(android.content.Context,android.graphics.drawable.Drawable,float,float,float) -> <init>
    int toEven(float) -> toEven
    void setAddPaddingForCorners(boolean) -> setAddPaddingForCorners
    void setAlpha(int) -> setAlpha
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setShadowSize(float,float) -> setShadowSize
    boolean getPadding(android.graphics.Rect) -> getPadding
    float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
    float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    int getOpacity() -> getOpacity
    void setCornerRadius(float) -> setCornerRadius
    void draw(android.graphics.Canvas) -> draw
    void setRotation(float) -> setRotation
    void drawShadow(android.graphics.Canvas) -> drawShadow
    void buildShadowCorners() -> buildShadowCorners
    void buildComponents(android.graphics.Rect) -> buildComponents
    float getCornerRadius() -> getCornerRadius
    void setShadowSize(float) -> setShadowSize
    void setMaxShadowSize(float) -> setMaxShadowSize
    float getShadowSize() -> getShadowSize
    float getMaxShadowSize() -> getMaxShadowSize
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void <clinit>() -> <clinit>
android.support.design.widget.ShadowViewDelegate -> android.support.design.widget.ShadowViewDelegate:
    float getRadius() -> getRadius
    void setShadowPadding(int,int,int,int) -> setShadowPadding
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
android.support.design.widget.Snackbar -> android.support.design.widget.Snackbar:
    int LENGTH_INDEFINITE -> LENGTH_INDEFINITE
    int LENGTH_SHORT -> LENGTH_SHORT
    int LENGTH_LONG -> LENGTH_LONG
    android.support.design.widget.BaseTransientBottomBar$BaseCallback mCallback -> mCallback
    void <init>(android.view.ViewGroup,android.view.View,android.support.design.widget.BaseTransientBottomBar$ContentViewCallback) -> <init>
    android.support.design.widget.Snackbar make(android.view.View,java.lang.CharSequence,int) -> make
    android.support.design.widget.Snackbar make(android.view.View,int,int) -> make
    android.view.ViewGroup findSuitableParent(android.view.View) -> findSuitableParent
    android.support.design.widget.Snackbar setText(java.lang.CharSequence) -> setText
    android.support.design.widget.Snackbar setText(int) -> setText
    android.support.design.widget.Snackbar setAction(int,android.view.View$OnClickListener) -> setAction
    android.support.design.widget.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener) -> setAction
    android.support.design.widget.Snackbar setActionTextColor(android.content.res.ColorStateList) -> setActionTextColor
    android.support.design.widget.Snackbar setActionTextColor(int) -> setActionTextColor
    android.support.design.widget.Snackbar setCallback(android.support.design.widget.Snackbar$Callback) -> setCallback
android.support.design.widget.Snackbar$1 -> android.support.design.widget.Snackbar$1:
    android.view.View$OnClickListener val$listener -> val$listener
    android.support.design.widget.Snackbar this$0 -> this$0
    void <init>(android.support.design.widget.Snackbar,android.view.View$OnClickListener) -> <init>
    void onClick(android.view.View) -> onClick
android.support.design.widget.Snackbar$Callback -> android.support.design.widget.Snackbar$Callback:
    int DISMISS_EVENT_SWIPE -> DISMISS_EVENT_SWIPE
    int DISMISS_EVENT_ACTION -> DISMISS_EVENT_ACTION
    int DISMISS_EVENT_TIMEOUT -> DISMISS_EVENT_TIMEOUT
    int DISMISS_EVENT_MANUAL -> DISMISS_EVENT_MANUAL
    int DISMISS_EVENT_CONSECUTIVE -> DISMISS_EVENT_CONSECUTIVE
    void <init>() -> <init>
    void onShown(android.support.design.widget.Snackbar) -> onShown
    void onDismissed(android.support.design.widget.Snackbar,int) -> onDismissed
    void onShown(java.lang.Object) -> onShown
    void onDismissed(java.lang.Object,int) -> onDismissed
android.support.design.widget.Snackbar$SnackbarLayout -> android.support.design.widget.Snackbar$SnackbarLayout:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onMeasure(int,int) -> onMeasure
android.support.design.widget.SnackbarManager -> android.support.design.widget.SnackbarManager:
    int MSG_TIMEOUT -> MSG_TIMEOUT
    int SHORT_DURATION_MS -> SHORT_DURATION_MS
    int LONG_DURATION_MS -> LONG_DURATION_MS
    android.support.design.widget.SnackbarManager sSnackbarManager -> sSnackbarManager
    java.lang.Object mLock -> mLock
    android.os.Handler mHandler -> mHandler
    android.support.design.widget.SnackbarManager$SnackbarRecord mCurrentSnackbar -> mCurrentSnackbar
    android.support.design.widget.SnackbarManager$SnackbarRecord mNextSnackbar -> mNextSnackbar
    android.support.design.widget.SnackbarManager getInstance() -> getInstance
    void <init>() -> <init>
    void show(int,android.support.design.widget.SnackbarManager$Callback) -> show
    void dismiss(android.support.design.widget.SnackbarManager$Callback,int) -> dismiss
    void onDismissed(android.support.design.widget.SnackbarManager$Callback) -> onDismissed
    void onShown(android.support.design.widget.SnackbarManager$Callback) -> onShown
    void pauseTimeout(android.support.design.widget.SnackbarManager$Callback) -> pauseTimeout
    void restoreTimeoutIfPaused(android.support.design.widget.SnackbarManager$Callback) -> restoreTimeoutIfPaused
    boolean isCurrent(android.support.design.widget.SnackbarManager$Callback) -> isCurrent
    boolean isCurrentOrNext(android.support.design.widget.SnackbarManager$Callback) -> isCurrentOrNext
    void showNextSnackbarLocked() -> showNextSnackbarLocked
    boolean cancelSnackbarLocked(android.support.design.widget.SnackbarManager$SnackbarRecord,int) -> cancelSnackbarLocked
    boolean isCurrentSnackbarLocked(android.support.design.widget.SnackbarManager$Callback) -> isCurrentSnackbarLocked
    boolean isNextSnackbarLocked(android.support.design.widget.SnackbarManager$Callback) -> isNextSnackbarLocked
    void scheduleTimeoutLocked(android.support.design.widget.SnackbarManager$SnackbarRecord) -> scheduleTimeoutLocked
    void handleTimeout(android.support.design.widget.SnackbarManager$SnackbarRecord) -> handleTimeout
android.support.design.widget.SnackbarManager$1 -> android.support.design.widget.SnackbarManager$1:
    android.support.design.widget.SnackbarManager this$0 -> this$0
    void <init>(android.support.design.widget.SnackbarManager) -> <init>
    boolean handleMessage(android.os.Message) -> handleMessage
android.support.design.widget.SnackbarManager$Callback -> android.support.design.widget.SnackbarManager$Callback:
    void show() -> show
    void dismiss(int) -> dismiss
android.support.design.widget.SnackbarManager$SnackbarRecord -> android.support.design.widget.SnackbarManager$SnackbarRecord:
    java.lang.ref.WeakReference callback -> callback
    int duration -> duration
    boolean paused -> paused
    void <init>(int,android.support.design.widget.SnackbarManager$Callback) -> <init>
    boolean isSnackbar(android.support.design.widget.SnackbarManager$Callback) -> isSnackbar
android.support.design.widget.StateListAnimator -> android.support.design.widget.StateListAnimator:
    java.util.ArrayList mTuples -> mTuples
    android.support.design.widget.StateListAnimator$Tuple mLastMatch -> mLastMatch
    android.animation.ValueAnimator mRunningAnimator -> mRunningAnimator
    android.animation.Animator$AnimatorListener mAnimationListener -> mAnimationListener
    void <init>() -> <init>
    void addState(int[],android.animation.ValueAnimator) -> addState
    void setState(int[]) -> setState
    void start(android.support.design.widget.StateListAnimator$Tuple) -> start
    void cancel() -> cancel
    void jumpToCurrentState() -> jumpToCurrentState
android.support.design.widget.StateListAnimator$1 -> android.support.design.widget.StateListAnimator$1:
    android.support.design.widget.StateListAnimator this$0 -> this$0
    void <init>(android.support.design.widget.StateListAnimator) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.widget.StateListAnimator$Tuple -> android.support.design.widget.StateListAnimator$Tuple:
    int[] mSpecs -> mSpecs
    android.animation.ValueAnimator mAnimator -> mAnimator
    void <init>(int[],android.animation.ValueAnimator) -> <init>
android.support.design.widget.SwipeDismissBehavior -> android.support.design.widget.SwipeDismissBehavior:
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int SWIPE_DIRECTION_START_TO_END -> SWIPE_DIRECTION_START_TO_END
    int SWIPE_DIRECTION_END_TO_START -> SWIPE_DIRECTION_END_TO_START
    int SWIPE_DIRECTION_ANY -> SWIPE_DIRECTION_ANY
    float DEFAULT_DRAG_DISMISS_THRESHOLD -> DEFAULT_DRAG_DISMISS_THRESHOLD
    float DEFAULT_ALPHA_START_DISTANCE -> DEFAULT_ALPHA_START_DISTANCE
    float DEFAULT_ALPHA_END_DISTANCE -> DEFAULT_ALPHA_END_DISTANCE
    android.support.v4.widget.ViewDragHelper mViewDragHelper -> mViewDragHelper
    android.support.design.widget.SwipeDismissBehavior$OnDismissListener mListener -> mListener
    boolean mInterceptingEvents -> mInterceptingEvents
    float mSensitivity -> mSensitivity
    boolean mSensitivitySet -> mSensitivitySet
    int mSwipeDirection -> mSwipeDirection
    float mDragDismissThreshold -> mDragDismissThreshold
    float mAlphaStartSwipeDistance -> mAlphaStartSwipeDistance
    float mAlphaEndSwipeDistance -> mAlphaEndSwipeDistance
    android.support.v4.widget.ViewDragHelper$Callback mDragCallback -> mDragCallback
    void <init>() -> <init>
    void setListener(android.support.design.widget.SwipeDismissBehavior$OnDismissListener) -> setListener
    void setSwipeDirection(int) -> setSwipeDirection
    void setDragDismissDistance(float) -> setDragDismissDistance
    void setStartAlphaSwipeDistance(float) -> setStartAlphaSwipeDistance
    void setEndAlphaSwipeDistance(float) -> setEndAlphaSwipeDistance
    void setSensitivity(float) -> setSensitivity
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    void ensureViewDragHelper(android.view.ViewGroup) -> ensureViewDragHelper
    float clamp(float,float,float) -> clamp
    int clamp(int,int,int) -> clamp
    int getDragState() -> getDragState
    float fraction(float,float,float) -> fraction
android.support.design.widget.SwipeDismissBehavior$1 -> android.support.design.widget.SwipeDismissBehavior$1:
    int INVALID_POINTER_ID -> INVALID_POINTER_ID
    int mOriginalCapturedViewLeft -> mOriginalCapturedViewLeft
    int mActivePointerId -> mActivePointerId
    android.support.design.widget.SwipeDismissBehavior this$0 -> this$0
    void <init>(android.support.design.widget.SwipeDismissBehavior) -> <init>
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    boolean shouldDismiss(android.view.View,float) -> shouldDismiss
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
android.support.design.widget.SwipeDismissBehavior$OnDismissListener -> android.support.design.widget.SwipeDismissBehavior$OnDismissListener:
    void onDismiss(android.view.View) -> onDismiss
    void onDragStateChanged(int) -> onDragStateChanged
android.support.design.widget.SwipeDismissBehavior$SettleRunnable -> android.support.design.widget.SwipeDismissBehavior$SettleRunnable:
    android.view.View mView -> mView
    boolean mDismiss -> mDismiss
    android.support.design.widget.SwipeDismissBehavior this$0 -> this$0
    void <init>(android.support.design.widget.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    void run() -> run
android.support.design.widget.SwipeDismissBehavior$SwipeDirection -> android.support.design.widget.SwipeDismissBehavior$SwipeDirection:
android.support.design.widget.TabItem -> android.support.design.widget.TabItem:
    java.lang.CharSequence mText -> mText
    android.graphics.drawable.Drawable mIcon -> mIcon
    int mCustomLayout -> mCustomLayout
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
android.support.design.widget.TabLayout -> android.support.design.widget.TabLayout:
    int DEFAULT_HEIGHT_WITH_TEXT_ICON -> DEFAULT_HEIGHT_WITH_TEXT_ICON
    int DEFAULT_GAP_TEXT_ICON -> DEFAULT_GAP_TEXT_ICON
    int INVALID_WIDTH -> INVALID_WIDTH
    int DEFAULT_HEIGHT -> DEFAULT_HEIGHT
    int TAB_MIN_WIDTH_MARGIN -> TAB_MIN_WIDTH_MARGIN
    int FIXED_WRAP_GUTTER_MIN -> FIXED_WRAP_GUTTER_MIN
    int MOTION_NON_ADJACENT_OFFSET -> MOTION_NON_ADJACENT_OFFSET
    int ANIMATION_DURATION -> ANIMATION_DURATION
    android.support.v4.util.Pools$Pool sTabPool -> sTabPool
    int MODE_SCROLLABLE -> MODE_SCROLLABLE
    int MODE_FIXED -> MODE_FIXED
    int GRAVITY_FILL -> GRAVITY_FILL
    int GRAVITY_CENTER -> GRAVITY_CENTER
    java.util.ArrayList mTabs -> mTabs
    android.support.design.widget.TabLayout$Tab mSelectedTab -> mSelectedTab
    android.support.design.widget.TabLayout$SlidingTabStrip mTabStrip -> mTabStrip
    int mTabPaddingStart -> mTabPaddingStart
    int mTabPaddingTop -> mTabPaddingTop
    int mTabPaddingEnd -> mTabPaddingEnd
    int mTabPaddingBottom -> mTabPaddingBottom
    int mTabTextAppearance -> mTabTextAppearance
    android.content.res.ColorStateList mTabTextColors -> mTabTextColors
    float mTabTextSize -> mTabTextSize
    float mTabTextMultiLineSize -> mTabTextMultiLineSize
    int mTabBackgroundResId -> mTabBackgroundResId
    int mTabMaxWidth -> mTabMaxWidth
    int mRequestedTabMinWidth -> mRequestedTabMinWidth
    int mRequestedTabMaxWidth -> mRequestedTabMaxWidth
    int mScrollableTabMinWidth -> mScrollableTabMinWidth
    int mContentInsetStart -> mContentInsetStart
    int mTabGravity -> mTabGravity
    int mMode -> mMode
    android.support.design.widget.TabLayout$OnTabSelectedListener mSelectedListener -> mSelectedListener
    java.util.ArrayList mSelectedListeners -> mSelectedListeners
    android.support.design.widget.TabLayout$OnTabSelectedListener mCurrentVpSelectedListener -> mCurrentVpSelectedListener
    android.animation.ValueAnimator mScrollAnimator -> mScrollAnimator
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.PagerAdapter mPagerAdapter -> mPagerAdapter
    android.database.DataSetObserver mPagerAdapterObserver -> mPagerAdapterObserver
    android.support.design.widget.TabLayout$TabLayoutOnPageChangeListener mPageChangeListener -> mPageChangeListener
    android.support.design.widget.TabLayout$AdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    boolean mSetupViewPagerImplicitly -> mSetupViewPagerImplicitly
    android.support.v4.util.Pools$Pool mTabViewPool -> mTabViewPool
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setSelectedTabIndicatorColor(int) -> setSelectedTabIndicatorColor
    void setSelectedTabIndicatorHeight(int) -> setSelectedTabIndicatorHeight
    void setScrollPosition(int,float,boolean) -> setScrollPosition
    void setScrollPosition(int,float,boolean,boolean) -> setScrollPosition
    float getScrollPosition() -> getScrollPosition
    void addTab(android.support.design.widget.TabLayout$Tab) -> addTab
    void addTab(android.support.design.widget.TabLayout$Tab,int) -> addTab
    void addTab(android.support.design.widget.TabLayout$Tab,boolean) -> addTab
    void addTab(android.support.design.widget.TabLayout$Tab,int,boolean) -> addTab
    void addTabFromItemView(android.support.design.widget.TabItem) -> addTabFromItemView
    void setOnTabSelectedListener(android.support.design.widget.TabLayout$OnTabSelectedListener) -> setOnTabSelectedListener
    void addOnTabSelectedListener(android.support.design.widget.TabLayout$OnTabSelectedListener) -> addOnTabSelectedListener
    void removeOnTabSelectedListener(android.support.design.widget.TabLayout$OnTabSelectedListener) -> removeOnTabSelectedListener
    void clearOnTabSelectedListeners() -> clearOnTabSelectedListeners
    android.support.design.widget.TabLayout$Tab newTab() -> newTab
    int getTabCount() -> getTabCount
    android.support.design.widget.TabLayout$Tab getTabAt(int) -> getTabAt
    int getSelectedTabPosition() -> getSelectedTabPosition
    void removeTab(android.support.design.widget.TabLayout$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void setTabMode(int) -> setTabMode
    int getTabMode() -> getTabMode
    void setTabGravity(int) -> setTabGravity
    int getTabGravity() -> getTabGravity
    void setTabTextColors(android.content.res.ColorStateList) -> setTabTextColors
    android.content.res.ColorStateList getTabTextColors() -> getTabTextColors
    void setTabTextColors(int,int) -> setTabTextColors
    void setupWithViewPager(android.support.v4.view.ViewPager) -> setupWithViewPager
    void setupWithViewPager(android.support.v4.view.ViewPager,boolean) -> setupWithViewPager
    void setupWithViewPager(android.support.v4.view.ViewPager,boolean,boolean) -> setupWithViewPager
    void setTabsFromPagerAdapter(android.support.v4.view.PagerAdapter) -> setTabsFromPagerAdapter
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    int getTabScrollRange() -> getTabScrollRange
    void setPagerAdapter(android.support.v4.view.PagerAdapter,boolean) -> setPagerAdapter
    void populateFromPagerAdapter() -> populateFromPagerAdapter
    void updateAllTabs() -> updateAllTabs
    android.support.design.widget.TabLayout$TabView createTabView(android.support.design.widget.TabLayout$Tab) -> createTabView
    void configureTab(android.support.design.widget.TabLayout$Tab,int) -> configureTab
    void addTabView(android.support.design.widget.TabLayout$Tab) -> addTabView
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void addViewInternal(android.view.View) -> addViewInternal
    android.widget.LinearLayout$LayoutParams createLayoutParamsForTabs() -> createLayoutParamsForTabs
    void updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams) -> updateTabViewLayoutParams
    int dpToPx(int) -> dpToPx
    void onMeasure(int,int) -> onMeasure
    void removeTabViewAt(int) -> removeTabViewAt
    void animateToTab(int) -> animateToTab
    void ensureScrollAnimator() -> ensureScrollAnimator
    void setScrollAnimatorListener(android.animation.Animator$AnimatorListener) -> setScrollAnimatorListener
    void setSelectedTabView(int) -> setSelectedTabView
    void selectTab(android.support.design.widget.TabLayout$Tab) -> selectTab
    void selectTab(android.support.design.widget.TabLayout$Tab,boolean) -> selectTab
    void dispatchTabSelected(android.support.design.widget.TabLayout$Tab) -> dispatchTabSelected
    void dispatchTabUnselected(android.support.design.widget.TabLayout$Tab) -> dispatchTabUnselected
    void dispatchTabReselected(android.support.design.widget.TabLayout$Tab) -> dispatchTabReselected
    int calculateScrollXForTab(int,float) -> calculateScrollXForTab
    void applyModeAndGravity() -> applyModeAndGravity
    void updateTabViews(boolean) -> updateTabViews
    android.content.res.ColorStateList createColorStateList(int,int) -> createColorStateList
    int getDefaultHeight() -> getDefaultHeight
    int getTabMinWidth() -> getTabMinWidth
    android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int getTabMaxWidth() -> getTabMaxWidth
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void <clinit>() -> <clinit>
android.support.design.widget.TabLayout$1 -> android.support.design.widget.TabLayout$1:
    android.support.design.widget.TabLayout this$0 -> this$0
    void <init>(android.support.design.widget.TabLayout) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.TabLayout$AdapterChangeListener -> android.support.design.widget.TabLayout$AdapterChangeListener:
    boolean mAutoRefresh -> mAutoRefresh
    android.support.design.widget.TabLayout this$0 -> this$0
    void <init>(android.support.design.widget.TabLayout) -> <init>
    void onAdapterChanged(android.support.v4.view.ViewPager,android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void setAutoRefresh(boolean) -> setAutoRefresh
android.support.design.widget.TabLayout$Mode -> android.support.design.widget.TabLayout$Mode:
android.support.design.widget.TabLayout$OnTabSelectedListener -> android.support.design.widget.TabLayout$OnTabSelectedListener:
    void onTabSelected(android.support.design.widget.TabLayout$Tab) -> onTabSelected
    void onTabUnselected(android.support.design.widget.TabLayout$Tab) -> onTabUnselected
    void onTabReselected(android.support.design.widget.TabLayout$Tab) -> onTabReselected
android.support.design.widget.TabLayout$PagerAdapterObserver -> android.support.design.widget.TabLayout$PagerAdapterObserver:
    android.support.design.widget.TabLayout this$0 -> this$0
    void <init>(android.support.design.widget.TabLayout) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.design.widget.TabLayout$SlidingTabStrip -> android.support.design.widget.TabLayout$SlidingTabStrip:
    int mSelectedIndicatorHeight -> mSelectedIndicatorHeight
    android.graphics.Paint mSelectedIndicatorPaint -> mSelectedIndicatorPaint
    int mSelectedPosition -> mSelectedPosition
    float mSelectionOffset -> mSelectionOffset
    int mLayoutDirection -> mLayoutDirection
    int mIndicatorLeft -> mIndicatorLeft
    int mIndicatorRight -> mIndicatorRight
    android.animation.ValueAnimator mIndicatorAnimator -> mIndicatorAnimator
    android.support.design.widget.TabLayout this$0 -> this$0
    void <init>(android.support.design.widget.TabLayout,android.content.Context) -> <init>
    void setSelectedIndicatorColor(int) -> setSelectedIndicatorColor
    void setSelectedIndicatorHeight(int) -> setSelectedIndicatorHeight
    boolean childrenNeedLayout() -> childrenNeedLayout
    void setIndicatorPositionFromTabPosition(int,float) -> setIndicatorPositionFromTabPosition
    float getIndicatorPosition() -> getIndicatorPosition
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void updateIndicatorPosition() -> updateIndicatorPosition
    void setIndicatorPosition(int,int) -> setIndicatorPosition
    void animateIndicatorToPosition(int,int) -> animateIndicatorToPosition
    void draw(android.graphics.Canvas) -> draw
android.support.design.widget.TabLayout$SlidingTabStrip$1 -> android.support.design.widget.TabLayout$SlidingTabStrip$1:
    int val$startLeft -> val$startLeft
    int val$targetLeft -> val$targetLeft
    int val$startRight -> val$startRight
    int val$targetRight -> val$targetRight
    android.support.design.widget.TabLayout$SlidingTabStrip this$1 -> this$1
    void <init>(android.support.design.widget.TabLayout$SlidingTabStrip,int,int,int,int) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.TabLayout$SlidingTabStrip$2 -> android.support.design.widget.TabLayout$SlidingTabStrip$2:
    int val$position -> val$position
    android.support.design.widget.TabLayout$SlidingTabStrip this$1 -> this$1
    void <init>(android.support.design.widget.TabLayout$SlidingTabStrip,int) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.widget.TabLayout$Tab -> android.support.design.widget.TabLayout$Tab:
    int INVALID_POSITION -> INVALID_POSITION
    java.lang.Object mTag -> mTag
    android.graphics.drawable.Drawable mIcon -> mIcon
    java.lang.CharSequence mText -> mText
    java.lang.CharSequence mContentDesc -> mContentDesc
    int mPosition -> mPosition
    android.view.View mCustomView -> mCustomView
    android.support.design.widget.TabLayout mParent -> mParent
    android.support.design.widget.TabLayout$TabView mView -> mView
    void <init>() -> <init>
    java.lang.Object getTag() -> getTag
    android.support.design.widget.TabLayout$Tab setTag(java.lang.Object) -> setTag
    android.view.View getCustomView() -> getCustomView
    android.support.design.widget.TabLayout$Tab setCustomView(android.view.View) -> setCustomView
    android.support.design.widget.TabLayout$Tab setCustomView(int) -> setCustomView
    android.graphics.drawable.Drawable getIcon() -> getIcon
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    java.lang.CharSequence getText() -> getText
    android.support.design.widget.TabLayout$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.support.design.widget.TabLayout$Tab setIcon(int) -> setIcon
    android.support.design.widget.TabLayout$Tab setText(java.lang.CharSequence) -> setText
    android.support.design.widget.TabLayout$Tab setText(int) -> setText
    void select() -> select
    boolean isSelected() -> isSelected
    android.support.design.widget.TabLayout$Tab setContentDescription(int) -> setContentDescription
    android.support.design.widget.TabLayout$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void updateView() -> updateView
    void reset() -> reset
android.support.design.widget.TabLayout$TabGravity -> android.support.design.widget.TabLayout$TabGravity:
android.support.design.widget.TabLayout$TabLayoutOnPageChangeListener -> android.support.design.widget.TabLayout$TabLayoutOnPageChangeListener:
    java.lang.ref.WeakReference mTabLayoutRef -> mTabLayoutRef
    int mPreviousScrollState -> mPreviousScrollState
    int mScrollState -> mScrollState
    void <init>(android.support.design.widget.TabLayout) -> <init>
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void reset() -> reset
android.support.design.widget.TabLayout$TabView -> android.support.design.widget.TabLayout$TabView:
    android.support.design.widget.TabLayout$Tab mTab -> mTab
    android.widget.TextView mTextView -> mTextView
    android.widget.ImageView mIconView -> mIconView
    android.view.View mCustomView -> mCustomView
    android.widget.TextView mCustomTextView -> mCustomTextView
    android.widget.ImageView mCustomIconView -> mCustomIconView
    int mDefaultMaxLines -> mDefaultMaxLines
    android.support.design.widget.TabLayout this$0 -> this$0
    void <init>(android.support.design.widget.TabLayout,android.content.Context) -> <init>
    boolean performClick() -> performClick
    void setSelected(boolean) -> setSelected
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void setTab(android.support.design.widget.TabLayout$Tab) -> setTab
    void reset() -> reset
    void update() -> update
    void updateTextAndIcon(android.widget.TextView,android.widget.ImageView) -> updateTextAndIcon
    android.support.design.widget.TabLayout$Tab getTab() -> getTab
    float approximateLineWidth(android.text.Layout,int,float) -> approximateLineWidth
android.support.design.widget.TabLayout$ViewPagerOnTabSelectedListener -> android.support.design.widget.TabLayout$ViewPagerOnTabSelectedListener:
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    void <init>(android.support.v4.view.ViewPager) -> <init>
    void onTabSelected(android.support.design.widget.TabLayout$Tab) -> onTabSelected
    void onTabUnselected(android.support.design.widget.TabLayout$Tab) -> onTabUnselected
    void onTabReselected(android.support.design.widget.TabLayout$Tab) -> onTabReselected
android.support.design.widget.TextInputEditText -> android.support.design.widget.TextInputEditText:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
android.support.design.widget.TextInputLayout -> android.support.design.widget.TextInputLayout:
    int ANIMATION_DURATION -> ANIMATION_DURATION
    int INVALID_MAX_LENGTH -> INVALID_MAX_LENGTH
    java.lang.String LOG_TAG -> LOG_TAG
    android.widget.FrameLayout mInputFrame -> mInputFrame
    android.widget.EditText mEditText -> mEditText
    java.lang.CharSequence mOriginalHint -> mOriginalHint
    boolean mHintEnabled -> mHintEnabled
    java.lang.CharSequence mHint -> mHint
    android.graphics.Paint mTmpPaint -> mTmpPaint
    android.graphics.Rect mTmpRect -> mTmpRect
    android.widget.LinearLayout mIndicatorArea -> mIndicatorArea
    int mIndicatorsAdded -> mIndicatorsAdded
    android.graphics.Typeface mTypeface -> mTypeface
    boolean mErrorEnabled -> mErrorEnabled
    android.widget.TextView mErrorView -> mErrorView
    int mErrorTextAppearance -> mErrorTextAppearance
    boolean mErrorShown -> mErrorShown
    java.lang.CharSequence mError -> mError
    boolean mCounterEnabled -> mCounterEnabled
    android.widget.TextView mCounterView -> mCounterView
    int mCounterMaxLength -> mCounterMaxLength
    int mCounterTextAppearance -> mCounterTextAppearance
    int mCounterOverflowTextAppearance -> mCounterOverflowTextAppearance
    boolean mCounterOverflowed -> mCounterOverflowed
    boolean mPasswordToggleEnabled -> mPasswordToggleEnabled
    android.graphics.drawable.Drawable mPasswordToggleDrawable -> mPasswordToggleDrawable
    java.lang.CharSequence mPasswordToggleContentDesc -> mPasswordToggleContentDesc
    android.support.design.widget.CheckableImageButton mPasswordToggleView -> mPasswordToggleView
    boolean mPasswordToggledVisible -> mPasswordToggledVisible
    android.graphics.drawable.Drawable mPasswordToggleDummyDrawable -> mPasswordToggleDummyDrawable
    android.graphics.drawable.Drawable mOriginalEditTextEndDrawable -> mOriginalEditTextEndDrawable
    android.content.res.ColorStateList mPasswordToggleTintList -> mPasswordToggleTintList
    boolean mHasPasswordToggleTintList -> mHasPasswordToggleTintList
    android.graphics.PorterDuff$Mode mPasswordToggleTintMode -> mPasswordToggleTintMode
    boolean mHasPasswordToggleTintMode -> mHasPasswordToggleTintMode
    android.content.res.ColorStateList mDefaultTextColor -> mDefaultTextColor
    android.content.res.ColorStateList mFocusedTextColor -> mFocusedTextColor
    boolean mHintExpanded -> mHintExpanded
    android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper -> mCollapsingTextHelper
    boolean mHintAnimationEnabled -> mHintAnimationEnabled
    android.animation.ValueAnimator mAnimator -> mAnimator
    boolean mHasReconstructedEditTextBackground -> mHasReconstructedEditTextBackground
    boolean mInDrawableStateChanged -> mInDrawableStateChanged
    boolean mRestoringSavedState -> mRestoringSavedState
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void setTypeface(android.graphics.Typeface) -> setTypeface
    android.graphics.Typeface getTypeface() -> getTypeface
    void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    void setEditText(android.widget.EditText) -> setEditText
    void updateInputLayoutMargins() -> updateInputLayoutMargins
    void updateLabelState(boolean) -> updateLabelState
    void updateLabelState(boolean,boolean) -> updateLabelState
    android.widget.EditText getEditText() -> getEditText
    void setHint(java.lang.CharSequence) -> setHint
    void setHintInternal(java.lang.CharSequence) -> setHintInternal
    java.lang.CharSequence getHint() -> getHint
    void setHintEnabled(boolean) -> setHintEnabled
    boolean isHintEnabled() -> isHintEnabled
    void setHintTextAppearance(int) -> setHintTextAppearance
    void addIndicator(android.widget.TextView,int) -> addIndicator
    void adjustIndicatorPadding() -> adjustIndicatorPadding
    void removeIndicator(android.widget.TextView) -> removeIndicator
    void setErrorEnabled(boolean) -> setErrorEnabled
    void setErrorTextAppearance(int) -> setErrorTextAppearance
    boolean isErrorEnabled() -> isErrorEnabled
    void setError(java.lang.CharSequence) -> setError
    void setError(java.lang.CharSequence,boolean) -> setError
    void setCounterEnabled(boolean) -> setCounterEnabled
    boolean isCounterEnabled() -> isCounterEnabled
    void setCounterMaxLength(int) -> setCounterMaxLength
    void setEnabled(boolean) -> setEnabled
    void recursiveSetEnabled(android.view.ViewGroup,boolean) -> recursiveSetEnabled
    int getCounterMaxLength() -> getCounterMaxLength
    void updateCounter(int) -> updateCounter
    void updateEditTextBackground() -> updateEditTextBackground
    void ensureBackgroundDrawableStateWorkaround() -> ensureBackgroundDrawableStateWorkaround
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    java.lang.CharSequence getError() -> getError
    boolean isHintAnimationEnabled() -> isHintAnimationEnabled
    void setHintAnimationEnabled(boolean) -> setHintAnimationEnabled
    void draw(android.graphics.Canvas) -> draw
    void onMeasure(int,int) -> onMeasure
    void updatePasswordToggleView() -> updatePasswordToggleView
    void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    boolean isPasswordVisibilityToggleEnabled() -> isPasswordVisibilityToggleEnabled
    void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    void passwordVisibilityToggleRequested(boolean) -> passwordVisibilityToggleRequested
    boolean hasPasswordTransformation() -> hasPasswordTransformation
    boolean shouldShowPasswordIcon() -> shouldShowPasswordIcon
    void applyPasswordToggleTint() -> applyPasswordToggleTint
    void onLayout(boolean,int,int,int,int) -> onLayout
    void collapseHint(boolean) -> collapseHint
    void drawableStateChanged() -> drawableStateChanged
    void expandHint(boolean) -> expandHint
    void animateToExpansionFraction(float) -> animateToExpansionFraction
    boolean isHintExpanded() -> isHintExpanded
    boolean arrayContains(int[],int) -> arrayContains
    boolean access$000(android.support.design.widget.TextInputLayout) -> access$000
    void access$100(android.support.design.widget.TextInputLayout,boolean) -> access$100
android.support.design.widget.TextInputLayout$1 -> android.support.design.widget.TextInputLayout$1:
    android.support.design.widget.TextInputLayout this$0 -> this$0
    void <init>(android.support.design.widget.TextInputLayout) -> <init>
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
android.support.design.widget.TextInputLayout$2 -> android.support.design.widget.TextInputLayout$2:
    android.support.design.widget.TextInputLayout this$0 -> this$0
    void <init>(android.support.design.widget.TextInputLayout) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.design.widget.TextInputLayout$3 -> android.support.design.widget.TextInputLayout$3:
    java.lang.CharSequence val$error -> val$error
    android.support.design.widget.TextInputLayout this$0 -> this$0
    void <init>(android.support.design.widget.TextInputLayout,java.lang.CharSequence) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.widget.TextInputLayout$4 -> android.support.design.widget.TextInputLayout$4:
    android.support.design.widget.TextInputLayout this$0 -> this$0
    void <init>(android.support.design.widget.TextInputLayout) -> <init>
    void onClick(android.view.View) -> onClick
android.support.design.widget.TextInputLayout$5 -> android.support.design.widget.TextInputLayout$5:
    android.support.design.widget.TextInputLayout this$0 -> this$0
    void <init>(android.support.design.widget.TextInputLayout) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.TextInputLayout$SavedState -> android.support.design.widget.TextInputLayout$SavedState:
    java.lang.CharSequence error -> error
    boolean isPasswordToggledVisible -> isPasswordToggledVisible
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
android.support.design.widget.TextInputLayout$SavedState$1 -> android.support.design.widget.TextInputLayout$SavedState$1:
    void <init>() -> <init>
    android.support.design.widget.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.design.widget.TextInputLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.design.widget.TextInputLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate -> android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate:
    android.support.design.widget.TextInputLayout this$0 -> this$0
    void <init>(android.support.design.widget.TextInputLayout) -> <init>
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.design.widget.ThemeUtils -> android.support.design.widget.ThemeUtils:
    int[] APPCOMPAT_CHECK_ATTRS -> APPCOMPAT_CHECK_ATTRS
    void <init>() -> <init>
    void checkAppCompatTheme(android.content.Context) -> checkAppCompatTheme
    void <clinit>() -> <clinit>
android.support.design.widget.ViewGroupUtils -> android.support.design.widget.ViewGroupUtils:
    java.lang.ThreadLocal sMatrix -> sMatrix
    java.lang.ThreadLocal sRectF -> sRectF
    void <init>() -> <init>
    void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
    void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    void <clinit>() -> <clinit>
android.support.design.widget.ViewOffsetBehavior -> android.support.design.widget.ViewOffsetBehavior:
    android.support.design.widget.ViewOffsetHelper mViewOffsetHelper -> mViewOffsetHelper
    int mTempTopBottomOffset -> mTempTopBottomOffset
    int mTempLeftRightOffset -> mTempLeftRightOffset
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    int getTopAndBottomOffset() -> getTopAndBottomOffset
    int getLeftAndRightOffset() -> getLeftAndRightOffset
android.support.design.widget.ViewOffsetHelper -> android.support.design.widget.ViewOffsetHelper:
    android.view.View mView -> mView
    int mLayoutTop -> mLayoutTop
    int mLayoutLeft -> mLayoutLeft
    int mOffsetTop -> mOffsetTop
    int mOffsetLeft -> mOffsetLeft
    void <init>(android.view.View) -> <init>
    void onViewLayout() -> onViewLayout
    void updateOffsets() -> updateOffsets
    boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    int getTopAndBottomOffset() -> getTopAndBottomOffset
    int getLeftAndRightOffset() -> getLeftAndRightOffset
    int getLayoutTop() -> getLayoutTop
    int getLayoutLeft() -> getLayoutLeft
android.support.design.widget.ViewUtils -> android.support.design.widget.ViewUtils:
    void <init>() -> <init>
    android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
android.support.design.widget.ViewUtilsLollipop -> android.support.design.widget.ViewUtilsLollipop:
    int[] STATE_LIST_ANIM_ATTRS -> STATE_LIST_ANIM_ATTRS
    void <init>() -> <init>
    void setBoundsViewOutlineProvider(android.view.View) -> setBoundsViewOutlineProvider
    void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int) -> setStateListAnimatorFromAttrs
    void setDefaultAppBarLayoutStateListAnimator(android.view.View,float) -> setDefaultAppBarLayoutStateListAnimator
    void <clinit>() -> <clinit>
android.support.design.widget.VisibilityAwareImageButton -> android.support.design.widget.VisibilityAwareImageButton:
    int mUserSetVisibility -> mUserSetVisibility
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setVisibility(int) -> setVisibility
    void internalSetVisibility(int,boolean) -> internalSetVisibility
    int getUserSetVisibility() -> getUserSetVisibility
android.support.fragment.BuildConfig -> android.support.fragment.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.fragment.R -> android.support.fragment.R:
    void <init>() -> <init>
android.support.fragment.R$attr -> android.support.fragment.R$attr:
    int font -> font
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    void <init>() -> <init>
android.support.fragment.R$bool -> android.support.fragment.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    void <init>() -> <init>
android.support.fragment.R$color -> android.support.fragment.R$color:
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_light -> secondary_text_default_material_light
    void <init>() -> <init>
android.support.fragment.R$dimen -> android.support.fragment.R$dimen:
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    void <init>() -> <init>
android.support.fragment.R$drawable -> android.support.fragment.R$drawable:
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    void <init>() -> <init>
android.support.fragment.R$id -> android.support.fragment.R$id:
    int action_container -> action_container
    int action_divider -> action_divider
    int action_image -> action_image
    int action_text -> action_text
    int actions -> actions
    int async -> async
    int blocking -> blocking
    int chronometer -> chronometer
    int forever -> forever
    int icon -> icon
    int icon_group -> icon_group
    int info -> info
    int italic -> italic
    int line1 -> line1
    int line3 -> line3
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int right_icon -> right_icon
    int right_side -> right_side
    int text -> text
    int text2 -> text2
    int time -> time
    int title -> title
    void <init>() -> <init>
android.support.fragment.R$integer -> android.support.fragment.R$integer:
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
android.support.fragment.R$layout -> android.support.fragment.R$layout:
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    void <init>() -> <init>
android.support.fragment.R$string -> android.support.fragment.R$string:
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.fragment.R$style -> android.support.fragment.R$style:
    int TextAppearance_Compat_Notification -> TextAppearance_Compat_Notification
    int TextAppearance_Compat_Notification_Info -> TextAppearance_Compat_Notification_Info
    int TextAppearance_Compat_Notification_Line2 -> TextAppearance_Compat_Notification_Line2
    int TextAppearance_Compat_Notification_Time -> TextAppearance_Compat_Notification_Time
    int TextAppearance_Compat_Notification_Title -> TextAppearance_Compat_Notification_Title
    int Widget_Compat_NotificationActionContainer -> Widget_Compat_NotificationActionContainer
    int Widget_Compat_NotificationActionText -> Widget_Compat_NotificationActionText
    void <init>() -> <init>
android.support.fragment.R$styleable -> android.support.fragment.R$styleable:
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.graphics.drawable.AndroidResources -> android.support.graphics.drawable.AndroidResources:
    int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY -> STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY
    int STYLEABLE_VECTOR_DRAWABLE_ALPHA -> STYLEABLE_VECTOR_DRAWABLE_ALPHA
    int STYLEABLE_VECTOR_DRAWABLE_AUTO_MIRRORED -> STYLEABLE_VECTOR_DRAWABLE_AUTO_MIRRORED
    int STYLEABLE_VECTOR_DRAWABLE_HEIGHT -> STYLEABLE_VECTOR_DRAWABLE_HEIGHT
    int STYLEABLE_VECTOR_DRAWABLE_NAME -> STYLEABLE_VECTOR_DRAWABLE_NAME
    int STYLEABLE_VECTOR_DRAWABLE_TINT -> STYLEABLE_VECTOR_DRAWABLE_TINT
    int STYLEABLE_VECTOR_DRAWABLE_TINT_MODE -> STYLEABLE_VECTOR_DRAWABLE_TINT_MODE
    int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_HEIGHT -> STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_HEIGHT
    int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_WIDTH -> STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_WIDTH
    int STYLEABLE_VECTOR_DRAWABLE_WIDTH -> STYLEABLE_VECTOR_DRAWABLE_WIDTH
    int[] STYLEABLE_VECTOR_DRAWABLE_GROUP -> STYLEABLE_VECTOR_DRAWABLE_GROUP
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_NAME -> STYLEABLE_VECTOR_DRAWABLE_GROUP_NAME
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_X -> STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_X
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_Y -> STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_Y
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_ROTATION -> STYLEABLE_VECTOR_DRAWABLE_GROUP_ROTATION
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_X -> STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_X
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_Y -> STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_Y
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_X -> STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_X
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_Y -> STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_Y
    int[] STYLEABLE_VECTOR_DRAWABLE_PATH -> STYLEABLE_VECTOR_DRAWABLE_PATH
    int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_ALPHA -> STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_ALPHA
    int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_COLOR -> STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_COLOR
    int STYLEABLE_VECTOR_DRAWABLE_PATH_NAME -> STYLEABLE_VECTOR_DRAWABLE_PATH_NAME
    int STYLEABLE_VECTOR_DRAWABLE_PATH_PATH_DATA -> STYLEABLE_VECTOR_DRAWABLE_PATH_PATH_DATA
    int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_ALPHA -> STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_ALPHA
    int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_COLOR -> STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_COLOR
    int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_CAP -> STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_CAP
    int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_JOIN -> STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_JOIN
    int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_MITER_LIMIT -> STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_MITER_LIMIT
    int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_WIDTH -> STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_WIDTH
    int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_END -> STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_END
    int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_OFFSET -> STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_OFFSET
    int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_START -> STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_START
    int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_FILLTYPE -> STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_FILLTYPE
    int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH -> STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH
    int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_NAME -> STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_NAME
    int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_PATH_DATA -> STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_PATH_DATA
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE -> STYLEABLE_ANIMATED_VECTOR_DRAWABLE
    int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_DRAWABLE -> STYLEABLE_ANIMATED_VECTOR_DRAWABLE_DRAWABLE
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET -> STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET
    int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_ANIMATION -> STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_ANIMATION
    int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_NAME -> STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_NAME
    int[] STYLEABLE_ANIMATOR -> STYLEABLE_ANIMATOR
    int STYLEABLE_ANIMATOR_INTERPOLATOR -> STYLEABLE_ANIMATOR_INTERPOLATOR
    int STYLEABLE_ANIMATOR_DURATION -> STYLEABLE_ANIMATOR_DURATION
    int STYLEABLE_ANIMATOR_START_OFFSET -> STYLEABLE_ANIMATOR_START_OFFSET
    int STYLEABLE_ANIMATOR_REPEAT_COUNT -> STYLEABLE_ANIMATOR_REPEAT_COUNT
    int STYLEABLE_ANIMATOR_REPEAT_MODE -> STYLEABLE_ANIMATOR_REPEAT_MODE
    int STYLEABLE_ANIMATOR_VALUE_FROM -> STYLEABLE_ANIMATOR_VALUE_FROM
    int STYLEABLE_ANIMATOR_VALUE_TO -> STYLEABLE_ANIMATOR_VALUE_TO
    int STYLEABLE_ANIMATOR_VALUE_TYPE -> STYLEABLE_ANIMATOR_VALUE_TYPE
    int STYLEABLE_ANIMATOR_REMOVE_BEFORE_M_RELEASE -> STYLEABLE_ANIMATOR_REMOVE_BEFORE_M_RELEASE
    int[] STYLEABLE_ANIMATOR_SET -> STYLEABLE_ANIMATOR_SET
    int STYLEABLE_ANIMATOR_SET_ORDERING -> STYLEABLE_ANIMATOR_SET_ORDERING
    int[] STYLEABLE_PROPERTY_VALUES_HOLDER -> STYLEABLE_PROPERTY_VALUES_HOLDER
    int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_FROM -> STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_FROM
    int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TO -> STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TO
    int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TYPE -> STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TYPE
    int STYLEABLE_PROPERTY_VALUES_HOLDER_PROPERTY_NAME -> STYLEABLE_PROPERTY_VALUES_HOLDER_PROPERTY_NAME
    int[] STYLEABLE_KEYFRAME -> STYLEABLE_KEYFRAME
    int STYLEABLE_KEYFRAME_VALUE -> STYLEABLE_KEYFRAME_VALUE
    int STYLEABLE_KEYFRAME_INTERPOLATOR -> STYLEABLE_KEYFRAME_INTERPOLATOR
    int STYLEABLE_KEYFRAME_VALUE_TYPE -> STYLEABLE_KEYFRAME_VALUE_TYPE
    int STYLEABLE_KEYFRAME_FRACTION -> STYLEABLE_KEYFRAME_FRACTION
    int[] STYLEABLE_PROPERTY_ANIMATOR -> STYLEABLE_PROPERTY_ANIMATOR
    int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_NAME -> STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_NAME
    int STYLEABLE_PROPERTY_ANIMATOR_PATH_DATA -> STYLEABLE_PROPERTY_ANIMATOR_PATH_DATA
    int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_X_NAME -> STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_X_NAME
    int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_Y_NAME -> STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_Y_NAME
    int[] STYLEABLE_PATH_INTERPOLATOR -> STYLEABLE_PATH_INTERPOLATOR
    int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_1 -> STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_1
    int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_1 -> STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_1
    int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_2 -> STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_2
    int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_2 -> STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_2
    int STYLEABLE_PATH_INTERPOLATOR_PATH_DATA -> STYLEABLE_PATH_INTERPOLATOR_PATH_DATA
    int FAST_OUT_LINEAR_IN -> FAST_OUT_LINEAR_IN
    int FAST_OUT_SLOW_IN -> FAST_OUT_SLOW_IN
    int LINEAR_OUT_SLOW_IN -> LINEAR_OUT_SLOW_IN
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.graphics.drawable.Animatable2Compat -> android.support.graphics.drawable.Animatable2Compat:
    void registerAnimationCallback(android.support.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    boolean unregisterAnimationCallback(android.support.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    void clearAnimationCallbacks() -> clearAnimationCallbacks
android.support.graphics.drawable.Animatable2Compat$AnimationCallback -> android.support.graphics.drawable.Animatable2Compat$AnimationCallback:
    android.graphics.drawable.Animatable2$AnimationCallback mPlatformCallback -> mPlatformCallback
    void <init>() -> <init>
    void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
    void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    android.graphics.drawable.Animatable2$AnimationCallback getPlatformCallback() -> getPlatformCallback
android.support.graphics.drawable.Animatable2Compat$AnimationCallback$1 -> android.support.graphics.drawable.Animatable2Compat$AnimationCallback$1:
    android.support.graphics.drawable.Animatable2Compat$AnimationCallback this$0 -> this$0
    void <init>(android.support.graphics.drawable.Animatable2Compat$AnimationCallback) -> <init>
    void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
    void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
android.support.graphics.drawable.AnimatedVectorDrawableCompat -> android.support.graphics.drawable.AnimatedVectorDrawableCompat:
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String ANIMATED_VECTOR -> ANIMATED_VECTOR
    java.lang.String TARGET -> TARGET
    boolean DBG_ANIMATION_VECTOR_DRAWABLE -> DBG_ANIMATION_VECTOR_DRAWABLE
    android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState -> mAnimatedVectorState
    android.content.Context mContext -> mContext
    android.animation.ArgbEvaluator mArgbEvaluator -> mArgbEvaluator
    android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState mCachedConstantStateDelegate -> mCachedConstantStateDelegate
    android.animation.Animator$AnimatorListener mAnimatorListener -> mAnimatorListener
    java.util.ArrayList mAnimationCallbacks -> mAnimationCallbacks
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    void <init>() -> <init>
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable mutate() -> mutate
    android.support.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int) -> create
    android.support.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    int getChangingConfigurations() -> getChangingConfigurations
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onStateChange(int[]) -> onStateChange
    boolean onLevelChange(int) -> onLevelChange
    int getAlpha() -> getAlpha
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean setVisible(boolean,boolean) -> setVisible
    boolean isStateful() -> isStateful
    int getOpacity() -> getOpacity
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    boolean isAutoMirrored() -> isAutoMirrored
    void setAutoMirrored(boolean) -> setAutoMirrored
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    boolean canApplyTheme() -> canApplyTheme
    void setupColorAnimator(android.animation.Animator) -> setupColorAnimator
    void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,android.support.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterPlatformCallback
    void registerAnimationCallback(android.support.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,android.support.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerPlatformCallback
    void removeAnimatorSetListener() -> removeAnimatorSetListener
    boolean unregisterAnimationCallback(android.support.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    void clearAnimationCallbacks() -> clearAnimationCallbacks
    void registerAnimationCallback(android.graphics.drawable.Drawable,android.support.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,android.support.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    void clearAnimationCallbacks(android.graphics.drawable.Drawable) -> clearAnimationCallbacks
    boolean setState(int[]) -> setState
    void setChangingConfigurations(int) -> setChangingConfigurations
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int[] getState() -> getState
    boolean getPadding(android.graphics.Rect) -> getPadding
    int getMinimumHeight() -> getMinimumHeight
    int getMinimumWidth() -> getMinimumWidth
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    void clearColorFilter() -> clearColorFilter
    void jumpToCurrentState() -> jumpToCurrentState
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void setHotspot(float,float) -> setHotspot
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    java.util.ArrayList access$100(android.support.graphics.drawable.AnimatedVectorDrawableCompat) -> access$100
android.support.graphics.drawable.AnimatedVectorDrawableCompat$1 -> android.support.graphics.drawable.AnimatedVectorDrawableCompat$1:
    android.support.graphics.drawable.AnimatedVectorDrawableCompat this$0 -> this$0
    void <init>(android.support.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.graphics.drawable.AnimatedVectorDrawableCompat$2 -> android.support.graphics.drawable.AnimatedVectorDrawableCompat$2:
    android.support.graphics.drawable.AnimatedVectorDrawableCompat this$0 -> this$0
    void <init>(android.support.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    int mChangingConfigurations -> mChangingConfigurations
    android.support.graphics.drawable.VectorDrawableCompat mVectorDrawable -> mVectorDrawable
    android.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    java.util.ArrayList mAnimators -> mAnimators
    android.support.v4.util.ArrayMap mTargetNameMap -> mTargetNameMap
    void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
    void setupAnimatorSet() -> setupAnimatorSet
    java.util.ArrayList access$000(android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState) -> access$000
    java.util.ArrayList access$002(android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,java.util.ArrayList) -> access$002
android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> mDelegateState
    void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
    boolean canApplyTheme() -> canApplyTheme
    int getChangingConfigurations() -> getChangingConfigurations
android.support.graphics.drawable.AnimationUtilsCompat -> android.support.graphics.drawable.AnimationUtilsCompat:
    void <init>() -> <init>
    android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
    android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> createInterpolatorFromXml
android.support.graphics.drawable.AnimatorInflaterCompat -> android.support.graphics.drawable.AnimatorInflaterCompat:
    java.lang.String TAG -> TAG
    int TOGETHER -> TOGETHER
    int MAX_NUM_POINTS -> MAX_NUM_POINTS
    int VALUE_TYPE_FLOAT -> VALUE_TYPE_FLOAT
    int VALUE_TYPE_INT -> VALUE_TYPE_INT
    int VALUE_TYPE_PATH -> VALUE_TYPE_PATH
    int VALUE_TYPE_COLOR -> VALUE_TYPE_COLOR
    int VALUE_TYPE_UNDEFINED -> VALUE_TYPE_UNDEFINED
    boolean DBG_ANIMATOR_INFLATER -> DBG_ANIMATOR_INFLATER
    void <init>() -> <init>
    android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
    android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    void dumpKeyframes(java.lang.Object[],java.lang.String) -> dumpKeyframes
    android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    boolean isColorType(int) -> isColorType
android.support.graphics.drawable.AnimatorInflaterCompat$1 -> android.support.graphics.drawable.AnimatorInflaterCompat$1:
android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    android.support.v4.graphics.PathParser$PathDataNode[] mNodeArray -> mNodeArray
    void <init>() -> <init>
    void <init>(android.support.v4.graphics.PathParser$PathDataNode[]) -> <init>
    android.support.v4.graphics.PathParser$PathDataNode[] evaluate(float,android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    void <init>(android.support.graphics.drawable.AnimatorInflaterCompat$1) -> <init>
android.support.graphics.drawable.ArgbEvaluator -> android.support.graphics.drawable.ArgbEvaluator:
    android.support.graphics.drawable.ArgbEvaluator sInstance -> sInstance
    void <init>() -> <init>
    android.support.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    void <clinit>() -> <clinit>
android.support.graphics.drawable.BuildConfig -> android.support.graphics.drawable.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.graphics.drawable.PathInterpolatorCompat -> android.support.graphics.drawable.PathInterpolatorCompat:
    float PRECISION -> PRECISION
    int MAX_NUM_POINTS -> MAX_NUM_POINTS
    double EPSILON -> EPSILON
    float[] mX -> mX
    float[] mY -> mY
    void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> parseInterpolatorFromTypeArray
    void initQuad(float,float) -> initQuad
    void initCubic(float,float,float,float) -> initCubic
    void initPath(android.graphics.Path) -> initPath
    float getInterpolation(float) -> getInterpolation
android.support.graphics.drawable.R -> android.support.graphics.drawable.R:
    void <init>() -> <init>
android.support.graphics.drawable.R$attr -> android.support.graphics.drawable.R$attr:
    int font -> font
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    void <init>() -> <init>
android.support.graphics.drawable.R$bool -> android.support.graphics.drawable.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    void <init>() -> <init>
android.support.graphics.drawable.R$color -> android.support.graphics.drawable.R$color:
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_light -> secondary_text_default_material_light
    void <init>() -> <init>
android.support.graphics.drawable.R$dimen -> android.support.graphics.drawable.R$dimen:
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    void <init>() -> <init>
android.support.graphics.drawable.R$drawable -> android.support.graphics.drawable.R$drawable:
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    void <init>() -> <init>
android.support.graphics.drawable.R$id -> android.support.graphics.drawable.R$id:
    int action_container -> action_container
    int action_divider -> action_divider
    int action_image -> action_image
    int action_text -> action_text
    int actions -> actions
    int async -> async
    int blocking -> blocking
    int chronometer -> chronometer
    int forever -> forever
    int icon -> icon
    int icon_group -> icon_group
    int info -> info
    int italic -> italic
    int line1 -> line1
    int line3 -> line3
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int right_icon -> right_icon
    int right_side -> right_side
    int text -> text
    int text2 -> text2
    int time -> time
    int title -> title
    void <init>() -> <init>
android.support.graphics.drawable.R$integer -> android.support.graphics.drawable.R$integer:
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
android.support.graphics.drawable.R$layout -> android.support.graphics.drawable.R$layout:
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    void <init>() -> <init>
android.support.graphics.drawable.R$string -> android.support.graphics.drawable.R$string:
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.graphics.drawable.R$style -> android.support.graphics.drawable.R$style:
    int TextAppearance_Compat_Notification -> TextAppearance_Compat_Notification
    int TextAppearance_Compat_Notification_Info -> TextAppearance_Compat_Notification_Info
    int TextAppearance_Compat_Notification_Line2 -> TextAppearance_Compat_Notification_Line2
    int TextAppearance_Compat_Notification_Time -> TextAppearance_Compat_Notification_Time
    int TextAppearance_Compat_Notification_Title -> TextAppearance_Compat_Notification_Title
    int Widget_Compat_NotificationActionContainer -> Widget_Compat_NotificationActionContainer
    int Widget_Compat_NotificationActionText -> Widget_Compat_NotificationActionText
    void <init>() -> <init>
android.support.graphics.drawable.R$styleable -> android.support.graphics.drawable.R$styleable:
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.graphics.drawable.VectorDrawableCommon -> android.support.graphics.drawable.VectorDrawableCommon:
    android.graphics.drawable.Drawable mDelegateDrawable -> mDelegateDrawable
    void <init>() -> <init>
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    boolean onLevelChange(int) -> onLevelChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void setFilterBitmap(boolean) -> setFilterBitmap
    void jumpToCurrentState() -> jumpToCurrentState
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    void clearColorFilter() -> clearColorFilter
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    int[] getState() -> getState
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    void setChangingConfigurations(int) -> setChangingConfigurations
    boolean setState(int[]) -> setState
android.support.graphics.drawable.VectorDrawableCompat -> android.support.graphics.drawable.VectorDrawableCompat:
    java.lang.String LOGTAG -> LOGTAG
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> DEFAULT_TINT_MODE
    java.lang.String SHAPE_CLIP_PATH -> SHAPE_CLIP_PATH
    java.lang.String SHAPE_GROUP -> SHAPE_GROUP
    java.lang.String SHAPE_PATH -> SHAPE_PATH
    java.lang.String SHAPE_VECTOR -> SHAPE_VECTOR
    int LINECAP_BUTT -> LINECAP_BUTT
    int LINECAP_ROUND -> LINECAP_ROUND
    int LINECAP_SQUARE -> LINECAP_SQUARE
    int LINEJOIN_MITER -> LINEJOIN_MITER
    int LINEJOIN_ROUND -> LINEJOIN_ROUND
    int LINEJOIN_BEVEL -> LINEJOIN_BEVEL
    int MAX_CACHED_BITMAP_SIZE -> MAX_CACHED_BITMAP_SIZE
    boolean DBG_VECTOR_DRAWABLE -> DBG_VECTOR_DRAWABLE
    android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState -> mVectorState
    android.graphics.PorterDuffColorFilter mTintFilter -> mTintFilter
    android.graphics.ColorFilter mColorFilter -> mColorFilter
    boolean mMutated -> mMutated
    boolean mAllowCaching -> mAllowCaching
    android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate -> mCachedConstantStateDelegate
    float[] mTmpFloats -> mTmpFloats
    android.graphics.Matrix mTmpMatrix -> mTmpMatrix
    android.graphics.Rect mTmpBounds -> mTmpBounds
    void <init>() -> <init>
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    android.graphics.drawable.Drawable mutate() -> mutate
    java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void draw(android.graphics.Canvas) -> draw
    int getAlpha() -> getAlpha
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean isStateful() -> isStateful
    boolean onStateChange(int[]) -> onStateChange
    int getOpacity() -> getOpacity
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    boolean canApplyTheme() -> canApplyTheme
    boolean isAutoMirrored() -> isAutoMirrored
    void setAutoMirrored(boolean) -> setAutoMirrored
    float getPixelSize() -> getPixelSize
    android.support.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    android.support.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    int applyAlpha(int,float) -> applyAlpha
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
    void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    void printGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,int) -> printGroupTree
    void setAllowCaching(boolean) -> setAllowCaching
    boolean needMirroring() -> needMirroring
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getChangingConfigurations() -> getChangingConfigurations
    void invalidateSelf() -> invalidateSelf
    void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    boolean setVisible(boolean,boolean) -> setVisible
    void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    boolean setState(int[]) -> setState
    void setChangingConfigurations(int) -> setChangingConfigurations
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int[] getState() -> getState
    boolean getPadding(android.graphics.Rect) -> getPadding
    int getMinimumHeight() -> getMinimumHeight
    int getMinimumWidth() -> getMinimumWidth
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    void clearColorFilter() -> clearColorFilter
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    void jumpToCurrentState() -> jumpToCurrentState
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void setHotspot(float,float) -> setHotspot
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void <clinit>() -> <clinit>
android.support.graphics.drawable.VectorDrawableCompat$VClipPath -> android.support.graphics.drawable.VectorDrawableCompat$VClipPath:
    void <init>() -> <init>
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
    boolean isClipPath() -> isClipPath
android.support.graphics.drawable.VectorDrawableCompat$VFullPath -> android.support.graphics.drawable.VectorDrawableCompat$VFullPath:
    int[] mThemeAttrs -> mThemeAttrs
    int mStrokeColor -> mStrokeColor
    float mStrokeWidth -> mStrokeWidth
    int mFillColor -> mFillColor
    float mStrokeAlpha -> mStrokeAlpha
    int mFillRule -> mFillRule
    float mFillAlpha -> mFillAlpha
    float mTrimPathStart -> mTrimPathStart
    float mTrimPathEnd -> mTrimPathEnd
    float mTrimPathOffset -> mTrimPathOffset
    android.graphics.Paint$Cap mStrokeLineCap -> mStrokeLineCap
    android.graphics.Paint$Join mStrokeLineJoin -> mStrokeLineJoin
    float mStrokeMiterlimit -> mStrokeMiterlimit
    void <init>() -> <init>
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    boolean canApplyTheme() -> canApplyTheme
    void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    int getStrokeColor() -> getStrokeColor
    void setStrokeColor(int) -> setStrokeColor
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeAlpha() -> getStrokeAlpha
    void setStrokeAlpha(float) -> setStrokeAlpha
    int getFillColor() -> getFillColor
    void setFillColor(int) -> setFillColor
    float getFillAlpha() -> getFillAlpha
    void setFillAlpha(float) -> setFillAlpha
    float getTrimPathStart() -> getTrimPathStart
    void setTrimPathStart(float) -> setTrimPathStart
    float getTrimPathEnd() -> getTrimPathEnd
    void setTrimPathEnd(float) -> setTrimPathEnd
    float getTrimPathOffset() -> getTrimPathOffset
    void setTrimPathOffset(float) -> setTrimPathOffset
android.support.graphics.drawable.VectorDrawableCompat$VGroup -> android.support.graphics.drawable.VectorDrawableCompat$VGroup:
    android.graphics.Matrix mStackedMatrix -> mStackedMatrix
    java.util.ArrayList mChildren -> mChildren
    float mRotate -> mRotate
    float mPivotX -> mPivotX
    float mPivotY -> mPivotY
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mTranslateX -> mTranslateX
    float mTranslateY -> mTranslateY
    android.graphics.Matrix mLocalMatrix -> mLocalMatrix
    int mChangingConfigurations -> mChangingConfigurations
    int[] mThemeAttrs -> mThemeAttrs
    java.lang.String mGroupName -> mGroupName
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.v4.util.ArrayMap) -> <init>
    void <init>() -> <init>
    java.lang.String getGroupName() -> getGroupName
    android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
    void updateLocalMatrix() -> updateLocalMatrix
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getPivotX() -> getPivotX
    void setPivotX(float) -> setPivotX
    float getPivotY() -> getPivotY
    void setPivotY(float) -> setPivotY
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    float getTranslateX() -> getTranslateX
    void setTranslateX(float) -> setTranslateX
    float getTranslateY() -> getTranslateY
    void setTranslateY(float) -> setTranslateY
    android.graphics.Matrix access$200(android.support.graphics.drawable.VectorDrawableCompat$VGroup) -> access$200
    android.graphics.Matrix access$300(android.support.graphics.drawable.VectorDrawableCompat$VGroup) -> access$300
android.support.graphics.drawable.VectorDrawableCompat$VPath -> android.support.graphics.drawable.VectorDrawableCompat$VPath:
    android.support.v4.graphics.PathParser$PathDataNode[] mNodes -> mNodes
    java.lang.String mPathName -> mPathName
    int mChangingConfigurations -> mChangingConfigurations
    void <init>() -> <init>
    void printVPath(int) -> printVPath
    java.lang.String nodesToString(android.support.v4.graphics.PathParser$PathDataNode[]) -> nodesToString
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    void toPath(android.graphics.Path) -> toPath
    java.lang.String getPathName() -> getPathName
    boolean canApplyTheme() -> canApplyTheme
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    boolean isClipPath() -> isClipPath
    android.support.v4.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    void setPathData(android.support.v4.graphics.PathParser$PathDataNode[]) -> setPathData
android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer -> android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    android.graphics.Path mPath -> mPath
    android.graphics.Path mRenderPath -> mRenderPath
    android.graphics.Matrix IDENTITY_MATRIX -> IDENTITY_MATRIX
    android.graphics.Matrix mFinalPathMatrix -> mFinalPathMatrix
    android.graphics.Paint mStrokePaint -> mStrokePaint
    android.graphics.Paint mFillPaint -> mFillPaint
    android.graphics.PathMeasure mPathMeasure -> mPathMeasure
    int mChangingConfigurations -> mChangingConfigurations
    android.support.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup -> mRootGroup
    float mBaseWidth -> mBaseWidth
    float mBaseHeight -> mBaseHeight
    float mViewportWidth -> mViewportWidth
    float mViewportHeight -> mViewportHeight
    int mRootAlpha -> mRootAlpha
    java.lang.String mRootName -> mRootName
    android.support.v4.util.ArrayMap mVGTargetsMap -> mVGTargetsMap
    void <init>() -> <init>
    void setRootAlpha(int) -> setRootAlpha
    int getRootAlpha() -> getRootAlpha
    void setAlpha(float) -> setAlpha
    float getAlpha() -> getAlpha
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    void drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    float cross(float,float,float,float) -> cross
    float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    android.graphics.Paint access$000(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> access$000
    android.graphics.Paint access$002(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint) -> access$002
    android.graphics.Paint access$100(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> access$100
    android.graphics.Paint access$102(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint) -> access$102
    void <clinit>() -> <clinit>
android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    int mChangingConfigurations -> mChangingConfigurations
    android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer -> mVPathRenderer
    android.content.res.ColorStateList mTint -> mTint
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    boolean mAutoMirrored -> mAutoMirrored
    android.graphics.Bitmap mCachedBitmap -> mCachedBitmap
    int[] mCachedThemeAttrs -> mCachedThemeAttrs
    android.content.res.ColorStateList mCachedTint -> mCachedTint
    android.graphics.PorterDuff$Mode mCachedTintMode -> mCachedTintMode
    int mCachedRootAlpha -> mCachedRootAlpha
    boolean mCachedAutoMirrored -> mCachedAutoMirrored
    boolean mCacheDirty -> mCacheDirty
    android.graphics.Paint mTempPaint -> mTempPaint
    void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    boolean hasTranslucentRoot() -> hasTranslucentRoot
    android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    void updateCachedBitmap(int,int) -> updateCachedBitmap
    void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    boolean canReuseBitmap(int,int) -> canReuseBitmap
    boolean canReuseCache() -> canReuseCache
    void updateCacheStates() -> updateCacheStates
    void <init>() -> <init>
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> mDelegateState
    void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
    boolean canApplyTheme() -> canApplyTheme
    int getChangingConfigurations() -> getChangingConfigurations
android.support.graphics.drawable.animated.BuildConfig -> android.support.graphics.drawable.animated.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.graphics.drawable.animated.R -> android.support.graphics.drawable.animated.R:
    void <init>() -> <init>
android.support.graphics.drawable.animated.R$attr -> android.support.graphics.drawable.animated.R$attr:
    int font -> font
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    void <init>() -> <init>
android.support.graphics.drawable.animated.R$bool -> android.support.graphics.drawable.animated.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    void <init>() -> <init>
android.support.graphics.drawable.animated.R$color -> android.support.graphics.drawable.animated.R$color:
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_light -> secondary_text_default_material_light
    void <init>() -> <init>
android.support.graphics.drawable.animated.R$dimen -> android.support.graphics.drawable.animated.R$dimen:
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    void <init>() -> <init>
android.support.graphics.drawable.animated.R$drawable -> android.support.graphics.drawable.animated.R$drawable:
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    void <init>() -> <init>
android.support.graphics.drawable.animated.R$id -> android.support.graphics.drawable.animated.R$id:
    int action_container -> action_container
    int action_divider -> action_divider
    int action_image -> action_image
    int action_text -> action_text
    int actions -> actions
    int async -> async
    int blocking -> blocking
    int chronometer -> chronometer
    int forever -> forever
    int icon -> icon
    int icon_group -> icon_group
    int info -> info
    int italic -> italic
    int line1 -> line1
    int line3 -> line3
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int right_icon -> right_icon
    int right_side -> right_side
    int text -> text
    int text2 -> text2
    int time -> time
    int title -> title
    void <init>() -> <init>
android.support.graphics.drawable.animated.R$integer -> android.support.graphics.drawable.animated.R$integer:
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
android.support.graphics.drawable.animated.R$layout -> android.support.graphics.drawable.animated.R$layout:
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    void <init>() -> <init>
android.support.graphics.drawable.animated.R$string -> android.support.graphics.drawable.animated.R$string:
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.graphics.drawable.animated.R$style -> android.support.graphics.drawable.animated.R$style:
    int TextAppearance_Compat_Notification -> TextAppearance_Compat_Notification
    int TextAppearance_Compat_Notification_Info -> TextAppearance_Compat_Notification_Info
    int TextAppearance_Compat_Notification_Line2 -> TextAppearance_Compat_Notification_Line2
    int TextAppearance_Compat_Notification_Time -> TextAppearance_Compat_Notification_Time
    int TextAppearance_Compat_Notification_Title -> TextAppearance_Compat_Notification_Title
    int Widget_Compat_NotificationActionContainer -> Widget_Compat_NotificationActionContainer
    int Widget_Compat_NotificationActionText -> Widget_Compat_NotificationActionText
    void <init>() -> <init>
android.support.graphics.drawable.animated.R$styleable -> android.support.graphics.drawable.animated.R$styleable:
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.mediacompat.BuildConfig -> android.support.mediacompat.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.mediacompat.R -> android.support.mediacompat.R:
    void <init>() -> <init>
android.support.mediacompat.R$attr -> android.support.mediacompat.R$attr:
    int font -> font
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    void <init>() -> <init>
android.support.mediacompat.R$bool -> android.support.mediacompat.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    void <init>() -> <init>
android.support.mediacompat.R$color -> android.support.mediacompat.R$color:
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int notification_material_background_media_default_color -> notification_material_background_media_default_color
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    void <init>() -> <init>
android.support.mediacompat.R$dimen -> android.support.mediacompat.R$dimen:
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    void <init>() -> <init>
android.support.mediacompat.R$drawable -> android.support.mediacompat.R$drawable:
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    void <init>() -> <init>
android.support.mediacompat.R$id -> android.support.mediacompat.R$id:
    int action0 -> action0
    int action_container -> action_container
    int action_divider -> action_divider
    int action_image -> action_image
    int action_text -> action_text
    int actions -> actions
    int async -> async
    int blocking -> blocking
    int cancel_action -> cancel_action
    int chronometer -> chronometer
    int end_padder -> end_padder
    int forever -> forever
    int icon -> icon
    int icon_group -> icon_group
    int info -> info
    int italic -> italic
    int line1 -> line1
    int line3 -> line3
    int media_actions -> media_actions
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int right_icon -> right_icon
    int right_side -> right_side
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int text -> text
    int text2 -> text2
    int time -> time
    int title -> title
    void <init>() -> <init>
android.support.mediacompat.R$integer -> android.support.mediacompat.R$integer:
    int cancel_button_image_alpha -> cancel_button_image_alpha
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
android.support.mediacompat.R$layout -> android.support.mediacompat.R$layout:
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_custom -> notification_template_big_media_custom
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_big_media_narrow_custom -> notification_template_big_media_narrow_custom
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_lines_media -> notification_template_lines_media
    int notification_template_media -> notification_template_media
    int notification_template_media_custom -> notification_template_media_custom
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    void <init>() -> <init>
android.support.mediacompat.R$string -> android.support.mediacompat.R$string:
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.mediacompat.R$style -> android.support.mediacompat.R$style:
    int TextAppearance_Compat_Notification -> TextAppearance_Compat_Notification
    int TextAppearance_Compat_Notification_Info -> TextAppearance_Compat_Notification_Info
    int TextAppearance_Compat_Notification_Info_Media -> TextAppearance_Compat_Notification_Info_Media
    int TextAppearance_Compat_Notification_Line2 -> TextAppearance_Compat_Notification_Line2
    int TextAppearance_Compat_Notification_Line2_Media -> TextAppearance_Compat_Notification_Line2_Media
    int TextAppearance_Compat_Notification_Media -> TextAppearance_Compat_Notification_Media
    int TextAppearance_Compat_Notification_Time -> TextAppearance_Compat_Notification_Time
    int TextAppearance_Compat_Notification_Time_Media -> TextAppearance_Compat_Notification_Time_Media
    int TextAppearance_Compat_Notification_Title -> TextAppearance_Compat_Notification_Title
    int TextAppearance_Compat_Notification_Title_Media -> TextAppearance_Compat_Notification_Title_Media
    int Widget_Compat_NotificationActionContainer -> Widget_Compat_NotificationActionContainer
    int Widget_Compat_NotificationActionText -> Widget_Compat_NotificationActionText
    void <init>() -> <init>
android.support.mediacompat.R$styleable -> android.support.mediacompat.R$styleable:
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.multidex.BuildConfig -> android.support.multidex.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.multidex.MultiDex -> android.support.multidex.MultiDex:
    java.lang.String TAG -> TAG
    java.lang.String OLD_SECONDARY_FOLDER_NAME -> OLD_SECONDARY_FOLDER_NAME
    java.lang.String SECONDARY_FOLDER_NAME -> SECONDARY_FOLDER_NAME
    int MAX_SUPPORTED_SDK_VERSION -> MAX_SUPPORTED_SDK_VERSION
    int MIN_SDK_VERSION -> MIN_SDK_VERSION
    int VM_WITH_MULTIDEX_VERSION_MAJOR -> VM_WITH_MULTIDEX_VERSION_MAJOR
    int VM_WITH_MULTIDEX_VERSION_MINOR -> VM_WITH_MULTIDEX_VERSION_MINOR
    java.util.Set installedApk -> installedApk
    boolean IS_VM_MULTIDEX_CAPABLE -> IS_VM_MULTIDEX_CAPABLE
    void <init>() -> <init>
    void install(android.content.Context) -> install
    android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context) -> getApplicationInfo
    boolean isVMMultidexCapable(java.lang.String) -> isVMMultidexCapable
    void installSecondaryDexes(java.lang.ClassLoader,java.io.File,java.util.List) -> installSecondaryDexes
    boolean checkValidZipFiles(java.util.List) -> checkValidZipFiles
    java.lang.reflect.Field findField(java.lang.Object,java.lang.String) -> findField
    java.lang.reflect.Method findMethod(java.lang.Object,java.lang.String,java.lang.Class[]) -> findMethod
    void expandFieldArray(java.lang.Object,java.lang.String,java.lang.Object[]) -> expandFieldArray
    void clearOldDexDir(android.content.Context) -> clearOldDexDir
    java.lang.reflect.Field access$300(java.lang.Object,java.lang.String) -> access$300
    void access$400(java.lang.Object,java.lang.String,java.lang.Object[]) -> access$400
    java.lang.reflect.Method access$500(java.lang.Object,java.lang.String,java.lang.Class[]) -> access$500
    void <clinit>() -> <clinit>
android.support.multidex.MultiDex$V14 -> android.support.multidex.MultiDex$V14:
    void <init>() -> <init>
    void install(java.lang.ClassLoader,java.util.List,java.io.File) -> install
    java.lang.Object[] makeDexElements(java.lang.Object,java.util.ArrayList,java.io.File) -> makeDexElements
    void access$100(java.lang.ClassLoader,java.util.List,java.io.File) -> access$100
android.support.multidex.MultiDex$V19 -> android.support.multidex.MultiDex$V19:
    void <init>() -> <init>
    void install(java.lang.ClassLoader,java.util.List,java.io.File) -> install
    java.lang.Object[] makeDexElements(java.lang.Object,java.util.ArrayList,java.io.File,java.util.ArrayList) -> makeDexElements
    void access$000(java.lang.ClassLoader,java.util.List,java.io.File) -> access$000
android.support.multidex.MultiDex$V4 -> android.support.multidex.MultiDex$V4:
    void <init>() -> <init>
    void install(java.lang.ClassLoader,java.util.List) -> install
    void access$200(java.lang.ClassLoader,java.util.List) -> access$200
android.support.multidex.MultiDexApplication -> android.support.multidex.MultiDexApplication:
    void <init>() -> <init>
    void attachBaseContext(android.content.Context) -> attachBaseContext
android.support.multidex.MultiDexExtractor -> android.support.multidex.MultiDexExtractor:
    java.lang.String TAG -> TAG
    java.lang.String DEX_PREFIX -> DEX_PREFIX
    java.lang.String DEX_SUFFIX -> DEX_SUFFIX
    java.lang.String EXTRACTED_NAME_EXT -> EXTRACTED_NAME_EXT
    java.lang.String EXTRACTED_SUFFIX -> EXTRACTED_SUFFIX
    int MAX_EXTRACT_ATTEMPTS -> MAX_EXTRACT_ATTEMPTS
    java.lang.String PREFS_FILE -> PREFS_FILE
    java.lang.String KEY_TIME_STAMP -> KEY_TIME_STAMP
    java.lang.String KEY_CRC -> KEY_CRC
    java.lang.String KEY_DEX_NUMBER -> KEY_DEX_NUMBER
    int BUFFER_SIZE -> BUFFER_SIZE
    long NO_VALUE -> NO_VALUE
    java.lang.reflect.Method sApplyMethod -> sApplyMethod
    void <init>() -> <init>
    java.util.List load(android.content.Context,android.content.pm.ApplicationInfo,java.io.File,boolean) -> load
    java.util.List loadExistingExtractions(android.content.Context,java.io.File,java.io.File) -> loadExistingExtractions
    boolean isModified(android.content.Context,java.io.File,long) -> isModified
    long getTimeStamp(java.io.File) -> getTimeStamp
    long getZipCrc(java.io.File) -> getZipCrc
    java.util.List performExtractions(java.io.File,java.io.File) -> performExtractions
    void putStoredApkInfo(android.content.Context,long,long,int) -> putStoredApkInfo
    android.content.SharedPreferences getMultiDexPreferences(android.content.Context) -> getMultiDexPreferences
    void prepareDexDir(java.io.File,java.lang.String) -> prepareDexDir
    void mkdirChecked(java.io.File) -> mkdirChecked
    void extract(java.util.zip.ZipFile,java.util.zip.ZipEntry,java.io.File,java.lang.String) -> extract
    boolean verifyZipFile(java.io.File) -> verifyZipFile
    void closeQuietly(java.io.Closeable) -> closeQuietly
    void apply(android.content.SharedPreferences$Editor) -> apply
    void <clinit>() -> <clinit>
android.support.multidex.MultiDexExtractor$1 -> android.support.multidex.MultiDexExtractor$1:
    java.lang.String val$extractedFilePrefix -> val$extractedFilePrefix
    void <init>(java.lang.String) -> <init>
    boolean accept(java.io.File) -> accept
android.support.multidex.R -> android.support.multidex.R:
    void <init>() -> <init>
android.support.multidex.ZipUtil -> android.support.multidex.ZipUtil:
    int ENDHDR -> ENDHDR
    int ENDSIG -> ENDSIG
    int BUFFER_SIZE -> BUFFER_SIZE
    void <init>() -> <init>
    long getZipCrc(java.io.File) -> getZipCrc
    android.support.multidex.ZipUtil$CentralDirectory findCentralDirectory(java.io.RandomAccessFile) -> findCentralDirectory
    long computeCrcOfCentralDir(java.io.RandomAccessFile,android.support.multidex.ZipUtil$CentralDirectory) -> computeCrcOfCentralDir
android.support.multidex.ZipUtil$CentralDirectory -> android.support.multidex.ZipUtil$CentralDirectory:
    long offset -> offset
    long size -> size
    void <init>() -> <init>
android.support.transition.AnimatorUtils -> android.support.transition.AnimatorUtils:
    android.support.transition.AnimatorUtilsImpl IMPL -> IMPL
    void <init>() -> <init>
    void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    void pause(android.animation.Animator) -> pause
    void resume(android.animation.Animator) -> resume
    void <clinit>() -> <clinit>
android.support.transition.AnimatorUtilsApi14 -> android.support.transition.AnimatorUtilsApi14:
    void <init>() -> <init>
    void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    void pause(android.animation.Animator) -> pause
    void resume(android.animation.Animator) -> resume
android.support.transition.AnimatorUtilsApi14$AnimatorPauseListenerCompat -> android.support.transition.AnimatorUtilsApi14$AnimatorPauseListenerCompat:
    void onAnimationPause(android.animation.Animator) -> onAnimationPause
    void onAnimationResume(android.animation.Animator) -> onAnimationResume
android.support.transition.AnimatorUtilsApi19 -> android.support.transition.AnimatorUtilsApi19:
    void <init>() -> <init>
    void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    void pause(android.animation.Animator) -> pause
    void resume(android.animation.Animator) -> resume
android.support.transition.AnimatorUtilsImpl -> android.support.transition.AnimatorUtilsImpl:
    void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    void pause(android.animation.Animator) -> pause
    void resume(android.animation.Animator) -> resume
android.support.transition.ArcMotion -> android.support.transition.ArcMotion:
    float DEFAULT_MIN_ANGLE_DEGREES -> DEFAULT_MIN_ANGLE_DEGREES
    float DEFAULT_MAX_ANGLE_DEGREES -> DEFAULT_MAX_ANGLE_DEGREES
    float DEFAULT_MAX_TANGENT -> DEFAULT_MAX_TANGENT
    float mMinimumHorizontalAngle -> mMinimumHorizontalAngle
    float mMinimumVerticalAngle -> mMinimumVerticalAngle
    float mMaximumAngle -> mMaximumAngle
    float mMinimumHorizontalTangent -> mMinimumHorizontalTangent
    float mMinimumVerticalTangent -> mMinimumVerticalTangent
    float mMaximumTangent -> mMaximumTangent
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setMinimumHorizontalAngle(float) -> setMinimumHorizontalAngle
    float getMinimumHorizontalAngle() -> getMinimumHorizontalAngle
    void setMinimumVerticalAngle(float) -> setMinimumVerticalAngle
    float getMinimumVerticalAngle() -> getMinimumVerticalAngle
    void setMaximumAngle(float) -> setMaximumAngle
    float getMaximumAngle() -> getMaximumAngle
    float toTangent(float) -> toTangent
    android.graphics.Path getPath(float,float,float,float) -> getPath
    void <clinit>() -> <clinit>
android.support.transition.AutoTransition -> android.support.transition.AutoTransition:
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void init() -> init
android.support.transition.BuildConfig -> android.support.transition.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.transition.ChangeBounds -> android.support.transition.ChangeBounds:
    java.lang.String PROPNAME_BOUNDS -> PROPNAME_BOUNDS
    java.lang.String PROPNAME_CLIP -> PROPNAME_CLIP
    java.lang.String PROPNAME_PARENT -> PROPNAME_PARENT
    java.lang.String PROPNAME_WINDOW_X -> PROPNAME_WINDOW_X
    java.lang.String PROPNAME_WINDOW_Y -> PROPNAME_WINDOW_Y
    java.lang.String[] sTransitionProperties -> sTransitionProperties
    android.util.Property DRAWABLE_ORIGIN_PROPERTY -> DRAWABLE_ORIGIN_PROPERTY
    android.util.Property TOP_LEFT_PROPERTY -> TOP_LEFT_PROPERTY
    android.util.Property BOTTOM_RIGHT_PROPERTY -> BOTTOM_RIGHT_PROPERTY
    android.util.Property BOTTOM_RIGHT_ONLY_PROPERTY -> BOTTOM_RIGHT_ONLY_PROPERTY
    android.util.Property TOP_LEFT_ONLY_PROPERTY -> TOP_LEFT_ONLY_PROPERTY
    android.util.Property POSITION_PROPERTY -> POSITION_PROPERTY
    int[] mTempLocation -> mTempLocation
    boolean mResizeClip -> mResizeClip
    boolean mReparent -> mReparent
    android.support.transition.RectEvaluator sRectEvaluator -> sRectEvaluator
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    java.lang.String[] getTransitionProperties() -> getTransitionProperties
    void setResizeClip(boolean) -> setResizeClip
    boolean getResizeClip() -> getResizeClip
    void captureValues(android.support.transition.TransitionValues) -> captureValues
    void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    boolean parentMatches(android.view.View,android.view.View) -> parentMatches
    android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> createAnimator
    void <clinit>() -> <clinit>
android.support.transition.ChangeBounds$1 -> android.support.transition.ChangeBounds$1:
    android.graphics.Rect mBounds -> mBounds
    void <init>(java.lang.Class,java.lang.String) -> <init>
    void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
    android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.transition.ChangeBounds$10 -> android.support.transition.ChangeBounds$10:
    android.view.ViewGroup val$sceneRoot -> val$sceneRoot
    android.graphics.drawable.BitmapDrawable val$drawable -> val$drawable
    android.view.View val$view -> val$view
    float val$transitionAlpha -> val$transitionAlpha
    android.support.transition.ChangeBounds this$0 -> this$0
    void <init>(android.support.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.transition.ChangeBounds$2 -> android.support.transition.ChangeBounds$2:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    void set(android.support.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
    android.graphics.PointF get(android.support.transition.ChangeBounds$ViewBounds) -> get
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.transition.ChangeBounds$3 -> android.support.transition.ChangeBounds$3:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    void set(android.support.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
    android.graphics.PointF get(android.support.transition.ChangeBounds$ViewBounds) -> get
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.transition.ChangeBounds$4 -> android.support.transition.ChangeBounds$4:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    void set(android.view.View,android.graphics.PointF) -> set
    android.graphics.PointF get(android.view.View) -> get
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.transition.ChangeBounds$5 -> android.support.transition.ChangeBounds$5:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    void set(android.view.View,android.graphics.PointF) -> set
    android.graphics.PointF get(android.view.View) -> get
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.transition.ChangeBounds$6 -> android.support.transition.ChangeBounds$6:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    void set(android.view.View,android.graphics.PointF) -> set
    android.graphics.PointF get(android.view.View) -> get
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.transition.ChangeBounds$7 -> android.support.transition.ChangeBounds$7:
    android.support.transition.ChangeBounds$ViewBounds mViewBounds -> mViewBounds
    android.support.transition.ChangeBounds$ViewBounds val$viewBounds -> val$viewBounds
    android.support.transition.ChangeBounds this$0 -> this$0
    void <init>(android.support.transition.ChangeBounds,android.support.transition.ChangeBounds$ViewBounds) -> <init>
android.support.transition.ChangeBounds$8 -> android.support.transition.ChangeBounds$8:
    boolean mIsCanceled -> mIsCanceled
    android.view.View val$view -> val$view
    android.graphics.Rect val$finalClip -> val$finalClip
    int val$endLeft -> val$endLeft
    int val$endTop -> val$endTop
    int val$endRight -> val$endRight
    int val$endBottom -> val$endBottom
    android.support.transition.ChangeBounds this$0 -> this$0
    void <init>(android.support.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.transition.ChangeBounds$9 -> android.support.transition.ChangeBounds$9:
    boolean mCanceled -> mCanceled
    android.view.ViewGroup val$parent -> val$parent
    android.support.transition.ChangeBounds this$0 -> this$0
    void <init>(android.support.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    void onTransitionCancel(android.support.transition.Transition) -> onTransitionCancel
    void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
    void onTransitionPause(android.support.transition.Transition) -> onTransitionPause
    void onTransitionResume(android.support.transition.Transition) -> onTransitionResume
android.support.transition.ChangeBounds$ViewBounds -> android.support.transition.ChangeBounds$ViewBounds:
    int mLeft -> mLeft
    int mTop -> mTop
    int mRight -> mRight
    int mBottom -> mBottom
    android.view.View mView -> mView
    int mTopLeftCalls -> mTopLeftCalls
    int mBottomRightCalls -> mBottomRightCalls
    void <init>(android.view.View) -> <init>
    void setTopLeft(android.graphics.PointF) -> setTopLeft
    void setBottomRight(android.graphics.PointF) -> setBottomRight
    void setLeftTopRightBottom() -> setLeftTopRightBottom
android.support.transition.ChangeClipBounds -> android.support.transition.ChangeClipBounds:
    java.lang.String PROPNAME_CLIP -> PROPNAME_CLIP
    java.lang.String PROPNAME_BOUNDS -> PROPNAME_BOUNDS
    java.lang.String[] sTransitionProperties -> sTransitionProperties
    java.lang.String[] getTransitionProperties() -> getTransitionProperties
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void captureValues(android.support.transition.TransitionValues) -> captureValues
    void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> createAnimator
    void <clinit>() -> <clinit>
android.support.transition.ChangeClipBounds$1 -> android.support.transition.ChangeClipBounds$1:
    android.view.View val$endView -> val$endView
    android.support.transition.ChangeClipBounds this$0 -> this$0
    void <init>(android.support.transition.ChangeClipBounds,android.view.View) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.transition.ChangeImageTransform -> android.support.transition.ChangeImageTransform:
    java.lang.String PROPNAME_MATRIX -> PROPNAME_MATRIX
    java.lang.String PROPNAME_BOUNDS -> PROPNAME_BOUNDS
    java.lang.String[] sTransitionProperties -> sTransitionProperties
    android.animation.TypeEvaluator NULL_MATRIX_EVALUATOR -> NULL_MATRIX_EVALUATOR
    android.util.Property ANIMATED_TRANSFORM_PROPERTY -> ANIMATED_TRANSFORM_PROPERTY
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void captureValues(android.support.transition.TransitionValues) -> captureValues
    void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    java.lang.String[] getTransitionProperties() -> getTransitionProperties
    android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> createAnimator
    android.animation.ObjectAnimator createNullAnimator(android.widget.ImageView) -> createNullAnimator
    android.animation.ObjectAnimator createMatrixAnimator(android.widget.ImageView,android.graphics.Matrix,android.graphics.Matrix) -> createMatrixAnimator
    android.graphics.Matrix copyImageMatrix(android.widget.ImageView) -> copyImageMatrix
    android.graphics.Matrix fitXYMatrix(android.widget.ImageView) -> fitXYMatrix
    android.graphics.Matrix centerCropMatrix(android.widget.ImageView) -> centerCropMatrix
    void <clinit>() -> <clinit>
android.support.transition.ChangeImageTransform$1 -> android.support.transition.ChangeImageTransform$1:
    void <init>() -> <init>
    android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
android.support.transition.ChangeImageTransform$2 -> android.support.transition.ChangeImageTransform$2:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    void set(android.widget.ImageView,android.graphics.Matrix) -> set
    android.graphics.Matrix get(android.widget.ImageView) -> get
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.transition.ChangeImageTransform$3 -> android.support.transition.ChangeImageTransform$3:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
    void <clinit>() -> <clinit>
android.support.transition.ChangeScroll -> android.support.transition.ChangeScroll:
    java.lang.String PROPNAME_SCROLL_X -> PROPNAME_SCROLL_X
    java.lang.String PROPNAME_SCROLL_Y -> PROPNAME_SCROLL_Y
    java.lang.String[] PROPERTIES -> PROPERTIES
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    java.lang.String[] getTransitionProperties() -> getTransitionProperties
    void captureValues(android.support.transition.TransitionValues) -> captureValues
    android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> createAnimator
    void <clinit>() -> <clinit>
android.support.transition.ChangeTransform -> android.support.transition.ChangeTransform:
    java.lang.String PROPNAME_MATRIX -> PROPNAME_MATRIX
    java.lang.String PROPNAME_TRANSFORMS -> PROPNAME_TRANSFORMS
    java.lang.String PROPNAME_PARENT -> PROPNAME_PARENT
    java.lang.String PROPNAME_PARENT_MATRIX -> PROPNAME_PARENT_MATRIX
    java.lang.String PROPNAME_INTERMEDIATE_PARENT_MATRIX -> PROPNAME_INTERMEDIATE_PARENT_MATRIX
    java.lang.String PROPNAME_INTERMEDIATE_MATRIX -> PROPNAME_INTERMEDIATE_MATRIX
    java.lang.String[] sTransitionProperties -> sTransitionProperties
    android.util.Property NON_TRANSLATIONS_PROPERTY -> NON_TRANSLATIONS_PROPERTY
    android.util.Property TRANSLATIONS_PROPERTY -> TRANSLATIONS_PROPERTY
    boolean SUPPORTS_VIEW_REMOVAL_SUPPRESSION -> SUPPORTS_VIEW_REMOVAL_SUPPRESSION
    boolean mUseOverlay -> mUseOverlay
    boolean mReparent -> mReparent
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    boolean getReparentWithOverlay() -> getReparentWithOverlay
    void setReparentWithOverlay(boolean) -> setReparentWithOverlay
    boolean getReparent() -> getReparent
    void setReparent(boolean) -> setReparent
    java.lang.String[] getTransitionProperties() -> getTransitionProperties
    void captureValues(android.support.transition.TransitionValues) -> captureValues
    void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> createAnimator
    android.animation.ObjectAnimator createTransformAnimator(android.support.transition.TransitionValues,android.support.transition.TransitionValues,boolean) -> createTransformAnimator
    boolean parentsMatch(android.view.ViewGroup,android.view.ViewGroup) -> parentsMatch
    void createGhostView(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> createGhostView
    void setMatricesForParent(android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> setMatricesForParent
    void setIdentityTransforms(android.view.View) -> setIdentityTransforms
    void setTransforms(android.view.View,float,float,float,float,float,float,float,float) -> setTransforms
    boolean access$000(android.support.transition.ChangeTransform) -> access$000
    void access$100(android.view.View) -> access$100
    void access$200(android.view.View,float,float,float,float,float,float,float,float) -> access$200
    void <clinit>() -> <clinit>
android.support.transition.ChangeTransform$1 -> android.support.transition.ChangeTransform$1:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    float[] get(android.support.transition.ChangeTransform$PathAnimatorMatrix) -> get
    void set(android.support.transition.ChangeTransform$PathAnimatorMatrix,float[]) -> set
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.transition.ChangeTransform$2 -> android.support.transition.ChangeTransform$2:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    android.graphics.PointF get(android.support.transition.ChangeTransform$PathAnimatorMatrix) -> get
    void set(android.support.transition.ChangeTransform$PathAnimatorMatrix,android.graphics.PointF) -> set
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.transition.ChangeTransform$3 -> android.support.transition.ChangeTransform$3:
    boolean mIsCanceled -> mIsCanceled
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    boolean val$handleParentChange -> val$handleParentChange
    android.graphics.Matrix val$finalEndMatrix -> val$finalEndMatrix
    android.view.View val$view -> val$view
    android.support.transition.ChangeTransform$Transforms val$transforms -> val$transforms
    android.support.transition.ChangeTransform$PathAnimatorMatrix val$pathAnimatorMatrix -> val$pathAnimatorMatrix
    android.support.transition.ChangeTransform this$0 -> this$0
    void <init>(android.support.transition.ChangeTransform,boolean,android.graphics.Matrix,android.view.View,android.support.transition.ChangeTransform$Transforms,android.support.transition.ChangeTransform$PathAnimatorMatrix) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationPause(android.animation.Animator) -> onAnimationPause
    void onAnimationResume(android.animation.Animator) -> onAnimationResume
    void setCurrentMatrix(android.graphics.Matrix) -> setCurrentMatrix
android.support.transition.ChangeTransform$GhostListener -> android.support.transition.ChangeTransform$GhostListener:
    android.view.View mView -> mView
    android.support.transition.GhostViewImpl mGhostView -> mGhostView
    void <init>(android.view.View,android.support.transition.GhostViewImpl) -> <init>
    void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
    void onTransitionPause(android.support.transition.Transition) -> onTransitionPause
    void onTransitionResume(android.support.transition.Transition) -> onTransitionResume
android.support.transition.ChangeTransform$PathAnimatorMatrix -> android.support.transition.ChangeTransform$PathAnimatorMatrix:
    android.graphics.Matrix mMatrix -> mMatrix
    android.view.View mView -> mView
    float[] mValues -> mValues
    float mTranslationX -> mTranslationX
    float mTranslationY -> mTranslationY
    void <init>(android.view.View,float[]) -> <init>
    void setValues(float[]) -> setValues
    void setTranslation(android.graphics.PointF) -> setTranslation
    void setAnimationMatrix() -> setAnimationMatrix
    android.graphics.Matrix getMatrix() -> getMatrix
android.support.transition.ChangeTransform$Transforms -> android.support.transition.ChangeTransform$Transforms:
    float mTranslationX -> mTranslationX
    float mTranslationY -> mTranslationY
    float mTranslationZ -> mTranslationZ
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mRotationX -> mRotationX
    float mRotationY -> mRotationY
    float mRotationZ -> mRotationZ
    void <init>(android.view.View) -> <init>
    void restore(android.view.View) -> restore
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.transition.CircularPropagation -> android.support.transition.CircularPropagation:
    float mPropagationSpeed -> mPropagationSpeed
    void <init>() -> <init>
    void setPropagationSpeed(float) -> setPropagationSpeed
    long getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> getStartDelay
    float distance(float,float,float,float) -> distance
android.support.transition.Explode -> android.support.transition.Explode:
    android.animation.TimeInterpolator sDecelerate -> sDecelerate
    android.animation.TimeInterpolator sAccelerate -> sAccelerate
    java.lang.String PROPNAME_SCREEN_BOUNDS -> PROPNAME_SCREEN_BOUNDS
    int[] mTempLoc -> mTempLoc
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void captureValues(android.support.transition.TransitionValues) -> captureValues
    void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> onAppear
    android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> onDisappear
    void calculateOut(android.view.View,android.graphics.Rect,int[]) -> calculateOut
    float calculateMaxDistance(android.view.View,int,int) -> calculateMaxDistance
    float calculateDistance(float,float) -> calculateDistance
    void <clinit>() -> <clinit>
android.support.transition.Fade -> android.support.transition.Fade:
    java.lang.String PROPNAME_TRANSITION_ALPHA -> PROPNAME_TRANSITION_ALPHA
    java.lang.String LOG_TAG -> LOG_TAG
    int IN -> IN
    int OUT -> OUT
    void <init>(int) -> <init>
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    android.animation.Animator createAnimation(android.view.View,float,float) -> createAnimation
    android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> onAppear
    android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> onDisappear
    float getStartAlpha(android.support.transition.TransitionValues,float) -> getStartAlpha
android.support.transition.Fade$1 -> android.support.transition.Fade$1:
    android.view.View val$view -> val$view
    android.support.transition.Fade this$0 -> this$0
    void <init>(android.support.transition.Fade,android.view.View) -> <init>
    void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
android.support.transition.Fade$FadeAnimatorListener -> android.support.transition.Fade$FadeAnimatorListener:
    android.view.View mView -> mView
    boolean mLayerTypeChanged -> mLayerTypeChanged
    void <init>(android.view.View) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.transition.FloatArrayEvaluator -> android.support.transition.FloatArrayEvaluator:
    float[] mArray -> mArray
    void <init>(float[]) -> <init>
    float[] evaluate(float,float[],float[]) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
android.support.transition.GhostViewApi14 -> android.support.transition.GhostViewApi14:
    android.view.View mView -> mView
    android.view.ViewGroup mStartParent -> mStartParent
    android.view.View mStartView -> mStartView
    int mReferences -> mReferences
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    android.graphics.Matrix mCurrentMatrix -> mCurrentMatrix
    android.graphics.Matrix mMatrix -> mMatrix
    android.view.ViewTreeObserver$OnPreDrawListener mOnPreDrawListener -> mOnPreDrawListener
    void <init>(android.view.View) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void setVisibility(int) -> setVisibility
    void reserveEndViewTransition(android.view.ViewGroup,android.view.View) -> reserveEndViewTransition
    void setGhostView(android.view.View,android.support.transition.GhostViewApi14) -> setGhostView
    android.support.transition.GhostViewApi14 getGhostView(android.view.View) -> getGhostView
android.support.transition.GhostViewApi14$1 -> android.support.transition.GhostViewApi14$1:
    android.support.transition.GhostViewApi14 this$0 -> this$0
    void <init>(android.support.transition.GhostViewApi14) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.transition.GhostViewApi14$Creator -> android.support.transition.GhostViewApi14$Creator:
    void <init>() -> <init>
    android.support.transition.GhostViewImpl addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> addGhost
    void removeGhost(android.view.View) -> removeGhost
    android.widget.FrameLayout findFrameLayout(android.view.ViewGroup) -> findFrameLayout
android.support.transition.GhostViewApi21 -> android.support.transition.GhostViewApi21:
    java.lang.String TAG -> TAG
    java.lang.Class sGhostViewClass -> sGhostViewClass
    boolean sGhostViewClassFetched -> sGhostViewClassFetched
    java.lang.reflect.Method sAddGhostMethod -> sAddGhostMethod
    boolean sAddGhostMethodFetched -> sAddGhostMethodFetched
    java.lang.reflect.Method sRemoveGhostMethod -> sRemoveGhostMethod
    boolean sRemoveGhostMethodFetched -> sRemoveGhostMethodFetched
    android.view.View mGhostView -> mGhostView
    void <init>(android.view.View) -> <init>
    void setVisibility(int) -> setVisibility
    void reserveEndViewTransition(android.view.ViewGroup,android.view.View) -> reserveEndViewTransition
    void fetchGhostViewClass() -> fetchGhostViewClass
    void fetchAddGhostMethod() -> fetchAddGhostMethod
    void fetchRemoveGhostMethod() -> fetchRemoveGhostMethod
    void access$000() -> access$000
    java.lang.reflect.Method access$100() -> access$100
    void <init>(android.view.View,android.support.transition.GhostViewApi21$1) -> <init>
    void access$300() -> access$300
    java.lang.reflect.Method access$400() -> access$400
android.support.transition.GhostViewApi21$1 -> android.support.transition.GhostViewApi21$1:
android.support.transition.GhostViewApi21$Creator -> android.support.transition.GhostViewApi21$Creator:
    void <init>() -> <init>
    android.support.transition.GhostViewImpl addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> addGhost
    void removeGhost(android.view.View) -> removeGhost
android.support.transition.GhostViewImpl -> android.support.transition.GhostViewImpl:
    void setVisibility(int) -> setVisibility
    void reserveEndViewTransition(android.view.ViewGroup,android.view.View) -> reserveEndViewTransition
android.support.transition.GhostViewImpl$Creator -> android.support.transition.GhostViewImpl$Creator:
    android.support.transition.GhostViewImpl addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> addGhost
    void removeGhost(android.view.View) -> removeGhost
android.support.transition.GhostViewUtils -> android.support.transition.GhostViewUtils:
    android.support.transition.GhostViewImpl$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    android.support.transition.GhostViewImpl addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> addGhost
    void removeGhost(android.view.View) -> removeGhost
    void <clinit>() -> <clinit>
android.support.transition.ImageViewUtils -> android.support.transition.ImageViewUtils:
    android.support.transition.ImageViewUtilsImpl IMPL -> IMPL
    void <init>() -> <init>
    void startAnimateTransform(android.widget.ImageView) -> startAnimateTransform
    void animateTransform(android.widget.ImageView,android.graphics.Matrix) -> animateTransform
    void reserveEndAnimateTransform(android.widget.ImageView,android.animation.Animator) -> reserveEndAnimateTransform
    void <clinit>() -> <clinit>
android.support.transition.ImageViewUtilsApi14 -> android.support.transition.ImageViewUtilsApi14:
    void <init>() -> <init>
    void startAnimateTransform(android.widget.ImageView) -> startAnimateTransform
    void animateTransform(android.widget.ImageView,android.graphics.Matrix) -> animateTransform
    void reserveEndAnimateTransform(android.widget.ImageView,android.animation.Animator) -> reserveEndAnimateTransform
android.support.transition.ImageViewUtilsApi14$1 -> android.support.transition.ImageViewUtilsApi14$1:
    android.widget.ImageView val$view -> val$view
    android.support.transition.ImageViewUtilsApi14 this$0 -> this$0
    void <init>(android.support.transition.ImageViewUtilsApi14,android.widget.ImageView) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.transition.ImageViewUtilsApi21 -> android.support.transition.ImageViewUtilsApi21:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sAnimateTransformMethod -> sAnimateTransformMethod
    boolean sAnimateTransformMethodFetched -> sAnimateTransformMethodFetched
    void <init>() -> <init>
    void startAnimateTransform(android.widget.ImageView) -> startAnimateTransform
    void animateTransform(android.widget.ImageView,android.graphics.Matrix) -> animateTransform
    void reserveEndAnimateTransform(android.widget.ImageView,android.animation.Animator) -> reserveEndAnimateTransform
    void fetchAnimateTransformMethod() -> fetchAnimateTransformMethod
android.support.transition.ImageViewUtilsImpl -> android.support.transition.ImageViewUtilsImpl:
    void startAnimateTransform(android.widget.ImageView) -> startAnimateTransform
    void animateTransform(android.widget.ImageView,android.graphics.Matrix) -> animateTransform
    void reserveEndAnimateTransform(android.widget.ImageView,android.animation.Animator) -> reserveEndAnimateTransform
android.support.transition.MatrixUtils -> android.support.transition.MatrixUtils:
    android.graphics.Matrix IDENTITY_MATRIX -> IDENTITY_MATRIX
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.transition.MatrixUtils$1 -> android.support.transition.MatrixUtils$1:
    void <init>() -> <init>
    void oops() -> oops
    void set(android.graphics.Matrix) -> set
    void reset() -> reset
    void setTranslate(float,float) -> setTranslate
    void setScale(float,float,float,float) -> setScale
    void setScale(float,float) -> setScale
    void setRotate(float,float,float) -> setRotate
    void setRotate(float) -> setRotate
    void setSinCos(float,float,float,float) -> setSinCos
    void setSinCos(float,float) -> setSinCos
    void setSkew(float,float,float,float) -> setSkew
    void setSkew(float,float) -> setSkew
    boolean setConcat(android.graphics.Matrix,android.graphics.Matrix) -> setConcat
    boolean preTranslate(float,float) -> preTranslate
    boolean preScale(float,float,float,float) -> preScale
    boolean preScale(float,float) -> preScale
    boolean preRotate(float,float,float) -> preRotate
    boolean preRotate(float) -> preRotate
    boolean preSkew(float,float,float,float) -> preSkew
    boolean preSkew(float,float) -> preSkew
    boolean preConcat(android.graphics.Matrix) -> preConcat
    boolean postTranslate(float,float) -> postTranslate
    boolean postScale(float,float,float,float) -> postScale
    boolean postScale(float,float) -> postScale
    boolean postRotate(float,float,float) -> postRotate
    boolean postRotate(float) -> postRotate
    boolean postSkew(float,float,float,float) -> postSkew
    boolean postSkew(float,float) -> postSkew
    boolean postConcat(android.graphics.Matrix) -> postConcat
    boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit) -> setRectToRect
    boolean setPolyToPoly(float[],int,float[],int,int) -> setPolyToPoly
    void setValues(float[]) -> setValues
android.support.transition.ObjectAnimatorUtils -> android.support.transition.ObjectAnimatorUtils:
    android.support.transition.ObjectAnimatorUtilsImpl IMPL -> IMPL
    void <init>() -> <init>
    android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
    void <clinit>() -> <clinit>
android.support.transition.ObjectAnimatorUtilsApi14 -> android.support.transition.ObjectAnimatorUtilsApi14:
    void <init>() -> <init>
    android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
android.support.transition.ObjectAnimatorUtilsApi21 -> android.support.transition.ObjectAnimatorUtilsApi21:
    void <init>() -> <init>
    android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
android.support.transition.ObjectAnimatorUtilsImpl -> android.support.transition.ObjectAnimatorUtilsImpl:
    android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
android.support.transition.PathMotion -> android.support.transition.PathMotion:
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.graphics.Path getPath(float,float,float,float) -> getPath
android.support.transition.PathProperty -> android.support.transition.PathProperty:
    android.util.Property mProperty -> mProperty
    android.graphics.PathMeasure mPathMeasure -> mPathMeasure
    float mPathLength -> mPathLength
    float[] mPosition -> mPosition
    android.graphics.PointF mPointF -> mPointF
    float mCurrentFraction -> mCurrentFraction
    void <init>(android.util.Property,android.graphics.Path) -> <init>
    java.lang.Float get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Float) -> set
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.transition.PatternPathMotion -> android.support.transition.PatternPathMotion:
    android.graphics.Path mOriginalPatternPath -> mOriginalPatternPath
    android.graphics.Path mPatternPath -> mPatternPath
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.graphics.Path) -> <init>
    android.graphics.Path getPatternPath() -> getPatternPath
    void setPatternPath(android.graphics.Path) -> setPatternPath
    android.graphics.Path getPath(float,float,float,float) -> getPath
    float distance(float,float) -> distance
android.support.transition.PropertyValuesHolderUtils -> android.support.transition.PropertyValuesHolderUtils:
    android.support.transition.PropertyValuesHolderUtilsImpl IMPL -> IMPL
    void <init>() -> <init>
    android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
    void <clinit>() -> <clinit>
android.support.transition.PropertyValuesHolderUtilsApi14 -> android.support.transition.PropertyValuesHolderUtilsApi14:
    void <init>() -> <init>
    android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
android.support.transition.PropertyValuesHolderUtilsApi21 -> android.support.transition.PropertyValuesHolderUtilsApi21:
    void <init>() -> <init>
    android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
android.support.transition.PropertyValuesHolderUtilsImpl -> android.support.transition.PropertyValuesHolderUtilsImpl:
    android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
android.support.transition.R -> android.support.transition.R:
    void <init>() -> <init>
android.support.transition.R$attr -> android.support.transition.R$attr:
    int font -> font
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    void <init>() -> <init>
android.support.transition.R$bool -> android.support.transition.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    void <init>() -> <init>
android.support.transition.R$color -> android.support.transition.R$color:
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int notification_material_background_media_default_color -> notification_material_background_media_default_color
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    void <init>() -> <init>
android.support.transition.R$dimen -> android.support.transition.R$dimen:
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    void <init>() -> <init>
android.support.transition.R$drawable -> android.support.transition.R$drawable:
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    void <init>() -> <init>
android.support.transition.R$id -> android.support.transition.R$id:
    int action0 -> action0
    int action_container -> action_container
    int action_divider -> action_divider
    int action_image -> action_image
    int action_text -> action_text
    int actions -> actions
    int async -> async
    int blocking -> blocking
    int cancel_action -> cancel_action
    int chronometer -> chronometer
    int end_padder -> end_padder
    int forever -> forever
    int ghost_view -> ghost_view
    int icon -> icon
    int icon_group -> icon_group
    int info -> info
    int italic -> italic
    int line1 -> line1
    int line3 -> line3
    int media_actions -> media_actions
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int parent_matrix -> parent_matrix
    int right_icon -> right_icon
    int right_side -> right_side
    int save_image_matrix -> save_image_matrix
    int save_non_transition_alpha -> save_non_transition_alpha
    int save_scale_type -> save_scale_type
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int text -> text
    int text2 -> text2
    int time -> time
    int title -> title
    int transition_current_scene -> transition_current_scene
    int transition_layout_save -> transition_layout_save
    int transition_position -> transition_position
    int transition_scene_layoutid_cache -> transition_scene_layoutid_cache
    int transition_transform -> transition_transform
    void <init>() -> <init>
android.support.transition.R$integer -> android.support.transition.R$integer:
    int cancel_button_image_alpha -> cancel_button_image_alpha
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
android.support.transition.R$layout -> android.support.transition.R$layout:
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_custom -> notification_template_big_media_custom
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_big_media_narrow_custom -> notification_template_big_media_narrow_custom
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_lines_media -> notification_template_lines_media
    int notification_template_media -> notification_template_media
    int notification_template_media_custom -> notification_template_media_custom
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    void <init>() -> <init>
android.support.transition.R$string -> android.support.transition.R$string:
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.transition.R$style -> android.support.transition.R$style:
    int TextAppearance_Compat_Notification -> TextAppearance_Compat_Notification
    int TextAppearance_Compat_Notification_Info -> TextAppearance_Compat_Notification_Info
    int TextAppearance_Compat_Notification_Info_Media -> TextAppearance_Compat_Notification_Info_Media
    int TextAppearance_Compat_Notification_Line2 -> TextAppearance_Compat_Notification_Line2
    int TextAppearance_Compat_Notification_Line2_Media -> TextAppearance_Compat_Notification_Line2_Media
    int TextAppearance_Compat_Notification_Media -> TextAppearance_Compat_Notification_Media
    int TextAppearance_Compat_Notification_Time -> TextAppearance_Compat_Notification_Time
    int TextAppearance_Compat_Notification_Time_Media -> TextAppearance_Compat_Notification_Time_Media
    int TextAppearance_Compat_Notification_Title -> TextAppearance_Compat_Notification_Title
    int TextAppearance_Compat_Notification_Title_Media -> TextAppearance_Compat_Notification_Title_Media
    int Widget_Compat_NotificationActionContainer -> Widget_Compat_NotificationActionContainer
    int Widget_Compat_NotificationActionText -> Widget_Compat_NotificationActionText
    void <init>() -> <init>
android.support.transition.R$styleable -> android.support.transition.R$styleable:
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.transition.RectEvaluator -> android.support.transition.RectEvaluator:
    android.graphics.Rect mRect -> mRect
    void <init>() -> <init>
    void <init>(android.graphics.Rect) -> <init>
    android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
android.support.transition.Scene -> android.support.transition.Scene:
    android.content.Context mContext -> mContext
    int mLayoutId -> mLayoutId
    android.view.ViewGroup mSceneRoot -> mSceneRoot
    android.view.View mLayout -> mLayout
    java.lang.Runnable mEnterAction -> mEnterAction
    java.lang.Runnable mExitAction -> mExitAction
    android.support.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context) -> getSceneForLayout
    void <init>(android.view.ViewGroup) -> <init>
    void <init>(android.view.ViewGroup,int,android.content.Context) -> <init>
    void <init>(android.view.ViewGroup,android.view.View) -> <init>
    android.view.ViewGroup getSceneRoot() -> getSceneRoot
    void exit() -> exit
    void enter() -> enter
    void setCurrentScene(android.view.View,android.support.transition.Scene) -> setCurrentScene
    android.support.transition.Scene getCurrentScene(android.view.View) -> getCurrentScene
    void setEnterAction(java.lang.Runnable) -> setEnterAction
    void setExitAction(java.lang.Runnable) -> setExitAction
    boolean isCreatedFromLayoutResource() -> isCreatedFromLayoutResource
android.support.transition.SidePropagation -> android.support.transition.SidePropagation:
    float mPropagationSpeed -> mPropagationSpeed
    int mSide -> mSide
    void <init>() -> <init>
    void setSide(int) -> setSide
    void setPropagationSpeed(float) -> setPropagationSpeed
    long getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> getStartDelay
    int distance(android.view.View,int,int,int,int,int,int,int,int) -> distance
    int getMaxDistance(android.view.ViewGroup) -> getMaxDistance
android.support.transition.Slide -> android.support.transition.Slide:
    android.animation.TimeInterpolator sDecelerate -> sDecelerate
    android.animation.TimeInterpolator sAccelerate -> sAccelerate
    java.lang.String PROPNAME_SCREEN_POSITION -> PROPNAME_SCREEN_POSITION
    android.support.transition.Slide$CalculateSlide mSlideCalculator -> mSlideCalculator
    int mSlideEdge -> mSlideEdge
    android.support.transition.Slide$CalculateSlide sCalculateLeft -> sCalculateLeft
    android.support.transition.Slide$CalculateSlide sCalculateStart -> sCalculateStart
    android.support.transition.Slide$CalculateSlide sCalculateTop -> sCalculateTop
    android.support.transition.Slide$CalculateSlide sCalculateRight -> sCalculateRight
    android.support.transition.Slide$CalculateSlide sCalculateEnd -> sCalculateEnd
    android.support.transition.Slide$CalculateSlide sCalculateBottom -> sCalculateBottom
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void captureValues(android.support.transition.TransitionValues) -> captureValues
    void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    void setSlideEdge(int) -> setSlideEdge
    int getSlideEdge() -> getSlideEdge
    android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> onAppear
    android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> onDisappear
    void <clinit>() -> <clinit>
android.support.transition.Slide$1 -> android.support.transition.Slide$1:
    void <init>() -> <init>
    float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
android.support.transition.Slide$2 -> android.support.transition.Slide$2:
    void <init>() -> <init>
    float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
android.support.transition.Slide$3 -> android.support.transition.Slide$3:
    void <init>() -> <init>
    float getGoneY(android.view.ViewGroup,android.view.View) -> getGoneY
android.support.transition.Slide$4 -> android.support.transition.Slide$4:
    void <init>() -> <init>
    float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
android.support.transition.Slide$5 -> android.support.transition.Slide$5:
    void <init>() -> <init>
    float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
android.support.transition.Slide$6 -> android.support.transition.Slide$6:
    void <init>() -> <init>
    float getGoneY(android.view.ViewGroup,android.view.View) -> getGoneY
android.support.transition.Slide$CalculateSlide -> android.support.transition.Slide$CalculateSlide:
    float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
    float getGoneY(android.view.ViewGroup,android.view.View) -> getGoneY
android.support.transition.Slide$CalculateSlideHorizontal -> android.support.transition.Slide$CalculateSlideHorizontal:
    void <init>() -> <init>
    float getGoneY(android.view.ViewGroup,android.view.View) -> getGoneY
    void <init>(android.support.transition.Slide$1) -> <init>
android.support.transition.Slide$CalculateSlideVertical -> android.support.transition.Slide$CalculateSlideVertical:
    void <init>() -> <init>
    float getGoneX(android.view.ViewGroup,android.view.View) -> getGoneX
    void <init>(android.support.transition.Slide$1) -> <init>
android.support.transition.Slide$GravityFlag -> android.support.transition.Slide$GravityFlag:
android.support.transition.Styleable -> android.support.transition.Styleable:
    int[] TRANSITION_TARGET -> TRANSITION_TARGET
    int[] TRANSITION_MANAGER -> TRANSITION_MANAGER
    int[] TRANSITION -> TRANSITION
    int[] CHANGE_BOUNDS -> CHANGE_BOUNDS
    int[] VISIBILITY_TRANSITION -> VISIBILITY_TRANSITION
    int[] FADE -> FADE
    int[] CHANGE_TRANSFORM -> CHANGE_TRANSFORM
    int[] SLIDE -> SLIDE
    int[] TRANSITION_SET -> TRANSITION_SET
    int[] ARC_MOTION -> ARC_MOTION
    int[] PATTERN_PATH_MOTION -> PATTERN_PATH_MOTION
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.transition.Styleable$ArcMotion -> android.support.transition.Styleable$ArcMotion:
    int MINIMUM_HORIZONTAL_ANGLE -> MINIMUM_HORIZONTAL_ANGLE
    int MINIMUM_VERTICAL_ANGLE -> MINIMUM_VERTICAL_ANGLE
    int MAXIMUM_ANGLE -> MAXIMUM_ANGLE
android.support.transition.Styleable$ChangeBounds -> android.support.transition.Styleable$ChangeBounds:
    int RESIZE_CLIP -> RESIZE_CLIP
android.support.transition.Styleable$ChangeTransform -> android.support.transition.Styleable$ChangeTransform:
    int REPARENT -> REPARENT
    int REPARENT_WITH_OVERLAY -> REPARENT_WITH_OVERLAY
android.support.transition.Styleable$Fade -> android.support.transition.Styleable$Fade:
    int FADING_MODE -> FADING_MODE
android.support.transition.Styleable$PatternPathMotion -> android.support.transition.Styleable$PatternPathMotion:
    int PATTERN_PATH_DATA -> PATTERN_PATH_DATA
android.support.transition.Styleable$Slide -> android.support.transition.Styleable$Slide:
    int SLIDE_EDGE -> SLIDE_EDGE
android.support.transition.Styleable$Transition -> android.support.transition.Styleable$Transition:
    int INTERPOLATOR -> INTERPOLATOR
    int DURATION -> DURATION
    int START_DELAY -> START_DELAY
    int MATCH_ORDER -> MATCH_ORDER
android.support.transition.Styleable$TransitionManager -> android.support.transition.Styleable$TransitionManager:
    int FROM_SCENE -> FROM_SCENE
    int TO_SCENE -> TO_SCENE
    int TRANSITION -> TRANSITION
android.support.transition.Styleable$TransitionSet -> android.support.transition.Styleable$TransitionSet:
    int TRANSITION_ORDERING -> TRANSITION_ORDERING
android.support.transition.Styleable$TransitionTarget -> android.support.transition.Styleable$TransitionTarget:
    int TARGET_CLASS -> TARGET_CLASS
    int TARGET_ID -> TARGET_ID
    int EXCLUDE_ID -> EXCLUDE_ID
    int EXCLUDE_CLASS -> EXCLUDE_CLASS
    int TARGET_NAME -> TARGET_NAME
    int EXCLUDE_NAME -> EXCLUDE_NAME
android.support.transition.Styleable$VisibilityTransition -> android.support.transition.Styleable$VisibilityTransition:
    int TRANSITION_VISIBILITY_MODE -> TRANSITION_VISIBILITY_MODE
android.support.transition.Transition -> android.support.transition.Transition:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean DBG -> DBG
    int MATCH_INSTANCE -> MATCH_INSTANCE
    int MATCH_FIRST -> MATCH_FIRST
    int MATCH_NAME -> MATCH_NAME
    int MATCH_ID -> MATCH_ID
    int MATCH_ITEM_ID -> MATCH_ITEM_ID
    int MATCH_LAST -> MATCH_LAST
    java.lang.String MATCH_INSTANCE_STR -> MATCH_INSTANCE_STR
    java.lang.String MATCH_NAME_STR -> MATCH_NAME_STR
    java.lang.String MATCH_ID_STR -> MATCH_ID_STR
    java.lang.String MATCH_ITEM_ID_STR -> MATCH_ITEM_ID_STR
    int[] DEFAULT_MATCH_ORDER -> DEFAULT_MATCH_ORDER
    android.support.transition.PathMotion STRAIGHT_PATH_MOTION -> STRAIGHT_PATH_MOTION
    java.lang.String mName -> mName
    long mStartDelay -> mStartDelay
    long mDuration -> mDuration
    android.animation.TimeInterpolator mInterpolator -> mInterpolator
    java.util.ArrayList mTargetIds -> mTargetIds
    java.util.ArrayList mTargets -> mTargets
    java.util.ArrayList mTargetNames -> mTargetNames
    java.util.ArrayList mTargetTypes -> mTargetTypes
    java.util.ArrayList mTargetIdExcludes -> mTargetIdExcludes
    java.util.ArrayList mTargetExcludes -> mTargetExcludes
    java.util.ArrayList mTargetTypeExcludes -> mTargetTypeExcludes
    java.util.ArrayList mTargetNameExcludes -> mTargetNameExcludes
    java.util.ArrayList mTargetIdChildExcludes -> mTargetIdChildExcludes
    java.util.ArrayList mTargetChildExcludes -> mTargetChildExcludes
    java.util.ArrayList mTargetTypeChildExcludes -> mTargetTypeChildExcludes
    android.support.transition.TransitionValuesMaps mStartValues -> mStartValues
    android.support.transition.TransitionValuesMaps mEndValues -> mEndValues
    android.support.transition.TransitionSet mParent -> mParent
    int[] mMatchOrder -> mMatchOrder
    java.util.ArrayList mStartValuesList -> mStartValuesList
    java.util.ArrayList mEndValuesList -> mEndValuesList
    java.lang.ThreadLocal sRunningAnimators -> sRunningAnimators
    android.view.ViewGroup mSceneRoot -> mSceneRoot
    boolean mCanRemoveViews -> mCanRemoveViews
    java.util.ArrayList mCurrentAnimators -> mCurrentAnimators
    int mNumInstances -> mNumInstances
    boolean mPaused -> mPaused
    boolean mEnded -> mEnded
    java.util.ArrayList mListeners -> mListeners
    java.util.ArrayList mAnimators -> mAnimators
    android.support.transition.TransitionPropagation mPropagation -> mPropagation
    android.support.transition.Transition$EpicenterCallback mEpicenterCallback -> mEpicenterCallback
    android.support.v4.util.ArrayMap mNameOverrides -> mNameOverrides
    android.support.transition.PathMotion mPathMotion -> mPathMotion
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int[] parseMatchOrder(java.lang.String) -> parseMatchOrder
    android.support.transition.Transition setDuration(long) -> setDuration
    long getDuration() -> getDuration
    android.support.transition.Transition setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    java.lang.String[] getTransitionProperties() -> getTransitionProperties
    android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> createAnimator
    void setMatchOrder(int[]) -> setMatchOrder
    boolean isValidMatch(int) -> isValidMatch
    boolean alreadyContains(int[],int) -> alreadyContains
    void matchInstances(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap) -> matchInstances
    void matchItemIds(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.LongSparseArray,android.support.v4.util.LongSparseArray) -> matchItemIds
    void matchIds(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    void matchNames(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap) -> matchNames
    void addUnmatched(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap) -> addUnmatched
    void matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps) -> matchStartAndEnd
    void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    boolean isValidTarget(android.view.View) -> isValidTarget
    android.support.v4.util.ArrayMap getRunningAnimators() -> getRunningAnimators
    void runAnimators() -> runAnimators
    void runAnimator(android.animation.Animator,android.support.v4.util.ArrayMap) -> runAnimator
    void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    android.support.transition.Transition addTarget(android.view.View) -> addTarget
    android.support.transition.Transition addTarget(int) -> addTarget
    android.support.transition.Transition addTarget(java.lang.String) -> addTarget
    android.support.transition.Transition addTarget(java.lang.Class) -> addTarget
    android.support.transition.Transition removeTarget(android.view.View) -> removeTarget
    android.support.transition.Transition removeTarget(int) -> removeTarget
    android.support.transition.Transition removeTarget(java.lang.String) -> removeTarget
    android.support.transition.Transition removeTarget(java.lang.Class) -> removeTarget
    java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean) -> excludeObject
    android.support.transition.Transition excludeTarget(android.view.View,boolean) -> excludeTarget
    android.support.transition.Transition excludeTarget(int,boolean) -> excludeTarget
    android.support.transition.Transition excludeTarget(java.lang.String,boolean) -> excludeTarget
    android.support.transition.Transition excludeChildren(android.view.View,boolean) -> excludeChildren
    android.support.transition.Transition excludeChildren(int,boolean) -> excludeChildren
    java.util.ArrayList excludeId(java.util.ArrayList,int,boolean) -> excludeId
    java.util.ArrayList excludeView(java.util.ArrayList,android.view.View,boolean) -> excludeView
    android.support.transition.Transition excludeTarget(java.lang.Class,boolean) -> excludeTarget
    android.support.transition.Transition excludeChildren(java.lang.Class,boolean) -> excludeChildren
    java.util.ArrayList excludeType(java.util.ArrayList,java.lang.Class,boolean) -> excludeType
    java.util.List getTargetIds() -> getTargetIds
    java.util.List getTargets() -> getTargets
    java.util.List getTargetNames() -> getTargetNames
    java.util.List getTargetTypes() -> getTargetTypes
    void captureValues(android.view.ViewGroup,boolean) -> captureValues
    void addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues) -> addViewValues
    void clearValues(boolean) -> clearValues
    void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    android.support.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    android.support.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    void pause(android.view.View) -> pause
    void resume(android.view.View) -> resume
    void playTransition(android.view.ViewGroup) -> playTransition
    boolean isTransitionRequired(android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> isTransitionRequired
    boolean isValueChanged(android.support.transition.TransitionValues,android.support.transition.TransitionValues,java.lang.String) -> isValueChanged
    void animate(android.animation.Animator) -> animate
    void start() -> start
    void end() -> end
    void forceToEnd(android.view.ViewGroup) -> forceToEnd
    void cancel() -> cancel
    android.support.transition.Transition addListener(android.support.transition.Transition$TransitionListener) -> addListener
    android.support.transition.Transition removeListener(android.support.transition.Transition$TransitionListener) -> removeListener
    void setPathMotion(android.support.transition.PathMotion) -> setPathMotion
    android.support.transition.PathMotion getPathMotion() -> getPathMotion
    void setEpicenterCallback(android.support.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    android.support.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    android.graphics.Rect getEpicenter() -> getEpicenter
    void setPropagation(android.support.transition.TransitionPropagation) -> setPropagation
    android.support.transition.TransitionPropagation getPropagation() -> getPropagation
    void capturePropagationValues(android.support.transition.TransitionValues) -> capturePropagationValues
    android.support.transition.Transition setSceneRoot(android.view.ViewGroup) -> setSceneRoot
    void setCanRemoveViews(boolean) -> setCanRemoveViews
    java.lang.String toString() -> toString
    android.support.transition.Transition clone() -> clone
    java.lang.String getName() -> getName
    java.lang.String toString(java.lang.String) -> toString
    java.lang.Object clone() -> clone
    java.util.ArrayList access$000(android.support.transition.Transition) -> access$000
    void <clinit>() -> <clinit>
android.support.transition.Transition$1 -> android.support.transition.Transition$1:
    void <init>() -> <init>
    android.graphics.Path getPath(float,float,float,float) -> getPath
android.support.transition.Transition$2 -> android.support.transition.Transition$2:
    android.support.v4.util.ArrayMap val$runningAnimators -> val$runningAnimators
    android.support.transition.Transition this$0 -> this$0
    void <init>(android.support.transition.Transition,android.support.v4.util.ArrayMap) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.transition.Transition$3 -> android.support.transition.Transition$3:
    android.support.transition.Transition this$0 -> this$0
    void <init>(android.support.transition.Transition) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.transition.Transition$AnimationInfo -> android.support.transition.Transition$AnimationInfo:
    android.view.View mView -> mView
    java.lang.String mName -> mName
    android.support.transition.TransitionValues mValues -> mValues
    android.support.transition.WindowIdImpl mWindowId -> mWindowId
    android.support.transition.Transition mTransition -> mTransition
    void <init>(android.view.View,java.lang.String,android.support.transition.Transition,android.support.transition.WindowIdImpl,android.support.transition.TransitionValues) -> <init>
android.support.transition.Transition$ArrayListManager -> android.support.transition.Transition$ArrayListManager:
    void <init>() -> <init>
    java.util.ArrayList add(java.util.ArrayList,java.lang.Object) -> add
    java.util.ArrayList remove(java.util.ArrayList,java.lang.Object) -> remove
android.support.transition.Transition$EpicenterCallback -> android.support.transition.Transition$EpicenterCallback:
    void <init>() -> <init>
    android.graphics.Rect onGetEpicenter(android.support.transition.Transition) -> onGetEpicenter
android.support.transition.Transition$MatchOrder -> android.support.transition.Transition$MatchOrder:
android.support.transition.Transition$TransitionListener -> android.support.transition.Transition$TransitionListener:
    void onTransitionStart(android.support.transition.Transition) -> onTransitionStart
    void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
    void onTransitionCancel(android.support.transition.Transition) -> onTransitionCancel
    void onTransitionPause(android.support.transition.Transition) -> onTransitionPause
    void onTransitionResume(android.support.transition.Transition) -> onTransitionResume
android.support.transition.TransitionInflater -> android.support.transition.TransitionInflater:
    java.lang.Class[] CONSTRUCTOR_SIGNATURE -> CONSTRUCTOR_SIGNATURE
    android.support.v4.util.ArrayMap CONSTRUCTORS -> CONSTRUCTORS
    android.content.Context mContext -> mContext
    void <init>(android.content.Context) -> <init>
    android.support.transition.TransitionInflater from(android.content.Context) -> from
    android.support.transition.Transition inflateTransition(int) -> inflateTransition
    android.support.transition.TransitionManager inflateTransitionManager(int,android.view.ViewGroup) -> inflateTransitionManager
    android.support.transition.Transition createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition) -> createTransitionFromXml
    java.lang.Object createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String) -> createCustom
    void getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition) -> getTargetIds
    android.support.transition.TransitionManager createTransitionManagerFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.ViewGroup) -> createTransitionManagerFromXml
    void loadTransition(android.util.AttributeSet,org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,android.support.transition.TransitionManager) -> loadTransition
    void <clinit>() -> <clinit>
android.support.transition.TransitionListenerAdapter -> android.support.transition.TransitionListenerAdapter:
    void <init>() -> <init>
    void onTransitionStart(android.support.transition.Transition) -> onTransitionStart
    void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
    void onTransitionCancel(android.support.transition.Transition) -> onTransitionCancel
    void onTransitionPause(android.support.transition.Transition) -> onTransitionPause
    void onTransitionResume(android.support.transition.Transition) -> onTransitionResume
android.support.transition.TransitionManager -> android.support.transition.TransitionManager:
    java.lang.String LOG_TAG -> LOG_TAG
    android.support.transition.Transition sDefaultTransition -> sDefaultTransition
    android.support.v4.util.ArrayMap mSceneTransitions -> mSceneTransitions
    android.support.v4.util.ArrayMap mScenePairTransitions -> mScenePairTransitions
    java.lang.ThreadLocal sRunningTransitions -> sRunningTransitions
    java.util.ArrayList sPendingTransitions -> sPendingTransitions
    void <init>() -> <init>
    void setTransition(android.support.transition.Scene,android.support.transition.Transition) -> setTransition
    void setTransition(android.support.transition.Scene,android.support.transition.Scene,android.support.transition.Transition) -> setTransition
    android.support.transition.Transition getTransition(android.support.transition.Scene) -> getTransition
    void changeScene(android.support.transition.Scene,android.support.transition.Transition) -> changeScene
    android.support.v4.util.ArrayMap getRunningTransitions() -> getRunningTransitions
    void sceneChangeRunTransition(android.view.ViewGroup,android.support.transition.Transition) -> sceneChangeRunTransition
    void sceneChangeSetup(android.view.ViewGroup,android.support.transition.Transition) -> sceneChangeSetup
    void transitionTo(android.support.transition.Scene) -> transitionTo
    void go(android.support.transition.Scene) -> go
    void go(android.support.transition.Scene,android.support.transition.Transition) -> go
    void beginDelayedTransition(android.view.ViewGroup) -> beginDelayedTransition
    void beginDelayedTransition(android.view.ViewGroup,android.support.transition.Transition) -> beginDelayedTransition
    void endTransitions(android.view.ViewGroup) -> endTransitions
    java.util.ArrayList access$000() -> access$000
    void <clinit>() -> <clinit>
android.support.transition.TransitionManager$MultiListener -> android.support.transition.TransitionManager$MultiListener:
    android.support.transition.Transition mTransition -> mTransition
    android.view.ViewGroup mSceneRoot -> mSceneRoot
    void <init>(android.support.transition.Transition,android.view.ViewGroup) -> <init>
    void removeListeners() -> removeListeners
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    boolean onPreDraw() -> onPreDraw
android.support.transition.TransitionManager$MultiListener$1 -> android.support.transition.TransitionManager$MultiListener$1:
    android.support.v4.util.ArrayMap val$runningTransitions -> val$runningTransitions
    android.support.transition.TransitionManager$MultiListener this$0 -> this$0
    void <init>(android.support.transition.TransitionManager$MultiListener,android.support.v4.util.ArrayMap) -> <init>
    void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
android.support.transition.TransitionPropagation -> android.support.transition.TransitionPropagation:
    void <init>() -> <init>
    long getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> getStartDelay
    void captureValues(android.support.transition.TransitionValues) -> captureValues
    java.lang.String[] getPropagationProperties() -> getPropagationProperties
android.support.transition.TransitionSet -> android.support.transition.TransitionSet:
    java.util.ArrayList mTransitions -> mTransitions
    boolean mPlayTogether -> mPlayTogether
    int mCurrentListeners -> mCurrentListeners
    boolean mStarted -> mStarted
    int ORDERING_TOGETHER -> ORDERING_TOGETHER
    int ORDERING_SEQUENTIAL -> ORDERING_SEQUENTIAL
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.support.transition.TransitionSet setOrdering(int) -> setOrdering
    int getOrdering() -> getOrdering
    android.support.transition.TransitionSet addTransition(android.support.transition.Transition) -> addTransition
    int getTransitionCount() -> getTransitionCount
    android.support.transition.Transition getTransitionAt(int) -> getTransitionAt
    android.support.transition.TransitionSet setDuration(long) -> setDuration
    android.support.transition.TransitionSet setStartDelay(long) -> setStartDelay
    android.support.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    android.support.transition.TransitionSet addTarget(android.view.View) -> addTarget
    android.support.transition.TransitionSet addTarget(int) -> addTarget
    android.support.transition.TransitionSet addTarget(java.lang.String) -> addTarget
    android.support.transition.TransitionSet addTarget(java.lang.Class) -> addTarget
    android.support.transition.TransitionSet addListener(android.support.transition.Transition$TransitionListener) -> addListener
    android.support.transition.TransitionSet removeTarget(int) -> removeTarget
    android.support.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    android.support.transition.TransitionSet removeTarget(java.lang.Class) -> removeTarget
    android.support.transition.TransitionSet removeTarget(java.lang.String) -> removeTarget
    android.support.transition.Transition excludeTarget(android.view.View,boolean) -> excludeTarget
    android.support.transition.Transition excludeTarget(java.lang.String,boolean) -> excludeTarget
    android.support.transition.Transition excludeTarget(int,boolean) -> excludeTarget
    android.support.transition.Transition excludeTarget(java.lang.Class,boolean) -> excludeTarget
    android.support.transition.TransitionSet removeListener(android.support.transition.Transition$TransitionListener) -> removeListener
    void setPathMotion(android.support.transition.PathMotion) -> setPathMotion
    android.support.transition.TransitionSet removeTransition(android.support.transition.Transition) -> removeTransition
    void setupStartEndListeners() -> setupStartEndListeners
    void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    void runAnimators() -> runAnimators
    void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    void capturePropagationValues(android.support.transition.TransitionValues) -> capturePropagationValues
    void pause(android.view.View) -> pause
    void resume(android.view.View) -> resume
    void cancel() -> cancel
    void forceToEnd(android.view.ViewGroup) -> forceToEnd
    android.support.transition.TransitionSet setSceneRoot(android.view.ViewGroup) -> setSceneRoot
    void setCanRemoveViews(boolean) -> setCanRemoveViews
    void setEpicenterCallback(android.support.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    java.lang.String toString(java.lang.String) -> toString
    android.support.transition.Transition clone() -> clone
    android.support.transition.Transition setSceneRoot(android.view.ViewGroup) -> setSceneRoot
    android.support.transition.Transition removeListener(android.support.transition.Transition$TransitionListener) -> removeListener
    android.support.transition.Transition addListener(android.support.transition.Transition$TransitionListener) -> addListener
    android.support.transition.Transition removeTarget(java.lang.Class) -> removeTarget
    android.support.transition.Transition removeTarget(java.lang.String) -> removeTarget
    android.support.transition.Transition removeTarget(int) -> removeTarget
    android.support.transition.Transition removeTarget(android.view.View) -> removeTarget
    android.support.transition.Transition addTarget(java.lang.Class) -> addTarget
    android.support.transition.Transition addTarget(java.lang.String) -> addTarget
    android.support.transition.Transition addTarget(int) -> addTarget
    android.support.transition.Transition addTarget(android.view.View) -> addTarget
    android.support.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    android.support.transition.Transition setStartDelay(long) -> setStartDelay
    android.support.transition.Transition setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
    boolean access$000(android.support.transition.TransitionSet) -> access$000
    boolean access$002(android.support.transition.TransitionSet,boolean) -> access$002
    int access$106(android.support.transition.TransitionSet) -> access$106
    int access$100(android.support.transition.TransitionSet) -> access$100
android.support.transition.TransitionSet$1 -> android.support.transition.TransitionSet$1:
    android.support.transition.Transition val$nextTransition -> val$nextTransition
    android.support.transition.TransitionSet this$0 -> this$0
    void <init>(android.support.transition.TransitionSet,android.support.transition.Transition) -> <init>
    void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
android.support.transition.TransitionSet$TransitionSetListener -> android.support.transition.TransitionSet$TransitionSetListener:
    android.support.transition.TransitionSet mTransitionSet -> mTransitionSet
    void <init>(android.support.transition.TransitionSet) -> <init>
    void onTransitionStart(android.support.transition.Transition) -> onTransitionStart
    void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
android.support.transition.TransitionUtils -> android.support.transition.TransitionUtils:
    int MAX_IMAGE_SIZE -> MAX_IMAGE_SIZE
    void <init>() -> <init>
    android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> createViewBitmap
    android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
android.support.transition.TransitionUtils$MatrixEvaluator -> android.support.transition.TransitionUtils$MatrixEvaluator:
    float[] mTempStartValues -> mTempStartValues
    float[] mTempEndValues -> mTempEndValues
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    void <init>() -> <init>
    android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
android.support.transition.TransitionValues -> android.support.transition.TransitionValues:
    java.util.Map values -> values
    android.view.View view -> view
    java.util.ArrayList mTargetedTransitions -> mTargetedTransitions
    void <init>() -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.transition.TransitionValuesMaps -> android.support.transition.TransitionValuesMaps:
    android.support.v4.util.ArrayMap mViewValues -> mViewValues
    android.util.SparseArray mIdValues -> mIdValues
    android.support.v4.util.LongSparseArray mItemIdValues -> mItemIdValues
    android.support.v4.util.ArrayMap mNameValues -> mNameValues
    void <init>() -> <init>
android.support.transition.TranslationAnimationCreator -> android.support.transition.TranslationAnimationCreator:
    void <init>() -> <init>
    android.animation.Animator createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator) -> createAnimation
android.support.transition.TranslationAnimationCreator$1 -> android.support.transition.TranslationAnimationCreator$1:
android.support.transition.TranslationAnimationCreator$TransitionPositionListener -> android.support.transition.TranslationAnimationCreator$TransitionPositionListener:
    android.view.View mViewInHierarchy -> mViewInHierarchy
    android.view.View mMovingView -> mMovingView
    int mStartX -> mStartX
    int mStartY -> mStartY
    int[] mTransitionPosition -> mTransitionPosition
    float mPausedX -> mPausedX
    float mPausedY -> mPausedY
    float mTerminalX -> mTerminalX
    float mTerminalY -> mTerminalY
    void <init>(android.view.View,android.view.View,int,int,float,float) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationPause(android.animation.Animator) -> onAnimationPause
    void onAnimationResume(android.animation.Animator) -> onAnimationResume
    void <init>(android.view.View,android.view.View,int,int,float,float,android.support.transition.TranslationAnimationCreator$1) -> <init>
android.support.transition.ViewGroupOverlayApi14 -> android.support.transition.ViewGroupOverlayApi14:
    void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    android.support.transition.ViewGroupOverlayApi14 createFrom(android.view.ViewGroup) -> createFrom
    void add(android.view.View) -> add
    void remove(android.view.View) -> remove
android.support.transition.ViewGroupOverlayApi18 -> android.support.transition.ViewGroupOverlayApi18:
    android.view.ViewGroupOverlay mViewGroupOverlay -> mViewGroupOverlay
    void <init>(android.view.ViewGroup) -> <init>
    void add(android.graphics.drawable.Drawable) -> add
    void clear() -> clear
    void remove(android.graphics.drawable.Drawable) -> remove
    void add(android.view.View) -> add
    void remove(android.view.View) -> remove
android.support.transition.ViewGroupOverlayImpl -> android.support.transition.ViewGroupOverlayImpl:
    void add(android.view.View) -> add
    void remove(android.view.View) -> remove
android.support.transition.ViewGroupUtils -> android.support.transition.ViewGroupUtils:
    android.support.transition.ViewGroupUtilsImpl IMPL -> IMPL
    void <init>() -> <init>
    android.support.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
    void <clinit>() -> <clinit>
android.support.transition.ViewGroupUtilsApi14 -> android.support.transition.ViewGroupUtilsApi14:
    java.lang.String TAG -> TAG
    int LAYOUT_TRANSITION_CHANGING -> LAYOUT_TRANSITION_CHANGING
    android.animation.LayoutTransition sEmptyLayoutTransition -> sEmptyLayoutTransition
    java.lang.reflect.Field sLayoutSuppressedField -> sLayoutSuppressedField
    boolean sLayoutSuppressedFieldFetched -> sLayoutSuppressedFieldFetched
    java.lang.reflect.Method sCancelMethod -> sCancelMethod
    boolean sCancelMethodFetched -> sCancelMethodFetched
    void <init>() -> <init>
    android.support.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
    void cancelLayoutTransition(android.animation.LayoutTransition) -> cancelLayoutTransition
android.support.transition.ViewGroupUtilsApi14$1 -> android.support.transition.ViewGroupUtilsApi14$1:
    android.support.transition.ViewGroupUtilsApi14 this$0 -> this$0
    void <init>(android.support.transition.ViewGroupUtilsApi14) -> <init>
    boolean isChangingLayout() -> isChangingLayout
android.support.transition.ViewGroupUtilsApi18 -> android.support.transition.ViewGroupUtilsApi18:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sSuppressLayoutMethod -> sSuppressLayoutMethod
    boolean sSuppressLayoutMethodFetched -> sSuppressLayoutMethodFetched
    void <init>() -> <init>
    android.support.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
    void fetchSuppressLayoutMethod() -> fetchSuppressLayoutMethod
android.support.transition.ViewGroupUtilsImpl -> android.support.transition.ViewGroupUtilsImpl:
    android.support.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
android.support.transition.ViewOverlayApi14 -> android.support.transition.ViewOverlayApi14:
    android.support.transition.ViewOverlayApi14$OverlayViewGroup mOverlayViewGroup -> mOverlayViewGroup
    void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    android.view.ViewGroup getContentView(android.view.View) -> getContentView
    android.support.transition.ViewOverlayApi14 createFrom(android.view.View) -> createFrom
    android.view.ViewGroup getOverlayView() -> getOverlayView
    void add(android.graphics.drawable.Drawable) -> add
    void clear() -> clear
    void remove(android.graphics.drawable.Drawable) -> remove
    boolean isEmpty() -> isEmpty
android.support.transition.ViewOverlayApi14$OverlayViewGroup -> android.support.transition.ViewOverlayApi14$OverlayViewGroup:
    java.lang.reflect.Method sInvalidateChildInParentFastMethod -> sInvalidateChildInParentFastMethod
    android.view.ViewGroup mHostView -> mHostView
    android.view.View mRequestingView -> mRequestingView
    java.util.ArrayList mDrawables -> mDrawables
    android.support.transition.ViewOverlayApi14 mViewOverlay -> mViewOverlay
    void <init>(android.content.Context,android.view.ViewGroup,android.view.View,android.support.transition.ViewOverlayApi14) -> <init>
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void add(android.graphics.drawable.Drawable) -> add
    void remove(android.graphics.drawable.Drawable) -> remove
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void add(android.view.View) -> add
    void remove(android.view.View) -> remove
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void getOffset(int[]) -> getOffset
    void invalidateChildFast(android.view.View,android.graphics.Rect) -> invalidateChildFast
    android.view.ViewParent invalidateChildInParentFast(int,int,android.graphics.Rect) -> invalidateChildInParentFast
    android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect) -> invalidateChildInParent
    void <clinit>() -> <clinit>
android.support.transition.ViewOverlayApi14$OverlayViewGroup$TouchInterceptor -> android.support.transition.ViewOverlayApi14$OverlayViewGroup$TouchInterceptor:
    void <init>(android.content.Context) -> <init>
android.support.transition.ViewOverlayApi18 -> android.support.transition.ViewOverlayApi18:
    android.view.ViewOverlay mViewOverlay -> mViewOverlay
    void <init>(android.view.View) -> <init>
    void add(android.graphics.drawable.Drawable) -> add
    void clear() -> clear
    void remove(android.graphics.drawable.Drawable) -> remove
android.support.transition.ViewOverlayImpl -> android.support.transition.ViewOverlayImpl:
    void add(android.graphics.drawable.Drawable) -> add
    void clear() -> clear
    void remove(android.graphics.drawable.Drawable) -> remove
android.support.transition.ViewUtils -> android.support.transition.ViewUtils:
    android.support.transition.ViewUtilsImpl IMPL -> IMPL
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sViewFlagsField -> sViewFlagsField
    boolean sViewFlagsFieldFetched -> sViewFlagsFieldFetched
    int VISIBILITY_MASK -> VISIBILITY_MASK
    android.util.Property TRANSITION_ALPHA -> TRANSITION_ALPHA
    android.util.Property CLIP_BOUNDS -> CLIP_BOUNDS
    void <init>() -> <init>
    android.support.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    android.support.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
    void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> setAnimationMatrix
    void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    void fetchViewFlagsField() -> fetchViewFlagsField
    void <clinit>() -> <clinit>
android.support.transition.ViewUtils$1 -> android.support.transition.ViewUtils$1:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    java.lang.Float get(android.view.View) -> get
    void set(android.view.View,java.lang.Float) -> set
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.transition.ViewUtils$2 -> android.support.transition.ViewUtils$2:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    android.graphics.Rect get(android.view.View) -> get
    void set(android.view.View,android.graphics.Rect) -> set
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.transition.ViewUtilsApi14 -> android.support.transition.ViewUtilsApi14:
    float[] mMatrixValues -> mMatrixValues
    void <init>() -> <init>
    android.support.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    android.support.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
    void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> setAnimationMatrix
    void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
android.support.transition.ViewUtilsApi18 -> android.support.transition.ViewUtilsApi18:
    void <init>() -> <init>
    android.support.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    android.support.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
android.support.transition.ViewUtilsApi19 -> android.support.transition.ViewUtilsApi19:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sSetTransitionAlphaMethod -> sSetTransitionAlphaMethod
    boolean sSetTransitionAlphaMethodFetched -> sSetTransitionAlphaMethodFetched
    java.lang.reflect.Method sGetTransitionAlphaMethod -> sGetTransitionAlphaMethod
    boolean sGetTransitionAlphaMethodFetched -> sGetTransitionAlphaMethodFetched
    void <init>() -> <init>
    void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    void fetchSetTransitionAlphaMethod() -> fetchSetTransitionAlphaMethod
    void fetchGetTransitionAlphaMethod() -> fetchGetTransitionAlphaMethod
android.support.transition.ViewUtilsApi21 -> android.support.transition.ViewUtilsApi21:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sTransformMatrixToGlobalMethod -> sTransformMatrixToGlobalMethod
    boolean sTransformMatrixToGlobalMethodFetched -> sTransformMatrixToGlobalMethodFetched
    java.lang.reflect.Method sTransformMatrixToLocalMethod -> sTransformMatrixToLocalMethod
    boolean sTransformMatrixToLocalMethodFetched -> sTransformMatrixToLocalMethodFetched
    java.lang.reflect.Method sSetAnimationMatrixMethod -> sSetAnimationMatrixMethod
    boolean sSetAnimationMatrixMethodFetched -> sSetAnimationMatrixMethodFetched
    void <init>() -> <init>
    void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
    void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> setAnimationMatrix
    void fetchTransformMatrixToGlobalMethod() -> fetchTransformMatrixToGlobalMethod
    void fetchTransformMatrixToLocalMethod() -> fetchTransformMatrixToLocalMethod
    void fetchSetAnimationMatrix() -> fetchSetAnimationMatrix
android.support.transition.ViewUtilsApi22 -> android.support.transition.ViewUtilsApi22:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sSetLeftTopRightBottomMethod -> sSetLeftTopRightBottomMethod
    boolean sSetLeftTopRightBottomMethodFetched -> sSetLeftTopRightBottomMethodFetched
    void <init>() -> <init>
    void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    void fetchSetLeftTopRightBottomMethod() -> fetchSetLeftTopRightBottomMethod
android.support.transition.ViewUtilsImpl -> android.support.transition.ViewUtilsImpl:
    android.support.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    android.support.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
    void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> setAnimationMatrix
    void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
android.support.transition.Visibility -> android.support.transition.Visibility:
    java.lang.String PROPNAME_VISIBILITY -> PROPNAME_VISIBILITY
    java.lang.String PROPNAME_PARENT -> PROPNAME_PARENT
    java.lang.String PROPNAME_SCREEN_LOCATION -> PROPNAME_SCREEN_LOCATION
    int MODE_IN -> MODE_IN
    int MODE_OUT -> MODE_OUT
    java.lang.String[] sTransitionProperties -> sTransitionProperties
    int mMode -> mMode
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setMode(int) -> setMode
    int getMode() -> getMode
    java.lang.String[] getTransitionProperties() -> getTransitionProperties
    void captureValues(android.support.transition.TransitionValues) -> captureValues
    void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    boolean isVisible(android.support.transition.TransitionValues) -> isVisible
    android.support.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> getVisibilityChangeInfo
    android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> createAnimator
    android.animation.Animator onAppear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int) -> onAppear
    android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> onAppear
    android.animation.Animator onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int) -> onDisappear
    android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> onDisappear
    boolean isTransitionRequired(android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> isTransitionRequired
    void <clinit>() -> <clinit>
android.support.transition.Visibility$1 -> android.support.transition.Visibility$1:
    android.support.transition.ViewGroupOverlayImpl val$overlay -> val$overlay
    android.view.View val$finalOverlayView -> val$finalOverlayView
    android.support.transition.Visibility this$0 -> this$0
    void <init>(android.support.transition.Visibility,android.support.transition.ViewGroupOverlayImpl,android.view.View) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.transition.Visibility$DisappearListener -> android.support.transition.Visibility$DisappearListener:
    android.view.View mView -> mView
    int mFinalVisibility -> mFinalVisibility
    android.view.ViewGroup mParent -> mParent
    boolean mSuppressLayout -> mSuppressLayout
    boolean mLayoutSuppressed -> mLayoutSuppressed
    boolean mCanceled -> mCanceled
    void <init>(android.view.View,int,boolean) -> <init>
    void onAnimationPause(android.animation.Animator) -> onAnimationPause
    void onAnimationResume(android.animation.Animator) -> onAnimationResume
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onTransitionStart(android.support.transition.Transition) -> onTransitionStart
    void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
    void onTransitionCancel(android.support.transition.Transition) -> onTransitionCancel
    void onTransitionPause(android.support.transition.Transition) -> onTransitionPause
    void onTransitionResume(android.support.transition.Transition) -> onTransitionResume
    void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    void suppressLayout(boolean) -> suppressLayout
android.support.transition.Visibility$Mode -> android.support.transition.Visibility$Mode:
android.support.transition.Visibility$VisibilityInfo -> android.support.transition.Visibility$VisibilityInfo:
    boolean mVisibilityChange -> mVisibilityChange
    boolean mFadeIn -> mFadeIn
    int mStartVisibility -> mStartVisibility
    int mEndVisibility -> mEndVisibility
    android.view.ViewGroup mStartParent -> mStartParent
    android.view.ViewGroup mEndParent -> mEndParent
    void <init>() -> <init>
    void <init>(android.support.transition.Visibility$1) -> <init>
android.support.transition.VisibilityPropagation -> android.support.transition.VisibilityPropagation:
    java.lang.String PROPNAME_VISIBILITY -> PROPNAME_VISIBILITY
    java.lang.String PROPNAME_VIEW_CENTER -> PROPNAME_VIEW_CENTER
    java.lang.String[] VISIBILITY_PROPAGATION_VALUES -> VISIBILITY_PROPAGATION_VALUES
    void <init>() -> <init>
    void captureValues(android.support.transition.TransitionValues) -> captureValues
    java.lang.String[] getPropagationProperties() -> getPropagationProperties
    int getViewVisibility(android.support.transition.TransitionValues) -> getViewVisibility
    int getViewX(android.support.transition.TransitionValues) -> getViewX
    int getViewY(android.support.transition.TransitionValues) -> getViewY
    int getViewCoordinate(android.support.transition.TransitionValues,int) -> getViewCoordinate
    void <clinit>() -> <clinit>
android.support.transition.WindowIdApi14 -> android.support.transition.WindowIdApi14:
    android.os.IBinder mToken -> mToken
    void <init>(android.os.IBinder) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.transition.WindowIdApi18 -> android.support.transition.WindowIdApi18:
    android.view.WindowId mWindowId -> mWindowId
    void <init>(android.view.View) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.transition.WindowIdImpl -> android.support.transition.WindowIdImpl:
android.support.v4.BuildConfig -> android.support.v4.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.v4.R -> android.support.v4.R:
    void <init>() -> <init>
android.support.v4.R$attr -> android.support.v4.R$attr:
    int font -> font
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    void <init>() -> <init>
android.support.v4.R$bool -> android.support.v4.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    void <init>() -> <init>
android.support.v4.R$color -> android.support.v4.R$color:
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int notification_material_background_media_default_color -> notification_material_background_media_default_color
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    void <init>() -> <init>
android.support.v4.R$dimen -> android.support.v4.R$dimen:
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    void <init>() -> <init>
android.support.v4.R$drawable -> android.support.v4.R$drawable:
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    void <init>() -> <init>
android.support.v4.R$id -> android.support.v4.R$id:
    int action0 -> action0
    int action_container -> action_container
    int action_divider -> action_divider
    int action_image -> action_image
    int action_text -> action_text
    int actions -> actions
    int async -> async
    int blocking -> blocking
    int cancel_action -> cancel_action
    int chronometer -> chronometer
    int end_padder -> end_padder
    int forever -> forever
    int icon -> icon
    int icon_group -> icon_group
    int info -> info
    int italic -> italic
    int line1 -> line1
    int line3 -> line3
    int media_actions -> media_actions
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int right_icon -> right_icon
    int right_side -> right_side
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int text -> text
    int text2 -> text2
    int time -> time
    int title -> title
    void <init>() -> <init>
android.support.v4.R$integer -> android.support.v4.R$integer:
    int cancel_button_image_alpha -> cancel_button_image_alpha
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
android.support.v4.R$layout -> android.support.v4.R$layout:
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_custom -> notification_template_big_media_custom
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_big_media_narrow_custom -> notification_template_big_media_narrow_custom
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_lines_media -> notification_template_lines_media
    int notification_template_media -> notification_template_media
    int notification_template_media_custom -> notification_template_media_custom
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    void <init>() -> <init>
android.support.v4.R$string -> android.support.v4.R$string:
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.v4.R$style -> android.support.v4.R$style:
    int TextAppearance_Compat_Notification -> TextAppearance_Compat_Notification
    int TextAppearance_Compat_Notification_Info -> TextAppearance_Compat_Notification_Info
    int TextAppearance_Compat_Notification_Info_Media -> TextAppearance_Compat_Notification_Info_Media
    int TextAppearance_Compat_Notification_Line2 -> TextAppearance_Compat_Notification_Line2
    int TextAppearance_Compat_Notification_Line2_Media -> TextAppearance_Compat_Notification_Line2_Media
    int TextAppearance_Compat_Notification_Media -> TextAppearance_Compat_Notification_Media
    int TextAppearance_Compat_Notification_Time -> TextAppearance_Compat_Notification_Time
    int TextAppearance_Compat_Notification_Time_Media -> TextAppearance_Compat_Notification_Time_Media
    int TextAppearance_Compat_Notification_Title -> TextAppearance_Compat_Notification_Title
    int TextAppearance_Compat_Notification_Title_Media -> TextAppearance_Compat_Notification_Title_Media
    int Widget_Compat_NotificationActionContainer -> Widget_Compat_NotificationActionContainer
    int Widget_Compat_NotificationActionText -> Widget_Compat_NotificationActionText
    void <init>() -> <init>
android.support.v4.R$styleable -> android.support.v4.R$styleable:
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoBaseImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    void <init>() -> <init>
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager) -> loadDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
    void <clinit>() -> <clinit>
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoApi16Impl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoApi16Impl:
    void <init>() -> <init>
    java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager) -> loadDescription
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoApi18Impl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoApi18Impl:
    void <init>() -> <init>
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoBaseImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoBaseImpl:
    void <init>() -> <init>
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager) -> loadDescription
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    boolean mHasCustomUpIndicator -> mHasCustomUpIndicator
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> mHomeAsUpIndicator
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    android.support.v4.app.ActionBarDrawerToggle$SetIndicatorInfo mSetIndicatorInfo -> mSetIndicatorInfo
    void <init>(android.app.Activity,android.support.v4.widget.DrawerLayout,int,int,int) -> <init>
    boolean assumeMaterial(android.content.Context) -> assumeMaterial
    void <init>(android.app.Activity,android.support.v4.widget.DrawerLayout,boolean,int,int,int) -> <init>
    void syncState() -> syncState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    void <clinit>() -> <clinit>
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggle$SetIndicatorInfo:
    java.lang.reflect.Method mSetHomeAsUpIndicator -> mSetHomeAsUpIndicator
    java.lang.reflect.Method mSetHomeActionContentDescription -> mSetHomeActionContentDescription
    android.widget.ImageView mUpIndicatorView -> mUpIndicatorView
    void <init>(android.app.Activity) -> <init>
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void <init>(android.support.v4.app.ActionBarDrawerToggle,android.graphics.drawable.Drawable) -> <init>
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    void <init>() -> <init>
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    android.net.Uri getReferrer(android.app.Activity) -> getReferrer
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
android.support.v4.app.ActivityCompat$1 -> android.support.v4.app.ActivityCompat$1:
    java.lang.String[] val$permissions -> val$permissions
    android.app.Activity val$activity -> val$activity
    int val$requestCode -> val$requestCode
    void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    void run() -> run
android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback -> android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback:
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
android.support.v4.app.ActivityCompat$RequestPermissionsRequestCodeValidator -> android.support.v4.app.ActivityCompat$RequestPermissionsRequestCodeValidator:
    void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
android.support.v4.app.ActivityCompat$SharedElementCallback21Impl -> android.support.v4.app.ActivityCompat$SharedElementCallback21Impl:
    android.support.v4.app.SharedElementCallback mCallback -> mCallback
    void <init>(android.support.v4.app.SharedElementCallback) -> <init>
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat$SharedElementCallback23Impl -> android.support.v4.app.ActivityCompat$SharedElementCallback23Impl:
    void <init>(android.support.v4.app.SharedElementCallback) -> <init>
    void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
android.support.v4.app.ActivityCompat$SharedElementCallback23Impl$1 -> android.support.v4.app.ActivityCompat$SharedElementCallback23Impl$1:
    android.app.SharedElementCallback$OnSharedElementsReadyListener val$listener -> val$listener
    android.support.v4.app.ActivityCompat$SharedElementCallback23Impl this$0 -> this$0
    void <init>(android.support.v4.app.ActivityCompat$SharedElementCallback23Impl,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> <init>
    void onSharedElementsReady() -> onSharedElementsReady
android.support.v4.app.ActivityManagerCompat -> android.support.v4.app.ActivityManagerCompat:
    void <init>() -> <init>
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    java.lang.String EXTRA_USAGE_TIME_REPORT -> EXTRA_USAGE_TIME_REPORT
    java.lang.String EXTRA_USAGE_TIME_REPORT_PACKAGES -> EXTRA_USAGE_TIME_REPORT_PACKAGES
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int) -> makeClipRevealAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.support.v4.util.Pair[]) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat makeTaskLaunchBehind() -> makeTaskLaunchBehind
    android.support.v4.app.ActivityOptionsCompat makeBasic() -> makeBasic
    android.support.v4.app.ActivityOptionsCompat createImpl(android.app.ActivityOptions) -> createImpl
    void <init>() -> <init>
    android.support.v4.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> setLaunchBounds
    android.graphics.Rect getLaunchBounds() -> getLaunchBounds
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
    void requestUsageTimeReport(android.app.PendingIntent) -> requestUsageTimeReport
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsCompatApi16Impl -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsCompatApi16Impl:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    void <init>(android.app.ActivityOptions) -> <init>
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsCompatApi23Impl -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsCompatApi23Impl:
    void <init>(android.app.ActivityOptions) -> <init>
    void requestUsageTimeReport(android.app.PendingIntent) -> requestUsageTimeReport
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsCompatApi24Impl -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsCompatApi24Impl:
    void <init>(android.app.ActivityOptions) -> <init>
    android.support.v4.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> setLaunchBounds
    android.graphics.Rect getLaunchBounds() -> getLaunchBounds
android.support.v4.app.AlarmManagerCompat -> android.support.v4.app.AlarmManagerCompat:
    void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent) -> setAlarmClock
    void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setAndAllowWhileIdle
    void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setExact
    void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setExactAndAllowWhileIdle
    void <init>() -> <init>
android.support.v4.app.AppLaunchChecker -> android.support.v4.app.AppLaunchChecker:
    java.lang.String SHARED_PREFS_NAME -> SHARED_PREFS_NAME
    java.lang.String KEY_STARTED_FROM_LAUNCHER -> KEY_STARTED_FROM_LAUNCHER
    void <init>() -> <init>
    boolean hasStartedFromLauncher(android.content.Context) -> hasStartedFromLauncher
    void onActivityCreate(android.app.Activity) -> onActivityCreate
android.support.v4.app.AppOpsManagerCompat -> android.support.v4.app.AppOpsManagerCompat:
    int MODE_ALLOWED -> MODE_ALLOWED
    int MODE_IGNORED -> MODE_IGNORED
    int MODE_DEFAULT -> MODE_DEFAULT
    void <init>() -> <init>
    java.lang.String permissionToOp(java.lang.String) -> permissionToOp
    int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    boolean SUPPORTS_TRANSITIONS -> SUPPORTS_TRANSITIONS
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    int OP_SET_PRIMARY_NAV -> OP_SET_PRIMARY_NAV
    int OP_UNSET_PRIMARY_NAV -> OP_UNSET_PRIMARY_NAV
    java.util.ArrayList mOps -> mOps
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    boolean mReorderingAllowed -> mReorderingAllowed
    java.util.ArrayList mCommitRunnables -> mCommitRunnables
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setPrimaryNavigationFragment(android.support.v4.app.Fragment) -> setPrimaryNavigationFragment
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    android.support.v4.app.FragmentTransaction runOnCommit(java.lang.Runnable) -> runOnCommit
    void runOnCommitRunnables() -> runOnCommitRunnables
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    void commitNow() -> commitNow
    void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    android.support.v4.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
    android.support.v4.app.FragmentTransaction setAllowOptimization(boolean) -> setAllowOptimization
    int commitInternal(boolean) -> commitInternal
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    boolean interactsWith(int) -> interactsWith
    boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    void executeOps() -> executeOps
    void executePopOps(boolean) -> executePopOps
    android.support.v4.app.Fragment expandOps(java.util.ArrayList,android.support.v4.app.Fragment) -> expandOps
    android.support.v4.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,android.support.v4.app.Fragment) -> trackAddedFragmentsInPop
    boolean isPostponed() -> isPostponed
    void setOnStartPostponedListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    boolean isFragmentPostponed(android.support.v4.app.BackStackRecord$Op) -> isFragmentPostponed
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
    void <clinit>() -> <clinit>
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    void <init>() -> <init>
    void <init>(int,android.support.v4.app.Fragment) -> <init>
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    boolean mReorderingAllowed -> mReorderingAllowed
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.support.v4.app.BackStackRecord) -> <init>
    void <init>(android.os.Parcel) -> <init>
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    void <init>() -> <init>
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BaseFragmentActivityApi14 -> android.support.v4.app.BaseFragmentActivityApi14:
    boolean mStartedIntentSenderFromFragment -> mStartedIntentSenderFromFragment
    void <init>() -> <init>
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    void checkForValidRequestCode(int) -> checkForValidRequestCode
android.support.v4.app.BaseFragmentActivityApi16 -> android.support.v4.app.BaseFragmentActivityApi16:
    boolean mStartedActivityFromFragment -> mStartedActivityFromFragment
    void <init>() -> <init>
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
android.support.v4.app.BundleCompat -> android.support.v4.app.BundleCompat:
    void <init>() -> <init>
    android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
android.support.v4.app.BundleCompat$BundleCompatBaseImpl -> android.support.v4.app.BundleCompat$BundleCompatBaseImpl:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetIBinderMethod -> sGetIBinderMethod
    boolean sGetIBinderMethodFetched -> sGetIBinderMethodFetched
    java.lang.reflect.Method sPutIBinderMethod -> sPutIBinderMethod
    boolean sPutIBinderMethodFetched -> sPutIBinderMethodFetched
    void <init>() -> <init>
    android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    void <init>() -> <init>
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void <init>() -> <init>
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.content.Context) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    void setupDialog(android.app.Dialog,int) -> setupDialog
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    java.lang.Object USE_DEFAULT_TRANSITION -> USE_DEFAULT_TRANSITION
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    boolean mPerformedCreateView -> mPerformedCreateView
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.FragmentManagerNonConfig mChildNonConfig -> mChildNonConfig
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment$AnimationInfo mAnimationInfo -> mAnimationInfo
    boolean mIsNewlyAdded -> mIsNewlyAdded
    boolean mHiddenChanged -> mHiddenChanged
    float mPostponedAlpha -> mPostponedAlpha
    android.view.LayoutInflater mLayoutInflater -> mLayoutInflater
    void <init>() -> <init>
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    boolean isStateSaved() -> isStateSaved
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.content.Context getContext() -> getContext
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    java.lang.Object getHost() -> getHost
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.FragmentManager peekChildFragmentManager() -> peekChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void requestPermissions(java.lang.String[],int) -> requestPermissions
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    void onAttach(android.content.Context) -> onAttach
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    void onCreate(android.os.Bundle) -> onCreate
    void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void setEnterTransition(java.lang.Object) -> setEnterTransition
    java.lang.Object getEnterTransition() -> getEnterTransition
    void setReturnTransition(java.lang.Object) -> setReturnTransition
    java.lang.Object getReturnTransition() -> getReturnTransition
    void setExitTransition(java.lang.Object) -> setExitTransition
    java.lang.Object getExitTransition() -> getExitTransition
    void setReenterTransition(java.lang.Object) -> setReenterTransition
    java.lang.Object getReenterTransition() -> getReenterTransition
    void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    void postponeEnterTransition() -> postponeEnterTransition
    void startPostponedEnterTransition() -> startPostponedEnterTransition
    void callStartTransitionListener() -> callStartTransitionListener
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void noteStateNotSaved() -> noteStateNotSaved
    void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
    void performDetach() -> performDetach
    void setOnStartEnterTransitionListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    int getNextAnim() -> getNextAnim
    void setNextAnim(int) -> setNextAnim
    int getNextTransition() -> getNextTransition
    void setNextTransition(int,int) -> setNextTransition
    int getNextTransitionStyle() -> getNextTransitionStyle
    android.support.v4.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    android.support.v4.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    android.view.View getAnimatingAway() -> getAnimatingAway
    void setAnimatingAway(android.view.View) -> setAnimatingAway
    void setAnimator(android.animation.Animator) -> setAnimator
    android.animation.Animator getAnimator() -> getAnimator
    int getStateAfterAnimating() -> getStateAfterAnimating
    void setStateAfterAnimating(int) -> setStateAfterAnimating
    boolean isPostponed() -> isPostponed
    boolean isHideReplaced() -> isHideReplaced
    void setHideReplaced(boolean) -> setHideReplaced
    void access$800(android.support.v4.app.Fragment) -> access$800
    void <clinit>() -> <clinit>
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    void <init>(android.support.v4.app.Fragment) -> <init>
    void run() -> run
android.support.v4.app.Fragment$2 -> android.support.v4.app.Fragment$2:
    android.support.v4.app.Fragment this$0 -> this$0
    void <init>(android.support.v4.app.Fragment) -> <init>
    android.view.View onFindViewById(int) -> onFindViewById
    boolean onHasView() -> onHasView
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
android.support.v4.app.Fragment$AnimationInfo -> android.support.v4.app.Fragment$AnimationInfo:
    android.view.View mAnimatingAway -> mAnimatingAway
    android.animation.Animator mAnimator -> mAnimator
    int mStateAfterAnimating -> mStateAfterAnimating
    int mNextAnim -> mNextAnim
    int mNextTransition -> mNextTransition
    int mNextTransitionStyle -> mNextTransitionStyle
    java.lang.Object mEnterTransition -> mEnterTransition
    java.lang.Object mReturnTransition -> mReturnTransition
    java.lang.Object mExitTransition -> mExitTransition
    java.lang.Object mReenterTransition -> mReenterTransition
    java.lang.Object mSharedElementEnterTransition -> mSharedElementEnterTransition
    java.lang.Object mSharedElementReturnTransition -> mSharedElementReturnTransition
    java.lang.Boolean mAllowReturnTransitionOverlap -> mAllowReturnTransitionOverlap
    java.lang.Boolean mAllowEnterTransitionOverlap -> mAllowEnterTransitionOverlap
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> mEnterTransitionCallback
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> mExitTransitionCallback
    boolean mEnterTransitionPostponed -> mEnterTransitionPostponed
    android.support.v4.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener -> mStartEnterTransitionListener
    boolean mIsHideReplaced -> mIsHideReplaced
    void <init>() -> <init>
    java.lang.Object access$002(android.support.v4.app.Fragment$AnimationInfo,java.lang.Object) -> access$002
    java.lang.Object access$000(android.support.v4.app.Fragment$AnimationInfo) -> access$000
    java.lang.Object access$102(android.support.v4.app.Fragment$AnimationInfo,java.lang.Object) -> access$102
    java.lang.Object access$100(android.support.v4.app.Fragment$AnimationInfo) -> access$100
    java.lang.Object access$202(android.support.v4.app.Fragment$AnimationInfo,java.lang.Object) -> access$202
    java.lang.Object access$200(android.support.v4.app.Fragment$AnimationInfo) -> access$200
    java.lang.Object access$302(android.support.v4.app.Fragment$AnimationInfo,java.lang.Object) -> access$302
    java.lang.Object access$300(android.support.v4.app.Fragment$AnimationInfo) -> access$300
    java.lang.Object access$402(android.support.v4.app.Fragment$AnimationInfo,java.lang.Object) -> access$402
    java.lang.Object access$400(android.support.v4.app.Fragment$AnimationInfo) -> access$400
    java.lang.Object access$502(android.support.v4.app.Fragment$AnimationInfo,java.lang.Object) -> access$502
    java.lang.Object access$500(android.support.v4.app.Fragment$AnimationInfo) -> access$500
    java.lang.Boolean access$602(android.support.v4.app.Fragment$AnimationInfo,java.lang.Boolean) -> access$602
    java.lang.Boolean access$600(android.support.v4.app.Fragment$AnimationInfo) -> access$600
    java.lang.Boolean access$702(android.support.v4.app.Fragment$AnimationInfo,java.lang.Boolean) -> access$702
    java.lang.Boolean access$700(android.support.v4.app.Fragment$AnimationInfo) -> access$700
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
    void <init>(java.lang.String,java.lang.Exception) -> <init>
android.support.v4.app.Fragment$OnStartEnterTransitionListener -> android.support.v4.app.Fragment$OnStartEnterTransitionListener:
    void onStartEnterTransition() -> onStartEnterTransition
    void startListening() -> startListening
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Bundle) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    void <init>() -> <init>
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG -> NEXT_CANDIDATE_REQUEST_INDEX_TAG
    java.lang.String ALLOCATED_REQUEST_INDICIES_TAG -> ALLOCATED_REQUEST_INDICIES_TAG
    java.lang.String REQUEST_FRAGMENT_WHO_TAG -> REQUEST_FRAGMENT_WHO_TAG
    int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS -> MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentController mFragments -> mFragments
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mRequestedPermissionsFromFragment -> mRequestedPermissionsFromFragment
    int mNextCandidateRequestIndex -> mNextCandidateRequestIndex
    android.support.v4.util.SparseArrayCompat mPendingFragmentActivityResults -> mPendingFragmentActivityResults
    void <init>() -> <init>
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> supportFinishAfterTransition
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStateNotSaved() -> onStateNotSaved
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int,android.os.Bundle) -> startActivityFromFragment
    void startIntentSenderFromFragment(android.support.v4.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderFromFragment
    int allocateRequestIndex(android.support.v4.app.Fragment) -> allocateRequestIndex
    void requestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int) -> requestPermissionsFromFragment
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$HostCallbacks -> android.support.v4.app.FragmentActivity$HostCallbacks:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> onShouldSaveFragmentState
    android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    android.support.v4.app.FragmentActivity onGetHost() -> onGetHost
    void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
    void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    void onStartIntentSenderFromFragment(android.support.v4.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
    void onRequestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    boolean onHasWindowAnimations() -> onHasWindowAnimations
    int onGetWindowAnimations() -> onGetWindowAnimations
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.view.View onFindViewById(int) -> onFindViewById
    boolean onHasView() -> onHasView
    java.lang.Object onGetHost() -> onGetHost
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object custom -> custom
    android.support.v4.app.FragmentManagerNonConfig fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
    void <init>() -> <init>
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    void <init>() -> <init>
    android.view.View onFindViewById(int) -> onFindViewById
    boolean onHasView() -> onHasView
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
android.support.v4.app.FragmentController -> android.support.v4.app.FragmentController:
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    android.support.v4.app.FragmentController createController(android.support.v4.app.FragmentHostCallback) -> createController
    void <init>(android.support.v4.app.FragmentHostCallback) -> <init>
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    int getActiveFragmentsCount() -> getActiveFragmentsCount
    java.util.List getActiveFragments(java.util.List) -> getActiveFragments
    void attachHost(android.support.v4.app.Fragment) -> attachHost
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void noteStateNotSaved() -> noteStateNotSaved
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.List) -> restoreAllState
    void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig) -> restoreAllState
    java.util.List retainNonConfig() -> retainNonConfig
    android.support.v4.app.FragmentManagerNonConfig retainNestedNonConfig() -> retainNestedNonConfig
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    boolean execPendingActions() -> execPendingActions
    void doLoaderStart() -> doLoaderStart
    void doLoaderStop(boolean) -> doLoaderStop
    void doLoaderRetain() -> doLoaderRetain
    void doLoaderDestroy() -> doLoaderDestroy
    void reportLoaderStart() -> reportLoaderStart
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> retainLoaderNonConfig
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> restoreLoaderNonConfig
    void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpLoaders
android.support.v4.app.FragmentHostCallback -> android.support.v4.app.FragmentHostCallback:
    android.app.Activity mActivity -> mActivity
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    int mWindowAnimations -> mWindowAnimations
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    boolean mRetainLoaders -> mRetainLoaders
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    void <init>(android.content.Context,android.os.Handler,int) -> <init>
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> onShouldSaveFragmentState
    android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    java.lang.Object onGetHost() -> onGetHost
    void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
    void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    void onStartIntentSenderFromFragment(android.support.v4.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
    void onRequestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    boolean onHasWindowAnimations() -> onHasWindowAnimations
    int onGetWindowAnimations() -> onGetWindowAnimations
    android.view.View onFindViewById(int) -> onFindViewById
    boolean onHasView() -> onHasView
    android.app.Activity getActivity() -> getActivity
    android.content.Context getContext() -> getContext
    android.os.Handler getHandler() -> getHandler
    android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl() -> getFragmentManagerImpl
    android.support.v4.app.LoaderManagerImpl getLoaderManagerImpl() -> getLoaderManagerImpl
    void inactivateFragment(java.lang.String) -> inactivateFragment
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    boolean getRetainLoaders() -> getRetainLoaders
    void doLoaderStart() -> doLoaderStart
    void doLoaderStop(boolean) -> doLoaderStop
    void doLoaderRetain() -> doLoaderRetain
    void doLoaderDestroy() -> doLoaderDestroy
    void reportLoaderStart() -> reportLoaderStart
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> retainLoaderNonConfig
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> restoreLoaderNonConfig
    void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpLoaders
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    void <init>() -> <init>
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void registerFragmentLifecycleCallbacks(android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> registerFragmentLifecycleCallbacks
    void unregisterFragmentLifecycleCallbacks(android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks) -> unregisterFragmentLifecycleCallbacks
    android.support.v4.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean isStateSaved() -> isStateSaved
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks -> android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks:
    void <init>() -> <init>
    void onFragmentPreAttached(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.content.Context) -> onFragmentPreAttached
    void onFragmentAttached(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.content.Context) -> onFragmentAttached
    void onFragmentPreCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle) -> onFragmentPreCreated
    void onFragmentCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle) -> onFragmentCreated
    void onFragmentActivityCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle) -> onFragmentActivityCreated
    void onFragmentViewCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.view.View,android.os.Bundle) -> onFragmentViewCreated
    void onFragmentStarted(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentStarted
    void onFragmentResumed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentResumed
    void onFragmentPaused(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentPaused
    void onFragmentStopped(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentStopped
    void onFragmentSaveInstanceState(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle) -> onFragmentSaveInstanceState
    void onFragmentViewDestroyed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentViewDestroyed
    void onFragmentDestroyed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentDestroyed
    void onFragmentDetached(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment) -> onFragmentDetached
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    boolean mExecutingActions -> mExecutingActions
    int mNextFragmentIndex -> mNextFragmentIndex
    java.util.ArrayList mAdded -> mAdded
    android.util.SparseArray mActive -> mActive
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks -> mLifecycleCallbacks
    int mCurState -> mCurState
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    android.support.v4.app.Fragment mPrimaryNav -> mPrimaryNav
    java.lang.reflect.Field sAnimationListenerField -> sAnimationListenerField
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    java.util.ArrayList mTmpRecords -> mTmpRecords
    java.util.ArrayList mTmpIsPop -> mTmpIsPop
    java.util.ArrayList mTmpAddedFragments -> mTmpAddedFragments
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.util.ArrayList mPostponedTransactions -> mPostponedTransactions
    android.support.v4.app.FragmentManagerNonConfig mSavedNonConfig -> mSavedNonConfig
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void <init>() -> <init>
    boolean modifiesAlpha(android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> modifiesAlpha
    boolean modifiesAlpha(android.animation.Animator) -> modifiesAlpha
    boolean shouldRunOnHWLayer(android.view.View,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> shouldRunOnHWLayer
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    java.util.List getActiveFragments() -> getActiveFragments
    int getActiveFragmentCount() -> getActiveFragmentCount
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void setHWLayerAnimListenerIfAlpha(android.view.View,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> setHWLayerAnimListenerIfAlpha
    android.view.animation.Animation$AnimationListener getAnimationListener(android.view.animation.Animation) -> getAnimationListener
    boolean isStateAtLeast(int) -> isStateAtLeast
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void animateRemoveFragment(android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator,int) -> animateRemoveFragment
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void ensureInflatedFragmentView(android.support.v4.app.Fragment) -> ensureInflatedFragmentView
    void completeShowHideFragment(android.support.v4.app.Fragment) -> completeShowHideFragment
    void moveFragmentToExpectedState(android.support.v4.app.Fragment) -> moveFragmentToExpectedState
    void moveToState(int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment) -> hideFragment
    void showFragment(android.support.v4.app.Fragment) -> showFragment
    void detachFragment(android.support.v4.app.Fragment) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    boolean isStateSaved() -> isStateSaved
    void enqueueAction(android.support.v4.app.FragmentManagerImpl$OpGenerator,boolean) -> enqueueAction
    void scheduleCommit() -> scheduleCommit
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    void ensureExecReady(boolean) -> ensureExecReady
    void execSingleAction(android.support.v4.app.FragmentManagerImpl$OpGenerator,boolean) -> execSingleAction
    void cleanupExec() -> cleanupExec
    boolean execPendingActions() -> execPendingActions
    void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    void makeRemovedFragmentsInvisible(android.support.v4.util.ArraySet) -> makeRemovedFragmentsInvisible
    int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,android.support.v4.util.ArraySet) -> postponePostponableTransactions
    void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    android.support.v4.app.Fragment findFragmentUnder(android.support.v4.app.Fragment) -> findFragmentUnder
    void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    void addAddedFragments(android.support.v4.util.ArraySet) -> addAddedFragments
    void forcePostponedTransactions() -> forcePostponedTransactions
    void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    void doPendingDeferredStart() -> doPendingDeferredStart
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    android.support.v4.app.FragmentManagerNonConfig retainNonConfig() -> retainNonConfig
    void setRetaining(android.support.v4.app.FragmentManagerNonConfig) -> setRetaining
    void saveNonConfig() -> saveNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig) -> restoreAllState
    void burpActive() -> burpActive
    void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachController
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchStateChange(int) -> dispatchStateChange
    void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    void setPrimaryNavigationFragment(android.support.v4.app.Fragment) -> setPrimaryNavigationFragment
    android.support.v4.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    void registerFragmentLifecycleCallbacks(android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> registerFragmentLifecycleCallbacks
    void unregisterFragmentLifecycleCallbacks(android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks) -> unregisterFragmentLifecycleCallbacks
    void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentPreAttached
    void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentAttached
    void dispatchOnFragmentPreCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentStarted
    void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentResumed
    void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentPaused
    void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentStopped
    void dispatchOnFragmentSaveInstanceState(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
    void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentDetached
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    void access$500(android.support.v4.app.FragmentManagerImpl) -> access$500
    void access$600(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord,boolean,boolean,boolean) -> access$600
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.support.v4.app.Fragment) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    android.view.ViewGroup val$container -> val$container
    android.view.View val$viewToAnimate -> val$viewToAnimate
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.support.v4.app.Fragment) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    android.view.ViewGroup val$container -> val$container
    android.view.View val$animatingView -> val$animatingView
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.support.v4.app.Fragment) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener:
    android.view.View mView -> mView
    void <init>(android.view.View,android.view.animation.Animation$AnimationListener) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1:
    android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> <init>
    void run() -> run
android.support.v4.app.FragmentManagerImpl$AnimationListenerWrapper -> android.support.v4.app.FragmentManagerImpl$AnimationListenerWrapper:
    android.view.animation.Animation$AnimationListener mWrapped -> mWrapped
    void <init>(android.view.animation.Animation$AnimationListener) -> <init>
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void <init>(android.view.animation.Animation$AnimationListener,android.support.v4.app.FragmentManagerImpl$1) -> <init>
android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator -> android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator:
    android.view.animation.Animation animation -> animation
    android.animation.Animator animator -> animator
    void <init>(android.view.animation.Animation) -> <init>
    void <init>(android.animation.Animator) -> <init>
    void <init>(android.view.animation.Animation,android.support.v4.app.FragmentManagerImpl$1) -> <init>
    void <init>(android.animation.Animator,android.support.v4.app.FragmentManagerImpl$1) -> <init>
android.support.v4.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener -> android.support.v4.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener:
    android.view.View mView -> mView
    void <init>(android.view.View) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.FragmentManagerImpl$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerImpl$OpGenerator -> android.support.v4.app.FragmentManagerImpl$OpGenerator:
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
android.support.v4.app.FragmentManagerImpl$PopBackStackState -> android.support.v4.app.FragmentManagerImpl$PopBackStackState:
    java.lang.String mName -> mName
    int mId -> mId
    int mFlags -> mFlags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl,java.lang.String,int,int) -> <init>
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener -> android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener:
    boolean mIsBack -> mIsBack
    android.support.v4.app.BackStackRecord mRecord -> mRecord
    int mNumPostponed -> mNumPostponed
    void <init>(android.support.v4.app.BackStackRecord,boolean) -> <init>
    void onStartEnterTransition() -> onStartEnterTransition
    void startListening() -> startListening
    boolean isReady() -> isReady
    void completeTransaction() -> completeTransaction
    void cancelTransaction() -> cancelTransaction
    boolean access$300(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener) -> access$300
    android.support.v4.app.BackStackRecord access$400(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener) -> access$400
android.support.v4.app.FragmentManagerNonConfig -> android.support.v4.app.FragmentManagerNonConfig:
    java.util.List mFragments -> mFragments
    java.util.List mChildNonConfigs -> mChildNonConfigs
    void <init>(java.util.List,java.util.List) -> <init>
    java.util.List getFragments() -> getFragments
    java.util.List getChildNonConfigs() -> getChildNonConfigs
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    int mPrimaryNavActiveIndex -> mPrimaryNavActiveIndex
    int mNextFragmentIndex -> mNextFragmentIndex
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    void <init>() -> <init>
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    void <init>(android.support.v4.app.FragmentManager) -> <init>
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    boolean mHidden -> mHidden
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.support.v4.app.Fragment) -> <init>
    void <init>(android.os.Parcel) -> <init>
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerNonConfig) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    void <init>() -> <init>
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    void <init>(android.support.v4.app.FragmentManager) -> <init>
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
    android.support.v4.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String) -> getTabInfoForTag
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    void <init>(android.content.Context) -> <init>
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    void <init>() -> <init>
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    void <init>(java.lang.String,java.lang.Class,android.os.Bundle) -> <init>
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    void <init>() -> <init>
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setPrimaryNavigationFragment(android.support.v4.app.Fragment) -> setPrimaryNavigationFragment
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
    android.support.v4.app.FragmentTransaction setAllowOptimization(boolean) -> setAllowOptimization
    android.support.v4.app.FragmentTransaction runOnCommit(java.lang.Runnable) -> runOnCommit
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    void commitNow() -> commitNow
    void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.FragmentTransition -> android.support.v4.app.FragmentTransition:
    int[] INVERSE_OPS -> INVERSE_OPS
    void <init>() -> <init>
    void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean) -> startTransitions
    android.support.v4.util.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    void configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap) -> configureTransitionsReordered
    void replaceHide(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList) -> replaceHide
    void configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap) -> configureTransitionsOrdered
    void scheduleTargetChange(android.view.ViewGroup,android.support.v4.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> getSharedElementTransition
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> getEnterTransition
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> getExitTransition
    java.lang.Object configureSharedElementsReordered(android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    void addSharedElementsWithMatchingNames(java.util.ArrayList,android.support.v4.util.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    java.lang.Object configureSharedElementsOrdered(android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    android.support.v4.util.ArrayMap captureOutSharedElements(android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    android.support.v4.util.ArrayMap captureInSharedElements(android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    java.lang.String findKeyForValue(android.support.v4.util.ArrayMap,java.lang.String) -> findKeyForValue
    android.view.View getInEpicenterView(android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    void setOutEpicenter(java.lang.Object,java.lang.Object,android.support.v4.util.ArrayMap,boolean,android.support.v4.app.BackStackRecord) -> setOutEpicenter
    void retainValues(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap) -> retainValues
    void callSharedElementStartEnd(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,boolean) -> callSharedElementStartEnd
    java.util.ArrayList configureEnteringExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,android.support.v4.app.Fragment,boolean) -> mergeTransitions
    void calculateFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    void calculatePopFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    void addToFirstInLastOut(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    android.support.v4.app.FragmentTransition$FragmentContainerTransition ensureContainer(android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    void access$000(java.util.ArrayList,int) -> access$000
    java.util.ArrayList access$100(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.view.View) -> access$100
    void access$200(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,boolean) -> access$200
    android.support.v4.util.ArrayMap access$300(android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition) -> access$300
    android.view.View access$400(android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> access$400
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentTransition$1 -> android.support.v4.app.FragmentTransition$1:
    java.util.ArrayList val$exitingViews -> val$exitingViews
    void <init>(java.util.ArrayList) -> <init>
    void run() -> run
android.support.v4.app.FragmentTransition$2 -> android.support.v4.app.FragmentTransition$2:
    java.lang.Object val$enterTransition -> val$enterTransition
    android.view.View val$nonExistentView -> val$nonExistentView
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    java.util.ArrayList val$sharedElementsIn -> val$sharedElementsIn
    java.util.ArrayList val$enteringViews -> val$enteringViews
    java.util.ArrayList val$exitingViews -> val$exitingViews
    java.lang.Object val$exitTransition -> val$exitTransition
    void <init>(java.lang.Object,android.view.View,android.support.v4.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    void run() -> run
android.support.v4.app.FragmentTransition$3 -> android.support.v4.app.FragmentTransition$3:
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.Fragment val$outFragment -> val$outFragment
    boolean val$inIsPop -> val$inIsPop
    android.support.v4.util.ArrayMap val$inSharedElements -> val$inSharedElements
    android.view.View val$epicenterView -> val$epicenterView
    android.graphics.Rect val$epicenter -> val$epicenter
    void <init>(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,android.view.View,android.graphics.Rect) -> <init>
    void run() -> run
android.support.v4.app.FragmentTransition$4 -> android.support.v4.app.FragmentTransition$4:
    android.support.v4.util.ArrayMap val$nameOverrides -> val$nameOverrides
    java.lang.Object val$finalSharedElementTransition -> val$finalSharedElementTransition
    android.support.v4.app.FragmentTransition$FragmentContainerTransition val$fragments -> val$fragments
    java.util.ArrayList val$sharedElementsIn -> val$sharedElementsIn
    android.view.View val$nonExistentView -> val$nonExistentView
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.Fragment val$outFragment -> val$outFragment
    boolean val$inIsPop -> val$inIsPop
    java.util.ArrayList val$sharedElementsOut -> val$sharedElementsOut
    java.lang.Object val$enterTransition -> val$enterTransition
    android.graphics.Rect val$inEpicenter -> val$inEpicenter
    void <init>(android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    void run() -> run
android.support.v4.app.FragmentTransition$FragmentContainerTransition -> android.support.v4.app.FragmentTransition$FragmentContainerTransition:
    android.support.v4.app.Fragment lastIn -> lastIn
    boolean lastInIsPop -> lastInIsPop
    android.support.v4.app.BackStackRecord lastInTransaction -> lastInTransaction
    android.support.v4.app.Fragment firstOut -> firstOut
    boolean firstOutIsPop -> firstOutIsPop
    android.support.v4.app.BackStackRecord firstOutTransaction -> firstOutTransaction
    void <init>() -> <init>
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.FragmentTransitionCompat21:
    void <init>() -> <init>
    java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    void addTarget(java.lang.Object,android.view.View) -> addTarget
    void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    java.lang.String access$000(java.util.Map,java.lang.String) -> access$000
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.FragmentTransitionCompat21$1:
    android.graphics.Rect val$epicenter -> val$epicenter
    void <init>(android.graphics.Rect) -> <init>
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.FragmentTransitionCompat21$2:
    android.view.View val$fragmentView -> val$fragmentView
    java.util.ArrayList val$exitingViews -> val$exitingViews
    void <init>(android.view.View,java.util.ArrayList) -> <init>
    void onTransitionStart(android.transition.Transition) -> onTransitionStart
    void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    void onTransitionPause(android.transition.Transition) -> onTransitionPause
    void onTransitionResume(android.transition.Transition) -> onTransitionResume
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.FragmentTransitionCompat21$3:
    int val$numSharedElements -> val$numSharedElements
    java.util.ArrayList val$sharedElementsIn -> val$sharedElementsIn
    java.util.ArrayList val$inNames -> val$inNames
    java.util.ArrayList val$sharedElementsOut -> val$sharedElementsOut
    java.util.ArrayList val$outNames -> val$outNames
    void <init>(int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    void run() -> run
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.FragmentTransitionCompat21$4:
    java.util.ArrayList val$sharedElementsIn -> val$sharedElementsIn
    java.util.Map val$nameOverrides -> val$nameOverrides
    void <init>(java.util.ArrayList,java.util.Map) -> <init>
    void run() -> run
android.support.v4.app.FragmentTransitionCompat21$5 -> android.support.v4.app.FragmentTransitionCompat21$5:
    java.lang.Object val$enterTransition -> val$enterTransition
    java.util.ArrayList val$enteringViews -> val$enteringViews
    java.lang.Object val$exitTransition -> val$exitTransition
    java.util.ArrayList val$exitingViews -> val$exitingViews
    java.lang.Object val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementsIn -> val$sharedElementsIn
    void <init>(java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    void onTransitionStart(android.transition.Transition) -> onTransitionStart
    void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    void onTransitionPause(android.transition.Transition) -> onTransitionPause
    void onTransitionResume(android.transition.Transition) -> onTransitionResume
android.support.v4.app.FragmentTransitionCompat21$6 -> android.support.v4.app.FragmentTransitionCompat21$6:
    android.graphics.Rect val$epicenter -> val$epicenter
    void <init>(android.graphics.Rect) -> <init>
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$7 -> android.support.v4.app.FragmentTransitionCompat21$7:
    java.util.ArrayList val$sharedElementsIn -> val$sharedElementsIn
    java.util.Map val$nameOverrides -> val$nameOverrides
    void <init>(java.util.ArrayList,java.util.Map) -> <init>
    void run() -> run
android.support.v4.app.FrameMetricsAggregator -> android.support.v4.app.FrameMetricsAggregator:
    java.lang.String TAG -> TAG
    boolean DBG -> DBG
    int TOTAL_INDEX -> TOTAL_INDEX
    int INPUT_INDEX -> INPUT_INDEX
    int LAYOUT_MEASURE_INDEX -> LAYOUT_MEASURE_INDEX
    int DRAW_INDEX -> DRAW_INDEX
    int SYNC_INDEX -> SYNC_INDEX
    int COMMAND_INDEX -> COMMAND_INDEX
    int SWAP_INDEX -> SWAP_INDEX
    int DELAY_INDEX -> DELAY_INDEX
    int ANIMATION_INDEX -> ANIMATION_INDEX
    int LAST_INDEX -> LAST_INDEX
    int TOTAL_DURATION -> TOTAL_DURATION
    int INPUT_DURATION -> INPUT_DURATION
    int LAYOUT_MEASURE_DURATION -> LAYOUT_MEASURE_DURATION
    int DRAW_DURATION -> DRAW_DURATION
    int SYNC_DURATION -> SYNC_DURATION
    int COMMAND_DURATION -> COMMAND_DURATION
    int SWAP_DURATION -> SWAP_DURATION
    int DELAY_DURATION -> DELAY_DURATION
    int ANIMATION_DURATION -> ANIMATION_DURATION
    int EVERY_DURATION -> EVERY_DURATION
    android.support.v4.app.FrameMetricsAggregator$FrameMetricsBaseImpl mInstance -> mInstance
    void <init>() -> <init>
    void <init>(int) -> <init>
    void add(android.app.Activity) -> add
    android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    android.util.SparseIntArray[] stop() -> stop
    android.util.SparseIntArray[] reset() -> reset
    android.util.SparseIntArray[] getMetrics() -> getMetrics
android.support.v4.app.FrameMetricsAggregator$1 -> android.support.v4.app.FrameMetricsAggregator$1:
android.support.v4.app.FrameMetricsAggregator$FrameMetricsApi24Impl -> android.support.v4.app.FrameMetricsAggregator$FrameMetricsApi24Impl:
    int NANOS_PER_MS -> NANOS_PER_MS
    int NANOS_ROUNDING_VALUE -> NANOS_ROUNDING_VALUE
    int mTrackingFlags -> mTrackingFlags
    android.util.SparseIntArray[] mMetrics -> mMetrics
    java.util.ArrayList mActivities -> mActivities
    android.os.HandlerThread sHandlerThread -> sHandlerThread
    android.os.Handler sHandler -> sHandler
    android.view.Window$OnFrameMetricsAvailableListener mListener -> mListener
    void <init>(int) -> <init>
    void addDurationItem(android.util.SparseIntArray,long) -> addDurationItem
    void add(android.app.Activity) -> add
    android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    android.util.SparseIntArray[] stop() -> stop
    android.util.SparseIntArray[] getMetrics() -> getMetrics
    android.util.SparseIntArray[] reset() -> reset
    int access$100(android.support.v4.app.FrameMetricsAggregator$FrameMetricsApi24Impl) -> access$100
    android.util.SparseIntArray[] access$200(android.support.v4.app.FrameMetricsAggregator$FrameMetricsApi24Impl) -> access$200
    void <clinit>() -> <clinit>
android.support.v4.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1 -> android.support.v4.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1:
    android.support.v4.app.FrameMetricsAggregator$FrameMetricsApi24Impl this$0 -> this$0
    void <init>(android.support.v4.app.FrameMetricsAggregator$FrameMetricsApi24Impl) -> <init>
    void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int) -> onFrameMetricsAvailable
android.support.v4.app.FrameMetricsAggregator$FrameMetricsBaseImpl -> android.support.v4.app.FrameMetricsAggregator$FrameMetricsBaseImpl:
    void <init>() -> <init>
    void add(android.app.Activity) -> add
    android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    android.util.SparseIntArray[] stop() -> stop
    android.util.SparseIntArray[] getMetrics() -> getMetrics
    android.util.SparseIntArray[] reset() -> reset
    void <init>(android.support.v4.app.FrameMetricsAggregator$1) -> <init>
android.support.v4.app.FrameMetricsAggregator$MetricType -> android.support.v4.app.FrameMetricsAggregator$MetricType:
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_notify -> TRANSACTION_notify
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    void <init>() -> <init>
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.JobIntentService -> android.support.v4.app.JobIntentService:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.JobIntentService$CompatJobEngine mJobImpl -> mJobImpl
    android.support.v4.app.JobIntentService$WorkEnqueuer mCompatWorkEnqueuer -> mCompatWorkEnqueuer
    android.support.v4.app.JobIntentService$CommandProcessor mCurProcessor -> mCurProcessor
    boolean mInterruptIfStopped -> mInterruptIfStopped
    boolean mStopped -> mStopped
    java.util.ArrayList mCompatQueue -> mCompatQueue
    java.lang.Object sLock -> sLock
    java.util.HashMap sClassWorkEnqueuer -> sClassWorkEnqueuer
    void <init>() -> <init>
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent) -> enqueueWork
    void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent) -> enqueueWork
    android.support.v4.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int) -> getWorkEnqueuer
    void onHandleWork(android.content.Intent) -> onHandleWork
    void setInterruptIfStopped(boolean) -> setInterruptIfStopped
    boolean isStopped() -> isStopped
    boolean onStopCurrentWork() -> onStopCurrentWork
    boolean doStopCurrentWork() -> doStopCurrentWork
    void ensureProcessorRunningLocked() -> ensureProcessorRunningLocked
    void processorFinished() -> processorFinished
    android.support.v4.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    void <clinit>() -> <clinit>
android.support.v4.app.JobIntentService$CommandProcessor -> android.support.v4.app.JobIntentService$CommandProcessor:
    android.support.v4.app.JobIntentService this$0 -> this$0
    void <init>(android.support.v4.app.JobIntentService) -> <init>
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void onCancelled(java.lang.Void) -> onCancelled
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.app.JobIntentService$CompatJobEngine -> android.support.v4.app.JobIntentService$CompatJobEngine:
    android.os.IBinder compatGetBinder() -> compatGetBinder
    android.support.v4.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
android.support.v4.app.JobIntentService$CompatWorkEnqueuer -> android.support.v4.app.JobIntentService$CompatWorkEnqueuer:
    android.content.Context mContext -> mContext
    android.os.PowerManager$WakeLock mLaunchWakeLock -> mLaunchWakeLock
    android.os.PowerManager$WakeLock mRunWakeLock -> mRunWakeLock
    boolean mLaunchingService -> mLaunchingService
    boolean mServiceRunning -> mServiceRunning
    void <init>(android.content.Context,android.content.ComponentName) -> <init>
    void enqueueWork(android.content.Intent) -> enqueueWork
    void serviceCreated() -> serviceCreated
    void serviceStartReceived() -> serviceStartReceived
    void serviceDestroyed() -> serviceDestroyed
android.support.v4.app.JobIntentService$CompatWorkItem -> android.support.v4.app.JobIntentService$CompatWorkItem:
    android.content.Intent mIntent -> mIntent
    int mStartId -> mStartId
    android.support.v4.app.JobIntentService this$0 -> this$0
    void <init>(android.support.v4.app.JobIntentService,android.content.Intent,int) -> <init>
    android.content.Intent getIntent() -> getIntent
    void complete() -> complete
android.support.v4.app.JobIntentService$GenericWorkItem -> android.support.v4.app.JobIntentService$GenericWorkItem:
    android.content.Intent getIntent() -> getIntent
    void complete() -> complete
android.support.v4.app.JobIntentService$JobServiceEngineImpl -> android.support.v4.app.JobIntentService$JobServiceEngineImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.JobIntentService mService -> mService
    java.lang.Object mLock -> mLock
    android.app.job.JobParameters mParams -> mParams
    void <init>(android.support.v4.app.JobIntentService) -> <init>
    android.os.IBinder compatGetBinder() -> compatGetBinder
    boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    boolean onStopJob(android.app.job.JobParameters) -> onStopJob
    android.support.v4.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
android.support.v4.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem -> android.support.v4.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem:
    android.app.job.JobWorkItem mJobWork -> mJobWork
    android.support.v4.app.JobIntentService$JobServiceEngineImpl this$0 -> this$0
    void <init>(android.support.v4.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem) -> <init>
    android.content.Intent getIntent() -> getIntent
    void complete() -> complete
android.support.v4.app.JobIntentService$JobWorkEnqueuer -> android.support.v4.app.JobIntentService$JobWorkEnqueuer:
    android.app.job.JobInfo mJobInfo -> mJobInfo
    android.app.job.JobScheduler mJobScheduler -> mJobScheduler
    void <init>(android.content.Context,android.content.ComponentName,int) -> <init>
    void enqueueWork(android.content.Intent) -> enqueueWork
android.support.v4.app.JobIntentService$WorkEnqueuer -> android.support.v4.app.JobIntentService$WorkEnqueuer:
    android.content.ComponentName mComponentName -> mComponentName
    boolean mHasJobId -> mHasJobId
    int mJobId -> mJobId
    void <init>(android.content.Context,android.content.ComponentName) -> <init>
    void ensureJobId(int) -> ensureJobId
    void enqueueWork(android.content.Intent) -> enqueueWork
    void serviceCreated() -> serviceCreated
    void serviceStartReceived() -> serviceStartReceived
    void serviceDestroyed() -> serviceDestroyed
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void <init>(android.support.v4.app.ListFragment) -> <init>
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void <init>(android.support.v4.app.ListFragment) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    void <init>() -> <init>
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean) -> <init>
    void updateHostController(android.support.v4.app.FragmentHostCallback) -> updateHostController
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
    void <clinit>() -> <clinit>
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.LoaderManagerImpl,int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> <init>
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    boolean cancel() -> cancel
    void destroy() -> destroy
    void onLoadCanceled(android.support.v4.content.Loader) -> onLoadCanceled
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    void <init>() -> <init>
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_REMOTE_INPUT_HISTORY -> EXTRA_REMOTE_INPUT_HISTORY
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_BIG_TEXT -> EXTRA_BIG_TEXT
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_SHOW_WHEN -> EXTRA_SHOW_WHEN
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_TEMPLATE -> EXTRA_TEMPLATE
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    java.lang.String EXTRA_BACKGROUND_IMAGE_URI -> EXTRA_BACKGROUND_IMAGE_URI
    java.lang.String EXTRA_MEDIA_SESSION -> EXTRA_MEDIA_SESSION
    java.lang.String EXTRA_COMPACT_ACTIONS -> EXTRA_COMPACT_ACTIONS
    java.lang.String EXTRA_SELF_DISPLAY_NAME -> EXTRA_SELF_DISPLAY_NAME
    java.lang.String EXTRA_CONVERSATION_TITLE -> EXTRA_CONVERSATION_TITLE
    java.lang.String EXTRA_MESSAGES -> EXTRA_MESSAGES
    java.lang.String EXTRA_AUDIO_CONTENTS_URI -> EXTRA_AUDIO_CONTENTS_URI
    int COLOR_DEFAULT -> COLOR_DEFAULT
    int VISIBILITY_PUBLIC -> VISIBILITY_PUBLIC
    int VISIBILITY_PRIVATE -> VISIBILITY_PRIVATE
    int VISIBILITY_SECRET -> VISIBILITY_SECRET
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_REMINDER -> CATEGORY_REMINDER
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    int BADGE_ICON_NONE -> BADGE_ICON_NONE
    int BADGE_ICON_SMALL -> BADGE_ICON_SMALL
    int BADGE_ICON_LARGE -> BADGE_ICON_LARGE
    int GROUP_ALERT_ALL -> GROUP_ALERT_ALL
    int GROUP_ALERT_SUMMARY -> GROUP_ALERT_SUMMARY
    int GROUP_ALERT_CHILDREN -> GROUP_ALERT_CHILDREN
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    java.lang.String getChannelId(android.app.Notification) -> getChannelId
    long getTimeoutAfter(android.app.Notification) -> getTimeoutAfter
    int getBadgeIconType(android.app.Notification) -> getBadgeIconType
    java.lang.String getShortcutId(android.app.Notification) -> getShortcutId
    int getGroupAlertBehavior(android.app.Notification) -> getGroupAlertBehavior
    void <clinit>() -> <clinit>
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    android.support.v4.app.RemoteInput[] mDataOnlyRemoteInputs -> mDataOnlyRemoteInputs
    boolean mAllowGeneratedReplies -> mAllowGeneratedReplies
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInput[],android.support.v4.app.RemoteInput[],boolean) -> <init>
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    boolean getAllowGeneratedReplies() -> getAllowGeneratedReplies
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInput[] getDataOnlyRemoteInputs() -> getDataOnlyRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getDataOnlyRemoteInputs() -> getDataOnlyRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    void <clinit>() -> <clinit>
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    void <init>() -> <init>
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput[],boolean) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    android.app.PendingIntent mIntent -> mIntent
    boolean mAllowGeneratedReplies -> mAllowGeneratedReplies
    android.os.Bundle mExtras -> mExtras
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Action) -> <init>
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInput[],boolean) -> <init>
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder setAllowGeneratedReplies(boolean) -> setAllowGeneratedReplies
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_IN_PROGRESS_LABEL -> KEY_IN_PROGRESS_LABEL
    java.lang.String KEY_CONFIRM_LABEL -> KEY_CONFIRM_LABEL
    java.lang.String KEY_CANCEL_LABEL -> KEY_CANCEL_LABEL
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    int FLAG_HINT_LAUNCHES_ACTIVITY -> FLAG_HINT_LAUNCHES_ACTIVITY
    int FLAG_HINT_DISPLAY_INLINE -> FLAG_HINT_DISPLAY_INLINE
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int mFlags -> mFlags
    java.lang.CharSequence mInProgressLabel -> mInProgressLabel
    java.lang.CharSequence mConfirmLabel -> mConfirmLabel
    java.lang.CharSequence mCancelLabel -> mCancelLabel
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Action) -> <init>
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
    java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    java.lang.CharSequence getCancelLabel() -> getCancelLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setHintLaunchesActivity(boolean) -> setHintLaunchesActivity
    boolean getHintLaunchesActivity() -> getHintLaunchesActivity
    android.support.v4.app.NotificationCompat$Action$WearableExtender setHintDisplayActionInline(boolean) -> setHintDisplayActionInline
    boolean getHintDisplayActionInline() -> getHintDisplayActionInline
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BadgeIconType -> android.support.v4.app.NotificationCompat$BadgeIconType:
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Builder) -> <init>
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
    void apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> apply
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Builder) -> <init>
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
    void apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> apply
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    int MAX_CHARSEQUENCE_LENGTH -> MAX_CHARSEQUENCE_LENGTH
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mShowWhen -> mShowWhen
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    java.lang.CharSequence[] mRemoteInputHistory -> mRemoteInputHistory
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    java.lang.String mSortKey -> mSortKey
    java.util.ArrayList mActions -> mActions
    boolean mLocalOnly -> mLocalOnly
    boolean mColorized -> mColorized
    boolean mColorizedSet -> mColorizedSet
    java.lang.String mCategory -> mCategory
    android.os.Bundle mExtras -> mExtras
    int mColor -> mColor
    int mVisibility -> mVisibility
    android.app.Notification mPublicVersion -> mPublicVersion
    android.widget.RemoteViews mContentView -> mContentView
    android.widget.RemoteViews mBigContentView -> mBigContentView
    android.widget.RemoteViews mHeadsUpContentView -> mHeadsUpContentView
    java.lang.String mChannelId -> mChannelId
    int mBadgeIcon -> mBadgeIcon
    java.lang.String mShortcutId -> mShortcutId
    long mTimeout -> mTimeout
    int mGroupAlertBehavior -> mGroupAlertBehavior
    android.app.Notification mNotification -> mNotification
    java.util.ArrayList mPeople -> mPeople
    void <init>(android.content.Context,java.lang.String) -> <init>
    void <init>(android.content.Context) -> <init>
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[]) -> setRemoteInputHistory
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setColorized(boolean) -> setColorized
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder setColor(int) -> setColor
    android.support.v4.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    android.support.v4.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    android.support.v4.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews) -> setCustomContentView
    android.support.v4.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews) -> setCustomBigContentView
    android.support.v4.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews) -> setCustomHeadsUpContentView
    android.support.v4.app.NotificationCompat$Builder setChannelId(java.lang.String) -> setChannelId
    android.support.v4.app.NotificationCompat$Builder setTimeoutAfter(long) -> setTimeoutAfter
    android.support.v4.app.NotificationCompat$Builder setShortcutId(java.lang.String) -> setShortcutId
    android.support.v4.app.NotificationCompat$Builder setBadgeIconType(int) -> setBadgeIconType
    android.support.v4.app.NotificationCompat$Builder setGroupAlertBehavior(int) -> setGroupAlertBehavior
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
    android.support.v4.app.NotificationCompat$BuilderExtender getExtender() -> getExtender
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    android.widget.RemoteViews getContentView() -> getContentView
    android.widget.RemoteViews getBigContentView() -> getBigContentView
    android.widget.RemoteViews getHeadsUpContentView() -> getHeadsUpContentView
    long getWhenIfShowing() -> getWhenIfShowing
    int getPriority() -> getPriority
    int getColor() -> getColor
    int access$000(android.support.v4.app.NotificationCompat$Builder) -> access$000
android.support.v4.app.NotificationCompat$BuilderExtender -> android.support.v4.app.NotificationCompat$BuilderExtender:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> build
android.support.v4.app.NotificationCompat$CarExtender -> android.support.v4.app.NotificationCompat$CarExtender:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_CAR_EXTENDER -> EXTRA_CAR_EXTENDER
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_CONVERSATION -> EXTRA_CONVERSATION
    java.lang.String EXTRA_COLOR -> EXTRA_COLOR
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation mUnreadConversation -> mUnreadConversation
    int mColor -> mColor
    void <init>() -> <init>
    void <init>(android.app.Notification) -> <init>
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$CarExtender setColor(int) -> setColor
    int getColor() -> getColor
    android.support.v4.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.graphics.Bitmap getLargeIcon() -> getLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender setUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation) -> setUnreadConversation
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation() -> getUnreadConversation
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation:
    java.lang.String[] mMessages -> mMessages
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    java.lang.String[] mParticipants -> mParticipants
    long mLatestTimestamp -> mLatestTimestamp
    android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory FACTORY -> FACTORY
    void <init>(java.lang.String[],android.support.v4.app.RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> <init>
    java.lang.String[] getMessages() -> getMessages
    android.support.v4.app.RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    java.lang.String[] getParticipants() -> getParticipants
    java.lang.String getParticipant() -> getParticipant
    long getLatestTimestamp() -> getLatestTimestamp
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
    void <clinit>() -> <clinit>
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1 -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1:
    void <init>() -> <init>
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder:
    java.util.List mMessages -> mMessages
    java.lang.String mParticipant -> mParticipant
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    long mLatestTimestamp -> mLatestTimestamp
    void <init>(java.lang.String) -> <init>
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> addMessage
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,android.support.v4.app.RemoteInput) -> setReplyAction
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> setReadPendingIntent
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> setLatestTimestamp
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build() -> build
android.support.v4.app.NotificationCompat$DecoratedCustomViewStyle -> android.support.v4.app.NotificationCompat$DecoratedCustomViewStyle:
    int MAX_ACTION_BUTTONS -> MAX_ACTION_BUTTONS
    void <init>() -> <init>
    void apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> apply
    android.widget.RemoteViews makeContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    android.widget.RemoteViews makeBigContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    android.widget.RemoteViews makeHeadsUpContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
    android.widget.RemoteViews createRemoteViews(android.widget.RemoteViews,boolean) -> createRemoteViews
    android.widget.RemoteViews generateActionButton(android.support.v4.app.NotificationCompat$Action) -> generateActionButton
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Builder) -> <init>
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
    void apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> apply
android.support.v4.app.NotificationCompat$MessagingStyle -> android.support.v4.app.NotificationCompat$MessagingStyle:
    int MAXIMUM_RETAINED_MESSAGES -> MAXIMUM_RETAINED_MESSAGES
    java.lang.CharSequence mUserDisplayName -> mUserDisplayName
    java.lang.CharSequence mConversationTitle -> mConversationTitle
    java.util.List mMessages -> mMessages
    void <init>() -> <init>
    void <init>(java.lang.CharSequence) -> <init>
    java.lang.CharSequence getUserDisplayName() -> getUserDisplayName
    android.support.v4.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence) -> setConversationTitle
    java.lang.CharSequence getConversationTitle() -> getConversationTitle
    android.support.v4.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence) -> addMessage
    android.support.v4.app.NotificationCompat$MessagingStyle addMessage(android.support.v4.app.NotificationCompat$MessagingStyle$Message) -> addMessage
    java.util.List getMessages() -> getMessages
    android.support.v4.app.NotificationCompat$MessagingStyle extractMessagingStyleFromNotification(android.app.Notification) -> extractMessagingStyleFromNotification
    void apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> apply
    android.support.v4.app.NotificationCompat$MessagingStyle$Message findLatestIncomingMessage() -> findLatestIncomingMessage
    boolean hasMessagesWithoutSender() -> hasMessagesWithoutSender
    java.lang.CharSequence makeMessageLine(android.support.v4.app.NotificationCompat$MessagingStyle$Message) -> makeMessageLine
    android.text.style.TextAppearanceSpan makeFontColorSpan(int) -> makeFontColorSpan
    void addCompatExtras(android.os.Bundle) -> addCompatExtras
    void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
android.support.v4.app.NotificationCompat$MessagingStyle$Message -> android.support.v4.app.NotificationCompat$MessagingStyle$Message:
    java.lang.String KEY_TEXT -> KEY_TEXT
    java.lang.String KEY_TIMESTAMP -> KEY_TIMESTAMP
    java.lang.String KEY_SENDER -> KEY_SENDER
    java.lang.String KEY_DATA_MIME_TYPE -> KEY_DATA_MIME_TYPE
    java.lang.String KEY_DATA_URI -> KEY_DATA_URI
    java.lang.String KEY_EXTRAS_BUNDLE -> KEY_EXTRAS_BUNDLE
    java.lang.CharSequence mText -> mText
    long mTimestamp -> mTimestamp
    java.lang.CharSequence mSender -> mSender
    android.os.Bundle mExtras -> mExtras
    java.lang.String mDataMimeType -> mDataMimeType
    android.net.Uri mDataUri -> mDataUri
    void <init>(java.lang.CharSequence,long,java.lang.CharSequence) -> <init>
    android.support.v4.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri) -> setData
    java.lang.CharSequence getText() -> getText
    long getTimestamp() -> getTimestamp
    android.os.Bundle getExtras() -> getExtras
    java.lang.CharSequence getSender() -> getSender
    java.lang.String getDataMimeType() -> getDataMimeType
    android.net.Uri getDataUri() -> getDataUri
    android.os.Bundle toBundle() -> toBundle
    android.os.Bundle[] getBundleArrayForMessages(java.util.List) -> getBundleArrayForMessages
    java.util.List getMessagesFromBundleArray(android.os.Parcelable[]) -> getMessagesFromBundleArray
    android.support.v4.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle) -> getMessageFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatApi16Impl -> android.support.v4.app.NotificationCompat$NotificationCompatApi16Impl:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
android.support.v4.app.NotificationCompat$NotificationCompatApi19Impl -> android.support.v4.app.NotificationCompat$NotificationCompatApi19Impl:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
android.support.v4.app.NotificationCompat$NotificationCompatApi20Impl -> android.support.v4.app.NotificationCompat$NotificationCompatApi20Impl:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
android.support.v4.app.NotificationCompat$NotificationCompatApi21Impl -> android.support.v4.app.NotificationCompat$NotificationCompatApi21Impl:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatApi24Impl -> android.support.v4.app.NotificationCompat$NotificationCompatApi24Impl:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
android.support.v4.app.NotificationCompat$NotificationCompatApi26Impl -> android.support.v4.app.NotificationCompat$NotificationCompatApi26Impl:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
android.support.v4.app.NotificationCompat$NotificationCompatBaseImpl -> android.support.v4.app.NotificationCompat$NotificationCompatBaseImpl:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatBaseImpl$BuilderBase -> android.support.v4.app.NotificationCompat$NotificationCompatBaseImpl$BuilderBase:
    android.app.Notification$Builder mBuilder -> mBuilder
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> <init>
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationVisibility -> android.support.v4.app.NotificationCompat$NotificationVisibility:
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void <init>() -> <init>
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
    void apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> apply
    android.widget.RemoteViews makeContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    android.widget.RemoteViews makeBigContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    android.widget.RemoteViews makeHeadsUpContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
    void addCompatExtras(android.os.Bundle) -> addCompatExtras
    void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean) -> applyStandardTemplate
    android.graphics.Bitmap createColoredBitmap(int,int) -> createColoredBitmap
    android.graphics.Bitmap createColoredBitmap(int,int,int) -> createColoredBitmap
    android.graphics.Bitmap createIconWithBackground(int,int,int,int) -> createIconWithBackground
    void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews) -> buildIntoRemoteViews
    void hideNormalContent(android.widget.RemoteViews) -> hideNormalContent
    int calculateTopPadding() -> calculateTopPadding
    float constrain(float,float,float) -> constrain
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_XSMALL -> SIZE_XSMALL
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    int SCREEN_TIMEOUT_SHORT -> SCREEN_TIMEOUT_SHORT
    int SCREEN_TIMEOUT_LONG -> SCREEN_TIMEOUT_LONG
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_PAGES -> KEY_PAGES
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    java.lang.String KEY_HINT_SCREEN_TIMEOUT -> KEY_HINT_SCREEN_TIMEOUT
    java.lang.String KEY_DISMISSAL_ID -> KEY_DISMISSAL_ID
    java.lang.String KEY_BRIDGE_TAG -> KEY_BRIDGE_TAG
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    int FLAG_HINT_AVOID_BACKGROUND_CLIPPING -> FLAG_HINT_AVOID_BACKGROUND_CLIPPING
    int FLAG_BIG_PICTURE_AMBIENT -> FLAG_BIG_PICTURE_AMBIENT
    int FLAG_HINT_CONTENT_INTENT_LAUNCHES_ACTIVITY -> FLAG_HINT_CONTENT_INTENT_LAUNCHES_ACTIVITY
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.util.ArrayList mActions -> mActions
    int mFlags -> mFlags
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    java.util.ArrayList mPages -> mPages
    android.graphics.Bitmap mBackground -> mBackground
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mContentActionIndex -> mContentActionIndex
    int mCustomSizePreset -> mCustomSizePreset
    int mCustomContentHeight -> mCustomContentHeight
    int mGravity -> mGravity
    int mHintScreenTimeout -> mHintScreenTimeout
    java.lang.String mDismissalId -> mDismissalId
    java.lang.String mBridgeTag -> mBridgeTag
    void <init>() -> <init>
    void <init>(android.app.Notification) -> <init>
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    android.support.v4.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean) -> setHintAvoidBackgroundClipping
    boolean getHintAvoidBackgroundClipping() -> getHintAvoidBackgroundClipping
    android.support.v4.app.NotificationCompat$WearableExtender setHintScreenTimeout(int) -> setHintScreenTimeout
    int getHintScreenTimeout() -> getHintScreenTimeout
    android.support.v4.app.NotificationCompat$WearableExtender setHintAmbientBigPicture(boolean) -> setHintAmbientBigPicture
    boolean getHintAmbientBigPicture() -> getHintAmbientBigPicture
    android.support.v4.app.NotificationCompat$WearableExtender setHintContentIntentLaunchesActivity(boolean) -> setHintContentIntentLaunchesActivity
    boolean getHintContentIntentLaunchesActivity() -> getHintContentIntentLaunchesActivity
    android.support.v4.app.NotificationCompat$WearableExtender setDismissalId(java.lang.String) -> setDismissalId
    java.lang.String getDismissalId() -> getDismissalId
    android.support.v4.app.NotificationCompat$WearableExtender setBridgeTag(java.lang.String) -> setBridgeTag
    java.lang.String getBridgeTag() -> getBridgeTag
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    void <init>() -> <init>
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    android.widget.RemoteViews mContentView -> mContentView
    android.widget.RemoteViews mBigContentView -> mBigContentView
    int mGroupAlertBehavior -> mGroupAlertBehavior
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String,android.widget.RemoteViews,android.widget.RemoteViews,int) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
    void removeSoundAndVibration(android.app.Notification) -> removeSoundAndVibration
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.NotificationCompatApi21:
    java.lang.String KEY_AUTHOR -> KEY_AUTHOR
    java.lang.String KEY_TEXT -> KEY_TEXT
    java.lang.String KEY_MESSAGES -> KEY_MESSAGES
    java.lang.String KEY_REMOTE_INPUT -> KEY_REMOTE_INPUT
    java.lang.String KEY_ON_REPLY -> KEY_ON_REPLY
    java.lang.String KEY_ON_READ -> KEY_ON_READ
    java.lang.String KEY_PARTICIPANTS -> KEY_PARTICIPANTS
    java.lang.String KEY_TIMESTAMP -> KEY_TIMESTAMP
    void <init>() -> <init>
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
    android.app.RemoteInput fromCompatRemoteInput(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> fromCompatRemoteInput
    android.support.v4.app.RemoteInputCompatBase$RemoteInput toCompatRemoteInput(android.app.RemoteInput,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompatRemoteInput
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.NotificationCompatApi21$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    android.widget.RemoteViews mContentView -> mContentView
    android.widget.RemoteViews mBigContentView -> mBigContentView
    android.widget.RemoteViews mHeadsUpContentView -> mHeadsUpContentView
    int mGroupAlertBehavior -> mGroupAlertBehavior
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.lang.String,java.util.ArrayList,android.os.Bundle,int,int,android.app.Notification,java.lang.String,boolean,java.lang.String,android.widget.RemoteViews,android.widget.RemoteViews,android.widget.RemoteViews,int) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
    void removeSoundAndVibration(android.app.Notification) -> removeSoundAndVibration
android.support.v4.app.NotificationCompatApi24 -> android.support.v4.app.NotificationCompatApi24:
    void <init>() -> <init>
    void addMessagingStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,java.lang.CharSequence,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List) -> addMessagingStyle
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
android.support.v4.app.NotificationCompatApi24$Builder -> android.support.v4.app.NotificationCompatApi24$Builder:
    android.app.Notification$Builder b -> b
    int mGroupAlertBehavior -> mGroupAlertBehavior
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.lang.String,java.util.ArrayList,android.os.Bundle,int,int,android.app.Notification,java.lang.String,boolean,java.lang.String,java.lang.CharSequence[],android.widget.RemoteViews,android.widget.RemoteViews,android.widget.RemoteViews,int) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
    void removeSoundAndVibration(android.app.Notification) -> removeSoundAndVibration
android.support.v4.app.NotificationCompatApi26 -> android.support.v4.app.NotificationCompatApi26:
    void <init>() -> <init>
android.support.v4.app.NotificationCompatApi26$Builder -> android.support.v4.app.NotificationCompatApi26$Builder:
    android.app.Notification$Builder mB -> mB
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.lang.String,java.util.ArrayList,android.os.Bundle,int,int,android.app.Notification,java.lang.String,boolean,java.lang.String,java.lang.CharSequence[],android.widget.RemoteViews,android.widget.RemoteViews,android.widget.RemoteViews,java.lang.String,int,java.lang.String,long,boolean,boolean,int) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
    void <init>() -> <init>
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    void <init>() -> <init>
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getDataOnlyRemoteInputs() -> getDataOnlyRemoteInputs
    boolean getAllowGeneratedReplies() -> getAllowGeneratedReplies
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput[],boolean) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatBase$UnreadConversation -> android.support.v4.app.NotificationCompatBase$UnreadConversation:
    void <init>() -> <init>
    java.lang.String[] getParticipants() -> getParticipants
    java.lang.String getParticipant() -> getParticipant
    java.lang.String[] getMessages() -> getMessages
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    long getLatestTimestamp() -> getLatestTimestamp
android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory -> android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory:
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    void <init>() -> <init>
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_DATA_ONLY_REMOTE_INPUTS -> EXTRA_DATA_ONLY_REMOTE_INPUTS
    java.lang.String EXTRA_ALLOW_GENERATED_REPLIES -> EXTRA_ALLOW_GENERATED_REPLIES
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.String KEY_DATA_ONLY_REMOTE_INPUTS -> KEY_DATA_ONLY_REMOTE_INPUTS
    java.lang.Object sExtrasLock -> sExtrasLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    void <init>() -> <init>
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    void <clinit>() -> <clinit>
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    android.widget.RemoteViews mContentView -> mContentView
    android.widget.RemoteViews mBigContentView -> mBigContentView
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,int,java.lang.CharSequence,boolean,android.os.Bundle,java.lang.String,boolean,java.lang.String,android.widget.RemoteViews,android.widget.RemoteViews) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    void <init>() -> <init>
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    android.widget.RemoteViews mContentView -> mContentView
    android.widget.RemoteViews mBigContentView -> mBigContentView
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String,android.widget.RemoteViews,android.widget.RemoteViews) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    void <init>() -> <init>
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void <init>(android.support.v4.app.NotificationCompatSideChannelService) -> <init>
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String TAG -> TAG
    java.lang.String CHECK_OP_NO_THROW -> CHECK_OP_NO_THROW
    java.lang.String OP_POST_NOTIFICATION -> OP_POST_NOTIFICATION
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    int MAX_SIDE_CHANNEL_SDK_VERSION -> MAX_SIDE_CHANNEL_SDK_VERSION
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    int IMPORTANCE_UNSPECIFIED -> IMPORTANCE_UNSPECIFIED
    int IMPORTANCE_NONE -> IMPORTANCE_NONE
    int IMPORTANCE_MIN -> IMPORTANCE_MIN
    int IMPORTANCE_LOW -> IMPORTANCE_LOW
    int IMPORTANCE_DEFAULT -> IMPORTANCE_DEFAULT
    int IMPORTANCE_HIGH -> IMPORTANCE_HIGH
    int IMPORTANCE_MAX -> IMPORTANCE_MAX
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void <init>(android.content.Context) -> <init>
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    boolean areNotificationsEnabled() -> areNotificationsEnabled
    int getImportance() -> getImportance
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    void <clinit>() -> <clinit>
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    boolean all -> all
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    android.app.Notification notif -> notif
    void <init>(java.lang.String,int,java.lang.String,android.app.Notification) -> <init>
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
    void <init>(android.content.ComponentName,android.os.IBinder) -> <init>
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    android.content.Context mContext -> mContext
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    java.util.Map mRecordMap -> mRecordMap
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    void <init>(android.content.Context) -> <init>
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void updateListenerMap() -> updateListenerMap
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> componentName
    boolean bound -> bound
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    int retryCount -> retryCount
    void <init>(android.content.ComponentName) -> <init>
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.OneShotPreDrawListener -> android.support.v4.app.OneShotPreDrawListener:
    android.view.View mView -> mView
    android.view.ViewTreeObserver mViewTreeObserver -> mViewTreeObserver
    java.lang.Runnable mRunnable -> mRunnable
    void <init>(android.view.View,java.lang.Runnable) -> <init>
    android.support.v4.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    boolean onPreDraw() -> onPreDraw
    void removeListener() -> removeListener
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String TAG -> TAG
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String EXTRA_DATA_TYPE_RESULTS_DATA -> EXTRA_DATA_TYPE_RESULTS_DATA
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormTextInput -> mAllowFreeFormTextInput
    android.os.Bundle mExtras -> mExtras
    java.util.Set mAllowedDataTypes -> mAllowedDataTypes
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle,java.util.Set) -> <init>
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    java.util.Set getAllowedDataTypes() -> getAllowedDataTypes
    boolean isDataOnly() -> isDataOnly
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    void addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
    void <clinit>() -> <clinit>
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    void <init>() -> <init>
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle,java.util.Set) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle,java.util.Set) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormTextInput -> mAllowFreeFormTextInput
    android.os.Bundle mExtras -> mExtras
    java.util.Set mAllowedDataTypes -> mAllowedDataTypes
    void <init>(java.lang.String) -> <init>
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowDataType(java.lang.String,boolean) -> setAllowDataType
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    void addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    void <init>() -> <init>
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    void addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    void <init>() -> <init>
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    void addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    void <init>() -> <init>
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    void addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    java.lang.String EXTRA_DATA_TYPE_RESULTS_DATA -> EXTRA_DATA_TYPE_RESULTS_DATA
    void <init>() -> <init>
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    void addDataResultToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
    java.lang.String getExtraResultsKeyForData(java.lang.String) -> getExtraResultsKeyForData
    android.content.Intent getClipDataIntentFromIntent(android.content.Intent) -> getClipDataIntentFromIntent
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
    void <init>() -> <init>
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    void <init>() -> <init>
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    java.util.Set getAllowedDataTypes() -> getAllowedDataTypes
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle,java.util.Set) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String EXTRA_DATA_TYPE_RESULTS_DATA -> EXTRA_DATA_TYPE_RESULTS_DATA
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_ALLOWED_DATA_TYPES -> KEY_ALLOWED_DATA_TYPES
    void <init>() -> <init>
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    void addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
    java.lang.String getExtraResultsKeyForData(java.lang.String) -> getExtraResultsKeyForData
    android.content.Intent getClipDataIntentFromIntent(android.content.Intent) -> getClipDataIntentFromIntent
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
    int STOP_FOREGROUND_REMOVE -> STOP_FOREGROUND_REMOVE
    int STOP_FOREGROUND_DETACH -> STOP_FOREGROUND_DETACH
    void <init>() -> <init>
    void stopForeground(android.app.Service,int) -> stopForeground
android.support.v4.app.ServiceCompat$StopForegroundFlags -> android.support.v4.app.ServiceCompat$StopForegroundFlags:
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void <init>() -> <init>
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    void <init>(android.app.Activity) -> <init>
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    void <init>(android.app.Activity) -> <init>
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.SharedElementCallback -> android.support.v4.app.SharedElementCallback:
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    int MAX_IMAGE_SIZE -> MAX_IMAGE_SIZE
    java.lang.String BUNDLE_SNAPSHOT_BITMAP -> BUNDLE_SNAPSHOT_BITMAP
    java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE -> BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
    java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX -> BUNDLE_SNAPSHOT_IMAGE_MATRIX
    void <init>() -> <init>
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> createDrawableBitmap
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    void onSharedElementsArrived(java.util.List,java.util.List,android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
    void <clinit>() -> <clinit>
android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener -> android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener:
    void onSharedElementsReady() -> onSharedElementsReady
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
    void <init>(java.lang.String) -> <init>
android.support.v4.app.SupportActivity -> android.support.v4.app.SupportActivity:
    android.support.v4.util.SimpleArrayMap mExtraDataMap -> mExtraDataMap
    void <init>() -> <init>
    void putExtraData(android.support.v4.app.SupportActivity$ExtraData) -> putExtraData
    android.support.v4.app.SupportActivity$ExtraData getExtraData(java.lang.Class) -> getExtraData
android.support.v4.app.SupportActivity$ExtraData -> android.support.v4.app.SupportActivity$ExtraData:
    void <init>() -> <init>
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderBaseImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    void <init>(android.content.Context) -> <init>
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
    void <clinit>() -> <clinit>
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderApi16Impl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderApi16Impl:
    void <init>() -> <init>
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderBaseImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderBaseImpl:
    void <init>() -> <init>
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    java.util.concurrent.Executor mExecutor -> mExecutor
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,java.util.concurrent.Executor) -> <init>
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean onCancelLoad() -> onCancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void cancelLoadInBackground() -> cancelLoadInBackground
    boolean isLoadInBackgroundCanceled() -> isLoadInBackgroundCanceled
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.util.concurrent.CountDownLatch mDone -> mDone
    boolean waiting -> waiting
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    void <init>(android.support.v4.content.AsyncTaskLoader) -> <init>
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    void run() -> run
    void waitForLoader() -> waitForLoader
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.content.ContentResolverCompat -> android.support.v4.content.ContentResolverCompat:
    void <init>() -> <init>
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> query
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String TAG -> TAG
    java.lang.Object sLock -> sLock
    android.util.TypedValue sTempValue -> sTempValue
    void <init>() -> <init>
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    java.io.File getDataDir(android.content.Context) -> getDataDir
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    int getColor(android.content.Context,int) -> getColor
    int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    java.io.File createFilesDir(java.io.File) -> createFilesDir
    android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    boolean isDeviceProtectedStorage(android.content.Context) -> isDeviceProtectedStorage
    void startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
    void <clinit>() -> <clinit>
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.support.v4.os.CancellationSignal mCancellationSignal -> mCancellationSignal
    android.database.Cursor loadInBackground() -> loadInBackground
    void cancelLoadInBackground() -> cancelLoadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> <init>
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String TAG_EXTERNAL_FILES -> TAG_EXTERNAL_FILES
    java.lang.String TAG_EXTERNAL_CACHE -> TAG_EXTERNAL_CACHE
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    void <init>() -> <init>
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    void <clinit>() -> <clinit>
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void <init>(java.lang.String) -> <init>
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatBaseImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    java.lang.String EXTRA_START_PLAYBACK -> EXTRA_START_PLAYBACK
    java.lang.String CATEGORY_LEANBACK_LAUNCHER -> CATEGORY_LEANBACK_LAUNCHER
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
    void <clinit>() -> <clinit>
android.support.v4.content.IntentCompat$IntentCompatApi15Impl -> android.support.v4.content.IntentCompat$IntentCompatApi15Impl:
    void <init>() -> <init>
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompat$IntentCompatBaseImpl -> android.support.v4.content.IntentCompat$IntentCompatBaseImpl:
    void <init>() -> <init>
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.support.v4.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener -> mOnLoadCanceledListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void <init>(android.content.Context) -> <init>
    void deliverResult(java.lang.Object) -> deliverResult
    void deliverCancellation() -> deliverCancellation
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    void registerOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> registerOnLoadCanceledListener
    void unregisterOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> unregisterOnLoadCanceledListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    boolean cancelLoad() -> cancelLoad
    boolean onCancelLoad() -> onCancelLoad
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    void <init>(android.support.v4.content.Loader) -> <init>
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCanceledListener -> android.support.v4.content.Loader$OnLoadCanceledListener:
    void onLoadCanceled(android.support.v4.content.Loader) -> onLoadCanceled
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void <init>(android.content.Context) -> <init>
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
    void <clinit>() -> <clinit>
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void <init>(android.support.v4.content.LocalBroadcastManager,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
    void <init>(android.content.Intent,java.util.ArrayList) -> <init>
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    boolean dead -> dead
    void <init>(android.content.IntentFilter,android.content.BroadcastReceiver) -> <init>
    java.lang.String toString() -> toString
android.support.v4.content.MimeTypeFilter -> android.support.v4.content.MimeTypeFilter:
    void <init>() -> <init>
    boolean mimeTypeAgainstFilter(java.lang.String[],java.lang.String[]) -> mimeTypeAgainstFilter
    boolean matches(java.lang.String,java.lang.String) -> matches
    java.lang.String matches(java.lang.String,java.lang.String[]) -> matches
    java.lang.String matches(java.lang.String[],java.lang.String) -> matches
    java.lang.String[] matchesMany(java.lang.String[],java.lang.String) -> matchesMany
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> mCancelled
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    android.os.Handler getHandler() -> getHandler
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void <init>() -> <init>
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$000(android.support.v4.content.ModernAsyncTask) -> access$000
    java.util.concurrent.atomic.AtomicBoolean access$100(android.support.v4.content.ModernAsyncTask) -> access$100
    void <clinit>() -> <clinit>
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    void <init>() -> <init>
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void <init>(android.support.v4.content.ModernAsyncTask) -> <init>
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void <init>(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable) -> <init>
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
    void <clinit>() -> <clinit>
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
    void <init>(android.support.v4.content.ModernAsyncTask,java.lang.Object[]) -> <init>
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void <init>() -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
    void <init>() -> <init>
android.support.v4.content.ParallelExecutorCompat -> android.support.v4.content.ParallelExecutorCompat:
    java.util.concurrent.Executor getParallelExecutor() -> getParallelExecutor
    void <init>() -> <init>
android.support.v4.content.PermissionChecker -> android.support.v4.content.PermissionChecker:
    int PERMISSION_GRANTED -> PERMISSION_GRANTED
    int PERMISSION_DENIED -> PERMISSION_DENIED
    int PERMISSION_DENIED_APP_OP -> PERMISSION_DENIED_APP_OP
    void <init>() -> <init>
    int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String) -> checkCallingPermission
    int checkCallingOrSelfPermission(android.content.Context,java.lang.String) -> checkCallingOrSelfPermission
android.support.v4.content.PermissionChecker$PermissionResult -> android.support.v4.content.PermissionChecker$PermissionResult:
android.support.v4.content.SharedPreferencesCompat -> android.support.v4.content.SharedPreferencesCompat:
    void <init>() -> <init>
android.support.v4.content.SharedPreferencesCompat$EditorCompat -> android.support.v4.content.SharedPreferencesCompat$EditorCompat:
    android.support.v4.content.SharedPreferencesCompat$EditorCompat sInstance -> sInstance
    android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper mHelper -> mHelper
    void <init>() -> <init>
    android.support.v4.content.SharedPreferencesCompat$EditorCompat getInstance() -> getInstance
    void apply(android.content.SharedPreferences$Editor) -> apply
android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper -> android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper:
    void <init>() -> <init>
    void apply(android.content.SharedPreferences$Editor) -> apply
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray sActiveWakeLocks -> sActiveWakeLocks
    int mNextId -> mNextId
    void <init>() -> <init>
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
    void <clinit>() -> <clinit>
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
    void <init>() -> <init>
android.support.v4.content.pm.ShortcutInfoCompat -> android.support.v4.content.pm.ShortcutInfoCompat:
    android.content.Context mContext -> mContext
    java.lang.String mId -> mId
    android.content.Intent[] mIntents -> mIntents
    android.content.ComponentName mActivity -> mActivity
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence mLongLabel -> mLongLabel
    java.lang.CharSequence mDisabledMessage -> mDisabledMessage
    android.support.v4.graphics.drawable.IconCompat mIcon -> mIcon
    void <init>() -> <init>
    android.content.pm.ShortcutInfo toShortcutInfo() -> toShortcutInfo
    android.content.Intent addToIntent(android.content.Intent) -> addToIntent
    java.lang.String getId() -> getId
    android.content.ComponentName getActivity() -> getActivity
    java.lang.CharSequence getShortLabel() -> getShortLabel
    java.lang.CharSequence getLongLabel() -> getLongLabel
    java.lang.CharSequence getDisabledMessage() -> getDisabledMessage
    android.content.Intent getIntent() -> getIntent
    android.content.Intent[] getIntents() -> getIntents
    void <init>(android.support.v4.content.pm.ShortcutInfoCompat$1) -> <init>
    android.content.Context access$102(android.support.v4.content.pm.ShortcutInfoCompat,android.content.Context) -> access$102
    java.lang.String access$202(android.support.v4.content.pm.ShortcutInfoCompat,java.lang.String) -> access$202
    java.lang.CharSequence access$302(android.support.v4.content.pm.ShortcutInfoCompat,java.lang.CharSequence) -> access$302
    java.lang.CharSequence access$402(android.support.v4.content.pm.ShortcutInfoCompat,java.lang.CharSequence) -> access$402
    java.lang.CharSequence access$502(android.support.v4.content.pm.ShortcutInfoCompat,java.lang.CharSequence) -> access$502
    android.content.Intent[] access$602(android.support.v4.content.pm.ShortcutInfoCompat,android.content.Intent[]) -> access$602
    android.content.Context access$100(android.support.v4.content.pm.ShortcutInfoCompat) -> access$100
    android.support.v4.graphics.drawable.IconCompat access$702(android.support.v4.content.pm.ShortcutInfoCompat,android.support.v4.graphics.drawable.IconCompat) -> access$702
    android.content.ComponentName access$802(android.support.v4.content.pm.ShortcutInfoCompat,android.content.ComponentName) -> access$802
    java.lang.CharSequence access$300(android.support.v4.content.pm.ShortcutInfoCompat) -> access$300
    android.content.Intent[] access$600(android.support.v4.content.pm.ShortcutInfoCompat) -> access$600
android.support.v4.content.pm.ShortcutInfoCompat$1 -> android.support.v4.content.pm.ShortcutInfoCompat$1:
android.support.v4.content.pm.ShortcutInfoCompat$Builder -> android.support.v4.content.pm.ShortcutInfoCompat$Builder:
    android.support.v4.content.pm.ShortcutInfoCompat mInfo -> mInfo
    void <init>(android.content.Context,java.lang.String) -> <init>
    android.support.v4.content.pm.ShortcutInfoCompat$Builder setShortLabel(java.lang.CharSequence) -> setShortLabel
    android.support.v4.content.pm.ShortcutInfoCompat$Builder setLongLabel(java.lang.CharSequence) -> setLongLabel
    android.support.v4.content.pm.ShortcutInfoCompat$Builder setDisabledMessage(java.lang.CharSequence) -> setDisabledMessage
    android.support.v4.content.pm.ShortcutInfoCompat$Builder setIntent(android.content.Intent) -> setIntent
    android.support.v4.content.pm.ShortcutInfoCompat$Builder setIntents(android.content.Intent[]) -> setIntents
    android.support.v4.content.pm.ShortcutInfoCompat$Builder setIcon(android.graphics.Bitmap) -> setIcon
    android.support.v4.content.pm.ShortcutInfoCompat$Builder setIcon(int) -> setIcon
    android.support.v4.content.pm.ShortcutInfoCompat$Builder setIcon(android.support.v4.graphics.drawable.IconCompat) -> setIcon
    android.support.v4.content.pm.ShortcutInfoCompat$Builder setActivity(android.content.ComponentName) -> setActivity
    android.support.v4.content.pm.ShortcutInfoCompat build() -> build
android.support.v4.content.pm.ShortcutManagerCompat -> android.support.v4.content.pm.ShortcutManagerCompat:
    java.lang.String ACTION_INSTALL_SHORTCUT -> ACTION_INSTALL_SHORTCUT
    java.lang.String INSTALL_SHORTCUT_PERMISSION -> INSTALL_SHORTCUT_PERMISSION
    void <init>() -> <init>
    boolean isRequestPinShortcutSupported(android.content.Context) -> isRequestPinShortcutSupported
    boolean requestPinShortcut(android.content.Context,android.support.v4.content.pm.ShortcutInfoCompat,android.content.IntentSender) -> requestPinShortcut
    android.content.Intent createShortcutResultIntent(android.content.Context,android.support.v4.content.pm.ShortcutInfoCompat) -> createShortcutResultIntent
android.support.v4.content.pm.ShortcutManagerCompat$1 -> android.support.v4.content.pm.ShortcutManagerCompat$1:
    android.content.IntentSender val$callback -> val$callback
    void <init>(android.content.IntentSender) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.content.res.ConfigurationHelper -> android.support.v4.content.res.ConfigurationHelper:
    void <init>() -> <init>
    int getScreenHeightDp(android.content.res.Resources) -> getScreenHeightDp
    int getScreenWidthDp(android.content.res.Resources) -> getScreenWidthDp
    int getSmallestScreenWidthDp(android.content.res.Resources) -> getSmallestScreenWidthDp
    int getDensityDpi(android.content.res.Resources) -> getDensityDpi
android.support.v4.content.res.FontResourcesParserCompat -> android.support.v4.content.res.FontResourcesParserCompat:
    int NORMAL_WEIGHT -> NORMAL_WEIGHT
    int ITALIC -> ITALIC
    int FETCH_STRATEGY_BLOCKING -> FETCH_STRATEGY_BLOCKING
    int FETCH_STRATEGY_ASYNC -> FETCH_STRATEGY_ASYNC
    int INFINITE_TIMEOUT_VALUE -> INFINITE_TIMEOUT_VALUE
    int DEFAULT_TIMEOUT_MILLIS -> DEFAULT_TIMEOUT_MILLIS
    void <init>() -> <init>
    android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
    android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    void skip(org.xmlpull.v1.XmlPullParser) -> skip
android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry:
android.support.v4.content.res.FontResourcesParserCompat$FetchStrategy -> android.support.v4.content.res.FontResourcesParserCompat$FetchStrategy:
android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries -> mEntries
    void <init>(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    java.lang.String mFileName -> mFileName
    int mWeight -> mWeight
    boolean mItalic -> mItalic
    int mResourceId -> mResourceId
    void <init>(java.lang.String,int,boolean,int) -> <init>
    java.lang.String getFileName() -> getFileName
    int getWeight() -> getWeight
    boolean isItalic() -> isItalic
    int getResourceId() -> getResourceId
android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    android.support.v4.provider.FontRequest mRequest -> mRequest
    int mTimeoutMs -> mTimeoutMs
    int mStrategy -> mStrategy
    void <init>(android.support.v4.provider.FontRequest,int,int) -> <init>
    android.support.v4.provider.FontRequest getRequest() -> getRequest
    int getFetchStrategy() -> getFetchStrategy
    int getTimeout() -> getTimeout
android.support.v4.content.res.ResourcesCompat -> android.support.v4.content.res.ResourcesCompat:
    java.lang.String TAG -> TAG
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,android.widget.TextView) -> getFont
    android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,android.widget.TextView) -> loadFont
    android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView) -> loadFont
    void <init>() -> <init>
android.support.v4.content.res.TypedArrayUtils -> android.support.v4.content.res.TypedArrayUtils:
    java.lang.String NAMESPACE -> NAMESPACE
    void <init>() -> <init>
    boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
    android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> getText
    java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
    int getAttr(android.content.Context,int,int) -> getAttr
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    void <init>() -> <init>
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.BitmapCompat -> android.support.v4.graphics.BitmapCompat:
    android.support.v4.graphics.BitmapCompat$BitmapCompatBaseImpl IMPL -> IMPL
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.graphics.BitmapCompat$BitmapCompatApi18Impl -> android.support.v4.graphics.BitmapCompat$BitmapCompatApi18Impl:
    void <init>() -> <init>
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompat$BitmapCompatApi19Impl -> android.support.v4.graphics.BitmapCompat$BitmapCompatApi19Impl:
    void <init>() -> <init>
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$BitmapCompatBaseImpl -> android.support.v4.graphics.BitmapCompat$BitmapCompatBaseImpl:
    void <init>() -> <init>
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.ColorUtils -> android.support.v4.graphics.ColorUtils:
    double XYZ_WHITE_REFERENCE_X -> XYZ_WHITE_REFERENCE_X
    double XYZ_WHITE_REFERENCE_Y -> XYZ_WHITE_REFERENCE_Y
    double XYZ_WHITE_REFERENCE_Z -> XYZ_WHITE_REFERENCE_Z
    double XYZ_EPSILON -> XYZ_EPSILON
    double XYZ_KAPPA -> XYZ_KAPPA
    int MIN_ALPHA_SEARCH_MAX_ITERATIONS -> MIN_ALPHA_SEARCH_MAX_ITERATIONS
    int MIN_ALPHA_SEARCH_PRECISION -> MIN_ALPHA_SEARCH_PRECISION
    java.lang.ThreadLocal TEMP_ARRAY -> TEMP_ARRAY
    void <init>() -> <init>
    int compositeColors(int,int) -> compositeColors
    int compositeAlpha(int,int) -> compositeAlpha
    int compositeComponent(int,int,int,int,int) -> compositeComponent
    double calculateLuminance(int) -> calculateLuminance
    double calculateContrast(int,int) -> calculateContrast
    int calculateMinimumAlpha(int,int,float) -> calculateMinimumAlpha
    void RGBToHSL(int,int,int,float[]) -> RGBToHSL
    void colorToHSL(int,float[]) -> colorToHSL
    int HSLToColor(float[]) -> HSLToColor
    int setAlphaComponent(int,int) -> setAlphaComponent
    void colorToLAB(int,double[]) -> colorToLAB
    void RGBToLAB(int,int,int,double[]) -> RGBToLAB
    void colorToXYZ(int,double[]) -> colorToXYZ
    void RGBToXYZ(int,int,int,double[]) -> RGBToXYZ
    void XYZToLAB(double,double,double,double[]) -> XYZToLAB
    void LABToXYZ(double,double,double,double[]) -> LABToXYZ
    int XYZToColor(double,double,double) -> XYZToColor
    int LABToColor(double,double,double) -> LABToColor
    double distanceEuclidean(double[],double[]) -> distanceEuclidean
    float constrain(float,float,float) -> constrain
    int constrain(int,int,int) -> constrain
    double pivotXyzComponent(double) -> pivotXyzComponent
    int blendARGB(int,int,float) -> blendARGB
    void blendHSL(float[],float[],float,float[]) -> blendHSL
    void blendLAB(double[],double[],double,double[]) -> blendLAB
    float circularInterpolate(float,float,float) -> circularInterpolate
    double[] getTempDouble3Array() -> getTempDouble3Array
    void <clinit>() -> <clinit>
android.support.v4.graphics.PaintCompat -> android.support.v4.graphics.PaintCompat:
    boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
    void <init>() -> <init>
android.support.v4.graphics.PaintCompatApi14 -> android.support.v4.graphics.PaintCompatApi14:
    java.lang.String TOFU_STRING -> TOFU_STRING
    java.lang.String EM_STRING -> EM_STRING
    java.lang.ThreadLocal sRectThreadLocal -> sRectThreadLocal
    void <init>() -> <init>
    boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
    android.support.v4.util.Pair obtainEmptyRects() -> obtainEmptyRects
    void <clinit>() -> <clinit>
android.support.v4.graphics.PathParser -> android.support.v4.graphics.PathParser:
    java.lang.String LOGTAG -> LOGTAG
    void <init>() -> <init>
    float[] copyOfRange(float[],int,int) -> copyOfRange
    android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    android.support.v4.graphics.PathParser$PathDataNode[] deepCopyNodes(android.support.v4.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    boolean canMorph(android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]) -> canMorph
    void updateNodes(android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]) -> updateNodes
    int nextStart(java.lang.String,int) -> nextStart
    void addNode(java.util.ArrayList,char,float[]) -> addNode
    float[] getFloats(java.lang.String) -> getFloats
    void extract(java.lang.String,int,android.support.v4.graphics.PathParser$ExtractFloatResult) -> extract
android.support.v4.graphics.PathParser$ExtractFloatResult -> android.support.v4.graphics.PathParser$ExtractFloatResult:
    int mEndPosition -> mEndPosition
    boolean mEndWithNegOrDot -> mEndWithNegOrDot
    void <init>() -> <init>
android.support.v4.graphics.PathParser$PathDataNode -> android.support.v4.graphics.PathParser$PathDataNode:
    char mType -> mType
    float[] mParams -> mParams
    void <init>(char,float[]) -> <init>
    void <init>(android.support.v4.graphics.PathParser$PathDataNode) -> <init>
    void nodesToPath(android.support.v4.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
    void interpolatePathDataNode(android.support.v4.graphics.PathParser$PathDataNode,android.support.v4.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
android.support.v4.graphics.TypefaceCompat -> android.support.v4.graphics.TypefaceCompat:
    java.lang.String TAG -> TAG
    android.support.v4.graphics.TypefaceCompat$TypefaceCompatImpl sTypefaceCompatImpl -> sTypefaceCompatImpl
    android.support.v4.util.LruCache sTypefaceCache -> sTypefaceCache
    void <init>() -> <init>
    android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
    java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.widget.TextView) -> createFromResourcesFamilyXml
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    void <clinit>() -> <clinit>
android.support.v4.graphics.TypefaceCompat$TypefaceCompatImpl -> android.support.v4.graphics.TypefaceCompat$TypefaceCompatImpl:
    android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
android.support.v4.graphics.TypefaceCompatApi21Impl -> android.support.v4.graphics.TypefaceCompatApi21Impl:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
android.support.v4.graphics.TypefaceCompatApi24Impl -> android.support.v4.graphics.TypefaceCompatApi24Impl:
    java.lang.String TAG -> TAG
    java.lang.String FONT_FAMILY_CLASS -> FONT_FAMILY_CLASS
    java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD -> ADD_FONT_WEIGHT_STYLE_METHOD
    java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD -> CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    java.lang.Class sFontFamily -> sFontFamily
    java.lang.reflect.Constructor sFontFamilyCtor -> sFontFamilyCtor
    java.lang.reflect.Method sAddFontWeightStyle -> sAddFontWeightStyle
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> sCreateFromFamiliesWithDefault
    void <init>() -> <init>
    boolean isUsable() -> isUsable
    java.lang.Object newFamily() -> newFamily
    boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    void <clinit>() -> <clinit>
android.support.v4.graphics.TypefaceCompatApi26Impl -> android.support.v4.graphics.TypefaceCompatApi26Impl:
    java.lang.String TAG -> TAG
    java.lang.String FONT_FAMILY_CLASS -> FONT_FAMILY_CLASS
    java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD -> ADD_FONT_FROM_ASSET_MANAGER_METHOD
    java.lang.String ADD_FONT_FROM_BUFFER_METHOD -> ADD_FONT_FROM_BUFFER_METHOD
    java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD -> CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    java.lang.String FREEZE_METHOD -> FREEZE_METHOD
    java.lang.String ABORT_CREATION_METHOD -> ABORT_CREATION_METHOD
    java.lang.Class sFontFamily -> sFontFamily
    java.lang.reflect.Constructor sFontFamilyCtor -> sFontFamilyCtor
    java.lang.reflect.Method sAddFontFromAssetManager -> sAddFontFromAssetManager
    java.lang.reflect.Method sAddFontFromBuffer -> sAddFontFromBuffer
    java.lang.reflect.Method sFreeze -> sFreeze
    java.lang.reflect.Method sAbortCreation -> sAbortCreation
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> sCreateFromFamiliesWithDefault
    int RESOLVE_BY_FONT_TABLE -> RESOLVE_BY_FONT_TABLE
    void <init>() -> <init>
    boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    java.lang.Object newFamily() -> newFamily
    boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int) -> addFontFromAssetManager
    boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    boolean freeze(java.lang.Object) -> freeze
    boolean abortCreation(java.lang.Object) -> abortCreation
    android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    void <clinit>() -> <clinit>
android.support.v4.graphics.TypefaceCompatBaseImpl -> android.support.v4.graphics.TypefaceCompatBaseImpl:
    java.lang.String TAG -> TAG
    java.lang.String CACHE_FILE_PREFIX -> CACHE_FILE_PREFIX
    void <init>() -> <init>
    java.lang.Object findBestFont(java.lang.Object[],int,android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    android.support.v4.provider.FontsContractCompat$FontInfo findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
android.support.v4.graphics.TypefaceCompatBaseImpl$1 -> android.support.v4.graphics.TypefaceCompatBaseImpl$1:
    android.support.v4.graphics.TypefaceCompatBaseImpl this$0 -> this$0
    void <init>(android.support.v4.graphics.TypefaceCompatBaseImpl) -> <init>
    int getWeight(android.support.v4.provider.FontsContractCompat$FontInfo) -> getWeight
    boolean isItalic(android.support.v4.provider.FontsContractCompat$FontInfo) -> isItalic
    boolean isItalic(java.lang.Object) -> isItalic
    int getWeight(java.lang.Object) -> getWeight
android.support.v4.graphics.TypefaceCompatBaseImpl$2 -> android.support.v4.graphics.TypefaceCompatBaseImpl$2:
    android.support.v4.graphics.TypefaceCompatBaseImpl this$0 -> this$0
    void <init>(android.support.v4.graphics.TypefaceCompatBaseImpl) -> <init>
    int getWeight(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    boolean isItalic(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
    boolean isItalic(java.lang.Object) -> isItalic
    int getWeight(java.lang.Object) -> getWeight
android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor -> android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor:
    int getWeight(java.lang.Object) -> getWeight
    boolean isItalic(java.lang.Object) -> isItalic
android.support.v4.graphics.TypefaceCompatUtil -> android.support.v4.graphics.TypefaceCompatUtil:
    java.lang.String TAG -> TAG
    java.lang.String CACHE_FILE_PREFIX -> CACHE_FILE_PREFIX
    void <init>() -> <init>
    java.io.File getTempFile(android.content.Context) -> getTempFile
    java.nio.ByteBuffer mmap(java.io.File) -> mmap
    java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    void closeQuietly(java.io.Closeable) -> closeQuietly
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableCompatBaseImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
    android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.graphics.drawable.DrawableCompat$DrawableCompatApi17Impl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableCompatApi17Impl:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sSetLayoutDirectionMethod -> sSetLayoutDirectionMethod
    boolean sSetLayoutDirectionMethodFetched -> sSetLayoutDirectionMethodFetched
    java.lang.reflect.Method sGetLayoutDirectionMethod -> sGetLayoutDirectionMethod
    boolean sGetLayoutDirectionMethodFetched -> sGetLayoutDirectionMethodFetched
    void <init>() -> <init>
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
android.support.v4.graphics.drawable.DrawableCompat$DrawableCompatApi19Impl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableCompatApi19Impl:
    void <init>() -> <init>
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
    int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
android.support.v4.graphics.drawable.DrawableCompat$DrawableCompatApi21Impl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableCompatApi21Impl:
    void <init>() -> <init>
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
    void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
android.support.v4.graphics.drawable.DrawableCompat$DrawableCompatApi23Impl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableCompatApi23Impl:
    void <init>() -> <init>
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
    void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
android.support.v4.graphics.drawable.DrawableCompat$DrawableCompatBaseImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableCompatBaseImpl:
    void <init>() -> <init>
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
    boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
android.support.v4.graphics.drawable.DrawableWrapper -> android.support.v4.graphics.drawable.DrawableWrapper:
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
android.support.v4.graphics.drawable.DrawableWrapperApi14 -> android.support.v4.graphics.drawable.DrawableWrapperApi14:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> DEFAULT_TINT_MODE
    int mCurrentColor -> mCurrentColor
    android.graphics.PorterDuff$Mode mCurrentMode -> mCurrentMode
    boolean mColorFilterSet -> mColorFilterSet
    android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState mState -> mState
    boolean mMutated -> mMutated
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void updateLocalState(android.content.res.Resources) -> updateLocalState
    android.graphics.drawable.Drawable newDrawableFromState(android.graphics.drawable.Drawable$ConstantState,android.content.res.Resources) -> newDrawableFromState
    void jumpToCurrentState() -> jumpToCurrentState
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    android.graphics.drawable.Drawable mutate() -> mutate
    android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState mutateConstantState() -> mutateConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean onLevelChange(int) -> onLevelChange
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean updateTint(int[]) -> updateTint
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    boolean isCompatTintEnabled() -> isCompatTintEnabled
    void <clinit>() -> <clinit>
android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState -> android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState:
    int mChangingConfigurations -> mChangingConfigurations
    android.graphics.drawable.Drawable$ConstantState mDrawableState -> mDrawableState
    android.content.res.ColorStateList mTint -> mTint
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
    boolean canConstantState() -> canConstantState
android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperStateBase -> android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperStateBase:
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
android.support.v4.graphics.drawable.DrawableWrapperApi19 -> android.support.v4.graphics.drawable.DrawableWrapperApi19:
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
    android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState mutateConstantState() -> mutateConstantState
android.support.v4.graphics.drawable.DrawableWrapperApi19$DrawableWrapperStateKitKat -> android.support.v4.graphics.drawable.DrawableWrapperApi19$DrawableWrapperStateKitKat:
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
android.support.v4.graphics.drawable.DrawableWrapperApi21 -> android.support.v4.graphics.drawable.DrawableWrapperApi21:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sIsProjectedDrawableMethod -> sIsProjectedDrawableMethod
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void getOutline(android.graphics.Outline) -> getOutline
    android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTint(int) -> setTint
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean setState(int[]) -> setState
    boolean isCompatTintEnabled() -> isCompatTintEnabled
    boolean isProjected() -> isProjected
    android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState mutateConstantState() -> mutateConstantState
    void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
android.support.v4.graphics.drawable.DrawableWrapperApi21$DrawableWrapperStateLollipop -> android.support.v4.graphics.drawable.DrawableWrapperApi21$DrawableWrapperStateLollipop:
    void <init>(android.support.v4.graphics.drawable.DrawableWrapperApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
android.support.v4.graphics.drawable.IconCompat -> android.support.v4.graphics.drawable.IconCompat:
    float ADAPTIVE_ICON_INSET_FACTOR -> ADAPTIVE_ICON_INSET_FACTOR
    float DEFAULT_VIEW_PORT_SCALE -> DEFAULT_VIEW_PORT_SCALE
    float ICON_DIAMETER_FACTOR -> ICON_DIAMETER_FACTOR
    float BLUR_FACTOR -> BLUR_FACTOR
    float KEY_SHADOW_OFFSET_FACTOR -> KEY_SHADOW_OFFSET_FACTOR
    int KEY_SHADOW_ALPHA -> KEY_SHADOW_ALPHA
    int AMBIENT_SHADOW_ALPHA -> AMBIENT_SHADOW_ALPHA
    int TYPE_BITMAP -> TYPE_BITMAP
    int TYPE_RESOURCE -> TYPE_RESOURCE
    int TYPE_DATA -> TYPE_DATA
    int TYPE_URI -> TYPE_URI
    int TYPE_ADAPTIVE_BITMAP -> TYPE_ADAPTIVE_BITMAP
    int mType -> mType
    java.lang.Object mObj1 -> mObj1
    int mInt1 -> mInt1
    int mInt2 -> mInt2
    android.support.v4.graphics.drawable.IconCompat createWithResource(android.content.Context,int) -> createWithResource
    android.support.v4.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap) -> createWithBitmap
    android.support.v4.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap) -> createWithAdaptiveBitmap
    android.support.v4.graphics.drawable.IconCompat createWithData(byte[],int,int) -> createWithData
    android.support.v4.graphics.drawable.IconCompat createWithContentUri(java.lang.String) -> createWithContentUri
    android.support.v4.graphics.drawable.IconCompat createWithContentUri(android.net.Uri) -> createWithContentUri
    void <init>(int) -> <init>
    android.graphics.drawable.Icon toIcon() -> toIcon
    void addToShortcutIntent(android.content.Intent) -> addToShortcutIntent
    android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap) -> createLegacyIconFromAdaptiveIcon
android.support.v4.graphics.drawable.RoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawable:
    int DEFAULT_PAINT_FLAGS -> DEFAULT_PAINT_FLAGS
    android.graphics.Bitmap mBitmap -> mBitmap
    int mTargetDensity -> mTargetDensity
    int mGravity -> mGravity
    android.graphics.Paint mPaint -> mPaint
    android.graphics.BitmapShader mBitmapShader -> mBitmapShader
    android.graphics.Matrix mShaderMatrix -> mShaderMatrix
    float mCornerRadius -> mCornerRadius
    android.graphics.Rect mDstRect -> mDstRect
    android.graphics.RectF mDstRectF -> mDstRectF
    boolean mApplyGravity -> mApplyGravity
    boolean mIsCircular -> mIsCircular
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    android.graphics.Paint getPaint() -> getPaint
    android.graphics.Bitmap getBitmap() -> getBitmap
    void computeBitmapSize() -> computeBitmapSize
    void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    void setTargetDensity(int) -> setTargetDensity
    int getGravity() -> getGravity
    void setGravity(int) -> setGravity
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void setAntiAlias(boolean) -> setAntiAlias
    boolean hasAntiAlias() -> hasAntiAlias
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setDither(boolean) -> setDither
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    void updateDstRect() -> updateDstRect
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void setCircular(boolean) -> setCircular
    void updateCircularCornerRadius() -> updateCircularCornerRadius
    boolean isCircular() -> isCircular
    void setCornerRadius(float) -> setCornerRadius
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    float getCornerRadius() -> getCornerRadius
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getOpacity() -> getOpacity
    void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    boolean isGreaterThanZero(float) -> isGreaterThanZero
android.support.v4.graphics.drawable.RoundedBitmapDrawable21 -> android.support.v4.graphics.drawable.RoundedBitmapDrawable21:
    void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    void getOutline(android.graphics.Outline) -> getOutline
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory:
    java.lang.String TAG -> TAG
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> create
    void <init>() -> <init>
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.graphics.drawable.TintAwareDrawable -> android.support.v4.graphics.drawable.TintAwareDrawable:
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    void <init>() -> <init>
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
    void <clinit>() -> <clinit>
android.support.v4.hardware.display.DisplayManagerCompat$DisplayManagerCompatApi14Impl -> android.support.v4.hardware.display.DisplayManagerCompat$DisplayManagerCompatApi14Impl:
    android.view.WindowManager mWindowManager -> mWindowManager
    void <init>(android.content.Context) -> <init>
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$DisplayManagerCompatApi17Impl -> android.support.v4.hardware.display.DisplayManagerCompat$DisplayManagerCompatApi17Impl:
    android.hardware.display.DisplayManager mDisplayManager -> mDisplayManager
    void <init>(android.content.Context) -> <init>
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.fingerprint.FingerprintManagerCompat -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat:
    android.content.Context mContext -> mContext
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$FingerprintManagerCompatImpl IMPL -> IMPL
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context) -> from
    void <init>(android.content.Context) -> <init>
    boolean hasEnrolledFingerprints() -> hasEnrolledFingerprints
    boolean isHardwareDetected() -> isHardwareDetected
    void authenticate(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
    void <clinit>() -> <clinit>
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl:
    void <init>() -> <init>
    boolean hasEnrolledFingerprints(android.content.Context) -> hasEnrolledFingerprints
    boolean isHardwareDetected(android.content.Context) -> isHardwareDetected
    void authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject wrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> wrapCryptoObject
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject) -> unwrapCryptoObject
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback wrapCallback(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> wrapCallback
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl$1 -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl$1:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback val$callback -> val$callback
    void <init>(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> <init>
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal) -> onAuthenticationSucceeded
    void onAuthenticationFailed() -> onAuthenticationFailed
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback:
    void <init>() -> <init>
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult) -> onAuthenticationSucceeded
    void onAuthenticationFailed() -> onAuthenticationFailed
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject mCryptoObject -> mCryptoObject
    void <init>(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> <init>
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject() -> getCryptoObject
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject:
    java.security.Signature mSignature -> mSignature
    javax.crypto.Cipher mCipher -> mCipher
    javax.crypto.Mac mMac -> mMac
    void <init>(java.security.Signature) -> <init>
    void <init>(javax.crypto.Cipher) -> <init>
    void <init>(javax.crypto.Mac) -> <init>
    java.security.Signature getSignature() -> getSignature
    javax.crypto.Cipher getCipher() -> getCipher
    javax.crypto.Mac getMac() -> getMac
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$FingerprintManagerCompatImpl -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$FingerprintManagerCompatImpl:
    boolean hasEnrolledFingerprints(android.content.Context) -> hasEnrolledFingerprints
    boolean isHardwareDetected(android.content.Context) -> isHardwareDetected
    void authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$LegacyFingerprintManagerCompatImpl -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$LegacyFingerprintManagerCompatImpl:
    void <init>() -> <init>
    boolean hasEnrolledFingerprints(android.content.Context) -> hasEnrolledFingerprints
    boolean isHardwareDetected(android.content.Context) -> isHardwareDetected
    void authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23 -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23:
    void <init>() -> <init>
    android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context) -> getFingerprintManagerOrNull
    boolean hasEnrolledFingerprints(android.content.Context) -> hasEnrolledFingerprints
    boolean isHardwareDetected(android.content.Context) -> isHardwareDetected
    void authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject,int,java.lang.Object,android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback,android.os.Handler) -> authenticate
    android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject) -> wrapCryptoObject
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> unwrapCryptoObject
    android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback) -> wrapCallback
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject access$000(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> access$000
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$1 -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$1:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback val$callback -> val$callback
    void <init>(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback) -> <init>
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult) -> onAuthenticationSucceeded
    void onAuthenticationFailed() -> onAuthenticationFailed
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback:
    void <init>() -> <init>
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal) -> onAuthenticationSucceeded
    void onAuthenticationFailed() -> onAuthenticationFailed
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject mCryptoObject -> mCryptoObject
    void <init>(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject) -> <init>
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject getCryptoObject() -> getCryptoObject
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject:
    java.security.Signature mSignature -> mSignature
    javax.crypto.Cipher mCipher -> mCipher
    javax.crypto.Mac mMac -> mMac
    void <init>(java.security.Signature) -> <init>
    void <init>(javax.crypto.Cipher) -> <init>
    void <init>(javax.crypto.Mac) -> <init>
    java.security.Signature getSignature() -> getSignature
    javax.crypto.Cipher getCipher() -> getCipher
    javax.crypto.Mac getMac() -> getMac
android.support.v4.internal.package-info -> android.support.v4.internal.package-info:
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
    int SUPPORTED_MODIFIERS_MASK -> SUPPORTED_MODIFIERS_MASK
    int FLAG_KEEP_OPEN_ON_SUBMENU_OPENED -> FLAG_KEEP_OPEN_ON_SUBMENU_OPENED
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
    android.support.v4.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    java.lang.CharSequence getTooltipText() -> getTooltipText
    android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    int getNumericModifiers() -> getNumericModifiers
    android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    int getAlphabeticModifiers() -> getAlphabeticModifiers
    android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    android.content.res.ColorStateList getIconTintList() -> getIconTintList
    android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.math.MathUtils -> android.support.v4.math.MathUtils:
    void <init>() -> <init>
    float clamp(float,float,float) -> clamp
    double clamp(double,double,double) -> clamp
    int clamp(int,int,int) -> clamp
android.support.v4.media.AudioAttributesCompat -> android.support.v4.media.AudioAttributesCompat:
    java.lang.String TAG -> TAG
    int CONTENT_TYPE_UNKNOWN -> CONTENT_TYPE_UNKNOWN
    int CONTENT_TYPE_SPEECH -> CONTENT_TYPE_SPEECH
    int CONTENT_TYPE_MUSIC -> CONTENT_TYPE_MUSIC
    int CONTENT_TYPE_MOVIE -> CONTENT_TYPE_MOVIE
    int CONTENT_TYPE_SONIFICATION -> CONTENT_TYPE_SONIFICATION
    int USAGE_UNKNOWN -> USAGE_UNKNOWN
    int USAGE_MEDIA -> USAGE_MEDIA
    int USAGE_VOICE_COMMUNICATION -> USAGE_VOICE_COMMUNICATION
    int USAGE_VOICE_COMMUNICATION_SIGNALLING -> USAGE_VOICE_COMMUNICATION_SIGNALLING
    int USAGE_ALARM -> USAGE_ALARM
    int USAGE_NOTIFICATION -> USAGE_NOTIFICATION
    int USAGE_NOTIFICATION_RINGTONE -> USAGE_NOTIFICATION_RINGTONE
    int USAGE_NOTIFICATION_COMMUNICATION_REQUEST -> USAGE_NOTIFICATION_COMMUNICATION_REQUEST
    int USAGE_NOTIFICATION_COMMUNICATION_INSTANT -> USAGE_NOTIFICATION_COMMUNICATION_INSTANT
    int USAGE_NOTIFICATION_COMMUNICATION_DELAYED -> USAGE_NOTIFICATION_COMMUNICATION_DELAYED
    int USAGE_NOTIFICATION_EVENT -> USAGE_NOTIFICATION_EVENT
    int USAGE_ASSISTANCE_ACCESSIBILITY -> USAGE_ASSISTANCE_ACCESSIBILITY
    int USAGE_ASSISTANCE_NAVIGATION_GUIDANCE -> USAGE_ASSISTANCE_NAVIGATION_GUIDANCE
    int USAGE_ASSISTANCE_SONIFICATION -> USAGE_ASSISTANCE_SONIFICATION
    int USAGE_GAME -> USAGE_GAME
    int USAGE_VIRTUAL_SOURCE -> USAGE_VIRTUAL_SOURCE
    int USAGE_ASSISTANT -> USAGE_ASSISTANT
    int SUPPRESSIBLE_NOTIFICATION -> SUPPRESSIBLE_NOTIFICATION
    int SUPPRESSIBLE_CALL -> SUPPRESSIBLE_CALL
    android.util.SparseIntArray SUPPRESSIBLE_USAGES -> SUPPRESSIBLE_USAGES
    boolean sForceLegacyBehavior -> sForceLegacyBehavior
    int[] SDK_USAGES -> SDK_USAGES
    int FLAG_AUDIBILITY_ENFORCED -> FLAG_AUDIBILITY_ENFORCED
    int FLAG_SECURE -> FLAG_SECURE
    int FLAG_SCO -> FLAG_SCO
    int FLAG_BEACON -> FLAG_BEACON
    int FLAG_HW_AV_SYNC -> FLAG_HW_AV_SYNC
    int FLAG_HW_HOTWORD -> FLAG_HW_HOTWORD
    int FLAG_BYPASS_INTERRUPTION_POLICY -> FLAG_BYPASS_INTERRUPTION_POLICY
    int FLAG_BYPASS_MUTE -> FLAG_BYPASS_MUTE
    int FLAG_LOW_LATENCY -> FLAG_LOW_LATENCY
    int FLAG_DEEP_BUFFER -> FLAG_DEEP_BUFFER
    int FLAG_ALL -> FLAG_ALL
    int FLAG_ALL_PUBLIC -> FLAG_ALL_PUBLIC
    int mUsage -> mUsage
    int mContentType -> mContentType
    int mFlags -> mFlags
    java.lang.Integer mLegacyStream -> mLegacyStream
    android.support.v4.media.AudioAttributesCompatApi21$Wrapper mAudioAttributesWrapper -> mAudioAttributesWrapper
    void <init>() -> <init>
    int getVolumeControlStream() -> getVolumeControlStream
    java.lang.Object unwrap() -> unwrap
    int getLegacyStreamType() -> getLegacyStreamType
    android.support.v4.media.AudioAttributesCompat wrap(java.lang.Object) -> wrap
    int getContentType() -> getContentType
    int getUsage() -> getUsage
    int getFlags() -> getFlags
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String usageToString() -> usageToString
    java.lang.String usageToString(int) -> usageToString
    int usageForStreamType(int) -> usageForStreamType
    void setForceLegacyBehavior(boolean) -> setForceLegacyBehavior
    int toVolumeStreamType(boolean,android.support.v4.media.AudioAttributesCompat) -> toVolumeStreamType
    int toVolumeStreamType(boolean,int,int) -> toVolumeStreamType
    boolean equals(java.lang.Object) -> equals
    boolean access$000() -> access$000
    void <init>(android.support.v4.media.AudioAttributesCompat$1) -> <init>
    android.support.v4.media.AudioAttributesCompatApi21$Wrapper access$202(android.support.v4.media.AudioAttributesCompat,android.support.v4.media.AudioAttributesCompatApi21$Wrapper) -> access$202
    int access$300(int) -> access$300
    void <clinit>() -> <clinit>
android.support.v4.media.AudioAttributesCompat$1 -> android.support.v4.media.AudioAttributesCompat$1:
android.support.v4.media.AudioAttributesCompat$AttributeContentType -> android.support.v4.media.AudioAttributesCompat$AttributeContentType:
android.support.v4.media.AudioAttributesCompat$AttributeUsage -> android.support.v4.media.AudioAttributesCompat$AttributeUsage:
android.support.v4.media.AudioAttributesCompat$AudioManagerHidden -> android.support.v4.media.AudioAttributesCompat$AudioManagerHidden:
    int STREAM_BLUETOOTH_SCO -> STREAM_BLUETOOTH_SCO
    int STREAM_SYSTEM_ENFORCED -> STREAM_SYSTEM_ENFORCED
    int STREAM_TTS -> STREAM_TTS
    int STREAM_ACCESSIBILITY -> STREAM_ACCESSIBILITY
    void <init>() -> <init>
android.support.v4.media.AudioAttributesCompat$Builder -> android.support.v4.media.AudioAttributesCompat$Builder:
    int mUsage -> mUsage
    int mContentType -> mContentType
    int mFlags -> mFlags
    java.lang.Integer mLegacyStream -> mLegacyStream
    java.lang.Object mAAObject -> mAAObject
    void <init>() -> <init>
    void <init>(android.support.v4.media.AudioAttributesCompat) -> <init>
    android.support.v4.media.AudioAttributesCompat build() -> build
    android.support.v4.media.AudioAttributesCompat$Builder setUsage(int) -> setUsage
    android.support.v4.media.AudioAttributesCompat$Builder setContentType(int) -> setContentType
    android.support.v4.media.AudioAttributesCompat$Builder setFlags(int) -> setFlags
    android.support.v4.media.AudioAttributesCompat$Builder setLegacyStreamType(int) -> setLegacyStreamType
android.support.v4.media.AudioAttributesCompatApi21 -> android.support.v4.media.AudioAttributesCompatApi21:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sAudioAttributesToLegacyStreamType -> sAudioAttributesToLegacyStreamType
    void <init>() -> <init>
    int toLegacyStreamType(android.support.v4.media.AudioAttributesCompatApi21$Wrapper) -> toLegacyStreamType
android.support.v4.media.AudioAttributesCompatApi21$Wrapper -> android.support.v4.media.AudioAttributesCompatApi21$Wrapper:
    android.media.AudioAttributes mWrapped -> mWrapped
    void <init>(android.media.AudioAttributes) -> <init>
    android.support.v4.media.AudioAttributesCompatApi21$Wrapper wrap(android.media.AudioAttributes) -> wrap
    android.media.AudioAttributes unwrap() -> unwrap
android.support.v4.media.MediaBrowserCompat -> android.support.v4.media.MediaBrowserCompat:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    java.lang.String EXTRA_PAGE -> EXTRA_PAGE
    java.lang.String EXTRA_PAGE_SIZE -> EXTRA_PAGE_SIZE
    java.lang.String EXTRA_MEDIA_ID -> EXTRA_MEDIA_ID
    java.lang.String EXTRA_DOWNLOAD_PROGRESS -> EXTRA_DOWNLOAD_PROGRESS
    java.lang.String CUSTOM_ACTION_DOWNLOAD -> CUSTOM_ACTION_DOWNLOAD
    java.lang.String CUSTOM_ACTION_REMOVE_DOWNLOADED_FILE -> CUSTOM_ACTION_REMOVE_DOWNLOADED_FILE
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl mImpl -> mImpl
    void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    void connect() -> connect
    void disconnect() -> disconnect
    boolean isConnected() -> isConnected
    android.content.ComponentName getServiceComponent() -> getServiceComponent
    java.lang.String getRoot() -> getRoot
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void subscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    void unsubscribe(java.lang.String) -> unsubscribe
    void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> unsubscribe
    void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> getItem
    void search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback) -> search
    void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback) -> sendCustomAction
    void <clinit>() -> <clinit>
android.support.v4.media.MediaBrowserCompat$CallbackHandler -> android.support.v4.media.MediaBrowserCompat$CallbackHandler:
    java.lang.ref.WeakReference mCallbackImplRef -> mCallbackImplRef
    java.lang.ref.WeakReference mCallbacksMessengerRef -> mCallbacksMessengerRef
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void setCallbacksMessenger(android.os.Messenger) -> setCallbacksMessenger
android.support.v4.media.MediaBrowserCompat$ConnectionCallback -> android.support.v4.media.MediaBrowserCompat$ConnectionCallback:
    java.lang.Object mConnectionCallbackObj -> mConnectionCallbackObj
    android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal mConnectionCallbackInternal -> mConnectionCallbackInternal
    void <init>() -> <init>
    void onConnected() -> onConnected
    void onConnectionSuspended() -> onConnectionSuspended
    void onConnectionFailed() -> onConnectionFailed
    void setInternalConnectionCallback(android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal) -> setInternalConnectionCallback
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal -> android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal:
    void onConnected() -> onConnected
    void onConnectionSuspended() -> onConnectionSuspended
    void onConnectionFailed() -> onConnectionFailed
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$StubApi21 -> android.support.v4.media.MediaBrowserCompat$ConnectionCallback$StubApi21:
    android.support.v4.media.MediaBrowserCompat$ConnectionCallback this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$ConnectionCallback) -> <init>
    void onConnected() -> onConnected
    void onConnectionSuspended() -> onConnectionSuspended
    void onConnectionFailed() -> onConnectionFailed
android.support.v4.media.MediaBrowserCompat$CustomActionCallback -> android.support.v4.media.MediaBrowserCompat$CustomActionCallback:
    void <init>() -> <init>
    void onProgressUpdate(java.lang.String,android.os.Bundle,android.os.Bundle) -> onProgressUpdate
    void onResult(java.lang.String,android.os.Bundle,android.os.Bundle) -> onResult
    void onError(java.lang.String,android.os.Bundle,android.os.Bundle) -> onError
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver -> android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver:
    java.lang.String mAction -> mAction
    android.os.Bundle mExtras -> mExtras
    android.support.v4.media.MediaBrowserCompat$CustomActionCallback mCallback -> mCallback
    void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,android.os.Handler) -> <init>
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$ItemCallback -> android.support.v4.media.MediaBrowserCompat$ItemCallback:
    java.lang.Object mItemCallbackObj -> mItemCallbackObj
    void <init>() -> <init>
    void onItemLoaded(android.support.v4.media.MediaBrowserCompat$MediaItem) -> onItemLoaded
    void onError(java.lang.String) -> onError
android.support.v4.media.MediaBrowserCompat$ItemCallback$StubApi23 -> android.support.v4.media.MediaBrowserCompat$ItemCallback$StubApi23:
    android.support.v4.media.MediaBrowserCompat$ItemCallback this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$ItemCallback) -> <init>
    void onItemLoaded(android.os.Parcel) -> onItemLoaded
    void onError(java.lang.String) -> onError
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    java.lang.String mMediaId -> mMediaId
    android.support.v4.media.MediaBrowserCompat$ItemCallback mCallback -> mCallback
    void <init>(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback,android.os.Handler) -> <init>
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl:
    void connect() -> connect
    void disconnect() -> disconnect
    boolean isConnected() -> isConnected
    android.content.ComponentName getServiceComponent() -> getServiceComponent
    java.lang.String getRoot() -> getRoot
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> unsubscribe
    void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> getItem
    void search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback) -> search
    void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback) -> sendCustomAction
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21:
    java.lang.Object mBrowserObj -> mBrowserObj
    android.os.Bundle mRootHints -> mRootHints
    android.support.v4.media.MediaBrowserCompat$CallbackHandler mHandler -> mHandler
    android.support.v4.util.ArrayMap mSubscriptions -> mSubscriptions
    android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper mServiceBinderWrapper -> mServiceBinderWrapper
    android.os.Messenger mCallbacksMessenger -> mCallbacksMessenger
    android.support.v4.media.session.MediaSessionCompat$Token mMediaSessionToken -> mMediaSessionToken
    void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    void connect() -> connect
    void disconnect() -> disconnect
    boolean isConnected() -> isConnected
    android.content.ComponentName getServiceComponent() -> getServiceComponent
    java.lang.String getRoot() -> getRoot
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> unsubscribe
    void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> getItem
    void search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback) -> search
    void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback) -> sendCustomAction
    void onConnected() -> onConnected
    void onConnectionSuspended() -> onConnectionSuspended
    void onConnectionFailed() -> onConnectionFailed
    void onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> onServiceConnected
    void onConnectionFailed(android.os.Messenger) -> onConnectionFailed
    void onLoadChildren(android.os.Messenger,java.lang.String,java.util.List,android.os.Bundle) -> onLoadChildren
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$1 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$1:
    android.support.v4.media.MediaBrowserCompat$ItemCallback val$cb -> val$cb
    java.lang.String val$mediaId -> val$mediaId
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21 this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$2 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$2:
    android.support.v4.media.MediaBrowserCompat$ItemCallback val$cb -> val$cb
    java.lang.String val$mediaId -> val$mediaId
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21 this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$3 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$3:
    android.support.v4.media.MediaBrowserCompat$ItemCallback val$cb -> val$cb
    java.lang.String val$mediaId -> val$mediaId
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21 this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$4 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$4:
    android.support.v4.media.MediaBrowserCompat$SearchCallback val$callback -> val$callback
    java.lang.String val$query -> val$query
    android.os.Bundle val$extras -> val$extras
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21 this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$SearchCallback,java.lang.String,android.os.Bundle) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$5 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$5:
    android.support.v4.media.MediaBrowserCompat$SearchCallback val$callback -> val$callback
    java.lang.String val$query -> val$query
    android.os.Bundle val$extras -> val$extras
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21 this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$SearchCallback,java.lang.String,android.os.Bundle) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$6 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$6:
    android.support.v4.media.MediaBrowserCompat$CustomActionCallback val$callback -> val$callback
    java.lang.String val$action -> val$action
    android.os.Bundle val$extras -> val$extras
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21 this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,java.lang.String,android.os.Bundle) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$7 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$7:
    android.support.v4.media.MediaBrowserCompat$CustomActionCallback val$callback -> val$callback
    java.lang.String val$action -> val$action
    android.os.Bundle val$extras -> val$extras
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21 this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,java.lang.String,android.os.Bundle) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi23 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi23:
    void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> getItem
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi24 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi24:
    void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> unsubscribe
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase:
    int CONNECT_STATE_DISCONNECTING -> CONNECT_STATE_DISCONNECTING
    int CONNECT_STATE_DISCONNECTED -> CONNECT_STATE_DISCONNECTED
    int CONNECT_STATE_CONNECTING -> CONNECT_STATE_CONNECTING
    int CONNECT_STATE_CONNECTED -> CONNECT_STATE_CONNECTED
    int CONNECT_STATE_SUSPENDED -> CONNECT_STATE_SUSPENDED
    android.content.Context mContext -> mContext
    android.content.ComponentName mServiceComponent -> mServiceComponent
    android.support.v4.media.MediaBrowserCompat$ConnectionCallback mCallback -> mCallback
    android.os.Bundle mRootHints -> mRootHints
    android.support.v4.media.MediaBrowserCompat$CallbackHandler mHandler -> mHandler
    android.support.v4.util.ArrayMap mSubscriptions -> mSubscriptions
    int mState -> mState
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection mServiceConnection -> mServiceConnection
    android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper mServiceBinderWrapper -> mServiceBinderWrapper
    android.os.Messenger mCallbacksMessenger -> mCallbacksMessenger
    java.lang.String mRootId -> mRootId
    android.support.v4.media.session.MediaSessionCompat$Token mMediaSessionToken -> mMediaSessionToken
    android.os.Bundle mExtras -> mExtras
    void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    void connect() -> connect
    void disconnect() -> disconnect
    void forceCloseConnection() -> forceCloseConnection
    boolean isConnected() -> isConnected
    android.content.ComponentName getServiceComponent() -> getServiceComponent
    java.lang.String getRoot() -> getRoot
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> unsubscribe
    void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> getItem
    void search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback) -> search
    void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback) -> sendCustomAction
    void onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> onServiceConnected
    void onConnectionFailed(android.os.Messenger) -> onConnectionFailed
    void onLoadChildren(android.os.Messenger,java.lang.String,java.util.List,android.os.Bundle) -> onLoadChildren
    java.lang.String getStateLabel(int) -> getStateLabel
    boolean isCurrent(android.os.Messenger,java.lang.String) -> isCurrent
    void dump() -> dump
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1:
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2:
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$3 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$3:
    android.support.v4.media.MediaBrowserCompat$ItemCallback val$cb -> val$cb
    java.lang.String val$mediaId -> val$mediaId
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$4 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$4:
    android.support.v4.media.MediaBrowserCompat$ItemCallback val$cb -> val$cb
    java.lang.String val$mediaId -> val$mediaId
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$5 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$5:
    android.support.v4.media.MediaBrowserCompat$SearchCallback val$callback -> val$callback
    java.lang.String val$query -> val$query
    android.os.Bundle val$extras -> val$extras
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.MediaBrowserCompat$SearchCallback,java.lang.String,android.os.Bundle) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$6 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$6:
    android.support.v4.media.MediaBrowserCompat$CustomActionCallback val$callback -> val$callback
    java.lang.String val$action -> val$action
    android.os.Bundle val$extras -> val$extras
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,java.lang.String,android.os.Bundle) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection:
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void postOrRun(java.lang.Runnable) -> postOrRun
    boolean isCurrent(java.lang.String) -> isCurrent
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$1 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$1:
    android.content.ComponentName val$name -> val$name
    android.os.IBinder val$binder -> val$binder
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection,android.content.ComponentName,android.os.IBinder) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$2 -> android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$2:
    android.content.ComponentName val$name -> val$name
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection,android.content.ComponentName) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl -> android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl:
    void onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> onServiceConnected
    void onConnectionFailed(android.os.Messenger) -> onConnectionFailed
    void onLoadChildren(android.os.Messenger,java.lang.String,java.util.List,android.os.Bundle) -> onLoadChildren
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    int mFlags -> mFlags
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    int FLAG_BROWSABLE -> FLAG_BROWSABLE
    int FLAG_PLAYABLE -> FLAG_PLAYABLE
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.media.MediaBrowserCompat$MediaItem fromMediaItem(java.lang.Object) -> fromMediaItem
    java.util.List fromMediaItemList(java.util.List) -> fromMediaItemList
    void <init>(android.support.v4.media.MediaDescriptionCompat,int) -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    int getFlags() -> getFlags
    boolean isBrowsable() -> isBrowsable
    boolean isPlayable() -> isPlayable
    android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    java.lang.String getMediaId() -> getMediaId
    void <clinit>() -> <clinit>
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$1:
    void <init>() -> <init>
    android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaBrowserCompat$MediaItem$Flags -> android.support.v4.media.MediaBrowserCompat$MediaItem$Flags:
android.support.v4.media.MediaBrowserCompat$SearchCallback -> android.support.v4.media.MediaBrowserCompat$SearchCallback:
    void <init>() -> <init>
    void onSearchResult(java.lang.String,android.os.Bundle,java.util.List) -> onSearchResult
    void onError(java.lang.String,android.os.Bundle) -> onError
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    java.lang.String mQuery -> mQuery
    android.os.Bundle mExtras -> mExtras
    android.support.v4.media.MediaBrowserCompat$SearchCallback mCallback -> mCallback
    void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback,android.os.Handler) -> <init>
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper -> android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper:
    android.os.Messenger mMessenger -> mMessenger
    android.os.Bundle mRootHints -> mRootHints
    void <init>(android.os.IBinder,android.os.Bundle) -> <init>
    void connect(android.content.Context,android.os.Messenger) -> connect
    void disconnect(android.os.Messenger) -> disconnect
    void addSubscription(java.lang.String,android.os.IBinder,android.os.Bundle,android.os.Messenger) -> addSubscription
    void removeSubscription(java.lang.String,android.os.IBinder,android.os.Messenger) -> removeSubscription
    void getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver,android.os.Messenger) -> getMediaItem
    void registerCallbackMessenger(android.os.Messenger) -> registerCallbackMessenger
    void unregisterCallbackMessenger(android.os.Messenger) -> unregisterCallbackMessenger
    void search(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,android.os.Messenger) -> search
    void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,android.os.Messenger) -> sendCustomAction
    void sendRequest(int,android.os.Bundle,android.os.Messenger) -> sendRequest
android.support.v4.media.MediaBrowserCompat$Subscription -> android.support.v4.media.MediaBrowserCompat$Subscription:
    java.util.List mCallbacks -> mCallbacks
    java.util.List mOptionsList -> mOptionsList
    void <init>() -> <init>
    boolean isEmpty() -> isEmpty
    java.util.List getOptionsList() -> getOptionsList
    java.util.List getCallbacks() -> getCallbacks
    android.support.v4.media.MediaBrowserCompat$SubscriptionCallback getCallback(android.os.Bundle) -> getCallback
    void putCallback(android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> putCallback
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback -> android.support.v4.media.MediaBrowserCompat$SubscriptionCallback:
    java.lang.Object mSubscriptionCallbackObj -> mSubscriptionCallbackObj
    android.os.IBinder mToken -> mToken
    java.lang.ref.WeakReference mSubscriptionRef -> mSubscriptionRef
    void <init>() -> <init>
    void onChildrenLoaded(java.lang.String,java.util.List) -> onChildrenLoaded
    void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> onChildrenLoaded
    void onError(java.lang.String) -> onError
    void onError(java.lang.String,android.os.Bundle) -> onError
    void setSubscription(android.support.v4.media.MediaBrowserCompat$Subscription) -> setSubscription
    android.os.IBinder access$000(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> access$000
    void access$100(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback,android.support.v4.media.MediaBrowserCompat$Subscription) -> access$100
    java.lang.Object access$200(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> access$200
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi21 -> android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi21:
    android.support.v4.media.MediaBrowserCompat$SubscriptionCallback this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> <init>
    void onChildrenLoaded(java.lang.String,java.util.List) -> onChildrenLoaded
    void onError(java.lang.String) -> onError
    java.util.List applyOptions(java.util.List,android.os.Bundle) -> applyOptions
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi24 -> android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi24:
    android.support.v4.media.MediaBrowserCompat$SubscriptionCallback this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> <init>
    void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> onChildrenLoaded
    void onError(java.lang.String,android.os.Bundle) -> onError
android.support.v4.media.MediaBrowserCompatApi21 -> android.support.v4.media.MediaBrowserCompatApi21:
    java.lang.String NULL_MEDIA_ITEM_ID -> NULL_MEDIA_ITEM_ID
    void <init>() -> <init>
    java.lang.Object createConnectionCallback(android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback) -> createConnectionCallback
    java.lang.Object createBrowser(android.content.Context,android.content.ComponentName,java.lang.Object,android.os.Bundle) -> createBrowser
    void connect(java.lang.Object) -> connect
    void disconnect(java.lang.Object) -> disconnect
    boolean isConnected(java.lang.Object) -> isConnected
    android.content.ComponentName getServiceComponent(java.lang.Object) -> getServiceComponent
    java.lang.String getRoot(java.lang.Object) -> getRoot
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    java.lang.Object getSessionToken(java.lang.Object) -> getSessionToken
    java.lang.Object createSubscriptionCallback(android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback) -> createSubscriptionCallback
    void subscribe(java.lang.Object,java.lang.String,java.lang.Object) -> subscribe
    void unsubscribe(java.lang.Object,java.lang.String) -> unsubscribe
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback -> android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback:
    void onConnected() -> onConnected
    void onConnectionSuspended() -> onConnectionSuspended
    void onConnectionFailed() -> onConnectionFailed
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallbackProxy -> android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallbackProxy:
    android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback mConnectionCallback -> mConnectionCallback
    void <init>(android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback) -> <init>
    void onConnected() -> onConnected
    void onConnectionSuspended() -> onConnectionSuspended
    void onConnectionFailed() -> onConnectionFailed
android.support.v4.media.MediaBrowserCompatApi21$MediaItem -> android.support.v4.media.MediaBrowserCompatApi21$MediaItem:
    void <init>() -> <init>
    int getFlags(java.lang.Object) -> getFlags
    java.lang.Object getDescription(java.lang.Object) -> getDescription
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback -> android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback:
    void onChildrenLoaded(java.lang.String,java.util.List) -> onChildrenLoaded
    void onError(java.lang.String) -> onError
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallbackProxy -> android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallbackProxy:
    android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback mSubscriptionCallback -> mSubscriptionCallback
    void <init>(android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback) -> <init>
    void onChildrenLoaded(java.lang.String,java.util.List) -> onChildrenLoaded
    void onError(java.lang.String) -> onError
android.support.v4.media.MediaBrowserCompatApi23 -> android.support.v4.media.MediaBrowserCompatApi23:
    void <init>() -> <init>
    java.lang.Object createItemCallback(android.support.v4.media.MediaBrowserCompatApi23$ItemCallback) -> createItemCallback
    void getItem(java.lang.Object,java.lang.String,java.lang.Object) -> getItem
android.support.v4.media.MediaBrowserCompatApi23$ItemCallback -> android.support.v4.media.MediaBrowserCompatApi23$ItemCallback:
    void onItemLoaded(android.os.Parcel) -> onItemLoaded
    void onError(java.lang.String) -> onError
android.support.v4.media.MediaBrowserCompatApi23$ItemCallbackProxy -> android.support.v4.media.MediaBrowserCompatApi23$ItemCallbackProxy:
    android.support.v4.media.MediaBrowserCompatApi23$ItemCallback mItemCallback -> mItemCallback
    void <init>(android.support.v4.media.MediaBrowserCompatApi23$ItemCallback) -> <init>
    void onItemLoaded(android.media.browse.MediaBrowser$MediaItem) -> onItemLoaded
    void onError(java.lang.String) -> onError
android.support.v4.media.MediaBrowserCompatApi24 -> android.support.v4.media.MediaBrowserCompatApi24:
    void <init>() -> <init>
    java.lang.Object createSubscriptionCallback(android.support.v4.media.MediaBrowserCompatApi24$SubscriptionCallback) -> createSubscriptionCallback
    void subscribe(java.lang.Object,java.lang.String,android.os.Bundle,java.lang.Object) -> subscribe
    void unsubscribe(java.lang.Object,java.lang.String,java.lang.Object) -> unsubscribe
android.support.v4.media.MediaBrowserCompatApi24$SubscriptionCallback -> android.support.v4.media.MediaBrowserCompatApi24$SubscriptionCallback:
    void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> onChildrenLoaded
    void onError(java.lang.String,android.os.Bundle) -> onError
android.support.v4.media.MediaBrowserCompatApi24$SubscriptionCallbackProxy -> android.support.v4.media.MediaBrowserCompatApi24$SubscriptionCallbackProxy:
    void <init>(android.support.v4.media.MediaBrowserCompatApi24$SubscriptionCallback) -> <init>
    void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> onChildrenLoaded
    void onError(java.lang.String,android.os.Bundle) -> onError
android.support.v4.media.MediaBrowserCompatUtils -> android.support.v4.media.MediaBrowserCompatUtils:
    void <init>() -> <init>
    boolean areSameOptions(android.os.Bundle,android.os.Bundle) -> areSameOptions
    boolean hasDuplicatedItems(android.os.Bundle,android.os.Bundle) -> hasDuplicatedItems
android.support.v4.media.MediaBrowserProtocol -> android.support.v4.media.MediaBrowserProtocol:
    java.lang.String DATA_CALLBACK_TOKEN -> DATA_CALLBACK_TOKEN
    java.lang.String DATA_CALLING_UID -> DATA_CALLING_UID
    java.lang.String DATA_MEDIA_ITEM_ID -> DATA_MEDIA_ITEM_ID
    java.lang.String DATA_MEDIA_ITEM_LIST -> DATA_MEDIA_ITEM_LIST
    java.lang.String DATA_MEDIA_SESSION_TOKEN -> DATA_MEDIA_SESSION_TOKEN
    java.lang.String DATA_OPTIONS -> DATA_OPTIONS
    java.lang.String DATA_PACKAGE_NAME -> DATA_PACKAGE_NAME
    java.lang.String DATA_RESULT_RECEIVER -> DATA_RESULT_RECEIVER
    java.lang.String DATA_ROOT_HINTS -> DATA_ROOT_HINTS
    java.lang.String DATA_SEARCH_EXTRAS -> DATA_SEARCH_EXTRAS
    java.lang.String DATA_SEARCH_QUERY -> DATA_SEARCH_QUERY
    java.lang.String DATA_CUSTOM_ACTION -> DATA_CUSTOM_ACTION
    java.lang.String DATA_CUSTOM_ACTION_EXTRAS -> DATA_CUSTOM_ACTION_EXTRAS
    java.lang.String EXTRA_CLIENT_VERSION -> EXTRA_CLIENT_VERSION
    java.lang.String EXTRA_SERVICE_VERSION -> EXTRA_SERVICE_VERSION
    java.lang.String EXTRA_MESSENGER_BINDER -> EXTRA_MESSENGER_BINDER
    java.lang.String EXTRA_SESSION_BINDER -> EXTRA_SESSION_BINDER
    int SERVICE_VERSION_1 -> SERVICE_VERSION_1
    int SERVICE_VERSION_CURRENT -> SERVICE_VERSION_CURRENT
    int SERVICE_MSG_ON_CONNECT -> SERVICE_MSG_ON_CONNECT
    int SERVICE_MSG_ON_CONNECT_FAILED -> SERVICE_MSG_ON_CONNECT_FAILED
    int SERVICE_MSG_ON_LOAD_CHILDREN -> SERVICE_MSG_ON_LOAD_CHILDREN
    int CLIENT_VERSION_1 -> CLIENT_VERSION_1
    int CLIENT_VERSION_CURRENT -> CLIENT_VERSION_CURRENT
    int CLIENT_MSG_CONNECT -> CLIENT_MSG_CONNECT
    int CLIENT_MSG_DISCONNECT -> CLIENT_MSG_DISCONNECT
    int CLIENT_MSG_ADD_SUBSCRIPTION -> CLIENT_MSG_ADD_SUBSCRIPTION
    int CLIENT_MSG_REMOVE_SUBSCRIPTION -> CLIENT_MSG_REMOVE_SUBSCRIPTION
    int CLIENT_MSG_GET_MEDIA_ITEM -> CLIENT_MSG_GET_MEDIA_ITEM
    int CLIENT_MSG_REGISTER_CALLBACK_MESSENGER -> CLIENT_MSG_REGISTER_CALLBACK_MESSENGER
    int CLIENT_MSG_UNREGISTER_CALLBACK_MESSENGER -> CLIENT_MSG_UNREGISTER_CALLBACK_MESSENGER
    int CLIENT_MSG_SEARCH -> CLIENT_MSG_SEARCH
    int CLIENT_MSG_SEND_CUSTOM_ACTION -> CLIENT_MSG_SEND_CUSTOM_ACTION
    void <init>() -> <init>
android.support.v4.media.MediaBrowserServiceCompat -> android.support.v4.media.MediaBrowserServiceCompat:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    float EPSILON -> EPSILON
    android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl mImpl -> mImpl
    java.lang.String SERVICE_INTERFACE -> SERVICE_INTERFACE
    java.lang.String KEY_MEDIA_ITEM -> KEY_MEDIA_ITEM
    java.lang.String KEY_SEARCH_RESULTS -> KEY_SEARCH_RESULTS
    int RESULT_FLAG_OPTION_NOT_HANDLED -> RESULT_FLAG_OPTION_NOT_HANDLED
    int RESULT_FLAG_ON_LOAD_ITEM_NOT_IMPLEMENTED -> RESULT_FLAG_ON_LOAD_ITEM_NOT_IMPLEMENTED
    int RESULT_FLAG_ON_SEARCH_NOT_IMPLEMENTED -> RESULT_FLAG_ON_SEARCH_NOT_IMPLEMENTED
    int RESULT_ERROR -> RESULT_ERROR
    int RESULT_OK -> RESULT_OK
    int RESULT_PROGRESS_UPDATE -> RESULT_PROGRESS_UPDATE
    android.support.v4.util.ArrayMap mConnections -> mConnections
    android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord mCurConnection -> mCurConnection
    android.support.v4.media.MediaBrowserServiceCompat$ServiceHandler mHandler -> mHandler
    android.support.v4.media.session.MediaSessionCompat$Token mSession -> mSession
    void <init>() -> <init>
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> onGetRoot
    void onLoadChildren(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$Result) -> onLoadChildren
    void onLoadChildren(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$Result,android.os.Bundle) -> onLoadChildren
    void onLoadItem(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$Result) -> onLoadItem
    void onSearch(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserServiceCompat$Result) -> onSearch
    void onCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserServiceCompat$Result) -> onCustomAction
    void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> setSessionToken
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
    void notifyChildrenChanged(java.lang.String) -> notifyChildrenChanged
    void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    boolean isValidPackage(java.lang.String,int) -> isValidPackage
    void addSubscription(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.IBinder,android.os.Bundle) -> addSubscription
    boolean removeSubscription(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.IBinder) -> removeSubscription
    void performLoadChildren(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.Bundle) -> performLoadChildren
    java.util.List applyOptions(java.util.List,android.os.Bundle) -> applyOptions
    void performLoadItem(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> performLoadItem
    void performSearch(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> performSearch
    void performCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> performCustomAction
    void <clinit>() -> <clinit>
android.support.v4.media.MediaBrowserServiceCompat$1 -> android.support.v4.media.MediaBrowserServiceCompat$1:
    android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord val$connection -> val$connection
    java.lang.String val$parentId -> val$parentId
    android.os.Bundle val$options -> val$options
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord,java.lang.String,android.os.Bundle) -> <init>
    void onResultSent(java.util.List) -> onResultSent
    void onResultSent(java.lang.Object) -> onResultSent
android.support.v4.media.MediaBrowserServiceCompat$2 -> android.support.v4.media.MediaBrowserServiceCompat$2:
    android.support.v4.os.ResultReceiver val$receiver -> val$receiver
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    void onResultSent(android.support.v4.media.MediaBrowserCompat$MediaItem) -> onResultSent
    void onResultSent(java.lang.Object) -> onResultSent
android.support.v4.media.MediaBrowserServiceCompat$3 -> android.support.v4.media.MediaBrowserServiceCompat$3:
    android.support.v4.os.ResultReceiver val$receiver -> val$receiver
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    void onResultSent(java.util.List) -> onResultSent
    void onResultSent(java.lang.Object) -> onResultSent
android.support.v4.media.MediaBrowserServiceCompat$4 -> android.support.v4.media.MediaBrowserServiceCompat$4:
    android.support.v4.os.ResultReceiver val$receiver -> val$receiver
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    void onResultSent(android.os.Bundle) -> onResultSent
    void onProgressUpdateSent(android.os.Bundle) -> onProgressUpdateSent
    void onErrorSent(android.os.Bundle) -> onErrorSent
    void onResultSent(java.lang.Object) -> onResultSent
android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot -> android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot:
    java.lang.String EXTRA_RECENT -> EXTRA_RECENT
    java.lang.String EXTRA_OFFLINE -> EXTRA_OFFLINE
    java.lang.String EXTRA_SUGGESTED -> EXTRA_SUGGESTED
    java.lang.String EXTRA_SUGGESTION_KEYWORDS -> EXTRA_SUGGESTION_KEYWORDS
    java.lang.String mRootId -> mRootId
    android.os.Bundle mExtras -> mExtras
    void <init>(java.lang.String,android.os.Bundle) -> <init>
    java.lang.String getRootId() -> getRootId
    android.os.Bundle getExtras() -> getExtras
android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord -> android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord:
    java.lang.String pkg -> pkg
    android.os.Bundle rootHints -> rootHints
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks callbacks -> callbacks
    android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot root -> root
    java.util.HashMap subscriptions -> subscriptions
    void <init>() -> <init>
android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl -> android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl:
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> setSessionToken
    void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21 -> android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21:
    java.util.List mRootExtrasList -> mRootExtrasList
    java.lang.Object mServiceObj -> mServiceObj
    android.os.Messenger mMessenger -> mMessenger
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserServiceCompat) -> <init>
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> setSessionToken
    void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
    android.support.v4.media.MediaBrowserServiceCompatApi21$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> onGetRoot
    void onLoadChildren(java.lang.String,android.support.v4.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> onLoadChildren
android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$1 -> android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$1:
    android.support.v4.media.session.MediaSessionCompat$Token val$token -> val$token
    android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21 this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2 -> android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2:
    java.lang.String val$parentId -> val$parentId
    android.os.Bundle val$options -> val$options
    android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21 this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,java.lang.String,android.os.Bundle) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$3 -> android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$3:
    android.support.v4.media.MediaBrowserServiceCompatApi21$ResultWrapper val$resultWrapper -> val$resultWrapper
    android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21 this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,java.lang.Object,android.support.v4.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> <init>
    void onResultSent(java.util.List) -> onResultSent
    void detach() -> detach
    void onResultSent(java.lang.Object) -> onResultSent
android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23 -> android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23:
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserServiceCompat) -> <init>
    void onCreate() -> onCreate
    void onLoadItem(java.lang.String,android.support.v4.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> onLoadItem
android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1 -> android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1:
    android.support.v4.media.MediaBrowserServiceCompatApi21$ResultWrapper val$resultWrapper -> val$resultWrapper
    android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23 this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23,java.lang.Object,android.support.v4.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> <init>
    void onResultSent(android.support.v4.media.MediaBrowserCompat$MediaItem) -> onResultSent
    void detach() -> detach
    void onResultSent(java.lang.Object) -> onResultSent
android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi24 -> android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi24:
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserServiceCompat) -> <init>
    void onCreate() -> onCreate
    void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    void onLoadChildren(java.lang.String,android.support.v4.media.MediaBrowserServiceCompatApi24$ResultWrapper,android.os.Bundle) -> onLoadChildren
    android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi24$1 -> android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi24$1:
    android.support.v4.media.MediaBrowserServiceCompatApi24$ResultWrapper val$resultWrapper -> val$resultWrapper
    android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi24 this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi24,java.lang.Object,android.support.v4.media.MediaBrowserServiceCompatApi24$ResultWrapper) -> <init>
    void onResultSent(java.util.List) -> onResultSent
    void detach() -> detach
    void onResultSent(java.lang.Object) -> onResultSent
android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase -> android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase:
    android.os.Messenger mMessenger -> mMessenger
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserServiceCompat) -> <init>
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> setSessionToken
    void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$1 -> android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$1:
    android.support.v4.media.session.MediaSessionCompat$Token val$token -> val$token
    android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$2 -> android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$2:
    java.lang.String val$parentId -> val$parentId
    android.os.Bundle val$options -> val$options
    android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase,java.lang.String,android.os.Bundle) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$Result -> android.support.v4.media.MediaBrowserServiceCompat$Result:
    java.lang.Object mDebug -> mDebug
    boolean mDetachCalled -> mDetachCalled
    boolean mSendResultCalled -> mSendResultCalled
    boolean mSendProgressUpdateCalled -> mSendProgressUpdateCalled
    boolean mSendErrorCalled -> mSendErrorCalled
    int mFlags -> mFlags
    void <init>(java.lang.Object) -> <init>
    void sendResult(java.lang.Object) -> sendResult
    void sendProgressUpdate(android.os.Bundle) -> sendProgressUpdate
    void sendError(android.os.Bundle) -> sendError
    void detach() -> detach
    boolean isDone() -> isDone
    void setFlags(int) -> setFlags
    int getFlags() -> getFlags
    void onResultSent(java.lang.Object) -> onResultSent
    void onProgressUpdateSent(android.os.Bundle) -> onProgressUpdateSent
    void onErrorSent(android.os.Bundle) -> onErrorSent
    void checkExtraFields(android.os.Bundle) -> checkExtraFields
android.support.v4.media.MediaBrowserServiceCompat$ResultFlags -> android.support.v4.media.MediaBrowserServiceCompat$ResultFlags:
android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl -> android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl:
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserServiceCompat) -> <init>
    void connect(java.lang.String,int,android.os.Bundle,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> connect
    void disconnect(android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> disconnect
    void addSubscription(java.lang.String,android.os.IBinder,android.os.Bundle,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> addSubscription
    void removeSubscription(java.lang.String,android.os.IBinder,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> removeSubscription
    void getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> getMediaItem
    void registerCallbacks(android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks,android.os.Bundle) -> registerCallbacks
    void unregisterCallbacks(android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> unregisterCallbacks
    void search(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> search
    void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> sendCustomAction
android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$1 -> android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$1:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> val$callbacks
    java.lang.String val$pkg -> val$pkg
    android.os.Bundle val$rootHints -> val$rootHints
    int val$uid -> val$uid
    android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle,int) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$2 -> android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$2:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> val$callbacks
    android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$3 -> android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$3:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> val$callbacks
    java.lang.String val$id -> val$id
    android.os.IBinder val$token -> val$token
    android.os.Bundle val$options -> val$options
    android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.IBinder,android.os.Bundle) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$4 -> android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$4:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> val$callbacks
    java.lang.String val$id -> val$id
    android.os.IBinder val$token -> val$token
    android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.IBinder) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$5 -> android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$5:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> val$callbacks
    java.lang.String val$mediaId -> val$mediaId
    android.support.v4.os.ResultReceiver val$receiver -> val$receiver
    android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.support.v4.os.ResultReceiver) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$6 -> android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$6:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> val$callbacks
    android.os.Bundle val$rootHints -> val$rootHints
    android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks,android.os.Bundle) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$7 -> android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$7:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> val$callbacks
    android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$8 -> android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$8:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> val$callbacks
    java.lang.String val$query -> val$query
    android.os.Bundle val$extras -> val$extras
    android.support.v4.os.ResultReceiver val$receiver -> val$receiver
    android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$9 -> android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl$9:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> val$callbacks
    java.lang.String val$action -> val$action
    android.os.Bundle val$extras -> val$extras
    android.support.v4.os.ResultReceiver val$receiver -> val$receiver
    android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> this$1
    void <init>(android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl,android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver) -> <init>
    void run() -> run
android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks -> android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacks:
    android.os.IBinder asBinder() -> asBinder
    void onConnect(java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> onConnect
    void onConnectFailed() -> onConnectFailed
    void onLoadChildren(java.lang.String,java.util.List,android.os.Bundle) -> onLoadChildren
android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacksCompat -> android.support.v4.media.MediaBrowserServiceCompat$ServiceCallbacksCompat:
    android.os.Messenger mCallbacks -> mCallbacks
    void <init>(android.os.Messenger) -> <init>
    android.os.IBinder asBinder() -> asBinder
    void onConnect(java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> onConnect
    void onConnectFailed() -> onConnectFailed
    void onLoadChildren(java.lang.String,java.util.List,android.os.Bundle) -> onLoadChildren
    void sendRequest(int,android.os.Bundle) -> sendRequest
android.support.v4.media.MediaBrowserServiceCompat$ServiceHandler -> android.support.v4.media.MediaBrowserServiceCompat$ServiceHandler:
    android.support.v4.media.MediaBrowserServiceCompat$ServiceBinderImpl mServiceBinderImpl -> mServiceBinderImpl
    android.support.v4.media.MediaBrowserServiceCompat this$0 -> this$0
    void <init>(android.support.v4.media.MediaBrowserServiceCompat) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    boolean sendMessageAtTime(android.os.Message,long) -> sendMessageAtTime
    void postOrRun(java.lang.Runnable) -> postOrRun
android.support.v4.media.MediaBrowserServiceCompatApi21 -> android.support.v4.media.MediaBrowserServiceCompatApi21:
    void <init>() -> <init>
    java.lang.Object createService(android.content.Context,android.support.v4.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy) -> createService
    void onCreate(java.lang.Object) -> onCreate
    android.os.IBinder onBind(java.lang.Object,android.content.Intent) -> onBind
    void setSessionToken(java.lang.Object,java.lang.Object) -> setSessionToken
    void notifyChildrenChanged(java.lang.Object,java.lang.String) -> notifyChildrenChanged
android.support.v4.media.MediaBrowserServiceCompatApi21$BrowserRoot -> android.support.v4.media.MediaBrowserServiceCompatApi21$BrowserRoot:
    java.lang.String mRootId -> mRootId
    android.os.Bundle mExtras -> mExtras
    void <init>(java.lang.String,android.os.Bundle) -> <init>
android.support.v4.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor -> android.support.v4.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor:
    android.support.v4.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy mServiceProxy -> mServiceProxy
    void <init>(android.content.Context,android.support.v4.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy) -> <init>
    android.service.media.MediaBrowserService$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> onGetRoot
    void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result) -> onLoadChildren
android.support.v4.media.MediaBrowserServiceCompatApi21$ResultWrapper -> android.support.v4.media.MediaBrowserServiceCompatApi21$ResultWrapper:
    android.service.media.MediaBrowserService$Result mResultObj -> mResultObj
    void <init>(android.service.media.MediaBrowserService$Result) -> <init>
    void sendResult(java.lang.Object) -> sendResult
    void detach() -> detach
    java.util.List parcelListToItemList(java.util.List) -> parcelListToItemList
android.support.v4.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy -> android.support.v4.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy:
    android.support.v4.media.MediaBrowserServiceCompatApi21$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> onGetRoot
    void onLoadChildren(java.lang.String,android.support.v4.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> onLoadChildren
android.support.v4.media.MediaBrowserServiceCompatApi23 -> android.support.v4.media.MediaBrowserServiceCompatApi23:
    void <init>() -> <init>
    java.lang.Object createService(android.content.Context,android.support.v4.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy) -> createService
android.support.v4.media.MediaBrowserServiceCompatApi23$MediaBrowserServiceAdaptor -> android.support.v4.media.MediaBrowserServiceCompatApi23$MediaBrowserServiceAdaptor:
    void <init>(android.content.Context,android.support.v4.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy) -> <init>
    void onLoadItem(java.lang.String,android.service.media.MediaBrowserService$Result) -> onLoadItem
android.support.v4.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy -> android.support.v4.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy:
    void onLoadItem(java.lang.String,android.support.v4.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> onLoadItem
android.support.v4.media.MediaBrowserServiceCompatApi24 -> android.support.v4.media.MediaBrowserServiceCompatApi24:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sResultFlags -> sResultFlags
    void <init>() -> <init>
    java.lang.Object createService(android.content.Context,android.support.v4.media.MediaBrowserServiceCompatApi24$ServiceCompatProxy) -> createService
    void notifyChildrenChanged(java.lang.Object,java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    android.os.Bundle getBrowserRootHints(java.lang.Object) -> getBrowserRootHints
    java.lang.reflect.Field access$000() -> access$000
    void <clinit>() -> <clinit>
android.support.v4.media.MediaBrowserServiceCompatApi24$MediaBrowserServiceAdaptor -> android.support.v4.media.MediaBrowserServiceCompatApi24$MediaBrowserServiceAdaptor:
    void <init>(android.content.Context,android.support.v4.media.MediaBrowserServiceCompatApi24$ServiceCompatProxy) -> <init>
    void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result,android.os.Bundle) -> onLoadChildren
android.support.v4.media.MediaBrowserServiceCompatApi24$ResultWrapper -> android.support.v4.media.MediaBrowserServiceCompatApi24$ResultWrapper:
    android.service.media.MediaBrowserService$Result mResultObj -> mResultObj
    void <init>(android.service.media.MediaBrowserService$Result) -> <init>
    void sendResult(java.util.List,int) -> sendResult
    void detach() -> detach
    java.util.List parcelListToItemList(java.util.List) -> parcelListToItemList
android.support.v4.media.MediaBrowserServiceCompatApi24$ServiceCompatProxy -> android.support.v4.media.MediaBrowserServiceCompatApi24$ServiceCompatProxy:
    void onLoadChildren(java.lang.String,android.support.v4.media.MediaBrowserServiceCompatApi24$ResultWrapper,android.os.Bundle) -> onLoadChildren
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    java.lang.String EXTRA_BT_FOLDER_TYPE -> EXTRA_BT_FOLDER_TYPE
    long BT_FOLDER_TYPE_MIXED -> BT_FOLDER_TYPE_MIXED
    long BT_FOLDER_TYPE_TITLES -> BT_FOLDER_TYPE_TITLES
    long BT_FOLDER_TYPE_ALBUMS -> BT_FOLDER_TYPE_ALBUMS
    long BT_FOLDER_TYPE_ARTISTS -> BT_FOLDER_TYPE_ARTISTS
    long BT_FOLDER_TYPE_GENRES -> BT_FOLDER_TYPE_GENRES
    long BT_FOLDER_TYPE_PLAYLISTS -> BT_FOLDER_TYPE_PLAYLISTS
    long BT_FOLDER_TYPE_YEARS -> BT_FOLDER_TYPE_YEARS
    java.lang.String EXTRA_DOWNLOAD_STATUS -> EXTRA_DOWNLOAD_STATUS
    long STATUS_NOT_DOWNLOADED -> STATUS_NOT_DOWNLOADED
    long STATUS_DOWNLOADING -> STATUS_DOWNLOADING
    long STATUS_DOWNLOADED -> STATUS_DOWNLOADED
    java.lang.String DESCRIPTION_KEY_MEDIA_URI -> DESCRIPTION_KEY_MEDIA_URI
    java.lang.String DESCRIPTION_KEY_NULL_BUNDLE_FLAG -> DESCRIPTION_KEY_NULL_BUNDLE_FLAG
    java.lang.String mMediaId -> mMediaId
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    java.lang.CharSequence mDescription -> mDescription
    android.graphics.Bitmap mIcon -> mIcon
    android.net.Uri mIconUri -> mIconUri
    android.os.Bundle mExtras -> mExtras
    android.net.Uri mMediaUri -> mMediaUri
    java.lang.Object mDescriptionObj -> mDescriptionObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    void <init>(android.os.Parcel) -> <init>
    java.lang.String getMediaId() -> getMediaId
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    java.lang.CharSequence getDescription() -> getDescription
    android.graphics.Bitmap getIconBitmap() -> getIconBitmap
    android.net.Uri getIconUri() -> getIconUri
    android.os.Bundle getExtras() -> getExtras
    android.net.Uri getMediaUri() -> getMediaUri
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    java.lang.Object getMediaDescription() -> getMediaDescription
    android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    void <clinit>() -> <clinit>
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    void <init>() -> <init>
    android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    java.lang.String mMediaId -> mMediaId
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    java.lang.CharSequence mDescription -> mDescription
    android.graphics.Bitmap mIcon -> mIcon
    android.net.Uri mIconUri -> mIconUri
    android.os.Bundle mExtras -> mExtras
    android.net.Uri mMediaUri -> mMediaUri
    void <init>() -> <init>
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
    android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    android.support.v4.media.MediaDescriptionCompat build() -> build
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.MediaDescriptionCompatApi21:
    void <init>() -> <init>
    java.lang.String getMediaId(java.lang.Object) -> getMediaId
    java.lang.CharSequence getTitle(java.lang.Object) -> getTitle
    java.lang.CharSequence getSubtitle(java.lang.Object) -> getSubtitle
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    android.graphics.Bitmap getIconBitmap(java.lang.Object) -> getIconBitmap
    android.net.Uri getIconUri(java.lang.Object) -> getIconUri
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    void <init>() -> <init>
    java.lang.Object newInstance() -> newInstance
    void setMediaId(java.lang.Object,java.lang.String) -> setMediaId
    void setTitle(java.lang.Object,java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.Object,java.lang.CharSequence) -> setSubtitle
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
    void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> setIconBitmap
    void setIconUri(java.lang.Object,android.net.Uri) -> setIconUri
    void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
    java.lang.Object build(java.lang.Object) -> build
android.support.v4.media.MediaDescriptionCompatApi23 -> android.support.v4.media.MediaDescriptionCompatApi23:
    void <init>() -> <init>
    android.net.Uri getMediaUri(java.lang.Object) -> getMediaUri
android.support.v4.media.MediaDescriptionCompatApi23$Builder -> android.support.v4.media.MediaDescriptionCompatApi23$Builder:
    void <init>() -> <init>
    void setMediaUri(java.lang.Object,android.net.Uri) -> setMediaUri
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    java.lang.String TAG -> TAG
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_WRITER -> METADATA_KEY_WRITER
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_COMPILATION -> METADATA_KEY_COMPILATION
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_YEAR -> METADATA_KEY_YEAR
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_TRACK_NUMBER -> METADATA_KEY_TRACK_NUMBER
    java.lang.String METADATA_KEY_NUM_TRACKS -> METADATA_KEY_NUM_TRACKS
    java.lang.String METADATA_KEY_DISC_NUMBER -> METADATA_KEY_DISC_NUMBER
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.String METADATA_KEY_ART -> METADATA_KEY_ART
    java.lang.String METADATA_KEY_ART_URI -> METADATA_KEY_ART_URI
    java.lang.String METADATA_KEY_ALBUM_ART -> METADATA_KEY_ALBUM_ART
    java.lang.String METADATA_KEY_ALBUM_ART_URI -> METADATA_KEY_ALBUM_ART_URI
    java.lang.String METADATA_KEY_USER_RATING -> METADATA_KEY_USER_RATING
    java.lang.String METADATA_KEY_RATING -> METADATA_KEY_RATING
    java.lang.String METADATA_KEY_DISPLAY_TITLE -> METADATA_KEY_DISPLAY_TITLE
    java.lang.String METADATA_KEY_DISPLAY_SUBTITLE -> METADATA_KEY_DISPLAY_SUBTITLE
    java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION -> METADATA_KEY_DISPLAY_DESCRIPTION
    java.lang.String METADATA_KEY_DISPLAY_ICON -> METADATA_KEY_DISPLAY_ICON
    java.lang.String METADATA_KEY_DISPLAY_ICON_URI -> METADATA_KEY_DISPLAY_ICON_URI
    java.lang.String METADATA_KEY_MEDIA_ID -> METADATA_KEY_MEDIA_ID
    java.lang.String METADATA_KEY_MEDIA_URI -> METADATA_KEY_MEDIA_URI
    java.lang.String METADATA_KEY_BT_FOLDER_TYPE -> METADATA_KEY_BT_FOLDER_TYPE
    java.lang.String METADATA_KEY_ADVERTISEMENT -> METADATA_KEY_ADVERTISEMENT
    java.lang.String METADATA_KEY_DOWNLOAD_STATUS -> METADATA_KEY_DOWNLOAD_STATUS
    int METADATA_TYPE_LONG -> METADATA_TYPE_LONG
    int METADATA_TYPE_TEXT -> METADATA_TYPE_TEXT
    int METADATA_TYPE_BITMAP -> METADATA_TYPE_BITMAP
    int METADATA_TYPE_RATING -> METADATA_TYPE_RATING
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> METADATA_KEYS_TYPE
    java.lang.String[] PREFERRED_DESCRIPTION_ORDER -> PREFERRED_DESCRIPTION_ORDER
    java.lang.String[] PREFERRED_BITMAP_ORDER -> PREFERRED_BITMAP_ORDER
    java.lang.String[] PREFERRED_URI_ORDER -> PREFERRED_URI_ORDER
    android.os.Bundle mBundle -> mBundle
    java.lang.Object mMetadataObj -> mMetadataObj
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Bundle) -> <init>
    void <init>(android.os.Parcel) -> <init>
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.CharSequence getText(java.lang.String) -> getText
    java.lang.String getString(java.lang.String) -> getString
    long getLong(java.lang.String) -> getLong
    android.support.v4.media.RatingCompat getRating(java.lang.String) -> getRating
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int size() -> size
    java.util.Set keySet() -> keySet
    android.os.Bundle getBundle() -> getBundle
    android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    java.lang.Object getMediaMetadata() -> getMediaMetadata
    void <clinit>() -> <clinit>
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    void <init>() -> <init>
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaMetadataCompat$BitmapKey -> android.support.v4.media.MediaMetadataCompat$BitmapKey:
android.support.v4.media.MediaMetadataCompat$Builder -> android.support.v4.media.MediaMetadataCompat$Builder:
    android.os.Bundle mBundle -> mBundle
    void <init>() -> <init>
    void <init>(android.support.v4.media.MediaMetadataCompat) -> <init>
    void <init>(android.support.v4.media.MediaMetadataCompat,int) -> <init>
    android.support.v4.media.MediaMetadataCompat$Builder putText(java.lang.String,java.lang.CharSequence) -> putText
    android.support.v4.media.MediaMetadataCompat$Builder putString(java.lang.String,java.lang.String) -> putString
    android.support.v4.media.MediaMetadataCompat$Builder putLong(java.lang.String,long) -> putLong
    android.support.v4.media.MediaMetadataCompat$Builder putRating(java.lang.String,android.support.v4.media.RatingCompat) -> putRating
    android.support.v4.media.MediaMetadataCompat$Builder putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
    android.support.v4.media.MediaMetadataCompat build() -> build
    android.graphics.Bitmap scaleBitmap(android.graphics.Bitmap,int) -> scaleBitmap
android.support.v4.media.MediaMetadataCompat$LongKey -> android.support.v4.media.MediaMetadataCompat$LongKey:
android.support.v4.media.MediaMetadataCompat$RatingKey -> android.support.v4.media.MediaMetadataCompat$RatingKey:
android.support.v4.media.MediaMetadataCompat$TextKey -> android.support.v4.media.MediaMetadataCompat$TextKey:
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    void <init>() -> <init>
    java.util.Set keySet(java.lang.Object) -> keySet
    android.graphics.Bitmap getBitmap(java.lang.Object,java.lang.String) -> getBitmap
    long getLong(java.lang.Object,java.lang.String) -> getLong
    java.lang.Object getRating(java.lang.Object,java.lang.String) -> getRating
    java.lang.CharSequence getText(java.lang.Object,java.lang.String) -> getText
    void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaMetadataCompatApi21$Builder -> android.support.v4.media.MediaMetadataCompatApi21$Builder:
    void <init>() -> <init>
    java.lang.Object newInstance() -> newInstance
    void putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap) -> putBitmap
    void putLong(java.lang.Object,java.lang.String,long) -> putLong
    void putRating(java.lang.Object,java.lang.String,java.lang.Object) -> putRating
    void putText(java.lang.Object,java.lang.String,java.lang.CharSequence) -> putText
    void putString(java.lang.Object,java.lang.String,java.lang.String) -> putString
    java.lang.Object build(java.lang.Object) -> build
android.support.v4.media.ParceledListSliceAdapterApi21 -> android.support.v4.media.ParceledListSliceAdapterApi21:
    java.lang.reflect.Constructor sConstructor -> sConstructor
    void <init>() -> <init>
    java.lang.Object newInstance(java.util.List) -> newInstance
    void <clinit>() -> <clinit>
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    java.lang.String TAG -> TAG
    int RATING_NONE -> RATING_NONE
    int RATING_HEART -> RATING_HEART
    int RATING_THUMB_UP_DOWN -> RATING_THUMB_UP_DOWN
    int RATING_3_STARS -> RATING_3_STARS
    int RATING_4_STARS -> RATING_4_STARS
    int RATING_5_STARS -> RATING_5_STARS
    int RATING_PERCENTAGE -> RATING_PERCENTAGE
    float RATING_NOT_RATED -> RATING_NOT_RATED
    int mRatingStyle -> mRatingStyle
    float mRatingValue -> mRatingValue
    java.lang.Object mRatingObj -> mRatingObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(int,float) -> <init>
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v4.media.RatingCompat newUnratedRating(int) -> newUnratedRating
    android.support.v4.media.RatingCompat newHeartRating(boolean) -> newHeartRating
    android.support.v4.media.RatingCompat newThumbRating(boolean) -> newThumbRating
    android.support.v4.media.RatingCompat newStarRating(int,float) -> newStarRating
    android.support.v4.media.RatingCompat newPercentageRating(float) -> newPercentageRating
    boolean isRated() -> isRated
    int getRatingStyle() -> getRatingStyle
    boolean hasHeart() -> hasHeart
    boolean isThumbUp() -> isThumbUp
    float getStarRating() -> getStarRating
    float getPercentRating() -> getPercentRating
    android.support.v4.media.RatingCompat fromRating(java.lang.Object) -> fromRating
    java.lang.Object getRating() -> getRating
    void <clinit>() -> <clinit>
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    void <init>() -> <init>
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.RatingCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompat$StarStyle -> android.support.v4.media.RatingCompat$StarStyle:
android.support.v4.media.RatingCompat$Style -> android.support.v4.media.RatingCompat$Style:
android.support.v4.media.RatingCompatKitkat -> android.support.v4.media.RatingCompatKitkat:
    void <init>() -> <init>
    java.lang.Object newUnratedRating(int) -> newUnratedRating
    java.lang.Object newHeartRating(boolean) -> newHeartRating
    java.lang.Object newThumbRating(boolean) -> newThumbRating
    java.lang.Object newStarRating(int,float) -> newStarRating
    java.lang.Object newPercentageRating(float) -> newPercentageRating
    boolean isRated(java.lang.Object) -> isRated
    int getRatingStyle(java.lang.Object) -> getRatingStyle
    boolean hasHeart(java.lang.Object) -> hasHeart
    boolean isThumbUp(java.lang.Object) -> isThumbUp
    float getStarRating(java.lang.Object) -> getStarRating
    float getPercentRating(java.lang.Object) -> getPercentRating
android.support.v4.media.VolumeProviderCompat -> android.support.v4.media.VolumeProviderCompat:
    int VOLUME_CONTROL_FIXED -> VOLUME_CONTROL_FIXED
    int VOLUME_CONTROL_RELATIVE -> VOLUME_CONTROL_RELATIVE
    int VOLUME_CONTROL_ABSOLUTE -> VOLUME_CONTROL_ABSOLUTE
    int mControlType -> mControlType
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    android.support.v4.media.VolumeProviderCompat$Callback mCallback -> mCallback
    java.lang.Object mVolumeProviderObj -> mVolumeProviderObj
    void <init>(int,int,int) -> <init>
    int getCurrentVolume() -> getCurrentVolume
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    void setCurrentVolume(int) -> setCurrentVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
    void setCallback(android.support.v4.media.VolumeProviderCompat$Callback) -> setCallback
    java.lang.Object getVolumeProvider() -> getVolumeProvider
android.support.v4.media.VolumeProviderCompat$1 -> android.support.v4.media.VolumeProviderCompat$1:
    android.support.v4.media.VolumeProviderCompat this$0 -> this$0
    void <init>(android.support.v4.media.VolumeProviderCompat) -> <init>
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompat$Callback -> android.support.v4.media.VolumeProviderCompat$Callback:
    void <init>() -> <init>
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.media.VolumeProviderCompat$ControlType -> android.support.v4.media.VolumeProviderCompat$ControlType:
android.support.v4.media.VolumeProviderCompatApi21 -> android.support.v4.media.VolumeProviderCompatApi21:
    void <init>() -> <init>
    java.lang.Object createVolumeProvider(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> createVolumeProvider
    void setCurrentVolume(java.lang.Object,int) -> setCurrentVolume
android.support.v4.media.VolumeProviderCompatApi21$1 -> android.support.v4.media.VolumeProviderCompatApi21$1:
    android.support.v4.media.VolumeProviderCompatApi21$Delegate val$delegate -> val$delegate
    void <init>(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> <init>
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompatApi21$Delegate -> android.support.v4.media.VolumeProviderCompatApi21$Delegate:
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.app.NotificationCompat -> android.support.v4.media.app.NotificationCompat:
    void <init>() -> <init>
android.support.v4.media.app.NotificationCompat$DecoratedMediaCustomViewStyle -> android.support.v4.media.app.NotificationCompat$DecoratedMediaCustomViewStyle:
    void <init>() -> <init>
    void apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> apply
    android.widget.RemoteViews makeContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    int getContentViewLayoutResource() -> getContentViewLayoutResource
    android.widget.RemoteViews makeBigContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    int getBigContentViewLayoutResource(int) -> getBigContentViewLayoutResource
    android.widget.RemoteViews makeHeadsUpContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
    void setBackgroundColor(android.widget.RemoteViews) -> setBackgroundColor
android.support.v4.media.app.NotificationCompat$MediaStyle -> android.support.v4.media.app.NotificationCompat$MediaStyle:
    int MAX_MEDIA_BUTTONS_IN_COMPACT -> MAX_MEDIA_BUTTONS_IN_COMPACT
    int MAX_MEDIA_BUTTONS -> MAX_MEDIA_BUTTONS
    int[] mActionsToShowInCompact -> mActionsToShowInCompact
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    boolean mShowCancelButton -> mShowCancelButton
    android.app.PendingIntent mCancelButtonIntent -> mCancelButtonIntent
    android.support.v4.media.session.MediaSessionCompat$Token getMediaSession(android.app.Notification) -> getMediaSession
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Builder) -> <init>
    android.support.v4.media.app.NotificationCompat$MediaStyle setShowActionsInCompactView(int[]) -> setShowActionsInCompactView
    android.support.v4.media.app.NotificationCompat$MediaStyle setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token) -> setMediaSession
    android.support.v4.media.app.NotificationCompat$MediaStyle setShowCancelButton(boolean) -> setShowCancelButton
    android.support.v4.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent) -> setCancelButtonIntent
    void apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> apply
    android.app.Notification$MediaStyle fillInMediaStyle(android.app.Notification$MediaStyle) -> fillInMediaStyle
    android.widget.RemoteViews makeContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    android.widget.RemoteViews generateContentView() -> generateContentView
    android.widget.RemoteViews generateMediaActionButton(android.support.v4.app.NotificationCompat$Action) -> generateMediaActionButton
    int getContentViewLayoutResource() -> getContentViewLayoutResource
    android.widget.RemoteViews makeBigContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    android.widget.RemoteViews generateBigContentView() -> generateBigContentView
    int getBigContentViewLayoutResource(int) -> getBigContentViewLayoutResource
android.support.v4.media.session.IMediaControllerCallback -> android.support.v4.media.session.IMediaControllerCallback:
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
    void onRepeatModeChanged(int) -> onRepeatModeChanged
    void onShuffleModeChangedDeprecated(boolean) -> onShuffleModeChangedDeprecated
    void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    void onShuffleModeChanged(int) -> onShuffleModeChanged
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    int TRANSACTION_onSessionDestroyed -> TRANSACTION_onSessionDestroyed
    int TRANSACTION_onPlaybackStateChanged -> TRANSACTION_onPlaybackStateChanged
    int TRANSACTION_onMetadataChanged -> TRANSACTION_onMetadataChanged
    int TRANSACTION_onQueueChanged -> TRANSACTION_onQueueChanged
    int TRANSACTION_onQueueTitleChanged -> TRANSACTION_onQueueTitleChanged
    int TRANSACTION_onExtrasChanged -> TRANSACTION_onExtrasChanged
    int TRANSACTION_onVolumeInfoChanged -> TRANSACTION_onVolumeInfoChanged
    int TRANSACTION_onRepeatModeChanged -> TRANSACTION_onRepeatModeChanged
    int TRANSACTION_onShuffleModeChangedDeprecated -> TRANSACTION_onShuffleModeChangedDeprecated
    int TRANSACTION_onCaptioningEnabledChanged -> TRANSACTION_onCaptioningEnabledChanged
    int TRANSACTION_onShuffleModeChanged -> TRANSACTION_onShuffleModeChanged
    void <init>() -> <init>
    android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy -> android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
    void onRepeatModeChanged(int) -> onRepeatModeChanged
    void onShuffleModeChangedDeprecated(boolean) -> onShuffleModeChangedDeprecated
    void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    void onShuffleModeChanged(int) -> onShuffleModeChanged
android.support.v4.media.session.IMediaSession -> android.support.v4.media.session.IMediaSession:
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    boolean isCaptioningEnabled() -> isCaptioningEnabled
    int getRepeatMode() -> getRepeatMode
    boolean isShuffleModeEnabledDeprecated() -> isShuffleModeEnabledDeprecated
    int getShuffleMode() -> getShuffleMode
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    void removeQueueItemAt(int) -> removeQueueItemAt
    void prepare() -> prepare
    void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void setRepeatMode(int) -> setRepeatMode
    void setShuffleModeEnabledDeprecated(boolean) -> setShuffleModeEnabledDeprecated
    void setShuffleMode(int) -> setShuffleMode
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_sendCommand -> TRANSACTION_sendCommand
    int TRANSACTION_sendMediaButton -> TRANSACTION_sendMediaButton
    int TRANSACTION_registerCallbackListener -> TRANSACTION_registerCallbackListener
    int TRANSACTION_unregisterCallbackListener -> TRANSACTION_unregisterCallbackListener
    int TRANSACTION_isTransportControlEnabled -> TRANSACTION_isTransportControlEnabled
    int TRANSACTION_getPackageName -> TRANSACTION_getPackageName
    int TRANSACTION_getTag -> TRANSACTION_getTag
    int TRANSACTION_getLaunchPendingIntent -> TRANSACTION_getLaunchPendingIntent
    int TRANSACTION_getFlags -> TRANSACTION_getFlags
    int TRANSACTION_getVolumeAttributes -> TRANSACTION_getVolumeAttributes
    int TRANSACTION_adjustVolume -> TRANSACTION_adjustVolume
    int TRANSACTION_setVolumeTo -> TRANSACTION_setVolumeTo
    int TRANSACTION_getMetadata -> TRANSACTION_getMetadata
    int TRANSACTION_getPlaybackState -> TRANSACTION_getPlaybackState
    int TRANSACTION_getQueue -> TRANSACTION_getQueue
    int TRANSACTION_getQueueTitle -> TRANSACTION_getQueueTitle
    int TRANSACTION_getExtras -> TRANSACTION_getExtras
    int TRANSACTION_getRatingType -> TRANSACTION_getRatingType
    int TRANSACTION_isCaptioningEnabled -> TRANSACTION_isCaptioningEnabled
    int TRANSACTION_getRepeatMode -> TRANSACTION_getRepeatMode
    int TRANSACTION_isShuffleModeEnabledDeprecated -> TRANSACTION_isShuffleModeEnabledDeprecated
    int TRANSACTION_getShuffleMode -> TRANSACTION_getShuffleMode
    int TRANSACTION_addQueueItem -> TRANSACTION_addQueueItem
    int TRANSACTION_addQueueItemAt -> TRANSACTION_addQueueItemAt
    int TRANSACTION_removeQueueItem -> TRANSACTION_removeQueueItem
    int TRANSACTION_removeQueueItemAt -> TRANSACTION_removeQueueItemAt
    int TRANSACTION_prepare -> TRANSACTION_prepare
    int TRANSACTION_prepareFromMediaId -> TRANSACTION_prepareFromMediaId
    int TRANSACTION_prepareFromSearch -> TRANSACTION_prepareFromSearch
    int TRANSACTION_prepareFromUri -> TRANSACTION_prepareFromUri
    int TRANSACTION_play -> TRANSACTION_play
    int TRANSACTION_playFromMediaId -> TRANSACTION_playFromMediaId
    int TRANSACTION_playFromSearch -> TRANSACTION_playFromSearch
    int TRANSACTION_playFromUri -> TRANSACTION_playFromUri
    int TRANSACTION_skipToQueueItem -> TRANSACTION_skipToQueueItem
    int TRANSACTION_pause -> TRANSACTION_pause
    int TRANSACTION_stop -> TRANSACTION_stop
    int TRANSACTION_next -> TRANSACTION_next
    int TRANSACTION_previous -> TRANSACTION_previous
    int TRANSACTION_fastForward -> TRANSACTION_fastForward
    int TRANSACTION_rewind -> TRANSACTION_rewind
    int TRANSACTION_seekTo -> TRANSACTION_seekTo
    int TRANSACTION_rate -> TRANSACTION_rate
    int TRANSACTION_rateWithExtras -> TRANSACTION_rateWithExtras
    int TRANSACTION_setCaptioningEnabled -> TRANSACTION_setCaptioningEnabled
    int TRANSACTION_setRepeatMode -> TRANSACTION_setRepeatMode
    int TRANSACTION_setShuffleModeEnabledDeprecated -> TRANSACTION_setShuffleModeEnabledDeprecated
    int TRANSACTION_setShuffleMode -> TRANSACTION_setShuffleMode
    int TRANSACTION_sendCustomAction -> TRANSACTION_sendCustomAction
    void <init>() -> <init>
    android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    boolean isCaptioningEnabled() -> isCaptioningEnabled
    int getRepeatMode() -> getRepeatMode
    boolean isShuffleModeEnabledDeprecated() -> isShuffleModeEnabledDeprecated
    int getShuffleMode() -> getShuffleMode
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    void removeQueueItemAt(int) -> removeQueueItemAt
    void prepare() -> prepare
    void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void setRepeatMode(int) -> setRepeatMode
    void setShuffleModeEnabledDeprecated(boolean) -> setShuffleModeEnabledDeprecated
    void setShuffleMode(int) -> setShuffleMode
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaButtonReceiver -> android.support.v4.media.session.MediaButtonReceiver:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    android.view.KeyEvent handleIntent(android.support.v4.media.session.MediaSessionCompat,android.content.Intent) -> handleIntent
    android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context,long) -> buildMediaButtonPendingIntent
    android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long) -> buildMediaButtonPendingIntent
    android.content.ComponentName getMediaButtonReceiverComponent(android.content.Context) -> getMediaButtonReceiverComponent
    void startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
    android.content.ComponentName getServiceComponentByAction(android.content.Context,java.lang.String) -> getServiceComponentByAction
android.support.v4.media.session.MediaButtonReceiver$MediaButtonConnectionCallback -> android.support.v4.media.session.MediaButtonReceiver$MediaButtonConnectionCallback:
    android.content.Context mContext -> mContext
    android.content.Intent mIntent -> mIntent
    android.content.BroadcastReceiver$PendingResult mPendingResult -> mPendingResult
    android.support.v4.media.MediaBrowserCompat mMediaBrowser -> mMediaBrowser
    void <init>(android.content.Context,android.content.Intent,android.content.BroadcastReceiver$PendingResult) -> <init>
    void setMediaBrowser(android.support.v4.media.MediaBrowserCompat) -> setMediaBrowser
    void onConnected() -> onConnected
    void onConnectionSuspended() -> onConnectionSuspended
    void onConnectionFailed() -> onConnectionFailed
    void finish() -> finish
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    java.lang.String TAG -> TAG
    java.lang.String COMMAND_GET_EXTRA_BINDER -> COMMAND_GET_EXTRA_BINDER
    java.lang.String COMMAND_ADD_QUEUE_ITEM -> COMMAND_ADD_QUEUE_ITEM
    java.lang.String COMMAND_ADD_QUEUE_ITEM_AT -> COMMAND_ADD_QUEUE_ITEM_AT
    java.lang.String COMMAND_REMOVE_QUEUE_ITEM -> COMMAND_REMOVE_QUEUE_ITEM
    java.lang.String COMMAND_REMOVE_QUEUE_ITEM_AT -> COMMAND_REMOVE_QUEUE_ITEM_AT
    java.lang.String COMMAND_ARGUMENT_MEDIA_DESCRIPTION -> COMMAND_ARGUMENT_MEDIA_DESCRIPTION
    java.lang.String COMMAND_ARGUMENT_INDEX -> COMMAND_ARGUMENT_INDEX
    android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl -> mImpl
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    java.util.HashSet mRegisteredCallbacks -> mRegisteredCallbacks
    void setMediaController(android.app.Activity,android.support.v4.media.session.MediaControllerCompat) -> setMediaController
    android.support.v4.media.session.MediaControllerCompat getMediaController(android.app.Activity) -> getMediaController
    void validateCustomAction(java.lang.String,android.os.Bundle) -> validateCustomAction
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat) -> <init>
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItem
    void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    void removeQueueItemAt(int) -> removeQueueItemAt
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    boolean isCaptioningEnabled() -> isCaptioningEnabled
    int getRepeatMode() -> getRepeatMode
    boolean isShuffleModeEnabled() -> isShuffleModeEnabled
    int getShuffleMode() -> getShuffleMode
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> registerCallback
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
    void access$100(java.lang.String,android.os.Bundle) -> access$100
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler -> mHandler
    boolean mHasExtraCallback -> mHasExtraCallback
    void <init>() -> <init>
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo) -> onAudioInfoChanged
    void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    void onRepeatModeChanged(int) -> onRepeatModeChanged
    void onShuffleModeChanged(boolean) -> onShuffleModeChanged
    void onShuffleModeChanged(int) -> onShuffleModeChanged
    void binderDied() -> binderDied
    void setHandler(android.os.Handler) -> setHandler
    void postToHandler(int,java.lang.Object,android.os.Bundle) -> postToHandler
    java.lang.Object access$000(android.support.v4.media.session.MediaControllerCompat$Callback) -> access$000
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler -> android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler:
    int MSG_EVENT -> MSG_EVENT
    int MSG_UPDATE_PLAYBACK_STATE -> MSG_UPDATE_PLAYBACK_STATE
    int MSG_UPDATE_METADATA -> MSG_UPDATE_METADATA
    int MSG_UPDATE_VOLUME -> MSG_UPDATE_VOLUME
    int MSG_UPDATE_QUEUE -> MSG_UPDATE_QUEUE
    int MSG_UPDATE_QUEUE_TITLE -> MSG_UPDATE_QUEUE_TITLE
    int MSG_UPDATE_EXTRAS -> MSG_UPDATE_EXTRAS
    int MSG_DESTROYED -> MSG_DESTROYED
    int MSG_UPDATE_REPEAT_MODE -> MSG_UPDATE_REPEAT_MODE
    int MSG_UPDATE_SHUFFLE_MODE_DEPRECATED -> MSG_UPDATE_SHUFFLE_MODE_DEPRECATED
    int MSG_UPDATE_CAPTIONING_ENABLED -> MSG_UPDATE_CAPTIONING_ENABLED
    int MSG_UPDATE_SHUFFLE_MODE -> MSG_UPDATE_SHUFFLE_MODE
    boolean mRegistered -> mRegistered
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    java.lang.ref.WeakReference mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onAudioInfoChanged(int,int,int,int,int) -> onAudioInfoChanged
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    java.lang.ref.WeakReference mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    void onRepeatModeChanged(int) -> onRepeatModeChanged
    void onShuffleModeChangedDeprecated(boolean) -> onShuffleModeChangedDeprecated
    void onShuffleModeChanged(int) -> onShuffleModeChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData -> android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData:
    android.support.v4.media.session.MediaControllerCompat mMediaController -> mMediaController
    void <init>(android.support.v4.media.session.MediaControllerCompat) -> <init>
    android.support.v4.media.session.MediaControllerCompat getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl:
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItem
    void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    boolean isCaptioningEnabled() -> isCaptioningEnabled
    int getRepeatMode() -> getRepeatMode
    boolean isShuffleModeEnabled() -> isShuffleModeEnabled
    int getShuffleMode() -> getShuffleMode
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    java.lang.Object mControllerObj -> mControllerObj
    java.util.List mPendingCallbacks -> mPendingCallbacks
    android.support.v4.media.session.IMediaSession mExtraBinder -> mExtraBinder
    java.util.HashMap mCallbackMap -> mCallbackMap
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat) -> <init>
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItem
    void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    boolean isCaptioningEnabled() -> isCaptioningEnabled
    int getRepeatMode() -> getRepeatMode
    boolean isShuffleModeEnabled() -> isShuffleModeEnabled
    int getShuffleMode() -> getShuffleMode
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
    void requestExtraBinder() -> requestExtraBinder
    void processPendingCallbacks() -> processPendingCallbacks
    android.support.v4.media.session.IMediaSession access$202(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21,android.support.v4.media.session.IMediaSession) -> access$202
    void access$300(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21) -> access$300
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    java.lang.ref.WeakReference mMediaControllerImpl -> mMediaControllerImpl
    void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21,android.os.Handler) -> <init>
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback:
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    void onSessionDestroyed() -> onSessionDestroyed
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23:
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat) -> <init>
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24:
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat) -> <init>
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase:
    android.support.v4.media.session.IMediaSession mBinder -> mBinder
    android.support.v4.media.session.MediaControllerCompat$TransportControls mTransportControls -> mTransportControls
    void <init>(android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItem
    void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    boolean isCaptioningEnabled() -> isCaptioningEnabled
    int getRepeatMode() -> getRepeatMode
    boolean isShuffleModeEnabled() -> isShuffleModeEnabled
    int getShuffleMode() -> getShuffleMode
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    int PLAYBACK_TYPE_LOCAL -> PLAYBACK_TYPE_LOCAL
    int PLAYBACK_TYPE_REMOTE -> PLAYBACK_TYPE_REMOTE
    int mPlaybackType -> mPlaybackType
    int mAudioStream -> mAudioStream
    int mVolumeControl -> mVolumeControl
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    void <init>(int,int,int,int,int) -> <init>
    int getPlaybackType() -> getPlaybackType
    int getAudioStream() -> getAudioStream
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    int getCurrentVolume() -> getCurrentVolume
android.support.v4.media.session.MediaControllerCompat$TransportControls -> android.support.v4.media.session.MediaControllerCompat$TransportControls:
    java.lang.String EXTRA_LEGACY_STREAM_TYPE -> EXTRA_LEGACY_STREAM_TYPE
    void <init>() -> <init>
    void prepare() -> prepare
    void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void skipToNext() -> skipToNext
    void rewind() -> rewind
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void setRating(android.support.v4.media.RatingCompat,android.os.Bundle) -> setRating
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void setRepeatMode(int) -> setRepeatMode
    void setShuffleModeEnabled(boolean) -> setShuffleModeEnabled
    void setShuffleMode(int) -> setShuffleMode
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21:
    java.lang.Object mControlsObj -> mControlsObj
    void <init>(java.lang.Object) -> <init>
    void prepare() -> prepare
    void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void rewind() -> rewind
    void skipToNext() -> skipToNext
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void setRating(android.support.v4.media.RatingCompat,android.os.Bundle) -> setRating
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void setRepeatMode(int) -> setRepeatMode
    void setShuffleModeEnabled(boolean) -> setShuffleModeEnabled
    void setShuffleMode(int) -> setShuffleMode
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23:
    void <init>(java.lang.Object) -> <init>
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi24 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi24:
    void <init>(java.lang.Object) -> <init>
    void prepare() -> prepare
    void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
android.support.v4.media.session.MediaControllerCompat$TransportControlsBase -> android.support.v4.media.session.MediaControllerCompat$TransportControlsBase:
    android.support.v4.media.session.IMediaSession mBinder -> mBinder
    void <init>(android.support.v4.media.session.IMediaSession) -> <init>
    void prepare() -> prepare
    void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void skipToNext() -> skipToNext
    void rewind() -> rewind
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void setRating(android.support.v4.media.RatingCompat,android.os.Bundle) -> setRating
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void setRepeatMode(int) -> setRepeatMode
    void setShuffleModeEnabled(boolean) -> setShuffleModeEnabled
    void setShuffleMode(int) -> setShuffleMode
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    void <init>() -> <init>
    java.lang.Object fromToken(android.content.Context,java.lang.Object) -> fromToken
    java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
    void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> registerCallback
    void unregisterCallback(java.lang.Object,java.lang.Object) -> unregisterCallback
    void setMediaController(android.app.Activity,java.lang.Object) -> setMediaController
    java.lang.Object getMediaController(android.app.Activity) -> getMediaController
    java.lang.Object getSessionToken(java.lang.Object) -> getSessionToken
    java.lang.Object getTransportControls(java.lang.Object) -> getTransportControls
    java.lang.Object getPlaybackState(java.lang.Object) -> getPlaybackState
    java.lang.Object getMetadata(java.lang.Object) -> getMetadata
    java.util.List getQueue(java.lang.Object) -> getQueue
    java.lang.CharSequence getQueueTitle(java.lang.Object) -> getQueueTitle
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getRatingType(java.lang.Object) -> getRatingType
    long getFlags(java.lang.Object) -> getFlags
    java.lang.Object getPlaybackInfo(java.lang.Object) -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity(java.lang.Object) -> getSessionActivity
    boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent) -> dispatchMediaButtonEvent
    void setVolumeTo(java.lang.Object,int,int) -> setVolumeTo
    void adjustVolume(java.lang.Object,int,int) -> adjustVolume
    void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName(java.lang.Object) -> getPackageName
android.support.v4.media.session.MediaControllerCompatApi21$Callback -> android.support.v4.media.session.MediaControllerCompatApi21$Callback:
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onAudioInfoChanged(int,int,int,int,int) -> onAudioInfoChanged
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> <init>
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    int FLAG_SCO -> FLAG_SCO
    int STREAM_BLUETOOTH_SCO -> STREAM_BLUETOOTH_SCO
    int STREAM_SYSTEM_ENFORCED -> STREAM_SYSTEM_ENFORCED
    void <init>() -> <init>
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    int getVolumeControl(java.lang.Object) -> getVolumeControl
    int getMaxVolume(java.lang.Object) -> getMaxVolume
    int getCurrentVolume(java.lang.Object) -> getCurrentVolume
    int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi21$TransportControls:
    void <init>() -> <init>
    void play(java.lang.Object) -> play
    void pause(java.lang.Object) -> pause
    void stop(java.lang.Object) -> stop
    void seekTo(java.lang.Object,long) -> seekTo
    void fastForward(java.lang.Object) -> fastForward
    void rewind(java.lang.Object) -> rewind
    void skipToNext(java.lang.Object) -> skipToNext
    void skipToPrevious(java.lang.Object) -> skipToPrevious
    void setRating(java.lang.Object,java.lang.Object) -> setRating
    void playFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.Object,java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(java.lang.Object,long) -> skipToQueueItem
    void sendCustomAction(java.lang.Object,java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompatApi23 -> android.support.v4.media.session.MediaControllerCompatApi23:
    void <init>() -> <init>
android.support.v4.media.session.MediaControllerCompatApi23$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi23$TransportControls:
    void <init>() -> <init>
    void playFromUri(java.lang.Object,android.net.Uri,android.os.Bundle) -> playFromUri
android.support.v4.media.session.MediaControllerCompatApi24 -> android.support.v4.media.session.MediaControllerCompatApi24:
    void <init>() -> <init>
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi24$TransportControls:
    void <init>() -> <init>
    void prepare(java.lang.Object) -> prepare
    void prepareFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle) -> prepareFromMediaId
    void prepareFromSearch(java.lang.Object,java.lang.String,android.os.Bundle) -> prepareFromSearch
    void prepareFromUri(java.lang.Object,android.net.Uri,android.os.Bundle) -> prepareFromUri
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    java.lang.String TAG -> TAG
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl -> mImpl
    android.support.v4.media.session.MediaControllerCompat mController -> mController
    java.util.ArrayList mActiveListeners -> mActiveListeners
    int FLAG_HANDLES_MEDIA_BUTTONS -> FLAG_HANDLES_MEDIA_BUTTONS
    int FLAG_HANDLES_TRANSPORT_CONTROLS -> FLAG_HANDLES_TRANSPORT_CONTROLS
    int FLAG_HANDLES_QUEUE_COMMANDS -> FLAG_HANDLES_QUEUE_COMMANDS
    java.lang.String ACTION_FLAG_AS_INAPPROPRIATE -> ACTION_FLAG_AS_INAPPROPRIATE
    java.lang.String ACTION_SKIP_AD -> ACTION_SKIP_AD
    java.lang.String ACTION_FOLLOW -> ACTION_FOLLOW
    java.lang.String ACTION_UNFOLLOW -> ACTION_UNFOLLOW
    java.lang.String ARGUMENT_MEDIA_ATTRIBUTE -> ARGUMENT_MEDIA_ATTRIBUTE
    java.lang.String ARGUMENT_MEDIA_ATTRIBUTE_VALUE -> ARGUMENT_MEDIA_ATTRIBUTE_VALUE
    int MEDIA_ATTRIBUTE_ARTIST -> MEDIA_ATTRIBUTE_ARTIST
    int MEDIA_ATTRIBUTE_ALBUM -> MEDIA_ATTRIBUTE_ALBUM
    int MEDIA_ATTRIBUTE_PLAYLIST -> MEDIA_ATTRIBUTE_PLAYLIST
    java.lang.String ACTION_PLAY_FROM_URI -> ACTION_PLAY_FROM_URI
    java.lang.String ACTION_PREPARE -> ACTION_PREPARE
    java.lang.String ACTION_PREPARE_FROM_MEDIA_ID -> ACTION_PREPARE_FROM_MEDIA_ID
    java.lang.String ACTION_PREPARE_FROM_SEARCH -> ACTION_PREPARE_FROM_SEARCH
    java.lang.String ACTION_PREPARE_FROM_URI -> ACTION_PREPARE_FROM_URI
    java.lang.String ACTION_SET_CAPTIONING_ENABLED -> ACTION_SET_CAPTIONING_ENABLED
    java.lang.String ACTION_SET_REPEAT_MODE -> ACTION_SET_REPEAT_MODE
    java.lang.String ACTION_SET_SHUFFLE_MODE_ENABLED -> ACTION_SET_SHUFFLE_MODE_ENABLED
    java.lang.String ACTION_SET_SHUFFLE_MODE -> ACTION_SET_SHUFFLE_MODE
    java.lang.String ACTION_SET_RATING -> ACTION_SET_RATING
    java.lang.String ACTION_ARGUMENT_MEDIA_ID -> ACTION_ARGUMENT_MEDIA_ID
    java.lang.String ACTION_ARGUMENT_QUERY -> ACTION_ARGUMENT_QUERY
    java.lang.String ACTION_ARGUMENT_URI -> ACTION_ARGUMENT_URI
    java.lang.String ACTION_ARGUMENT_RATING -> ACTION_ARGUMENT_RATING
    java.lang.String ACTION_ARGUMENT_EXTRAS -> ACTION_ARGUMENT_EXTRAS
    java.lang.String ACTION_ARGUMENT_CAPTIONING_ENABLED -> ACTION_ARGUMENT_CAPTIONING_ENABLED
    java.lang.String ACTION_ARGUMENT_REPEAT_MODE -> ACTION_ARGUMENT_REPEAT_MODE
    java.lang.String ACTION_ARGUMENT_SHUFFLE_MODE_ENABLED -> ACTION_ARGUMENT_SHUFFLE_MODE_ENABLED
    java.lang.String ACTION_ARGUMENT_SHUFFLE_MODE -> ACTION_ARGUMENT_SHUFFLE_MODE
    java.lang.String EXTRA_BINDER -> EXTRA_BINDER
    int MAX_BITMAP_SIZE_IN_DP -> MAX_BITMAP_SIZE_IN_DP
    int sMaxBitmapSize -> sMaxBitmapSize
    void <init>(android.content.Context,java.lang.String) -> <init>
    void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent) -> <init>
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl) -> <init>
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback) -> setCallback
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    android.support.v4.media.session.MediaControllerCompat getController() -> getController
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void setRepeatMode(int) -> setRepeatMode
    void setShuffleModeEnabled(boolean) -> setShuffleModeEnabled
    void setShuffleMode(int) -> setShuffleMode
    void setExtras(android.os.Bundle) -> setExtras
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    java.lang.String getCallingPackage() -> getCallingPackage
    void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> addOnActiveChangeListener
    void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> removeOnActiveChangeListener
    android.support.v4.media.session.MediaSessionCompat fromMediaSession(android.content.Context,java.lang.Object) -> fromMediaSession
    android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat) -> getStateWithUpdatedPosition
    android.support.v4.media.session.PlaybackStateCompat access$500(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat) -> access$500
android.support.v4.media.session.MediaSessionCompat$1 -> android.support.v4.media.session.MediaSessionCompat$1:
    android.support.v4.media.session.MediaSessionCompat this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat) -> <init>
android.support.v4.media.session.MediaSessionCompat$2 -> android.support.v4.media.session.MediaSessionCompat$2:
    android.support.v4.media.session.MediaSessionCompat this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat) -> <init>
android.support.v4.media.session.MediaSessionCompat$Callback -> android.support.v4.media.session.MediaSessionCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    java.lang.ref.WeakReference mSessionImpl -> mSessionImpl
    android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler mCallbackHandler -> mCallbackHandler
    boolean mMediaPlayPauseKeyPending -> mMediaPlayPauseKeyPending
    void <init>() -> <init>
    void setSessionImpl(android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl,android.os.Handler) -> setSessionImpl
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void handleMediaPlayPauseKeySingleTapIfPending() -> handleMediaPlayPauseKeySingleTapIfPending
    void onPrepare() -> onPrepare
    void onPrepareFromMediaId(java.lang.String,android.os.Bundle) -> onPrepareFromMediaId
    void onPrepareFromSearch(java.lang.String,android.os.Bundle) -> onPrepareFromSearch
    void onPrepareFromUri(android.net.Uri,android.os.Bundle) -> onPrepareFromUri
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.support.v4.media.RatingCompat) -> onSetRating
    void onSetRating(android.support.v4.media.RatingCompat,android.os.Bundle) -> onSetRating
    void onSetCaptioningEnabled(boolean) -> onSetCaptioningEnabled
    void onSetRepeatMode(int) -> onSetRepeatMode
    void onSetShuffleModeEnabled(boolean) -> onSetShuffleModeEnabled
    void onSetShuffleMode(int) -> onSetShuffleMode
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
    void onAddQueueItem(android.support.v4.media.MediaDescriptionCompat) -> onAddQueueItem
    void onAddQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> onAddQueueItem
    void onRemoveQueueItem(android.support.v4.media.MediaDescriptionCompat) -> onRemoveQueueItem
    void onRemoveQueueItemAt(int) -> onRemoveQueueItemAt
    void access$000(android.support.v4.media.session.MediaSessionCompat$Callback) -> access$000
    java.lang.ref.WeakReference access$100(android.support.v4.media.session.MediaSessionCompat$Callback) -> access$100
    void access$300(android.support.v4.media.session.MediaSessionCompat$Callback,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl,android.os.Handler) -> access$300
android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler -> android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler:
    int MSG_MEDIA_PLAY_PAUSE_KEY_DOUBLE_TAP_TIMEOUT -> MSG_MEDIA_PLAY_PAUSE_KEY_DOUBLE_TAP_TIMEOUT
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$Callback) -> <init>
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
    void onSetRating(java.lang.Object,android.os.Bundle) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23 -> android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$Callback) -> <init>
    void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi24 -> android.support.v4.media.session.MediaSessionCompat$Callback$StubApi24:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$Callback) -> <init>
    void onPrepare() -> onPrepare
    void onPrepareFromMediaId(java.lang.String,android.os.Bundle) -> onPrepareFromMediaId
    void onPrepareFromSearch(java.lang.String,android.os.Bundle) -> onPrepareFromSearch
    void onPrepareFromUri(android.net.Uri,android.os.Bundle) -> onPrepareFromUri
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl:
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void setRepeatMode(int) -> setRepeatMode
    void setShuffleModeEnabled(boolean) -> setShuffleModeEnabled
    void setShuffleMode(int) -> setShuffleMode
    void setExtras(android.os.Bundle) -> setExtras
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    java.lang.String getCallingPackage() -> getCallingPackage
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18:
    boolean sIsMbrPendingIntentSupported -> sIsMbrPendingIntentSupported
    void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent) -> <init>
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setRccState(android.support.v4.media.session.PlaybackStateCompat) -> setRccState
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    void registerMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName) -> registerMediaButtonEventReceiver
    void unregisterMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName) -> unregisterMediaButtonEventReceiver
    void <clinit>() -> <clinit>
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18$1 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18$1:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18 this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18) -> <init>
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19:
    void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent) -> <init>
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    android.media.RemoteControlClient$MetadataEditor buildRccMetadata(android.os.Bundle) -> buildRccMetadata
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19$1 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19$1:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19 this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19) -> <init>
    void onMetadataUpdate(int,java.lang.Object) -> onMetadataUpdate
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21:
    java.lang.Object mSessionObj -> mSessionObj
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    boolean mDestroyed -> mDestroyed
    android.os.RemoteCallbackList mExtraControllerCallbacks -> mExtraControllerCallbacks
    android.support.v4.media.session.PlaybackStateCompat mPlaybackState -> mPlaybackState
    java.util.List mQueue -> mQueue
    android.support.v4.media.MediaMetadataCompat mMetadata -> mMetadata
    int mRatingType -> mRatingType
    boolean mCaptioningEnabled -> mCaptioningEnabled
    int mRepeatMode -> mRepeatMode
    boolean mShuffleModeEnabled -> mShuffleModeEnabled
    int mShuffleMode -> mShuffleMode
    void <init>(android.content.Context,java.lang.String) -> <init>
    void <init>(java.lang.Object) -> <init>
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void setRepeatMode(int) -> setRepeatMode
    void setShuffleModeEnabled(boolean) -> setShuffleModeEnabled
    void setShuffleMode(int) -> setShuffleMode
    void setExtras(android.os.Bundle) -> setExtras
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    java.lang.String getCallingPackage() -> getCallingPackage
    java.util.List access$200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21) -> access$200
    boolean access$600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21) -> access$600
    android.os.RemoteCallbackList access$700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21) -> access$700
    android.support.v4.media.session.PlaybackStateCompat access$800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21) -> access$800
    android.support.v4.media.MediaMetadataCompat access$900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21) -> access$900
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21$ExtraSession -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21$ExtraSession:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21) -> <init>
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void prepare() -> prepare
    void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void setRepeatMode(int) -> setRepeatMode
    void setShuffleModeEnabledDeprecated(boolean) -> setShuffleModeEnabledDeprecated
    void setShuffleMode(int) -> setShuffleMode
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    void removeQueueItemAt(int) -> removeQueueItemAt
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    boolean isCaptioningEnabled() -> isCaptioningEnabled
    int getRepeatMode() -> getRepeatMode
    boolean isShuffleModeEnabledDeprecated() -> isShuffleModeEnabledDeprecated
    int getShuffleMode() -> getShuffleMode
    boolean isTransportControlEnabled() -> isTransportControlEnabled
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase:
    int RCC_PLAYSTATE_NONE -> RCC_PLAYSTATE_NONE
    android.content.Context mContext -> mContext
    android.content.ComponentName mMediaButtonReceiverComponentName -> mMediaButtonReceiverComponentName
    android.app.PendingIntent mMediaButtonReceiverIntent -> mMediaButtonReceiverIntent
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub -> mStub
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    java.lang.String mPackageName -> mPackageName
    java.lang.String mTag -> mTag
    android.media.AudioManager mAudioManager -> mAudioManager
    android.media.RemoteControlClient mRcc -> mRcc
    java.lang.Object mLock -> mLock
    android.os.RemoteCallbackList mControllerCallbacks -> mControllerCallbacks
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler -> mHandler
    boolean mDestroyed -> mDestroyed
    boolean mIsActive -> mIsActive
    boolean mIsMbrRegistered -> mIsMbrRegistered
    boolean mIsRccRegistered -> mIsRccRegistered
    android.support.v4.media.session.MediaSessionCompat$Callback mCallback -> mCallback
    int mFlags -> mFlags
    android.support.v4.media.MediaMetadataCompat mMetadata -> mMetadata
    android.support.v4.media.session.PlaybackStateCompat mState -> mState
    android.app.PendingIntent mSessionActivity -> mSessionActivity
    java.util.List mQueue -> mQueue
    java.lang.CharSequence mQueueTitle -> mQueueTitle
    int mRatingType -> mRatingType
    boolean mCaptioningEnabled -> mCaptioningEnabled
    int mRepeatMode -> mRepeatMode
    int mShuffleMode -> mShuffleMode
    boolean mShuffleModeEnabled -> mShuffleModeEnabled
    android.os.Bundle mExtras -> mExtras
    int mVolumeType -> mVolumeType
    int mLocalStream -> mLocalStream
    android.support.v4.media.VolumeProviderCompat mVolumeProvider -> mVolumeProvider
    android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback -> mVolumeCallback
    void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent) -> <init>
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void postToHandler(int) -> postToHandler
    void postToHandler(int,int) -> postToHandler
    void postToHandler(int,java.lang.Object) -> postToHandler
    void postToHandler(int,java.lang.Object,int) -> postToHandler
    void postToHandler(int,java.lang.Object,android.os.Bundle) -> postToHandler
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    void setRccState(android.support.v4.media.session.PlaybackStateCompat) -> setRccState
    int getRccStateFromState(int) -> getRccStateFromState
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    android.media.RemoteControlClient$MetadataEditor buildRccMetadata(android.os.Bundle) -> buildRccMetadata
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    java.lang.String getCallingPackage() -> getCallingPackage
    void setRatingType(int) -> setRatingType
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void setRepeatMode(int) -> setRepeatMode
    void setShuffleModeEnabled(boolean) -> setShuffleModeEnabled
    void setShuffleMode(int) -> setShuffleMode
    void setExtras(android.os.Bundle) -> setExtras
    boolean update() -> update
    void registerMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName) -> registerMediaButtonEventReceiver
    void unregisterMediaButtonEventReceiver(android.app.PendingIntent,android.content.ComponentName) -> unregisterMediaButtonEventReceiver
    void adjustVolume(int,int) -> adjustVolume
    void setVolumeTo(int,int) -> setVolumeTo
    void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> sendVolumeInfoChanged
    void sendSessionDestroyed() -> sendSessionDestroyed
    void sendEvent(java.lang.String,android.os.Bundle) -> sendEvent
    void sendState(android.support.v4.media.session.PlaybackStateCompat) -> sendState
    void sendMetadata(android.support.v4.media.MediaMetadataCompat) -> sendMetadata
    void sendQueue(java.util.List) -> sendQueue
    void sendQueueTitle(java.lang.CharSequence) -> sendQueueTitle
    void sendCaptioningEnabled(boolean) -> sendCaptioningEnabled
    void sendRepeatMode(int) -> sendRepeatMode
    void sendShuffleModeEnabled(boolean) -> sendShuffleModeEnabled
    void sendShuffleMode(int) -> sendShuffleMode
    void sendExtras(android.os.Bundle) -> sendExtras
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> <init>
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command:
    java.lang.String command -> command
    android.os.Bundle extras -> extras
    android.os.ResultReceiver stub -> stub
    void <init>(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> <init>
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> <init>
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void prepare() -> prepare
    void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    void setRepeatMode(int) -> setRepeatMode
    void setShuffleModeEnabledDeprecated(boolean) -> setShuffleModeEnabledDeprecated
    void setShuffleMode(int) -> setShuffleMode
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    void removeQueueItemAt(int) -> removeQueueItemAt
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    boolean isCaptioningEnabled() -> isCaptioningEnabled
    int getRepeatMode() -> getRepeatMode
    boolean isShuffleModeEnabledDeprecated() -> isShuffleModeEnabledDeprecated
    int getShuffleMode() -> getShuffleMode
    boolean isTransportControlEnabled() -> isTransportControlEnabled
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler:
    int MSG_COMMAND -> MSG_COMMAND
    int MSG_ADJUST_VOLUME -> MSG_ADJUST_VOLUME
    int MSG_PREPARE -> MSG_PREPARE
    int MSG_PREPARE_MEDIA_ID -> MSG_PREPARE_MEDIA_ID
    int MSG_PREPARE_SEARCH -> MSG_PREPARE_SEARCH
    int MSG_PREPARE_URI -> MSG_PREPARE_URI
    int MSG_PLAY -> MSG_PLAY
    int MSG_PLAY_MEDIA_ID -> MSG_PLAY_MEDIA_ID
    int MSG_PLAY_SEARCH -> MSG_PLAY_SEARCH
    int MSG_PLAY_URI -> MSG_PLAY_URI
    int MSG_SKIP_TO_ITEM -> MSG_SKIP_TO_ITEM
    int MSG_PAUSE -> MSG_PAUSE
    int MSG_STOP -> MSG_STOP
    int MSG_NEXT -> MSG_NEXT
    int MSG_PREVIOUS -> MSG_PREVIOUS
    int MSG_FAST_FORWARD -> MSG_FAST_FORWARD
    int MSG_REWIND -> MSG_REWIND
    int MSG_SEEK_TO -> MSG_SEEK_TO
    int MSG_RATE -> MSG_RATE
    int MSG_RATE_EXTRA -> MSG_RATE_EXTRA
    int MSG_CUSTOM_ACTION -> MSG_CUSTOM_ACTION
    int MSG_MEDIA_BUTTON -> MSG_MEDIA_BUTTON
    int MSG_SET_VOLUME -> MSG_SET_VOLUME
    int MSG_SET_REPEAT_MODE -> MSG_SET_REPEAT_MODE
    int MSG_SET_SHUFFLE_MODE_ENABLED -> MSG_SET_SHUFFLE_MODE_ENABLED
    int MSG_ADD_QUEUE_ITEM -> MSG_ADD_QUEUE_ITEM
    int MSG_ADD_QUEUE_ITEM_AT -> MSG_ADD_QUEUE_ITEM_AT
    int MSG_REMOVE_QUEUE_ITEM -> MSG_REMOVE_QUEUE_ITEM
    int MSG_REMOVE_QUEUE_ITEM_AT -> MSG_REMOVE_QUEUE_ITEM_AT
    int MSG_SET_CAPTIONING_ENABLED -> MSG_SET_CAPTIONING_ENABLED
    int MSG_SET_SHUFFLE_MODE -> MSG_SET_SHUFFLE_MODE
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.os.Looper) -> <init>
    void post(int,java.lang.Object,android.os.Bundle) -> post
    void post(int,java.lang.Object) -> post
    void post(int) -> post
    void post(int,java.lang.Object,int) -> post
    void handleMessage(android.os.Message) -> handleMessage
    void onMediaButtonEvent(android.view.KeyEvent,android.support.v4.media.session.MediaSessionCompat$Callback) -> onMediaButtonEvent
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener -> android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener:
    void onActiveChanged() -> onActiveChanged
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    int UNKNOWN_ID -> UNKNOWN_ID
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    long mId -> mId
    java.lang.Object mItem -> mItem
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    void <init>(java.lang.Object,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    void <init>(android.os.Parcel) -> <init>
    android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    long getQueueId() -> getQueueId
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.Object getQueueItem() -> getQueueItem
    android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object) -> fromQueueItem
    java.util.List fromQueueItemList(java.util.List) -> fromQueueItemList
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    android.os.ResultReceiver mResultReceiver -> mResultReceiver
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.ResultReceiver) -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.os.ResultReceiver access$400(android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> access$400
    void <clinit>() -> <clinit>
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$SessionFlags -> android.support.v4.media.session.MediaSessionCompat$SessionFlags:
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    java.lang.Object mInner -> mInner
    android.support.v4.media.session.IMediaSession mExtraBinder -> mExtraBinder
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(java.lang.Object) -> <init>
    void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession) -> <init>
    android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object) -> fromToken
    android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object,android.support.v4.media.session.IMediaSession) -> fromToken
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object getToken() -> getToken
    android.support.v4.media.session.IMediaSession getExtraBinder() -> getExtraBinder
    void <clinit>() -> <clinit>
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompatApi21 -> android.support.v4.media.session.MediaSessionCompatApi21:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    java.lang.Object createSession(android.content.Context,java.lang.String) -> createSession
    java.lang.Object verifySession(java.lang.Object) -> verifySession
    java.lang.Object verifyToken(java.lang.Object) -> verifyToken
    java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> createCallback
    void setCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> setCallback
    void setFlags(java.lang.Object,int) -> setFlags
    void setPlaybackToLocal(java.lang.Object,int) -> setPlaybackToLocal
    void setPlaybackToRemote(java.lang.Object,java.lang.Object) -> setPlaybackToRemote
    void setActive(java.lang.Object,boolean) -> setActive
    boolean isActive(java.lang.Object) -> isActive
    void sendSessionEvent(java.lang.Object,java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release(java.lang.Object) -> release
    android.os.Parcelable getSessionToken(java.lang.Object) -> getSessionToken
    void setPlaybackState(java.lang.Object,java.lang.Object) -> setPlaybackState
    void setMetadata(java.lang.Object,java.lang.Object) -> setMetadata
    void setSessionActivity(java.lang.Object,android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(java.lang.Object,android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.lang.Object,java.util.List) -> setQueue
    void setQueueTitle(java.lang.Object,java.lang.CharSequence) -> setQueueTitle
    void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
    boolean hasCallback(java.lang.Object) -> hasCallback
android.support.v4.media.session.MediaSessionCompatApi21$Callback -> android.support.v4.media.session.MediaSessionCompatApi21$Callback:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
    void onSetRating(java.lang.Object,android.os.Bundle) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> <init>
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.media.Rating) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem -> android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    void <init>() -> <init>
    java.lang.Object createItem(java.lang.Object,long) -> createItem
    java.lang.Object getDescription(java.lang.Object) -> getDescription
    long getQueueId(java.lang.Object) -> getQueueId
android.support.v4.media.session.MediaSessionCompatApi22 -> android.support.v4.media.session.MediaSessionCompatApi22:
    void <init>() -> <init>
    void setRatingType(java.lang.Object,int) -> setRatingType
android.support.v4.media.session.MediaSessionCompatApi23 -> android.support.v4.media.session.MediaSessionCompatApi23:
    void <init>() -> <init>
    java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi23$Callback) -> createCallback
android.support.v4.media.session.MediaSessionCompatApi23$Callback -> android.support.v4.media.session.MediaSessionCompatApi23$Callback:
    void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy:
    void <init>(android.support.v4.media.session.MediaSessionCompatApi23$Callback) -> <init>
    void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
android.support.v4.media.session.MediaSessionCompatApi24 -> android.support.v4.media.session.MediaSessionCompatApi24:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi24$Callback) -> createCallback
    java.lang.String getCallingPackage(java.lang.Object) -> getCallingPackage
android.support.v4.media.session.MediaSessionCompatApi24$Callback -> android.support.v4.media.session.MediaSessionCompatApi24$Callback:
    void onPrepare() -> onPrepare
    void onPrepareFromMediaId(java.lang.String,android.os.Bundle) -> onPrepareFromMediaId
    void onPrepareFromSearch(java.lang.String,android.os.Bundle) -> onPrepareFromSearch
    void onPrepareFromUri(android.net.Uri,android.os.Bundle) -> onPrepareFromUri
android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy:
    void <init>(android.support.v4.media.session.MediaSessionCompatApi24$Callback) -> <init>
    void onPrepare() -> onPrepare
    void onPrepareFromMediaId(java.lang.String,android.os.Bundle) -> onPrepareFromMediaId
    void onPrepareFromSearch(java.lang.String,android.os.Bundle) -> onPrepareFromSearch
    void onPrepareFromUri(android.net.Uri,android.os.Bundle) -> onPrepareFromUri
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    int volumeType -> volumeType
    int audioStream -> audioStream
    int controlType -> controlType
    int maxVolume -> maxVolume
    int currentVolume -> currentVolume
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(int,int,int,int,int) -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    void <init>() -> <init>
    android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    long ACTION_STOP -> ACTION_STOP
    long ACTION_PAUSE -> ACTION_PAUSE
    long ACTION_PLAY -> ACTION_PLAY
    long ACTION_REWIND -> ACTION_REWIND
    long ACTION_SKIP_TO_PREVIOUS -> ACTION_SKIP_TO_PREVIOUS
    long ACTION_SKIP_TO_NEXT -> ACTION_SKIP_TO_NEXT
    long ACTION_FAST_FORWARD -> ACTION_FAST_FORWARD
    long ACTION_SET_RATING -> ACTION_SET_RATING
    long ACTION_SEEK_TO -> ACTION_SEEK_TO
    long ACTION_PLAY_PAUSE -> ACTION_PLAY_PAUSE
    long ACTION_PLAY_FROM_MEDIA_ID -> ACTION_PLAY_FROM_MEDIA_ID
    long ACTION_PLAY_FROM_SEARCH -> ACTION_PLAY_FROM_SEARCH
    long ACTION_SKIP_TO_QUEUE_ITEM -> ACTION_SKIP_TO_QUEUE_ITEM
    long ACTION_PLAY_FROM_URI -> ACTION_PLAY_FROM_URI
    long ACTION_PREPARE -> ACTION_PREPARE
    long ACTION_PREPARE_FROM_MEDIA_ID -> ACTION_PREPARE_FROM_MEDIA_ID
    long ACTION_PREPARE_FROM_SEARCH -> ACTION_PREPARE_FROM_SEARCH
    long ACTION_PREPARE_FROM_URI -> ACTION_PREPARE_FROM_URI
    long ACTION_SET_REPEAT_MODE -> ACTION_SET_REPEAT_MODE
    long ACTION_SET_SHUFFLE_MODE_ENABLED -> ACTION_SET_SHUFFLE_MODE_ENABLED
    long ACTION_SET_CAPTIONING_ENABLED -> ACTION_SET_CAPTIONING_ENABLED
    int STATE_NONE -> STATE_NONE
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_FAST_FORWARDING -> STATE_FAST_FORWARDING
    int STATE_REWINDING -> STATE_REWINDING
    int STATE_BUFFERING -> STATE_BUFFERING
    int STATE_ERROR -> STATE_ERROR
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_SKIPPING_TO_PREVIOUS -> STATE_SKIPPING_TO_PREVIOUS
    int STATE_SKIPPING_TO_NEXT -> STATE_SKIPPING_TO_NEXT
    int STATE_SKIPPING_TO_QUEUE_ITEM -> STATE_SKIPPING_TO_QUEUE_ITEM
    long PLAYBACK_POSITION_UNKNOWN -> PLAYBACK_POSITION_UNKNOWN
    int REPEAT_MODE_NONE -> REPEAT_MODE_NONE
    int REPEAT_MODE_ONE -> REPEAT_MODE_ONE
    int REPEAT_MODE_ALL -> REPEAT_MODE_ALL
    int REPEAT_MODE_GROUP -> REPEAT_MODE_GROUP
    int SHUFFLE_MODE_NONE -> SHUFFLE_MODE_NONE
    int SHUFFLE_MODE_ALL -> SHUFFLE_MODE_ALL
    int SHUFFLE_MODE_GROUP -> SHUFFLE_MODE_GROUP
    int ERROR_CODE_UNKNOWN_ERROR -> ERROR_CODE_UNKNOWN_ERROR
    int ERROR_CODE_APP_ERROR -> ERROR_CODE_APP_ERROR
    int ERROR_CODE_NOT_SUPPORTED -> ERROR_CODE_NOT_SUPPORTED
    int ERROR_CODE_AUTHENTICATION_EXPIRED -> ERROR_CODE_AUTHENTICATION_EXPIRED
    int ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED -> ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED
    int ERROR_CODE_CONCURRENT_STREAM_LIMIT -> ERROR_CODE_CONCURRENT_STREAM_LIMIT
    int ERROR_CODE_PARENTAL_CONTROL_RESTRICTED -> ERROR_CODE_PARENTAL_CONTROL_RESTRICTED
    int ERROR_CODE_NOT_AVAILABLE_IN_REGION -> ERROR_CODE_NOT_AVAILABLE_IN_REGION
    int ERROR_CODE_CONTENT_ALREADY_PLAYING -> ERROR_CODE_CONTENT_ALREADY_PLAYING
    int ERROR_CODE_SKIP_LIMIT_REACHED -> ERROR_CODE_SKIP_LIMIT_REACHED
    int ERROR_CODE_ACTION_ABORTED -> ERROR_CODE_ACTION_ABORTED
    int ERROR_CODE_END_OF_QUEUE -> ERROR_CODE_END_OF_QUEUE
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mSpeed -> mSpeed
    long mActions -> mActions
    int mErrorCode -> mErrorCode
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    java.util.List mCustomActions -> mCustomActions
    long mActiveItemId -> mActiveItemId
    android.os.Bundle mExtras -> mExtras
    java.lang.Object mStateObj -> mStateObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int toKeyCode(long) -> toKeyCode
    void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    void <init>(android.os.Parcel) -> <init>
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getState() -> getState
    long getPosition() -> getPosition
    long getBufferedPosition() -> getBufferedPosition
    float getPlaybackSpeed() -> getPlaybackSpeed
    long getActions() -> getActions
    java.util.List getCustomActions() -> getCustomActions
    int getErrorCode() -> getErrorCode
    java.lang.CharSequence getErrorMessage() -> getErrorMessage
    long getLastPositionUpdateTime() -> getLastPositionUpdateTime
    long getActiveQueueItemId() -> getActiveQueueItemId
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    java.lang.Object getPlaybackState() -> getPlaybackState
    void <clinit>() -> <clinit>
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    void <init>() -> <init>
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$Actions -> android.support.v4.media.session.PlaybackStateCompat$Actions:
android.support.v4.media.session.PlaybackStateCompat$Builder -> android.support.v4.media.session.PlaybackStateCompat$Builder:
    java.util.List mCustomActions -> mCustomActions
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mRate -> mRate
    long mActions -> mActions
    int mErrorCode -> mErrorCode
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    long mActiveItemId -> mActiveItemId
    android.os.Bundle mExtras -> mExtras
    void <init>() -> <init>
    void <init>(android.support.v4.media.session.PlaybackStateCompat) -> <init>
    android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float) -> setState
    android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long) -> setState
    android.support.v4.media.session.PlaybackStateCompat$Builder setBufferedPosition(long) -> setBufferedPosition
    android.support.v4.media.session.PlaybackStateCompat$Builder setActions(long) -> setActions
    android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(java.lang.String,java.lang.String,int) -> addCustomAction
    android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction) -> addCustomAction
    android.support.v4.media.session.PlaybackStateCompat$Builder setActiveQueueItemId(long) -> setActiveQueueItemId
    android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(java.lang.CharSequence) -> setErrorMessage
    android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(int,java.lang.CharSequence) -> setErrorMessage
    android.support.v4.media.session.PlaybackStateCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.session.PlaybackStateCompat build() -> build
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    java.lang.String mAction -> mAction
    java.lang.CharSequence mName -> mName
    int mIcon -> mIcon
    android.os.Bundle mExtras -> mExtras
    java.lang.Object mCustomActionObj -> mCustomActionObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    void <init>(android.os.Parcel) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    java.lang.Object getCustomAction() -> getCustomAction
    java.lang.String getAction() -> getAction
    java.lang.CharSequence getName() -> getName
    int getIcon() -> getIcon
    android.os.Bundle getExtras() -> getExtras
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    void <init>() -> <init>
    android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder:
    java.lang.String mAction -> mAction
    java.lang.CharSequence mName -> mName
    int mIcon -> mIcon
    android.os.Bundle mExtras -> mExtras
    void <init>(java.lang.String,java.lang.CharSequence,int) -> <init>
    android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.session.PlaybackStateCompat$CustomAction build() -> build
android.support.v4.media.session.PlaybackStateCompat$ErrorCode -> android.support.v4.media.session.PlaybackStateCompat$ErrorCode:
android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction -> android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction:
android.support.v4.media.session.PlaybackStateCompat$RepeatMode -> android.support.v4.media.session.PlaybackStateCompat$RepeatMode:
android.support.v4.media.session.PlaybackStateCompat$ShuffleMode -> android.support.v4.media.session.PlaybackStateCompat$ShuffleMode:
android.support.v4.media.session.PlaybackStateCompat$State -> android.support.v4.media.session.PlaybackStateCompat$State:
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    void <init>() -> <init>
    int getState(java.lang.Object) -> getState
    long getPosition(java.lang.Object) -> getPosition
    long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    long getActions(java.lang.Object) -> getActions
    java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    java.util.List getCustomActions(java.lang.Object) -> getCustomActions
    long getActiveQueueItemId(java.lang.Object) -> getActiveQueueItemId
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long) -> newInstance
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction -> android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    void <init>() -> <init>
    java.lang.String getAction(java.lang.Object) -> getAction
    java.lang.CharSequence getName(java.lang.Object) -> getName
    int getIcon(java.lang.Object) -> getIcon
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    java.lang.Object newInstance(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> newInstance
android.support.v4.media.session.PlaybackStateCompatApi22 -> android.support.v4.media.session.PlaybackStateCompatApi22:
    void <init>() -> <init>
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> newInstance
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    int RESTRICT_BACKGROUND_STATUS_DISABLED -> RESTRICT_BACKGROUND_STATUS_DISABLED
    int RESTRICT_BACKGROUND_STATUS_WHITELISTED -> RESTRICT_BACKGROUND_STATUS_WHITELISTED
    int RESTRICT_BACKGROUND_STATUS_ENABLED -> RESTRICT_BACKGROUND_STATUS_ENABLED
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
    int getRestrictBackgroundStatus(android.net.ConnectivityManager) -> getRestrictBackgroundStatus
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatApi16Impl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatApi16Impl:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatApi24Impl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatApi24Impl:
    void <init>() -> <init>
    int getRestrictBackgroundStatus(android.net.ConnectivityManager) -> getRestrictBackgroundStatus
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatBaseImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatBaseImpl:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    int getRestrictBackgroundStatus(android.net.ConnectivityManager) -> getRestrictBackgroundStatus
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    int getRestrictBackgroundStatus(android.net.ConnectivityManager) -> getRestrictBackgroundStatus
android.support.v4.net.ConnectivityManagerCompat$RestrictBackgroundStatus -> android.support.v4.net.ConnectivityManagerCompat$RestrictBackgroundStatus:
android.support.v4.net.DatagramSocketWrapper -> android.support.v4.net.DatagramSocketWrapper:
    void <init>(java.net.DatagramSocket,java.io.FileDescriptor) -> <init>
android.support.v4.net.DatagramSocketWrapper$DatagramSocketImplWrapper -> android.support.v4.net.DatagramSocketWrapper$DatagramSocketImplWrapper:
    void <init>(java.net.DatagramSocket,java.io.FileDescriptor) -> <init>
    void accept(java.net.SocketImpl) -> accept
    int available() -> available
    void bind(java.net.InetAddress,int) -> bind
    void close() -> close
    void connect(java.lang.String,int) -> connect
    void connect(java.net.InetAddress,int) -> connect
    void create(boolean) -> create
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    void listen(int) -> listen
    void connect(java.net.SocketAddress,int) -> connect
    void sendUrgentData(int) -> sendUrgentData
    java.lang.Object getOption(int) -> getOption
    void setOption(int,java.lang.Object) -> setOption
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatBaseImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
    void tagDatagramSocket(java.net.DatagramSocket) -> tagDatagramSocket
    void untagDatagramSocket(java.net.DatagramSocket) -> untagDatagramSocket
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatApi24Impl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatApi24Impl:
    void <init>() -> <init>
    void tagDatagramSocket(java.net.DatagramSocket) -> tagDatagramSocket
    void untagDatagramSocket(java.net.DatagramSocket) -> untagDatagramSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatBaseImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatBaseImpl:
    void <init>() -> <init>
    void tagDatagramSocket(java.net.DatagramSocket) -> tagDatagramSocket
    void untagDatagramSocket(java.net.DatagramSocket) -> untagDatagramSocket
android.support.v4.os.AsyncTaskCompat -> android.support.v4.os.AsyncTaskCompat:
    android.os.AsyncTask executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
    void <init>() -> <init>
android.support.v4.os.BuildCompat -> android.support.v4.os.BuildCompat:
    void <init>() -> <init>
    boolean isAtLeastN() -> isAtLeastN
    boolean isAtLeastNMR1() -> isAtLeastNMR1
    boolean isAtLeastO() -> isAtLeastO
    boolean isAtLeastOMR1() -> isAtLeastOMR1
    boolean isAtLeastP() -> isAtLeastP
android.support.v4.os.CancellationSignal -> android.support.v4.os.CancellationSignal:
    boolean mIsCanceled -> mIsCanceled
    android.support.v4.os.CancellationSignal$OnCancelListener mOnCancelListener -> mOnCancelListener
    java.lang.Object mCancellationSignalObj -> mCancellationSignalObj
    boolean mCancelInProgress -> mCancelInProgress
    void <init>() -> <init>
    boolean isCanceled() -> isCanceled
    void throwIfCanceled() -> throwIfCanceled
    void cancel() -> cancel
    void setOnCancelListener(android.support.v4.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    java.lang.Object getCancellationSignalObject() -> getCancellationSignalObject
    void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
android.support.v4.os.CancellationSignal$OnCancelListener -> android.support.v4.os.CancellationSignal$OnCancelListener:
    void onCancel() -> onCancel
android.support.v4.os.ConfigurationCompat -> android.support.v4.os.ConfigurationCompat:
    void <init>() -> <init>
    android.support.v4.os.LocaleListCompat getLocales(android.content.res.Configuration) -> getLocales
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
    void <init>() -> <init>
android.support.v4.os.IResultReceiver -> android.support.v4.os.IResultReceiver:
    void send(int,android.os.Bundle) -> send
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_send -> TRANSACTION_send
    void <init>() -> <init>
    android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void send(int,android.os.Bundle) -> send
android.support.v4.os.LocaleHelper -> android.support.v4.os.LocaleHelper:
    void <init>() -> <init>
    java.util.Locale forLanguageTag(java.lang.String) -> forLanguageTag
    java.lang.String toLanguageTag(java.util.Locale) -> toLanguageTag
android.support.v4.os.LocaleListCompat -> android.support.v4.os.LocaleListCompat:
    android.support.v4.os.LocaleListInterface IMPL -> IMPL
    android.support.v4.os.LocaleListCompat sEmptyLocaleList -> sEmptyLocaleList
    void <init>() -> <init>
    android.support.v4.os.LocaleListCompat wrap(java.lang.Object) -> wrap
    java.lang.Object unwrap() -> unwrap
    android.support.v4.os.LocaleListCompat create(java.util.Locale[]) -> create
    java.util.Locale get(int) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    int indexOf(java.util.Locale) -> indexOf
    java.lang.String toLanguageTags() -> toLanguageTags
    java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    android.support.v4.os.LocaleListCompat getEmptyLocaleList() -> getEmptyLocaleList
    android.support.v4.os.LocaleListCompat forLanguageTags(java.lang.String) -> forLanguageTags
    android.support.v4.os.LocaleListCompat getAdjustedDefault() -> getAdjustedDefault
    android.support.v4.os.LocaleListCompat getDefault() -> getDefault
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setLocaleList(android.os.LocaleList) -> setLocaleList
    void setLocaleListArray(java.util.Locale[]) -> setLocaleListArray
    void <clinit>() -> <clinit>
android.support.v4.os.LocaleListCompat$LocaleListCompatApi24Impl -> android.support.v4.os.LocaleListCompat$LocaleListCompatApi24Impl:
    android.os.LocaleList mLocaleList -> mLocaleList
    void <init>() -> <init>
    void setLocaleList(java.util.Locale[]) -> setLocaleList
    java.lang.Object getLocaleList() -> getLocaleList
    java.util.Locale get(int) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    int indexOf(java.util.Locale) -> indexOf
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toLanguageTags() -> toLanguageTags
    java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
android.support.v4.os.LocaleListCompat$LocaleListCompatBaseImpl -> android.support.v4.os.LocaleListCompat$LocaleListCompatBaseImpl:
    android.support.v4.os.LocaleListHelper mLocaleList -> mLocaleList
    void <init>() -> <init>
    void setLocaleList(java.util.Locale[]) -> setLocaleList
    java.lang.Object getLocaleList() -> getLocaleList
    java.util.Locale get(int) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    int indexOf(java.util.Locale) -> indexOf
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toLanguageTags() -> toLanguageTags
    java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
android.support.v4.os.LocaleListHelper -> android.support.v4.os.LocaleListHelper:
    java.util.Locale[] mList -> mList
    java.lang.String mStringRepresentation -> mStringRepresentation
    java.util.Locale[] sEmptyList -> sEmptyList
    android.support.v4.os.LocaleListHelper sEmptyLocaleList -> sEmptyLocaleList
    java.lang.String STRING_EN_XA -> STRING_EN_XA
    java.lang.String STRING_AR_XB -> STRING_AR_XB
    java.util.Locale LOCALE_EN_XA -> LOCALE_EN_XA
    java.util.Locale LOCALE_AR_XB -> LOCALE_AR_XB
    int NUM_PSEUDO_LOCALES -> NUM_PSEUDO_LOCALES
    java.util.Locale EN_LATN -> EN_LATN
    java.lang.Object sLock -> sLock
    android.support.v4.os.LocaleListHelper sLastExplicitlySetLocaleList -> sLastExplicitlySetLocaleList
    android.support.v4.os.LocaleListHelper sDefaultLocaleList -> sDefaultLocaleList
    android.support.v4.os.LocaleListHelper sDefaultAdjustedLocaleList -> sDefaultAdjustedLocaleList
    java.util.Locale sLastDefaultLocale -> sLastDefaultLocale
    java.util.Locale get(int) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    int indexOf(java.util.Locale) -> indexOf
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toLanguageTags() -> toLanguageTags
    void <init>(java.util.Locale[]) -> <init>
    void <init>(java.util.Locale,android.support.v4.os.LocaleListHelper) -> <init>
    android.support.v4.os.LocaleListHelper getEmptyLocaleList() -> getEmptyLocaleList
    android.support.v4.os.LocaleListHelper forLanguageTags(java.lang.String) -> forLanguageTags
    java.lang.String getLikelyScript(java.util.Locale) -> getLikelyScript
    boolean isPseudoLocale(java.lang.String) -> isPseudoLocale
    boolean isPseudoLocale(java.util.Locale) -> isPseudoLocale
    int matchScore(java.util.Locale,java.util.Locale) -> matchScore
    int findFirstMatchIndex(java.util.Locale) -> findFirstMatchIndex
    int computeFirstMatchIndex(java.util.Collection,boolean) -> computeFirstMatchIndex
    java.util.Locale computeFirstMatch(java.util.Collection,boolean) -> computeFirstMatch
    java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    int getFirstMatchIndex(java.lang.String[]) -> getFirstMatchIndex
    java.util.Locale getFirstMatchWithEnglishSupported(java.lang.String[]) -> getFirstMatchWithEnglishSupported
    int getFirstMatchIndexWithEnglishSupported(java.util.Collection) -> getFirstMatchIndexWithEnglishSupported
    int getFirstMatchIndexWithEnglishSupported(java.lang.String[]) -> getFirstMatchIndexWithEnglishSupported
    boolean isPseudoLocalesOnly(java.lang.String[]) -> isPseudoLocalesOnly
    android.support.v4.os.LocaleListHelper getDefault() -> getDefault
    android.support.v4.os.LocaleListHelper getAdjustedDefault() -> getAdjustedDefault
    void setDefault(android.support.v4.os.LocaleListHelper) -> setDefault
    void setDefault(android.support.v4.os.LocaleListHelper,int) -> setDefault
    void <clinit>() -> <clinit>
android.support.v4.os.LocaleListInterface -> android.support.v4.os.LocaleListInterface:
    void setLocaleList(java.util.Locale[]) -> setLocaleList
    java.lang.Object getLocaleList() -> getLocaleList
    java.util.Locale get(int) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    int indexOf(java.util.Locale) -> indexOf
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toLanguageTags() -> toLanguageTags
    java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
android.support.v4.os.OperationCanceledException -> android.support.v4.os.OperationCanceledException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
    void <init>() -> <init>
android.support.v4.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    boolean mLocal -> mLocal
    android.os.Handler mHandler -> mHandler
    android.support.v4.os.IResultReceiver mReceiver -> mReceiver
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Handler) -> <init>
    void send(int,android.os.Bundle) -> send
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    void <init>() -> <init>
    android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    android.support.v4.os.ResultReceiver this$0 -> this$0
    void <init>(android.support.v4.os.ResultReceiver) -> <init>
    void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    int mResultCode -> mResultCode
    android.os.Bundle mResultData -> mResultData
    android.support.v4.os.ResultReceiver this$0 -> this$0
    void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    void run() -> run
android.support.v4.os.TraceCompat -> android.support.v4.os.TraceCompat:
    void beginSection(java.lang.String) -> beginSection
    void endSection() -> endSection
    void <init>() -> <init>
android.support.v4.os.UserManagerCompat -> android.support.v4.os.UserManagerCompat:
    void <init>() -> <init>
    boolean isUserUnlocked(android.content.Context) -> isUserUnlocked
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void <init>(android.content.Context) -> <init>
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$ColorMode -> android.support.v4.print.PrintHelper$ColorMode:
android.support.v4.print.PrintHelper$OnPrintFinishCallback -> android.support.v4.print.PrintHelper$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$Orientation -> android.support.v4.print.PrintHelper$Orientation:
android.support.v4.print.PrintHelper$PrintHelperApi19 -> android.support.v4.print.PrintHelper$PrintHelperApi19:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    boolean mPrintActivityRespectsOrientation -> mPrintActivityRespectsOrientation
    boolean mIsMinMarginsHandlingCorrect -> mIsMinMarginsHandlingCorrect
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void <init>(android.content.Context) -> <init>
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    boolean isPortrait(android.graphics.Bitmap) -> isPortrait
    android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes) -> copyAttributes
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void writeBitmap(android.print.PrintAttributes,int,android.graphics.Bitmap,android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> writeBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Bitmap convertBitmapForColorMode(android.graphics.Bitmap,int) -> convertBitmapForColorMode
    void access$000(android.support.v4.print.PrintHelper$PrintHelperApi19,android.print.PrintAttributes,int,android.graphics.Bitmap,android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> access$000
    android.graphics.Bitmap access$100(android.support.v4.print.PrintHelper$PrintHelperApi19,android.graphics.Bitmap,int) -> access$100
    android.graphics.Matrix access$200(android.support.v4.print.PrintHelper$PrintHelperApi19,int,int,android.graphics.RectF,int) -> access$200
    android.graphics.Bitmap access$400(android.support.v4.print.PrintHelper$PrintHelperApi19,android.net.Uri) -> access$400
    boolean access$600(android.graphics.Bitmap) -> access$600
    java.lang.Object access$700(android.support.v4.print.PrintHelper$PrintHelperApi19) -> access$700
android.support.v4.print.PrintHelper$PrintHelperApi19$1 -> android.support.v4.print.PrintHelper$PrintHelperApi19$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    int val$fittingMode -> val$fittingMode
    android.graphics.Bitmap val$bitmap -> val$bitmap
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperApi19 this$0 -> this$0
    void <init>(android.support.v4.print.PrintHelper$PrintHelperApi19,java.lang.String,int,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> <init>
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperApi19$2 -> android.support.v4.print.PrintHelper$PrintHelperApi19$2:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$pdfAttributes -> val$pdfAttributes
    android.graphics.Bitmap val$bitmap -> val$bitmap
    android.print.PrintAttributes val$attributes -> val$attributes
    int val$fittingMode -> val$fittingMode
    android.os.ParcelFileDescriptor val$fileDescriptor -> val$fileDescriptor
    android.print.PrintDocumentAdapter$WriteResultCallback val$writeResultCallback -> val$writeResultCallback
    android.support.v4.print.PrintHelper$PrintHelperApi19 this$0 -> this$0
    void <init>(android.support.v4.print.PrintHelper$PrintHelperApi19,android.os.CancellationSignal,android.print.PrintAttributes,android.graphics.Bitmap,android.print.PrintAttributes,int,android.os.ParcelFileDescriptor,android.print.PrintDocumentAdapter$WriteResultCallback) -> <init>
    java.lang.Throwable doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Throwable) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelper$PrintHelperApi19$3 -> android.support.v4.print.PrintHelper$PrintHelperApi19$3:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask mLoadBitmap -> mLoadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelper$PrintHelperApi19 this$0 -> this$0
    void <init>(android.support.v4.print.PrintHelper$PrintHelperApi19,java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback,int) -> <init>
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$300(android.support.v4.print.PrintHelper$PrintHelperApi19$3) -> access$300
    android.print.PrintAttributes access$500(android.support.v4.print.PrintHelper$PrintHelperApi19$3) -> access$500
android.support.v4.print.PrintHelper$PrintHelperApi19$3$1 -> android.support.v4.print.PrintHelper$PrintHelperApi19$3$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelper$PrintHelperApi19$3 this$1 -> this$1
    void <init>(android.support.v4.print.PrintHelper$PrintHelperApi19$3,android.os.CancellationSignal,android.print.PrintAttributes,android.print.PrintAttributes,android.print.PrintDocumentAdapter$LayoutResultCallback) -> <init>
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelper$PrintHelperApi19$3$1$1 -> android.support.v4.print.PrintHelper$PrintHelperApi19$3$1$1:
    android.support.v4.print.PrintHelper$PrintHelperApi19$3$1 this$2 -> this$2
    void <init>(android.support.v4.print.PrintHelper$PrintHelperApi19$3$1) -> <init>
    void onCancel() -> onCancel
android.support.v4.print.PrintHelper$PrintHelperApi20 -> android.support.v4.print.PrintHelper$PrintHelperApi20:
    void <init>(android.content.Context) -> <init>
android.support.v4.print.PrintHelper$PrintHelperApi23 -> android.support.v4.print.PrintHelper$PrintHelperApi23:
    android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes) -> copyAttributes
    void <init>(android.content.Context) -> <init>
android.support.v4.print.PrintHelper$PrintHelperApi24 -> android.support.v4.print.PrintHelper$PrintHelperApi24:
    void <init>(android.content.Context) -> <init>
android.support.v4.print.PrintHelper$PrintHelperStub -> android.support.v4.print.PrintHelper$PrintHelperStub:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void <init>() -> <init>
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void <init>(android.support.v4.print.PrintHelper$1) -> <init>
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$ScaleMode -> android.support.v4.print.PrintHelper$ScaleMode:
android.support.v4.provider.DocumentFile -> android.support.v4.provider.DocumentFile:
    java.lang.String TAG -> TAG
    android.support.v4.provider.DocumentFile mParent -> mParent
    void <init>(android.support.v4.provider.DocumentFile) -> <init>
    android.support.v4.provider.DocumentFile fromFile(java.io.File) -> fromFile
    android.support.v4.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri) -> fromSingleUri
    android.support.v4.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri) -> fromTreeUri
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    android.support.v4.provider.DocumentFile getParentFile() -> getParentFile
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    boolean isVirtual() -> isVirtual
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    android.support.v4.provider.DocumentFile findFile(java.lang.String) -> findFile
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.DocumentsContractApi19 -> android.support.v4.provider.DocumentsContractApi19:
    java.lang.String TAG -> TAG
    int FLAG_VIRTUAL_DOCUMENT -> FLAG_VIRTUAL_DOCUMENT
    void <init>() -> <init>
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    boolean isVirtual(android.content.Context,android.net.Uri) -> isVirtual
    java.lang.String getName(android.content.Context,android.net.Uri) -> getName
    java.lang.String getRawType(android.content.Context,android.net.Uri) -> getRawType
    java.lang.String getType(android.content.Context,android.net.Uri) -> getType
    long getFlags(android.content.Context,android.net.Uri) -> getFlags
    boolean isDirectory(android.content.Context,android.net.Uri) -> isDirectory
    boolean isFile(android.content.Context,android.net.Uri) -> isFile
    long lastModified(android.content.Context,android.net.Uri) -> lastModified
    long length(android.content.Context,android.net.Uri) -> length
    boolean canRead(android.content.Context,android.net.Uri) -> canRead
    boolean canWrite(android.content.Context,android.net.Uri) -> canWrite
    boolean delete(android.content.Context,android.net.Uri) -> delete
    boolean exists(android.content.Context,android.net.Uri) -> exists
    java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> queryForString
    int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int) -> queryForInt
    long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long) -> queryForLong
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.DocumentsContractApi21 -> android.support.v4.provider.DocumentsContractApi21:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> createFile
    android.net.Uri createDirectory(android.content.Context,android.net.Uri,java.lang.String) -> createDirectory
    android.net.Uri prepareTreeUri(android.net.Uri) -> prepareTreeUri
    android.net.Uri[] listFiles(android.content.Context,android.net.Uri) -> listFiles
    android.net.Uri renameTo(android.content.Context,android.net.Uri,java.lang.String) -> renameTo
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.FontRequest -> android.support.v4.provider.FontRequest:
    java.lang.String mProviderAuthority -> mProviderAuthority
    java.lang.String mProviderPackage -> mProviderPackage
    java.lang.String mQuery -> mQuery
    java.util.List mCertificates -> mCertificates
    int mCertificatesArray -> mCertificatesArray
    java.lang.String mIdentifier -> mIdentifier
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    java.lang.String getProviderAuthority() -> getProviderAuthority
    java.lang.String getProviderPackage() -> getProviderPackage
    java.lang.String getQuery() -> getQuery
    java.util.List getCertificates() -> getCertificates
    int getCertificatesArrayResId() -> getCertificatesArrayResId
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String toString() -> toString
android.support.v4.provider.FontsContractCompat -> android.support.v4.provider.FontsContractCompat:
    java.lang.String TAG -> TAG
    java.lang.String PARCEL_FONT_RESULTS -> PARCEL_FONT_RESULTS
    int RESULT_CODE_PROVIDER_NOT_FOUND -> RESULT_CODE_PROVIDER_NOT_FOUND
    int RESULT_CODE_WRONG_CERTIFICATES -> RESULT_CODE_WRONG_CERTIFICATES
    android.support.v4.util.LruCache sTypefaceCache -> sTypefaceCache
    int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS -> BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS
    android.support.v4.provider.SelfDestructiveThread sBackgroundThread -> sBackgroundThread
    java.lang.Object sLock -> sLock
    android.support.v4.util.SimpleArrayMap sPendingReplies -> sPendingReplies
    java.util.Comparator sByteArrayComparator -> sByteArrayComparator
    void <init>() -> <init>
    android.graphics.Typeface getFontInternal(android.content.Context,android.support.v4.provider.FontRequest,int) -> getFontInternal
    android.graphics.Typeface getFontSync(android.content.Context,android.support.v4.provider.FontRequest,android.widget.TextView,int,int,int) -> getFontSync
    void requestFont(android.content.Context,android.support.v4.provider.FontRequest,android.support.v4.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> requestFont
    android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[]) -> buildTypeface
    java.util.Map prepareFontData(android.content.Context,android.support.v4.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> prepareFontData
    android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest) -> fetchFonts
    android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources) -> getProvider
    java.util.List getCertificates(android.support.v4.provider.FontRequest,android.content.res.Resources) -> getCertificates
    boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    android.support.v4.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> getFontFromProvider
    android.graphics.Typeface access$000(android.content.Context,android.support.v4.provider.FontRequest,int) -> access$000
    android.support.v4.util.LruCache access$100() -> access$100
    java.lang.Object access$200() -> access$200
    android.support.v4.util.SimpleArrayMap access$300() -> access$300
    void <clinit>() -> <clinit>
android.support.v4.provider.FontsContractCompat$1 -> android.support.v4.provider.FontsContractCompat$1:
    android.content.Context val$context -> val$context
    android.support.v4.provider.FontRequest val$request -> val$request
    int val$style -> val$style
    java.lang.String val$id -> val$id
    void <init>(android.content.Context,android.support.v4.provider.FontRequest,int,java.lang.String) -> <init>
    android.graphics.Typeface call() -> call
    java.lang.Object call() -> call
android.support.v4.provider.FontsContractCompat$2 -> android.support.v4.provider.FontsContractCompat$2:
    java.lang.ref.WeakReference val$textViewWeak -> val$textViewWeak
    android.widget.TextView val$targetView -> val$targetView
    int val$style -> val$style
    void <init>(java.lang.ref.WeakReference,android.widget.TextView,int) -> <init>
    void onReply(android.graphics.Typeface) -> onReply
    void onReply(java.lang.Object) -> onReply
android.support.v4.provider.FontsContractCompat$3 -> android.support.v4.provider.FontsContractCompat$3:
    java.lang.String val$id -> val$id
    void <init>(java.lang.String) -> <init>
    void onReply(android.graphics.Typeface) -> onReply
    void onReply(java.lang.Object) -> onReply
android.support.v4.provider.FontsContractCompat$4 -> android.support.v4.provider.FontsContractCompat$4:
    android.content.Context val$context -> val$context
    android.support.v4.provider.FontRequest val$request -> val$request
    android.os.Handler val$callerThreadHandler -> val$callerThreadHandler
    android.support.v4.provider.FontsContractCompat$FontRequestCallback val$callback -> val$callback
    void <init>(android.content.Context,android.support.v4.provider.FontRequest,android.os.Handler,android.support.v4.provider.FontsContractCompat$FontRequestCallback) -> <init>
    void run() -> run
android.support.v4.provider.FontsContractCompat$4$1 -> android.support.v4.provider.FontsContractCompat$4$1:
    android.support.v4.provider.FontsContractCompat$4 this$0 -> this$0
    void <init>(android.support.v4.provider.FontsContractCompat$4) -> <init>
    void run() -> run
android.support.v4.provider.FontsContractCompat$4$2 -> android.support.v4.provider.FontsContractCompat$4$2:
    android.support.v4.provider.FontsContractCompat$4 this$0 -> this$0
    void <init>(android.support.v4.provider.FontsContractCompat$4) -> <init>
    void run() -> run
android.support.v4.provider.FontsContractCompat$4$3 -> android.support.v4.provider.FontsContractCompat$4$3:
    android.support.v4.provider.FontsContractCompat$4 this$0 -> this$0
    void <init>(android.support.v4.provider.FontsContractCompat$4) -> <init>
    void run() -> run
android.support.v4.provider.FontsContractCompat$4$4 -> android.support.v4.provider.FontsContractCompat$4$4:
    android.support.v4.provider.FontsContractCompat$4 this$0 -> this$0
    void <init>(android.support.v4.provider.FontsContractCompat$4) -> <init>
    void run() -> run
android.support.v4.provider.FontsContractCompat$4$5 -> android.support.v4.provider.FontsContractCompat$4$5:
    android.support.v4.provider.FontsContractCompat$4 this$0 -> this$0
    void <init>(android.support.v4.provider.FontsContractCompat$4) -> <init>
    void run() -> run
android.support.v4.provider.FontsContractCompat$4$6 -> android.support.v4.provider.FontsContractCompat$4$6:
    android.support.v4.provider.FontsContractCompat$4 this$0 -> this$0
    void <init>(android.support.v4.provider.FontsContractCompat$4) -> <init>
    void run() -> run
android.support.v4.provider.FontsContractCompat$4$7 -> android.support.v4.provider.FontsContractCompat$4$7:
    int val$resultCode -> val$resultCode
    android.support.v4.provider.FontsContractCompat$4 this$0 -> this$0
    void <init>(android.support.v4.provider.FontsContractCompat$4,int) -> <init>
    void run() -> run
android.support.v4.provider.FontsContractCompat$4$8 -> android.support.v4.provider.FontsContractCompat$4$8:
    android.support.v4.provider.FontsContractCompat$4 this$0 -> this$0
    void <init>(android.support.v4.provider.FontsContractCompat$4) -> <init>
    void run() -> run
android.support.v4.provider.FontsContractCompat$4$9 -> android.support.v4.provider.FontsContractCompat$4$9:
    android.graphics.Typeface val$typeface -> val$typeface
    android.support.v4.provider.FontsContractCompat$4 this$0 -> this$0
    void <init>(android.support.v4.provider.FontsContractCompat$4,android.graphics.Typeface) -> <init>
    void run() -> run
android.support.v4.provider.FontsContractCompat$5 -> android.support.v4.provider.FontsContractCompat$5:
    void <init>() -> <init>
    int compare(byte[],byte[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.provider.FontsContractCompat$Columns -> android.support.v4.provider.FontsContractCompat$Columns:
    java.lang.String FILE_ID -> FILE_ID
    java.lang.String TTC_INDEX -> TTC_INDEX
    java.lang.String VARIATION_SETTINGS -> VARIATION_SETTINGS
    java.lang.String WEIGHT -> WEIGHT
    java.lang.String ITALIC -> ITALIC
    java.lang.String RESULT_CODE -> RESULT_CODE
    int RESULT_CODE_OK -> RESULT_CODE_OK
    int RESULT_CODE_FONT_NOT_FOUND -> RESULT_CODE_FONT_NOT_FOUND
    int RESULT_CODE_FONT_UNAVAILABLE -> RESULT_CODE_FONT_UNAVAILABLE
    int RESULT_CODE_MALFORMED_QUERY -> RESULT_CODE_MALFORMED_QUERY
    void <init>() -> <init>
android.support.v4.provider.FontsContractCompat$FontFamilyResult -> android.support.v4.provider.FontsContractCompat$FontFamilyResult:
    int STATUS_OK -> STATUS_OK
    int STATUS_WRONG_CERTIFICATES -> STATUS_WRONG_CERTIFICATES
    int STATUS_UNEXPECTED_DATA_PROVIDED -> STATUS_UNEXPECTED_DATA_PROVIDED
    int mStatusCode -> mStatusCode
    android.support.v4.provider.FontsContractCompat$FontInfo[] mFonts -> mFonts
    void <init>(int,android.support.v4.provider.FontsContractCompat$FontInfo[]) -> <init>
    int getStatusCode() -> getStatusCode
    android.support.v4.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
android.support.v4.provider.FontsContractCompat$FontFamilyResult$FontResultStatus -> android.support.v4.provider.FontsContractCompat$FontFamilyResult$FontResultStatus:
android.support.v4.provider.FontsContractCompat$FontInfo -> android.support.v4.provider.FontsContractCompat$FontInfo:
    android.net.Uri mUri -> mUri
    int mTtcIndex -> mTtcIndex
    int mWeight -> mWeight
    boolean mItalic -> mItalic
    int mResultCode -> mResultCode
    void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    android.net.Uri getUri() -> getUri
    int getTtcIndex() -> getTtcIndex
    int getWeight() -> getWeight
    boolean isItalic() -> isItalic
    int getResultCode() -> getResultCode
android.support.v4.provider.FontsContractCompat$FontRequestCallback -> android.support.v4.provider.FontsContractCompat$FontRequestCallback:
    int FAIL_REASON_PROVIDER_NOT_FOUND -> FAIL_REASON_PROVIDER_NOT_FOUND
    int FAIL_REASON_WRONG_CERTIFICATES -> FAIL_REASON_WRONG_CERTIFICATES
    int FAIL_REASON_FONT_LOAD_ERROR -> FAIL_REASON_FONT_LOAD_ERROR
    int FAIL_REASON_FONT_NOT_FOUND -> FAIL_REASON_FONT_NOT_FOUND
    int FAIL_REASON_FONT_UNAVAILABLE -> FAIL_REASON_FONT_UNAVAILABLE
    int FAIL_REASON_MALFORMED_QUERY -> FAIL_REASON_MALFORMED_QUERY
    void <init>() -> <init>
    void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
    void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
android.support.v4.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason -> android.support.v4.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason:
android.support.v4.provider.RawDocumentFile -> android.support.v4.provider.RawDocumentFile:
    java.io.File mFile -> mFile
    void <init>(android.support.v4.provider.DocumentFile,java.io.File) -> <init>
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    boolean isVirtual() -> isVirtual
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
    java.lang.String getTypeForName(java.lang.String) -> getTypeForName
    boolean deleteContents(java.io.File) -> deleteContents
android.support.v4.provider.SelfDestructiveThread -> android.support.v4.provider.SelfDestructiveThread:
    java.lang.Object mLock -> mLock
    android.os.HandlerThread mThread -> mThread
    android.os.Handler mHandler -> mHandler
    int mGeneration -> mGeneration
    int MSG_INVOKE_RUNNABLE -> MSG_INVOKE_RUNNABLE
    int MSG_DESTRUCTION -> MSG_DESTRUCTION
    android.os.Handler$Callback mCallback -> mCallback
    int mDestructAfterMillisec -> mDestructAfterMillisec
    int mPriority -> mPriority
    java.lang.String mThreadName -> mThreadName
    void <init>(java.lang.String,int,int) -> <init>
    boolean isRunning() -> isRunning
    int getGeneration() -> getGeneration
    void post(java.lang.Runnable) -> post
    void postAndReply(java.util.concurrent.Callable,android.support.v4.provider.SelfDestructiveThread$ReplyCallback) -> postAndReply
    java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> postAndWait
    void onInvokeRunnable(java.lang.Runnable) -> onInvokeRunnable
    void onDestruction() -> onDestruction
    void access$000(android.support.v4.provider.SelfDestructiveThread,java.lang.Runnable) -> access$000
    void access$100(android.support.v4.provider.SelfDestructiveThread) -> access$100
android.support.v4.provider.SelfDestructiveThread$1 -> android.support.v4.provider.SelfDestructiveThread$1:
    android.support.v4.provider.SelfDestructiveThread this$0 -> this$0
    void <init>(android.support.v4.provider.SelfDestructiveThread) -> <init>
    boolean handleMessage(android.os.Message) -> handleMessage
android.support.v4.provider.SelfDestructiveThread$2 -> android.support.v4.provider.SelfDestructiveThread$2:
    java.util.concurrent.Callable val$callable -> val$callable
    android.os.Handler val$callingHandler -> val$callingHandler
    android.support.v4.provider.SelfDestructiveThread$ReplyCallback val$reply -> val$reply
    android.support.v4.provider.SelfDestructiveThread this$0 -> this$0
    void <init>(android.support.v4.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,android.support.v4.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    void run() -> run
android.support.v4.provider.SelfDestructiveThread$2$1 -> android.support.v4.provider.SelfDestructiveThread$2$1:
    java.lang.Object val$result -> val$result
    android.support.v4.provider.SelfDestructiveThread$2 this$1 -> this$1
    void <init>(android.support.v4.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    void run() -> run
android.support.v4.provider.SelfDestructiveThread$3 -> android.support.v4.provider.SelfDestructiveThread$3:
    java.util.concurrent.atomic.AtomicReference val$holder -> val$holder
    java.util.concurrent.Callable val$callable -> val$callable
    java.util.concurrent.locks.ReentrantLock val$lock -> val$lock
    java.util.concurrent.atomic.AtomicBoolean val$running -> val$running
    java.util.concurrent.locks.Condition val$cond -> val$cond
    android.support.v4.provider.SelfDestructiveThread this$0 -> this$0
    void <init>(android.support.v4.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    void run() -> run
android.support.v4.provider.SelfDestructiveThread$ReplyCallback -> android.support.v4.provider.SelfDestructiveThread$ReplyCallback:
    void onReply(java.lang.Object) -> onReply
android.support.v4.provider.SingleDocumentFile -> android.support.v4.provider.SingleDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    void <init>(android.support.v4.provider.DocumentFile,android.content.Context,android.net.Uri) -> <init>
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    boolean isVirtual() -> isVirtual
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.TreeDocumentFile -> android.support.v4.provider.TreeDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    void <init>(android.support.v4.provider.DocumentFile,android.content.Context,android.net.Uri) -> <init>
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    boolean isVirtual() -> isVirtual
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    void <init>(boolean,int,android.support.v4.text.TextDirectionHeuristicCompat) -> <init>
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.CharSequence,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.CharSequence,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    boolean isRtl(java.lang.CharSequence) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.CharSequence unicodeWrap(java.lang.CharSequence,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.CharSequence unicodeWrap(java.lang.CharSequence,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.CharSequence) -> getExitDir
    int getEntryDir(java.lang.CharSequence) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
    void <init>(boolean,int,android.support.v4.text.TextDirectionHeuristicCompat,android.support.v4.text.BidiFormatter$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void <init>() -> <init>
    void <init>(boolean) -> <init>
    void <init>(java.util.Locale) -> <init>
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.CharSequence text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    void <init>(java.lang.CharSequence,boolean) -> <init>
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
    void <clinit>() -> <clinit>
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatBaseImpl IMPL -> IMPL
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.text.ICUCompat$ICUCompatApi21Impl -> android.support.v4.text.ICUCompat$ICUCompatApi21Impl:
    void <init>() -> <init>
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
android.support.v4.text.ICUCompat$ICUCompatBaseImpl -> android.support.v4.text.ICUCompat$ICUCompatBaseImpl:
    void <init>() -> <init>
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
android.support.v4.text.ICUCompatApi21 -> android.support.v4.text.ICUCompatApi21:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    void <init>() -> <init>
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
    void <clinit>() -> <clinit>
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    void <init>() -> <init>
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.util.Locale) -> addLikelySubtags
    void <clinit>() -> <clinit>
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
    void <init>(boolean) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    void <init>(android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    void <init>(android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    void <init>() -> <init>
    boolean defaultIsRtl() -> defaultIsRtl
    void <clinit>() -> <clinit>
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.text.util.LinkifyCompat -> android.support.v4.text.util.LinkifyCompat:
    java.lang.String[] EMPTY_STRING -> EMPTY_STRING
    java.util.Comparator COMPARATOR -> COMPARATOR
    boolean addLinks(android.text.Spannable,int) -> addLinks
    boolean addLinks(android.widget.TextView,int) -> addLinks
    void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String) -> addLinks
    void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String) -> addLinks
    boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    void addLinkMovementMethod(android.widget.TextView) -> addLinkMovementMethod
    java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter) -> makeUrl
    void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> gatherLinks
    void applyLink(java.lang.String,int,int,android.text.Spannable) -> applyLink
    void gatherMapLinks(java.util.ArrayList,android.text.Spannable) -> gatherMapLinks
    void pruneOverlaps(java.util.ArrayList,android.text.Spannable) -> pruneOverlaps
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.text.util.LinkifyCompat$1 -> android.support.v4.text.util.LinkifyCompat$1:
    void <init>() -> <init>
    int compare(android.support.v4.text.util.LinkifyCompat$LinkSpec,android.support.v4.text.util.LinkifyCompat$LinkSpec) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.text.util.LinkifyCompat$LinkSpec -> android.support.v4.text.util.LinkifyCompat$LinkSpec:
    android.text.style.URLSpan frameworkAddedSpan -> frameworkAddedSpan
    java.lang.String url -> url
    int start -> start
    int end -> end
    void <init>() -> <init>
android.support.v4.text.util.LinkifyCompat$LinkifyMask -> android.support.v4.text.util.LinkifyCompat$LinkifyMask:
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(android.support.v4.util.SimpleArrayMap) -> <init>
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    void <init>(android.support.v4.util.ArrayMap) -> <init>
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.ArraySet -> android.support.v4.util.ArraySet:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int[] INT -> INT
    java.lang.Object[] OBJECT -> OBJECT
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] sBaseCache -> sBaseCache
    int sBaseCacheSize -> sBaseCacheSize
    java.lang.Object[] sTwiceBaseCache -> sTwiceBaseCache
    int sTwiceBaseCacheSize -> sTwiceBaseCacheSize
    boolean mIdentityHashCode -> mIdentityHashCode
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    android.support.v4.util.MapCollections mCollections -> mCollections
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(int,boolean) -> <init>
    void <init>(android.support.v4.util.ArraySet) -> <init>
    void <init>(java.util.Collection) -> <init>
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    java.lang.Object valueAt(int) -> valueAt
    boolean isEmpty() -> isEmpty
    boolean add(java.lang.Object) -> add
    void append(java.lang.Object) -> append
    void addAll(android.support.v4.util.ArraySet) -> addAll
    boolean remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    boolean removeAll(android.support.v4.util.ArraySet) -> removeAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.util.MapCollections getCollection() -> getCollection
    java.util.Iterator iterator() -> iterator
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void <clinit>() -> <clinit>
android.support.v4.util.ArraySet$1 -> android.support.v4.util.ArraySet$1:
    android.support.v4.util.ArraySet this$0 -> this$0
    void <init>(android.support.v4.util.ArraySet) -> <init>
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    void <init>(java.io.File) -> <init>
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void <init>() -> <init>
    void <init>(int) -> <init>
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    void clear() -> clear
    void removeFromStart(int) -> removeFromStart
    void removeFromEnd(int) -> removeFromEnd
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.CircularIntArray -> android.support.v4.util.CircularIntArray:
    int[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void <init>() -> <init>
    void <init>(int) -> <init>
    void addFirst(int) -> addFirst
    void addLast(int) -> addLast
    int popFirst() -> popFirst
    int popLast() -> popLast
    void clear() -> clear
    void removeFromStart(int) -> removeFromStart
    void removeFromEnd(int) -> removeFromEnd
    int getFirst() -> getFirst
    int getLast() -> getLast
    int get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    void <init>() -> <init>
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
    void <clinit>() -> <clinit>
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void <init>() -> <init>
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void <init>(java.lang.String) -> <init>
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    void <init>() -> <init>
    void <init>(int) -> <init>
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    void <init>(int) -> <init>
    void resize(int) -> resize
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    void <init>() -> <init>
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections,int) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.ObjectsCompat -> android.support.v4.util.ObjectsCompat:
    android.support.v4.util.ObjectsCompat$ImplBase IMPL -> IMPL
    void <init>() -> <init>
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    void <clinit>() -> <clinit>
android.support.v4.util.ObjectsCompat$1 -> android.support.v4.util.ObjectsCompat$1:
android.support.v4.util.ObjectsCompat$ImplApi19 -> android.support.v4.util.ObjectsCompat$ImplApi19:
    void <init>() -> <init>
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    void <init>(android.support.v4.util.ObjectsCompat$1) -> <init>
android.support.v4.util.ObjectsCompat$ImplBase -> android.support.v4.util.ObjectsCompat$ImplBase:
    void <init>() -> <init>
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    void <init>(android.support.v4.util.ObjectsCompat$1) -> <init>
android.support.v4.util.Pair -> android.support.v4.util.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    boolean equals(java.lang.Object) -> equals
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.util.Pair create(java.lang.Object,java.lang.Object) -> create
android.support.v4.util.PatternsCompat -> android.support.v4.util.PatternsCompat:
    java.lang.String IANA_TOP_LEVEL_DOMAINS -> IANA_TOP_LEVEL_DOMAINS
    java.util.regex.Pattern IP_ADDRESS -> IP_ADDRESS
    java.lang.String UCS_CHAR -> UCS_CHAR
    java.lang.String LABEL_CHAR -> LABEL_CHAR
    java.lang.String TLD_CHAR -> TLD_CHAR
    java.lang.String IRI_LABEL -> IRI_LABEL
    java.lang.String PUNYCODE_TLD -> PUNYCODE_TLD
    java.lang.String TLD -> TLD
    java.lang.String HOST_NAME -> HOST_NAME
    java.util.regex.Pattern DOMAIN_NAME -> DOMAIN_NAME
    java.lang.String PROTOCOL -> PROTOCOL
    java.lang.String WORD_BOUNDARY -> WORD_BOUNDARY
    java.lang.String USER_INFO -> USER_INFO
    java.lang.String PORT_NUMBER -> PORT_NUMBER
    java.lang.String PATH_AND_QUERY -> PATH_AND_QUERY
    java.util.regex.Pattern WEB_URL -> WEB_URL
    java.lang.String STRICT_TLD -> STRICT_TLD
    java.lang.String STRICT_HOST_NAME -> STRICT_HOST_NAME
    java.util.regex.Pattern STRICT_DOMAIN_NAME -> STRICT_DOMAIN_NAME
    java.lang.String RELAXED_DOMAIN_NAME -> RELAXED_DOMAIN_NAME
    java.lang.String WEB_URL_WITHOUT_PROTOCOL -> WEB_URL_WITHOUT_PROTOCOL
    java.lang.String WEB_URL_WITH_PROTOCOL -> WEB_URL_WITH_PROTOCOL
    java.util.regex.Pattern AUTOLINK_WEB_URL -> AUTOLINK_WEB_URL
    java.lang.String EMAIL_CHAR -> EMAIL_CHAR
    java.lang.String EMAIL_ADDRESS_LOCAL_PART -> EMAIL_ADDRESS_LOCAL_PART
    java.lang.String EMAIL_ADDRESS_DOMAIN -> EMAIL_ADDRESS_DOMAIN
    java.util.regex.Pattern AUTOLINK_EMAIL_ADDRESS -> AUTOLINK_EMAIL_ADDRESS
    java.util.regex.Pattern EMAIL_ADDRESS -> EMAIL_ADDRESS
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.util.Pools -> android.support.v4.util.Pools:
    void <init>() -> <init>
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    void <init>(int) -> <init>
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    boolean isInPool(java.lang.Object) -> isInPool
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    void <init>(int) -> <init>
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Preconditions -> android.support.v4.util.Preconditions:
    void <init>() -> <init>
    void checkArgument(boolean) -> checkArgument
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence) -> checkStringNotEmpty
    java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object) -> checkStringNotEmpty
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    void checkState(boolean,java.lang.String) -> checkState
    void checkState(boolean) -> checkState
    int checkFlagsArgument(int,int) -> checkFlagsArgument
    int checkArgumentNonnegative(int,java.lang.String) -> checkArgumentNonnegative
    int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    long checkArgumentNonnegative(long) -> checkArgumentNonnegative
    long checkArgumentNonnegative(long,java.lang.String) -> checkArgumentNonnegative
    int checkArgumentPositive(int,java.lang.String) -> checkArgumentPositive
    float checkArgumentFinite(float,java.lang.String) -> checkArgumentFinite
    float checkArgumentInRange(float,float,float,java.lang.String) -> checkArgumentInRange
    int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    long checkArgumentInRange(long,long,long,java.lang.String) -> checkArgumentInRange
    java.lang.Object[] checkArrayElementsNotNull(java.lang.Object[],java.lang.String) -> checkArrayElementsNotNull
    java.util.Collection checkCollectionElementsNotNull(java.util.Collection,java.lang.String) -> checkCollectionElementsNotNull
    java.util.Collection checkCollectionNotEmpty(java.util.Collection,java.lang.String) -> checkCollectionNotEmpty
    float[] checkArrayElementsInRange(float[],float,float,java.lang.String) -> checkArrayElementsInRange
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean CONCURRENT_MODIFICATION_EXCEPTIONS -> CONCURRENT_MODIFICATION_EXCEPTIONS
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int binarySearchHashes(int[],int,int) -> binarySearchHashes
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(android.support.v4.util.SimpleArrayMap) -> <init>
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    void <init>() -> <init>
    void <init>(int) -> <init>
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.AbsSavedState -> android.support.v4.view.AbsSavedState:
    android.support.v4.view.AbsSavedState EMPTY_STATE -> EMPTY_STATE
    android.os.Parcelable mSuperState -> mSuperState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    android.os.Parcelable getSuperState() -> getSuperState
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.support.v4.view.AbsSavedState$1) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.AbsSavedState$1 -> android.support.v4.view.AbsSavedState$1:
    void <init>() -> <init>
android.support.v4.view.AbsSavedState$2 -> android.support.v4.view.AbsSavedState$2:
    void <init>() -> <init>
    android.support.v4.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.view.AbsSavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl IMPL -> IMPL
    android.view.View$AccessibilityDelegate DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    android.view.View$AccessibilityDelegate mBridge -> mBridge
    void <init>() -> <init>
    android.view.View$AccessibilityDelegate getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void <clinit>() -> <clinit>
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateApi16Impl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateApi16Impl:
    void <init>() -> <init>
    android.view.View$AccessibilityDelegate newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessibilityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateApi16Impl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateApi16Impl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateApi16Impl this$0 -> this$0
    void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateApi16Impl,android.support.v4.view.AccessibilityDelegateCompat) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl:
    void <init>() -> <init>
    android.view.View$AccessibilityDelegate newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessibilityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl this$0 -> this$0
    void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateBaseImpl,android.support.v4.view.AccessibilityDelegateCompat) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    void <init>(android.content.Context) -> <init>
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    void reset() -> reset
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.AsyncLayoutInflater -> android.support.v4.view.AsyncLayoutInflater:
    java.lang.String TAG -> TAG
    android.view.LayoutInflater mInflater -> mInflater
    android.os.Handler mHandler -> mHandler
    android.support.v4.view.AsyncLayoutInflater$InflateThread mInflateThread -> mInflateThread
    android.os.Handler$Callback mHandlerCallback -> mHandlerCallback
    void <init>(android.content.Context) -> <init>
    void inflate(int,android.view.ViewGroup,android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener) -> inflate
android.support.v4.view.AsyncLayoutInflater$1 -> android.support.v4.view.AsyncLayoutInflater$1:
    android.support.v4.view.AsyncLayoutInflater this$0 -> this$0
    void <init>(android.support.v4.view.AsyncLayoutInflater) -> <init>
    boolean handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.AsyncLayoutInflater$BasicInflater -> android.support.v4.view.AsyncLayoutInflater$BasicInflater:
    java.lang.String[] sClassPrefixList -> sClassPrefixList
    void <init>(android.content.Context) -> <init>
    android.view.LayoutInflater cloneInContext(android.content.Context) -> cloneInContext
    android.view.View onCreateView(java.lang.String,android.util.AttributeSet) -> onCreateView
    void <clinit>() -> <clinit>
android.support.v4.view.AsyncLayoutInflater$InflateRequest -> android.support.v4.view.AsyncLayoutInflater$InflateRequest:
    android.support.v4.view.AsyncLayoutInflater inflater -> inflater
    android.view.ViewGroup parent -> parent
    int resid -> resid
    android.view.View view -> view
    android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener callback -> callback
    void <init>() -> <init>
android.support.v4.view.AsyncLayoutInflater$InflateThread -> android.support.v4.view.AsyncLayoutInflater$InflateThread:
    android.support.v4.view.AsyncLayoutInflater$InflateThread sInstance -> sInstance
    java.util.concurrent.ArrayBlockingQueue mQueue -> mQueue
    android.support.v4.util.Pools$SynchronizedPool mRequestPool -> mRequestPool
    void <init>() -> <init>
    android.support.v4.view.AsyncLayoutInflater$InflateThread getInstance() -> getInstance
    void runInner() -> runInner
    void run() -> run
    android.support.v4.view.AsyncLayoutInflater$InflateRequest obtainRequest() -> obtainRequest
    void releaseRequest(android.support.v4.view.AsyncLayoutInflater$InflateRequest) -> releaseRequest
    void enqueue(android.support.v4.view.AsyncLayoutInflater$InflateRequest) -> enqueue
    void <clinit>() -> <clinit>
android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener -> android.support.v4.view.AsyncLayoutInflater$OnInflateFinishedListener:
    void onInflateFinished(android.view.View,int,android.view.ViewGroup) -> onInflateFinished
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    void <clinit>() -> <clinit>
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void <init>(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> <init>
    void <init>(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void <init>() -> <init>
android.support.v4.view.InputDeviceCompat -> android.support.v4.view.InputDeviceCompat:
    int SOURCE_CLASS_MASK -> SOURCE_CLASS_MASK
    int SOURCE_CLASS_NONE -> SOURCE_CLASS_NONE
    int SOURCE_CLASS_BUTTON -> SOURCE_CLASS_BUTTON
    int SOURCE_CLASS_POINTER -> SOURCE_CLASS_POINTER
    int SOURCE_CLASS_TRACKBALL -> SOURCE_CLASS_TRACKBALL
    int SOURCE_CLASS_POSITION -> SOURCE_CLASS_POSITION
    int SOURCE_CLASS_JOYSTICK -> SOURCE_CLASS_JOYSTICK
    int SOURCE_UNKNOWN -> SOURCE_UNKNOWN
    int SOURCE_KEYBOARD -> SOURCE_KEYBOARD
    int SOURCE_DPAD -> SOURCE_DPAD
    int SOURCE_GAMEPAD -> SOURCE_GAMEPAD
    int SOURCE_TOUCHSCREEN -> SOURCE_TOUCHSCREEN
    int SOURCE_MOUSE -> SOURCE_MOUSE
    int SOURCE_STYLUS -> SOURCE_STYLUS
    int SOURCE_TRACKBALL -> SOURCE_TRACKBALL
    int SOURCE_TOUCHPAD -> SOURCE_TOUCHPAD
    int SOURCE_TOUCH_NAVIGATION -> SOURCE_TOUCH_NAVIGATION
    int SOURCE_ROTARY_ENCODER -> SOURCE_ROTARY_ENCODER
    int SOURCE_JOYSTICK -> SOURCE_JOYSTICK
    int SOURCE_HDMI -> SOURCE_HDMI
    int SOURCE_ANY -> SOURCE_ANY
    void <init>() -> <init>
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    boolean isCtrlPressed(android.view.KeyEvent) -> isCtrlPressed
    void <init>() -> <init>
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.view.LayoutInflaterCompat:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> sLayoutInflaterFactory2Field
    boolean sCheckedField -> sCheckedField
    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatBaseImpl IMPL -> IMPL
    void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
    void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
    android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater) -> getFactory
    void <clinit>() -> <clinit>
android.support.v4.view.LayoutInflaterCompat$Factory2Wrapper -> android.support.v4.view.LayoutInflaterCompat$Factory2Wrapper:
    android.support.v4.view.LayoutInflaterFactory mDelegateFactory -> mDelegateFactory
    void <init>(android.support.v4.view.LayoutInflaterFactory) -> <init>
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    java.lang.String toString() -> toString
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatApi21Impl -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatApi21Impl:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
    void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatBaseImpl -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatBaseImpl:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
    void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
    android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater) -> getFactory
android.support.v4.view.LayoutInflaterFactory -> android.support.v4.view.LayoutInflaterFactory:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    void <init>() -> <init>
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    void <init>() -> <init>
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
    void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
    java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    void setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.MenuItemCompat$1 -> android.support.v4.view.MenuItemCompat$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    void <init>(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> <init>
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuItemCompatApi26Impl -> android.support.v4.view.MenuItemCompat$MenuItemCompatApi26Impl:
    void <init>() -> <init>
    void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
    java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    void setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
android.support.v4.view.MenuItemCompat$MenuItemCompatBaseImpl -> android.support.v4.view.MenuItemCompat$MenuItemCompatBaseImpl:
    void <init>() -> <init>
    void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
    java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    void setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
    java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    void setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int AXIS_X -> AXIS_X
    int AXIS_Y -> AXIS_Y
    int AXIS_PRESSURE -> AXIS_PRESSURE
    int AXIS_SIZE -> AXIS_SIZE
    int AXIS_TOUCH_MAJOR -> AXIS_TOUCH_MAJOR
    int AXIS_TOUCH_MINOR -> AXIS_TOUCH_MINOR
    int AXIS_TOOL_MAJOR -> AXIS_TOOL_MAJOR
    int AXIS_TOOL_MINOR -> AXIS_TOOL_MINOR
    int AXIS_ORIENTATION -> AXIS_ORIENTATION
    int AXIS_VSCROLL -> AXIS_VSCROLL
    int AXIS_HSCROLL -> AXIS_HSCROLL
    int AXIS_Z -> AXIS_Z
    int AXIS_RX -> AXIS_RX
    int AXIS_RY -> AXIS_RY
    int AXIS_RZ -> AXIS_RZ
    int AXIS_HAT_X -> AXIS_HAT_X
    int AXIS_HAT_Y -> AXIS_HAT_Y
    int AXIS_LTRIGGER -> AXIS_LTRIGGER
    int AXIS_RTRIGGER -> AXIS_RTRIGGER
    int AXIS_THROTTLE -> AXIS_THROTTLE
    int AXIS_RUDDER -> AXIS_RUDDER
    int AXIS_WHEEL -> AXIS_WHEEL
    int AXIS_GAS -> AXIS_GAS
    int AXIS_BRAKE -> AXIS_BRAKE
    int AXIS_DISTANCE -> AXIS_DISTANCE
    int AXIS_TILT -> AXIS_TILT
    int AXIS_SCROLL -> AXIS_SCROLL
    int AXIS_RELATIVE_X -> AXIS_RELATIVE_X
    int AXIS_RELATIVE_Y -> AXIS_RELATIVE_Y
    int AXIS_GENERIC_1 -> AXIS_GENERIC_1
    int AXIS_GENERIC_2 -> AXIS_GENERIC_2
    int AXIS_GENERIC_3 -> AXIS_GENERIC_3
    int AXIS_GENERIC_4 -> AXIS_GENERIC_4
    int AXIS_GENERIC_5 -> AXIS_GENERIC_5
    int AXIS_GENERIC_6 -> AXIS_GENERIC_6
    int AXIS_GENERIC_7 -> AXIS_GENERIC_7
    int AXIS_GENERIC_8 -> AXIS_GENERIC_8
    int AXIS_GENERIC_9 -> AXIS_GENERIC_9
    int AXIS_GENERIC_10 -> AXIS_GENERIC_10
    int AXIS_GENERIC_11 -> AXIS_GENERIC_11
    int AXIS_GENERIC_12 -> AXIS_GENERIC_12
    int AXIS_GENERIC_13 -> AXIS_GENERIC_13
    int AXIS_GENERIC_14 -> AXIS_GENERIC_14
    int AXIS_GENERIC_15 -> AXIS_GENERIC_15
    int AXIS_GENERIC_16 -> AXIS_GENERIC_16
    int BUTTON_PRIMARY -> BUTTON_PRIMARY
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getSource(android.view.MotionEvent) -> getSource
    boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
    int getButtonState(android.view.MotionEvent) -> getButtonState
    void <init>() -> <init>
android.support.v4.view.NestedScrollingChild -> android.support.v4.view.NestedScrollingChild:
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
android.support.v4.view.NestedScrollingChild2 -> android.support.v4.view.NestedScrollingChild2:
    boolean startNestedScroll(int,int) -> startNestedScroll
    void stopNestedScroll(int) -> stopNestedScroll
    boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
android.support.v4.view.NestedScrollingChildHelper -> android.support.v4.view.NestedScrollingChildHelper:
    android.view.ViewParent mNestedScrollingParentTouch -> mNestedScrollingParentTouch
    android.view.ViewParent mNestedScrollingParentNonTouch -> mNestedScrollingParentNonTouch
    android.view.View mView -> mView
    boolean mIsNestedScrollingEnabled -> mIsNestedScrollingEnabled
    int[] mTempNestedScrollConsumed -> mTempNestedScrollConsumed
    void <init>(android.view.View) -> <init>
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    boolean startNestedScroll(int) -> startNestedScroll
    boolean startNestedScroll(int,int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    void stopNestedScroll(int) -> stopNestedScroll
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
android.support.v4.view.NestedScrollingParent -> android.support.v4.view.NestedScrollingParent:
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
android.support.v4.view.NestedScrollingParent2 -> android.support.v4.view.NestedScrollingParent2:
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
android.support.v4.view.NestedScrollingParentHelper -> android.support.v4.view.NestedScrollingParentHelper:
    android.view.ViewGroup mViewGroup -> mViewGroup
    int mNestedScrollAxes -> mNestedScrollAxes
    void <init>(android.view.ViewGroup) -> <init>
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    int getNestedScrollAxes() -> getNestedScrollAxes
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
android.support.v4.view.OnApplyWindowInsetsListener -> android.support.v4.view.OnApplyWindowInsetsListener:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    android.database.DataSetObserver mViewPagerObserver -> mViewPagerObserver
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    void <init>() -> <init>
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void <init>(android.support.v4.view.PagerTabStrip) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void <init>(android.support.v4.view.PagerTabStrip) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    void <clinit>() -> <clinit>
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void <init>(android.support.v4.view.PagerTitleStrip) -> <init>
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.ViewPager,android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStrip$SingleLineAllCapsTransform:
    java.util.Locale mLocale -> mLocale
    void <init>(android.content.Context) -> <init>
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.PointerIconCompat -> android.support.v4.view.PointerIconCompat:
    int TYPE_NULL -> TYPE_NULL
    int TYPE_ARROW -> TYPE_ARROW
    int TYPE_CONTEXT_MENU -> TYPE_CONTEXT_MENU
    int TYPE_HAND -> TYPE_HAND
    int TYPE_HELP -> TYPE_HELP
    int TYPE_WAIT -> TYPE_WAIT
    int TYPE_CELL -> TYPE_CELL
    int TYPE_CROSSHAIR -> TYPE_CROSSHAIR
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_VERTICAL_TEXT -> TYPE_VERTICAL_TEXT
    int TYPE_ALIAS -> TYPE_ALIAS
    int TYPE_COPY -> TYPE_COPY
    int TYPE_NO_DROP -> TYPE_NO_DROP
    int TYPE_ALL_SCROLL -> TYPE_ALL_SCROLL
    int TYPE_HORIZONTAL_DOUBLE_ARROW -> TYPE_HORIZONTAL_DOUBLE_ARROW
    int TYPE_VERTICAL_DOUBLE_ARROW -> TYPE_VERTICAL_DOUBLE_ARROW
    int TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW -> TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW
    int TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW -> TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW
    int TYPE_ZOOM_IN -> TYPE_ZOOM_IN
    int TYPE_ZOOM_OUT -> TYPE_ZOOM_OUT
    int TYPE_GRAB -> TYPE_GRAB
    int TYPE_GRABBING -> TYPE_GRABBING
    int TYPE_DEFAULT -> TYPE_DEFAULT
    java.lang.Object mPointerIcon -> mPointerIcon
    void <init>(java.lang.Object) -> <init>
    java.lang.Object getPointerIcon() -> getPointerIcon
    android.support.v4.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> getSystemIcon
    android.support.v4.view.PointerIconCompat create(android.graphics.Bitmap,float,float) -> create
    android.support.v4.view.PointerIconCompat load(android.content.res.Resources,int) -> load
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    void <init>() -> <init>
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    void setQuickScaleEnabled(android.view.ScaleGestureDetector,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    boolean isQuickScaleEnabled(android.view.ScaleGestureDetector) -> isQuickScaleEnabled
android.support.v4.view.ScrollingView -> android.support.v4.view.ScrollingView:
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
android.support.v4.view.TintableBackgroundView -> android.support.v4.view.TintableBackgroundView:
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
    void <init>() -> <init>
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    java.lang.String TAG -> TAG
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    int SCROLL_AXIS_NONE -> SCROLL_AXIS_NONE
    int SCROLL_AXIS_HORIZONTAL -> SCROLL_AXIS_HORIZONTAL
    int SCROLL_AXIS_VERTICAL -> SCROLL_AXIS_VERTICAL
    int TYPE_TOUCH -> TYPE_TOUCH
    int TYPE_NON_TOUCH -> TYPE_NON_TOUCH
    int SCROLL_INDICATOR_TOP -> SCROLL_INDICATOR_TOP
    int SCROLL_INDICATOR_BOTTOM -> SCROLL_INDICATOR_BOTTOM
    int SCROLL_INDICATOR_LEFT -> SCROLL_INDICATOR_LEFT
    int SCROLL_INDICATOR_RIGHT -> SCROLL_INDICATOR_RIGHT
    int SCROLL_INDICATOR_START -> SCROLL_INDICATOR_START
    int SCROLL_INDICATOR_END -> SCROLL_INDICATOR_END
    android.support.v4.view.ViewCompat$ViewCompatBaseImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    android.graphics.Matrix getMatrix(android.view.View) -> getMatrix
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean startNestedScroll(android.view.View,int,int) -> startNestedScroll
    void stopNestedScroll(android.view.View,int) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View,int) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isInLayout(android.view.View) -> isInLayout
    boolean isLaidOut(android.view.View) -> isLaidOut
    boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    float getZ(android.view.View) -> getZ
    void setZ(android.view.View,float) -> setZ
    void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    int getScrollIndicators(android.view.View) -> getScrollIndicators
    void setPointerIcon(android.view.View,android.support.v4.view.PointerIconCompat) -> setPointerIcon
    android.view.Display getDisplay(android.view.View) -> getDisplay
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> startDragAndDrop
    void cancelDragAndDrop(android.view.View) -> cancelDragAndDrop
    void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> updateDragShadow
    int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$FocusDirection -> android.support.v4.view.ViewCompat$FocusDirection:
android.support.v4.view.ViewCompat$FocusRealDirection -> android.support.v4.view.ViewCompat$FocusRealDirection:
android.support.v4.view.ViewCompat$FocusRelativeDirection -> android.support.v4.view.ViewCompat$FocusRelativeDirection:
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$NestedScrollType -> android.support.v4.view.ViewCompat$NestedScrollType:
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ScrollAxis -> android.support.v4.view.ViewCompat$ScrollAxis:
android.support.v4.view.ViewCompat$ScrollIndicators -> android.support.v4.view.ViewCompat$ScrollIndicators:
android.support.v4.view.ViewCompat$ViewCompatApi15Impl -> android.support.v4.view.ViewCompat$ViewCompatApi15Impl:
    void <init>() -> <init>
    boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
android.support.v4.view.ViewCompat$ViewCompatApi16Impl -> android.support.v4.view.ViewCompat$ViewCompatApi16Impl:
    void <init>() -> <init>
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
android.support.v4.view.ViewCompat$ViewCompatApi17Impl -> android.support.v4.view.ViewCompat$ViewCompatApi17Impl:
    void <init>() -> <init>
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    android.view.Display getDisplay(android.view.View) -> getDisplay
android.support.v4.view.ViewCompat$ViewCompatApi18Impl -> android.support.v4.view.ViewCompat$ViewCompatApi18Impl:
    void <init>() -> <init>
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    boolean isInLayout(android.view.View) -> isInLayout
android.support.v4.view.ViewCompat$ViewCompatApi19Impl -> android.support.v4.view.ViewCompat$ViewCompatApi19Impl:
    void <init>() -> <init>
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isLaidOut(android.view.View) -> isLaidOut
    boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompat$ViewCompatApi21Impl -> android.support.v4.view.ViewCompat$ViewCompatApi21Impl:
    java.lang.ThreadLocal sThreadLocalRect -> sThreadLocalRect
    void <init>() -> <init>
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    float getZ(android.view.View) -> getZ
    void setZ(android.view.View,float) -> setZ
    void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
android.support.v4.view.ViewCompat$ViewCompatApi21Impl$1 -> android.support.v4.view.ViewCompat$ViewCompatApi21Impl$1:
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> val$listener
    android.support.v4.view.ViewCompat$ViewCompatApi21Impl this$0 -> this$0
    void <init>(android.support.v4.view.ViewCompat$ViewCompatApi21Impl,android.support.v4.view.OnApplyWindowInsetsListener) -> <init>
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.view.ViewCompat$ViewCompatApi23Impl -> android.support.v4.view.ViewCompat$ViewCompatApi23Impl:
    void <init>() -> <init>
    void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    int getScrollIndicators(android.view.View) -> getScrollIndicators
    void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
android.support.v4.view.ViewCompat$ViewCompatApi24Impl -> android.support.v4.view.ViewCompat$ViewCompatApi24Impl:
    void <init>() -> <init>
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    void setPointerIcon(android.view.View,android.support.v4.view.PointerIconCompat) -> setPointerIcon
    boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> startDragAndDrop
    void cancelDragAndDrop(android.view.View) -> cancelDragAndDrop
    void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> updateDragShadow
android.support.v4.view.ViewCompat$ViewCompatApi26Impl -> android.support.v4.view.ViewCompat$ViewCompatApi26Impl:
    void <init>() -> <init>
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
android.support.v4.view.ViewCompat$ViewCompatBaseImpl -> android.support.v4.view.ViewCompat$ViewCompatBaseImpl:
    java.lang.reflect.Field sMinWidthField -> sMinWidthField
    boolean sMinWidthFieldFetched -> sMinWidthFieldFetched
    java.lang.reflect.Field sMinHeightField -> sMinHeightField
    boolean sMinHeightFieldFetched -> sMinHeightFieldFetched
    java.util.WeakHashMap sTransitionNameMap -> sTransitionNameMap
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> mDispatchStartTemporaryDetach
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> mDispatchFinishTemporaryDetach
    boolean mTempDetachBound -> mTempDetachBound
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> sChildrenDrawingOrderMethod
    java.lang.reflect.Field sAccessibilityDelegateField -> sAccessibilityDelegateField
    boolean sAccessibilityDelegateCheckFailed -> sAccessibilityDelegateCheckFailed
    void <init>() -> <init>
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> startDragAndDrop
    void cancelDragAndDrop(android.view.View) -> cancelDragAndDrop
    void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> updateDragShadow
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    void bindTempDetach() -> bindTempDetach
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isInLayout(android.view.View) -> isInLayout
    boolean isLaidOut(android.view.View) -> isLaidOut
    boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    float getZ(android.view.View) -> getZ
    void setZ(android.view.View,float) -> setZ
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    int getScrollIndicators(android.view.View) -> getScrollIndicators
    void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
    void setPointerIcon(android.view.View,android.support.v4.view.PointerIconCompat) -> setPointerIcon
    android.view.Display getDisplay(android.view.View) -> getDisplay
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    void <clinit>() -> <clinit>
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScaledScrollFactorMethod -> sGetScaledScrollFactorMethod
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
    float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatBaseImpl IMPL -> IMPL
    void <init>() -> <init>
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    void <clinit>() -> <clinit>
android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi18Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi18Impl:
    void <init>() -> <init>
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi21Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi21Impl:
    void <init>() -> <init>
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewGroupCompat$ViewGroupCompatBaseImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatBaseImpl:
    void <init>() -> <init>
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    boolean mIsScrollStarted -> mIsScrollStarted
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.widget.EdgeEffect mLeftEdge -> mLeftEdge
    android.widget.EdgeEffect mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    java.util.List mOnPageChangeListeners -> mOnPageChangeListeners
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    java.util.List mAdapterChangeListeners -> mAdapterChangeListeners
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    int mPageTransformerLayerType -> mPageTransformerLayerType
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void addOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    void removeOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    void removeOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    void clearOnPageChangeListeners() -> clearOnPageChangeListeners
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer,int) -> setPageTransformer
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean isDecorView(android.view.View) -> isDecorView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean resetTouch() -> resetTouch
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void <clinit>() -> <clinit>
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    void <init>() -> <init>
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void <init>(android.support.v4.view.ViewPager) -> <init>
    void run() -> run
android.support.v4.view.ViewPager$4 -> android.support.v4.view.ViewPager$4:
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.ViewPager this$0 -> this$0
    void <init>(android.support.v4.view.ViewPager) -> <init>
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v4.view.ViewPager$DecorView -> android.support.v4.view.ViewPager$DecorView:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
    void <init>() -> <init>
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void <init>(android.support.v4.view.ViewPager) -> <init>
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.ViewPager,android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void <init>(android.support.v4.view.ViewPager) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    void <init>() -> <init>
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void <init>() -> <init>
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    void <init>() -> <init>
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewParentCompat$ViewParentCompatBaseImpl IMPL -> IMPL
    void <init>() -> <init>
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    void <clinit>() -> <clinit>
android.support.v4.view.ViewParentCompat$ViewParentCompatApi19Impl -> android.support.v4.view.ViewParentCompat$ViewParentCompatApi19Impl:
    void <init>() -> <init>
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompat$ViewParentCompatApi21Impl -> android.support.v4.view.ViewParentCompat$ViewParentCompatApi21Impl:
    void <init>() -> <init>
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
android.support.v4.view.ViewParentCompat$ViewParentCompatBaseImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatBaseImpl:
    void <init>() -> <init>
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.String TAG -> TAG
    java.lang.ref.WeakReference mView -> mView
    java.lang.Runnable mStartAction -> mStartAction
    java.lang.Runnable mEndAction -> mEndAction
    int mOldLayerType -> mOldLayerType
    int LISTENER_TAG_ID -> LISTENER_TAG_ID
    void <init>(android.view.View) -> <init>
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationZBy(float) -> translationZBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationZ(float) -> translationZ
    android.support.v4.view.ViewPropertyAnimatorCompat z(float) -> z
    android.support.v4.view.ViewPropertyAnimatorCompat zBy(float) -> zBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setListenerInternal(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListenerInternal
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    android.support.v4.view.ViewPropertyAnimatorCompat this$0 -> this$0
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompat$2 -> android.support.v4.view.ViewPropertyAnimatorCompat$2:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> val$listener
    android.view.View val$view -> val$view
    android.support.v4.view.ViewPropertyAnimatorCompat this$0 -> this$0
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14:
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    boolean mAnimEndCalled -> mAnimEndCalled
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.view.ViewPropertyAnimatorListenerAdapter:
    void <init>() -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> android.support.v4.view.ViewPropertyAnimatorUpdateListener:
    void onAnimationUpdate(android.view.View) -> onAnimationUpdate
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
    void <init>() -> <init>
android.support.v4.view.WindowInsetsCompat -> android.support.v4.view.WindowInsetsCompat:
    java.lang.Object mInsets -> mInsets
    void <init>(java.lang.Object) -> <init>
    void <init>(android.support.v4.view.WindowInsetsCompat) -> <init>
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    android.support.v4.view.WindowInsetsCompat wrap(java.lang.Object) -> wrap
    java.lang.Object unwrap(android.support.v4.view.WindowInsetsCompat) -> unwrap
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventCompatBaseImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPE_WINDOWS_CHANGED -> TYPE_WINDOWS_CHANGED
    int TYPE_VIEW_CONTEXT_CLICKED -> TYPE_VIEW_CONTEXT_CLICKED
    int TYPE_ASSIST_READING_CONTEXT -> TYPE_ASSIST_READING_CONTEXT
    int CONTENT_CHANGE_TYPE_UNDEFINED -> CONTENT_CHANGE_TYPE_UNDEFINED
    int CONTENT_CHANGE_TYPE_SUBTREE -> CONTENT_CHANGE_TYPE_SUBTREE
    int CONTENT_CHANGE_TYPE_TEXT -> CONTENT_CHANGE_TYPE_TEXT
    int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION -> CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    void <init>() -> <init>
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int) -> setMovementGranularity
    int getMovementGranularity(android.view.accessibility.AccessibilityEvent) -> getMovementGranularity
    void setAction(android.view.accessibility.AccessibilityEvent,int) -> setAction
    int getAction(android.view.accessibility.AccessibilityEvent) -> getAction
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventCompatApi16Impl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventCompatApi16Impl:
    void <init>() -> <init>
    void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int) -> setMovementGranularity
    int getMovementGranularity(android.view.accessibility.AccessibilityEvent) -> getMovementGranularity
    void setAction(android.view.accessibility.AccessibilityEvent,int) -> setAction
    int getAction(android.view.accessibility.AccessibilityEvent) -> getAction
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventCompatApi19Impl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventCompatApi19Impl:
    void <init>() -> <init>
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventCompatBaseImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventCompatBaseImpl:
    void <init>() -> <init>
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int) -> setMovementGranularity
    int getMovementGranularity(android.view.accessibility.AccessibilityEvent) -> getMovementGranularity
    void setAction(android.view.accessibility.AccessibilityEvent,int) -> setAction
    int getAction(android.view.accessibility.AccessibilityEvent) -> getAction
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListener
    boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListener
    void <init>() -> <init>
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    void <init>() -> <init>
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener mListener -> mListener
    void <init>(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener -> android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener:
    void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener mListener -> mListener
    void <init>(android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoBaseImpl IMPL -> IMPL
    android.view.accessibility.AccessibilityNodeInfo mInfo -> mInfo
    int mParentVirtualDescendantId -> mParentVirtualDescendantId
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    int ACTION_EXPAND -> ACTION_EXPAND
    int ACTION_COLLAPSE -> ACTION_COLLAPSE
    int ACTION_DISMISS -> ACTION_DISMISS
    int ACTION_SET_TEXT -> ACTION_SET_TEXT
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE -> ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    java.lang.String ACTION_ARGUMENT_ROW_INT -> ACTION_ARGUMENT_ROW_INT
    java.lang.String ACTION_ARGUMENT_COLUMN_INT -> ACTION_ARGUMENT_COLUMN_INT
    java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE -> ACTION_ARGUMENT_PROGRESS_VALUE
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    void <init>(java.lang.Object) -> <init>
    void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
    android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    boolean removeChild(android.view.View) -> removeChild
    boolean removeChild(android.view.View,int) -> removeChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    void addAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    boolean removeAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    boolean isImportantForAccessibility() -> isImportantForAccessibility
    void setImportantForAccessibility(boolean) -> setImportantForAccessibility
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int getDrawingOrder() -> getDrawingOrder
    void setDrawingOrder(int) -> setDrawingOrder
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    void setRangeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> setRangeInfo
    java.util.List getActionList() -> getActionList
    void setContentInvalid(boolean) -> setContentInvalid
    boolean isContentInvalid() -> isContentInvalid
    boolean isContextClickable() -> isContextClickable
    void setContextClickable(boolean) -> setContextClickable
    void setError(java.lang.CharSequence) -> setError
    java.lang.CharSequence getError() -> getError
    void setLabelFor(android.view.View) -> setLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getLabelFor() -> getLabelFor
    void setLabeledBy(android.view.View) -> setLabeledBy
    void setLabeledBy(android.view.View,int) -> setLabeledBy
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy() -> getLabeledBy
    boolean canOpenPopup() -> canOpenPopup
    void setCanOpenPopup(boolean) -> setCanOpenPopup
    java.util.List findAccessibilityNodeInfosByViewId(java.lang.String) -> findAccessibilityNodeInfosByViewId
    android.os.Bundle getExtras() -> getExtras
    int getInputType() -> getInputType
    void setInputType(int) -> setInputType
    void setMaxTextLength(int) -> setMaxTextLength
    int getMaxTextLength() -> getMaxTextLength
    void setTextSelection(int,int) -> setTextSelection
    int getTextSelectionStart() -> getTextSelectionStart
    int getTextSelectionEnd() -> getTextSelectionEnd
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore() -> getTraversalBefore
    void setTraversalBefore(android.view.View) -> setTraversalBefore
    void setTraversalBefore(android.view.View,int) -> setTraversalBefore
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter() -> getTraversalAfter
    void setTraversalAfter(android.view.View) -> setTraversalAfter
    void setTraversalAfter(android.view.View,int) -> setTraversalAfter
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat getWindow() -> getWindow
    boolean isDismissable() -> isDismissable
    void setDismissable(boolean) -> setDismissable
    boolean isEditable() -> isEditable
    void setEditable(boolean) -> setEditable
    boolean isMultiLine() -> isMultiLine
    void setMultiLine(boolean) -> setMultiLine
    boolean refresh() -> refresh
    java.lang.CharSequence getRoleDescription() -> getRoleDescription
    void setRoleDescription(java.lang.CharSequence) -> setRoleDescription
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS -> ACTION_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT -> ACTION_SELECT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK -> ACTION_CLICK
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY -> ACTION_COPY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE -> ACTION_PASTE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT -> ACTION_CUT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND -> ACTION_EXPAND
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE -> ACTION_COLLAPSE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS -> ACTION_DISMISS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT -> ACTION_SET_TEXT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN -> ACTION_SHOW_ON_SCREEN
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION -> ACTION_SCROLL_TO_POSITION
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP -> ACTION_SCROLL_UP
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT -> ACTION_SCROLL_LEFT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN -> ACTION_SCROLL_DOWN
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT -> ACTION_SCROLL_RIGHT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK -> ACTION_CONTEXT_CLICK
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS -> ACTION_SET_PROGRESS
    java.lang.Object mAction -> mAction
    void <init>(int,java.lang.CharSequence) -> <init>
    void <init>(java.lang.Object) -> <init>
    int getId() -> getId
    java.lang.CharSequence getLabel() -> getLabel
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi16Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi16Impl:
    void <init>() -> <init>
    android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(android.view.accessibility.AccessibilityNodeInfo,int) -> findFocus
    java.lang.Object focusSearch(android.view.accessibility.AccessibilityNodeInfo,int) -> focusSearch
    void addChild(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> addChild
    void setSource(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> setSource
    boolean isVisibleToUser(android.view.accessibility.AccessibilityNodeInfo) -> isVisibleToUser
    void setVisibleToUser(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(android.view.accessibility.AccessibilityNodeInfo) -> isAccessibilityFocused
    void setAccessibilityFocused(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setAccessibilityFocused
    boolean performAction(android.view.accessibility.AccessibilityNodeInfo,int,android.os.Bundle) -> performAction
    void setMovementGranularities(android.view.accessibility.AccessibilityNodeInfo,int) -> setMovementGranularities
    int getMovementGranularities(android.view.accessibility.AccessibilityNodeInfo) -> getMovementGranularities
    void setParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi17Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi17Impl:
    void <init>() -> <init>
    void setLabelFor(android.view.accessibility.AccessibilityNodeInfo,android.view.View) -> setLabelFor
    void setLabelFor(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> setLabelFor
    java.lang.Object getLabelFor(android.view.accessibility.AccessibilityNodeInfo) -> getLabelFor
    void setLabeledBy(android.view.accessibility.AccessibilityNodeInfo,android.view.View) -> setLabeledBy
    void setLabeledBy(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> setLabeledBy
    java.lang.Object getLabeledBy(android.view.accessibility.AccessibilityNodeInfo) -> getLabeledBy
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi18Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi18Impl:
    void <init>() -> <init>
    java.lang.String getViewIdResourceName(android.view.accessibility.AccessibilityNodeInfo) -> getViewIdResourceName
    void setViewIdResourceName(android.view.accessibility.AccessibilityNodeInfo,java.lang.String) -> setViewIdResourceName
    java.util.List findAccessibilityNodeInfosByViewId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String) -> findAccessibilityNodeInfosByViewId
    void setTextSelection(android.view.accessibility.AccessibilityNodeInfo,int,int) -> setTextSelection
    int getTextSelectionStart(android.view.accessibility.AccessibilityNodeInfo) -> getTextSelectionStart
    int getTextSelectionEnd(android.view.accessibility.AccessibilityNodeInfo) -> getTextSelectionEnd
    boolean isEditable(android.view.accessibility.AccessibilityNodeInfo) -> isEditable
    void setEditable(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setEditable
    boolean refresh(android.view.accessibility.AccessibilityNodeInfo) -> refresh
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi19Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi19Impl:
    java.lang.String ROLE_DESCRIPTION_KEY -> ROLE_DESCRIPTION_KEY
    void <init>() -> <init>
    int getLiveRegion(android.view.accessibility.AccessibilityNodeInfo) -> getLiveRegion
    void setLiveRegion(android.view.accessibility.AccessibilityNodeInfo,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(android.view.accessibility.AccessibilityNodeInfo) -> getCollectionInfo
    void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo,java.lang.Object) -> setCollectionInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> obtainCollectionItemInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object getCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo) -> getCollectionItemInfo
    java.lang.Object getRangeInfo(android.view.accessibility.AccessibilityNodeInfo) -> getRangeInfo
    void setRangeInfo(android.view.accessibility.AccessibilityNodeInfo,java.lang.Object) -> setRangeInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object obtainRangeInfo(int,float,float,float) -> obtainRangeInfo
    void setContentInvalid(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setContentInvalid
    boolean isContentInvalid(android.view.accessibility.AccessibilityNodeInfo) -> isContentInvalid
    boolean canOpenPopup(android.view.accessibility.AccessibilityNodeInfo) -> canOpenPopup
    void setCanOpenPopup(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setCanOpenPopup
    android.os.Bundle getExtras(android.view.accessibility.AccessibilityNodeInfo) -> getExtras
    int getInputType(android.view.accessibility.AccessibilityNodeInfo) -> getInputType
    void setInputType(android.view.accessibility.AccessibilityNodeInfo,int) -> setInputType
    boolean isDismissable(android.view.accessibility.AccessibilityNodeInfo) -> isDismissable
    void setDismissable(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setDismissable
    boolean isMultiLine(android.view.accessibility.AccessibilityNodeInfo) -> isMultiLine
    void setMultiLine(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setMultiLine
    java.lang.CharSequence getRoleDescription(android.view.accessibility.AccessibilityNodeInfo) -> getRoleDescription
    void setRoleDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence) -> setRoleDescription
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl:
    void <init>() -> <init>
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.util.List getActionList(android.view.accessibility.AccessibilityNodeInfo) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    void addAction(android.view.accessibility.AccessibilityNodeInfo,java.lang.Object) -> addAction
    boolean removeAction(android.view.accessibility.AccessibilityNodeInfo,java.lang.Object) -> removeAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    java.lang.CharSequence getError(android.view.accessibility.AccessibilityNodeInfo) -> getError
    void setError(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence) -> setError
    void setMaxTextLength(android.view.accessibility.AccessibilityNodeInfo,int) -> setMaxTextLength
    int getMaxTextLength(android.view.accessibility.AccessibilityNodeInfo) -> getMaxTextLength
    java.lang.Object getWindow(android.view.accessibility.AccessibilityNodeInfo) -> getWindow
    boolean removeChild(android.view.accessibility.AccessibilityNodeInfo,android.view.View) -> removeChild
    boolean removeChild(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> removeChild
    int getCollectionInfoSelectionMode(java.lang.Object) -> getCollectionInfoSelectionMode
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl:
    void <init>() -> <init>
    java.lang.Object getTraversalBefore(android.view.accessibility.AccessibilityNodeInfo) -> getTraversalBefore
    void setTraversalBefore(android.view.accessibility.AccessibilityNodeInfo,android.view.View) -> setTraversalBefore
    void setTraversalBefore(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> setTraversalBefore
    java.lang.Object getTraversalAfter(android.view.accessibility.AccessibilityNodeInfo) -> getTraversalAfter
    void setTraversalAfter(android.view.accessibility.AccessibilityNodeInfo,android.view.View) -> setTraversalAfter
    void setTraversalAfter(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> setTraversalAfter
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi23Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi23Impl:
    void <init>() -> <init>
    java.lang.Object getActionScrollToPosition() -> getActionScrollToPosition
    java.lang.Object getActionShowOnScreen() -> getActionShowOnScreen
    java.lang.Object getActionScrollUp() -> getActionScrollUp
    java.lang.Object getActionScrollDown() -> getActionScrollDown
    java.lang.Object getActionScrollLeft() -> getActionScrollLeft
    java.lang.Object getActionScrollRight() -> getActionScrollRight
    java.lang.Object getActionContextClick() -> getActionContextClick
    boolean isContextClickable(android.view.accessibility.AccessibilityNodeInfo) -> isContextClickable
    void setContextClickable(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setContextClickable
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi24Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi24Impl:
    void <init>() -> <init>
    java.lang.Object getActionSetProgress() -> getActionSetProgress
    int getDrawingOrder(android.view.accessibility.AccessibilityNodeInfo) -> getDrawingOrder
    void setDrawingOrder(android.view.accessibility.AccessibilityNodeInfo,int) -> setDrawingOrder
    boolean isImportantForAccessibility(android.view.accessibility.AccessibilityNodeInfo) -> isImportantForAccessibility
    void setImportantForAccessibility(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setImportantForAccessibility
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoBaseImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoBaseImpl:
    void <init>() -> <init>
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View,int) -> obtain
    void addAction(android.view.accessibility.AccessibilityNodeInfo,java.lang.Object) -> addAction
    boolean removeAction(android.view.accessibility.AccessibilityNodeInfo,java.lang.Object) -> removeAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    void addChild(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> addChild
    boolean removeChild(android.view.accessibility.AccessibilityNodeInfo,android.view.View) -> removeChild
    boolean removeChild(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> removeChild
    boolean isVisibleToUser(android.view.accessibility.AccessibilityNodeInfo) -> isVisibleToUser
    boolean isAccessibilityFocused(android.view.accessibility.AccessibilityNodeInfo) -> isAccessibilityFocused
    boolean performAction(android.view.accessibility.AccessibilityNodeInfo,int,android.os.Bundle) -> performAction
    void setMovementGranularities(android.view.accessibility.AccessibilityNodeInfo,int) -> setMovementGranularities
    int getMovementGranularities(android.view.accessibility.AccessibilityNodeInfo) -> getMovementGranularities
    void setVisibleToUser(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setVisibleToUser
    void setAccessibilityFocused(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setAccessibilityFocused
    void setSource(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> setSource
    java.lang.Object findFocus(android.view.accessibility.AccessibilityNodeInfo,int) -> findFocus
    java.lang.Object focusSearch(android.view.accessibility.AccessibilityNodeInfo,int) -> focusSearch
    void setParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(android.view.accessibility.AccessibilityNodeInfo) -> getViewIdResourceName
    void setViewIdResourceName(android.view.accessibility.AccessibilityNodeInfo,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(android.view.accessibility.AccessibilityNodeInfo) -> getLiveRegion
    void setLiveRegion(android.view.accessibility.AccessibilityNodeInfo,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(android.view.accessibility.AccessibilityNodeInfo) -> getCollectionInfo
    void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo) -> getCollectionItemInfo
    void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(android.view.accessibility.AccessibilityNodeInfo) -> getRangeInfo
    void setRangeInfo(android.view.accessibility.AccessibilityNodeInfo,java.lang.Object) -> setRangeInfo
    java.util.List getActionList(android.view.accessibility.AccessibilityNodeInfo) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    java.lang.Object obtainRangeInfo(int,float,float,float) -> obtainRangeInfo
    java.lang.Object getTraversalBefore(android.view.accessibility.AccessibilityNodeInfo) -> getTraversalBefore
    void setTraversalBefore(android.view.accessibility.AccessibilityNodeInfo,android.view.View) -> setTraversalBefore
    void setTraversalBefore(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> setTraversalBefore
    java.lang.Object getTraversalAfter(android.view.accessibility.AccessibilityNodeInfo) -> getTraversalAfter
    void setTraversalAfter(android.view.accessibility.AccessibilityNodeInfo,android.view.View) -> setTraversalAfter
    void setTraversalAfter(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> setTraversalAfter
    void setContentInvalid(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setContentInvalid
    boolean isContentInvalid(android.view.accessibility.AccessibilityNodeInfo) -> isContentInvalid
    void setError(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence) -> setError
    java.lang.CharSequence getError(android.view.accessibility.AccessibilityNodeInfo) -> getError
    void setLabelFor(android.view.accessibility.AccessibilityNodeInfo,android.view.View) -> setLabelFor
    void setLabelFor(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> setLabelFor
    java.lang.Object getLabelFor(android.view.accessibility.AccessibilityNodeInfo) -> getLabelFor
    void setLabeledBy(android.view.accessibility.AccessibilityNodeInfo,android.view.View) -> setLabeledBy
    void setLabeledBy(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int) -> setLabeledBy
    java.lang.Object getLabeledBy(android.view.accessibility.AccessibilityNodeInfo) -> getLabeledBy
    boolean canOpenPopup(android.view.accessibility.AccessibilityNodeInfo) -> canOpenPopup
    void setCanOpenPopup(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setCanOpenPopup
    java.util.List findAccessibilityNodeInfosByViewId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String) -> findAccessibilityNodeInfosByViewId
    android.os.Bundle getExtras(android.view.accessibility.AccessibilityNodeInfo) -> getExtras
    int getInputType(android.view.accessibility.AccessibilityNodeInfo) -> getInputType
    void setInputType(android.view.accessibility.AccessibilityNodeInfo,int) -> setInputType
    void setMaxTextLength(android.view.accessibility.AccessibilityNodeInfo,int) -> setMaxTextLength
    int getMaxTextLength(android.view.accessibility.AccessibilityNodeInfo) -> getMaxTextLength
    void setTextSelection(android.view.accessibility.AccessibilityNodeInfo,int,int) -> setTextSelection
    int getTextSelectionStart(android.view.accessibility.AccessibilityNodeInfo) -> getTextSelectionStart
    int getTextSelectionEnd(android.view.accessibility.AccessibilityNodeInfo) -> getTextSelectionEnd
    java.lang.Object getWindow(android.view.accessibility.AccessibilityNodeInfo) -> getWindow
    boolean isDismissable(android.view.accessibility.AccessibilityNodeInfo) -> isDismissable
    void setDismissable(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setDismissable
    boolean isEditable(android.view.accessibility.AccessibilityNodeInfo) -> isEditable
    void setEditable(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setEditable
    boolean isMultiLine(android.view.accessibility.AccessibilityNodeInfo) -> isMultiLine
    void setMultiLine(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setMultiLine
    boolean refresh(android.view.accessibility.AccessibilityNodeInfo) -> refresh
    java.lang.CharSequence getRoleDescription(android.view.accessibility.AccessibilityNodeInfo) -> getRoleDescription
    void setRoleDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence) -> setRoleDescription
    java.lang.Object getActionScrollToPosition() -> getActionScrollToPosition
    java.lang.Object getActionSetProgress() -> getActionSetProgress
    boolean isContextClickable(android.view.accessibility.AccessibilityNodeInfo) -> isContextClickable
    void setContextClickable(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setContextClickable
    java.lang.Object getActionShowOnScreen() -> getActionShowOnScreen
    java.lang.Object getActionScrollUp() -> getActionScrollUp
    java.lang.Object getActionScrollDown() -> getActionScrollDown
    java.lang.Object getActionScrollLeft() -> getActionScrollLeft
    java.lang.Object getActionScrollRight() -> getActionScrollRight
    java.lang.Object getActionContextClick() -> getActionContextClick
    int getCollectionInfoSelectionMode(java.lang.Object) -> getCollectionInfoSelectionMode
    int getDrawingOrder(android.view.accessibility.AccessibilityNodeInfo) -> getDrawingOrder
    void setDrawingOrder(android.view.accessibility.AccessibilityNodeInfo,int) -> setDrawingOrder
    boolean isImportantForAccessibility(android.view.accessibility.AccessibilityNodeInfo) -> isImportantForAccessibility
    void setImportantForAccessibility(android.view.accessibility.AccessibilityNodeInfo,boolean) -> setImportantForAccessibility
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    int SELECTION_MODE_NONE -> SELECTION_MODE_NONE
    int SELECTION_MODE_SINGLE -> SELECTION_MODE_SINGLE
    int SELECTION_MODE_MULTIPLE -> SELECTION_MODE_MULTIPLE
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean) -> obtain
    void <init>(java.lang.Object) -> <init>
    int getColumnCount() -> getColumnCount
    int getRowCount() -> getRowCount
    boolean isHierarchical() -> isHierarchical
    int getSelectionMode() -> getSelectionMode
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean) -> obtain
    void <init>(java.lang.Object) -> <init>
    int getColumnIndex() -> getColumnIndex
    int getColumnSpan() -> getColumnSpan
    int getRowIndex() -> getRowIndex
    int getRowSpan() -> getRowSpan
    boolean isHeading() -> isHeading
    boolean isSelected() -> isSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    int RANGE_TYPE_INT -> RANGE_TYPE_INT
    int RANGE_TYPE_FLOAT -> RANGE_TYPE_FLOAT
    int RANGE_TYPE_PERCENT -> RANGE_TYPE_PERCENT
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float) -> obtain
    void <init>(java.lang.Object) -> <init>
    float getCurrent() -> getCurrent
    float getMax() -> getMax
    float getMin() -> getMin
    int getType() -> getType
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    void <init>() -> <init>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo:
    void <init>() -> <init>
    float getCurrent(java.lang.Object) -> getCurrent
    float getMax(java.lang.Object) -> getMax
    float getMin(java.lang.Object) -> getMin
    int getType(java.lang.Object) -> getType
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    int HOST_VIEW_ID -> HOST_VIEW_ID
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    void <init>() -> <init>
    void <init>(java.lang.Object) -> <init>
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl,android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl,android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> <init>
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> <init>
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordCompatBaseImpl IMPL -> IMPL
    android.view.accessibility.AccessibilityRecord mRecord -> mRecord
    void <init>(java.lang.Object) -> <init>
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    int getMaxScrollX(android.view.accessibility.AccessibilityRecord) -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    int getMaxScrollY(android.view.accessibility.AccessibilityRecord) -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordCompatApi15Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordCompatApi15Impl:
    void <init>() -> <init>
    int getMaxScrollX(android.view.accessibility.AccessibilityRecord) -> getMaxScrollX
    int getMaxScrollY(android.view.accessibility.AccessibilityRecord) -> getMaxScrollY
    void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordCompatApi16Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordCompatApi16Impl:
    void <init>() -> <init>
    void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordCompatBaseImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordCompatBaseImpl:
    void <init>() -> <init>
    int getMaxScrollX(android.view.accessibility.AccessibilityRecord) -> getMaxScrollX
    int getMaxScrollY(android.view.accessibility.AccessibilityRecord) -> getMaxScrollY
    void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityWindowInfoCompat -> android.support.v4.view.accessibility.AccessibilityWindowInfoCompat:
    java.lang.Object mInfo -> mInfo
    int UNDEFINED -> UNDEFINED
    int TYPE_APPLICATION -> TYPE_APPLICATION
    int TYPE_INPUT_METHOD -> TYPE_INPUT_METHOD
    int TYPE_SYSTEM -> TYPE_SYSTEM
    int TYPE_ACCESSIBILITY_OVERLAY -> TYPE_ACCESSIBILITY_OVERLAY
    int TYPE_SPLIT_SCREEN_DIVIDER -> TYPE_SPLIT_SCREEN_DIVIDER
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    void <init>(java.lang.Object) -> <init>
    int getType() -> getType
    int getLayer() -> getLayer
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getRoot() -> getRoot
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat getParent() -> getParent
    int getId() -> getId
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    boolean isActive() -> isActive
    boolean isFocused() -> isFocused
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat getChild(int) -> getChild
    java.lang.CharSequence getTitle() -> getTitle
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getAnchor() -> getAnchor
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityWindowInfoCompat) -> obtain
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String typeToString(int) -> typeToString
android.support.v4.view.animation.FastOutLinearInInterpolator -> android.support.v4.view.animation.FastOutLinearInInterpolator:
    float[] VALUES -> VALUES
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
    void <clinit>() -> <clinit>
android.support.v4.view.animation.FastOutSlowInInterpolator -> android.support.v4.view.animation.FastOutSlowInInterpolator:
    float[] VALUES -> VALUES
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
    void <clinit>() -> <clinit>
android.support.v4.view.animation.LinearOutSlowInInterpolator -> android.support.v4.view.animation.LinearOutSlowInInterpolator:
    float[] VALUES -> VALUES
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
    void <clinit>() -> <clinit>
android.support.v4.view.animation.LookupTableInterpolator -> android.support.v4.view.animation.LookupTableInterpolator:
    float[] mValues -> mValues
    float mStepSize -> mStepSize
    void <init>(float[]) -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.PathInterpolatorApi14 -> android.support.v4.view.animation.PathInterpolatorApi14:
    float PRECISION -> PRECISION
    float[] mX -> mX
    float[] mY -> mY
    void <init>(android.graphics.Path) -> <init>
    void <init>(float,float) -> <init>
    void <init>(float,float,float,float) -> <init>
    float getInterpolation(float) -> getInterpolation
    android.graphics.Path createQuad(float,float) -> createQuad
    android.graphics.Path createCubic(float,float,float,float) -> createCubic
android.support.v4.view.animation.PathInterpolatorCompat -> android.support.v4.view.animation.PathInterpolatorCompat:
    void <init>() -> <init>
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    void <init>(android.view.View) -> <init>
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    void <clinit>() -> <clinit>
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void <init>() -> <init>
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void <init>(android.support.v4.widget.AutoScrollHelper) -> <init>
    void run() -> run
android.support.v4.widget.AutoSizeableTextView -> android.support.v4.widget.AutoSizeableTextView:
    void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    int getAutoSizeTextType() -> getAutoSizeTextType
    int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
android.support.v4.widget.CircleImageView -> android.support.v4.widget.CircleImageView:
    int KEY_SHADOW_COLOR -> KEY_SHADOW_COLOR
    int FILL_SHADOW_COLOR -> FILL_SHADOW_COLOR
    float X_OFFSET -> X_OFFSET
    float Y_OFFSET -> Y_OFFSET
    float SHADOW_RADIUS -> SHADOW_RADIUS
    int SHADOW_ELEVATION -> SHADOW_ELEVATION
    android.view.animation.Animation$AnimationListener mListener -> mListener
    int mShadowRadius -> mShadowRadius
    void <init>(android.content.Context,int) -> <init>
    boolean elevationSupported() -> elevationSupported
    void onMeasure(int,int) -> onMeasure
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    void onAnimationStart() -> onAnimationStart
    void onAnimationEnd() -> onAnimationEnd
    void setBackgroundColorRes(int) -> setBackgroundColorRes
    void setBackgroundColor(int) -> setBackgroundColor
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.CircleImageView$OvalShadow:
    android.graphics.RadialGradient mRadialGradient -> mRadialGradient
    android.graphics.Paint mShadowPaint -> mShadowPaint
    android.support.v4.widget.CircleImageView this$0 -> this$0
    void <init>(android.support.v4.widget.CircleImageView,int) -> <init>
    void onResize(float,float) -> onResize
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    void updateRadialGradient(int) -> updateRadialGradient
android.support.v4.widget.CircularProgressDrawable -> android.support.v4.widget.CircularProgressDrawable:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> LINEAR_INTERPOLATOR
    android.view.animation.Interpolator MATERIAL_INTERPOLATOR -> MATERIAL_INTERPOLATOR
    int LARGE -> LARGE
    float CENTER_RADIUS_LARGE -> CENTER_RADIUS_LARGE
    float STROKE_WIDTH_LARGE -> STROKE_WIDTH_LARGE
    int ARROW_WIDTH_LARGE -> ARROW_WIDTH_LARGE
    int ARROW_HEIGHT_LARGE -> ARROW_HEIGHT_LARGE
    int DEFAULT -> DEFAULT
    float CENTER_RADIUS -> CENTER_RADIUS
    float STROKE_WIDTH -> STROKE_WIDTH
    int ARROW_WIDTH -> ARROW_WIDTH
    int ARROW_HEIGHT -> ARROW_HEIGHT
    int[] COLORS -> COLORS
    float COLOR_CHANGE_OFFSET -> COLOR_CHANGE_OFFSET
    float SHRINK_OFFSET -> SHRINK_OFFSET
    int ANIMATION_DURATION -> ANIMATION_DURATION
    float GROUP_FULL_ROTATION -> GROUP_FULL_ROTATION
    android.support.v4.widget.CircularProgressDrawable$Ring mRing -> mRing
    float mRotation -> mRotation
    float MAX_PROGRESS_ARC -> MAX_PROGRESS_ARC
    float MIN_PROGRESS_ARC -> MIN_PROGRESS_ARC
    float RING_ROTATION -> RING_ROTATION
    android.content.res.Resources mResources -> mResources
    android.animation.Animator mAnimator -> mAnimator
    float mRotationCount -> mRotationCount
    boolean mFinishing -> mFinishing
    void <init>(android.content.Context) -> <init>
    void setSizeParameters(float,float,float,float) -> setSizeParameters
    void setStyle(int) -> setStyle
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeWidth(float) -> setStrokeWidth
    float getCenterRadius() -> getCenterRadius
    void setCenterRadius(float) -> setCenterRadius
    void setStrokeCap(android.graphics.Paint$Cap) -> setStrokeCap
    android.graphics.Paint$Cap getStrokeCap() -> getStrokeCap
    float getArrowWidth() -> getArrowWidth
    float getArrowHeight() -> getArrowHeight
    void setArrowDimensions(float,float) -> setArrowDimensions
    boolean getArrowEnabled() -> getArrowEnabled
    void setArrowEnabled(boolean) -> setArrowEnabled
    float getArrowScale() -> getArrowScale
    void setArrowScale(float) -> setArrowScale
    float getStartTrim() -> getStartTrim
    float getEndTrim() -> getEndTrim
    void setStartEndTrim(float,float) -> setStartEndTrim
    float getProgressRotation() -> getProgressRotation
    void setProgressRotation(float) -> setProgressRotation
    int getBackgroundColor() -> getBackgroundColor
    void setBackgroundColor(int) -> setBackgroundColor
    int[] getColorSchemeColors() -> getColorSchemeColors
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    int getOpacity() -> getOpacity
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    int evaluateColorChange(float,int,int) -> evaluateColorChange
    void updateRingColor(float,android.support.v4.widget.CircularProgressDrawable$Ring) -> updateRingColor
    void applyFinishTranslation(float,android.support.v4.widget.CircularProgressDrawable$Ring) -> applyFinishTranslation
    void applyTransformation(float,android.support.v4.widget.CircularProgressDrawable$Ring,boolean) -> applyTransformation
    void setupAnimators() -> setupAnimators
    void access$000(android.support.v4.widget.CircularProgressDrawable,float,android.support.v4.widget.CircularProgressDrawable$Ring) -> access$000
    void access$100(android.support.v4.widget.CircularProgressDrawable,float,android.support.v4.widget.CircularProgressDrawable$Ring,boolean) -> access$100
    float access$202(android.support.v4.widget.CircularProgressDrawable,float) -> access$202
    boolean access$300(android.support.v4.widget.CircularProgressDrawable) -> access$300
    boolean access$302(android.support.v4.widget.CircularProgressDrawable,boolean) -> access$302
    float access$200(android.support.v4.widget.CircularProgressDrawable) -> access$200
    void <clinit>() -> <clinit>
android.support.v4.widget.CircularProgressDrawable$1 -> android.support.v4.widget.CircularProgressDrawable$1:
    android.support.v4.widget.CircularProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.CircularProgressDrawable this$0 -> this$0
    void <init>(android.support.v4.widget.CircularProgressDrawable,android.support.v4.widget.CircularProgressDrawable$Ring) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.widget.CircularProgressDrawable$2 -> android.support.v4.widget.CircularProgressDrawable$2:
    android.support.v4.widget.CircularProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.CircularProgressDrawable this$0 -> this$0
    void <init>(android.support.v4.widget.CircularProgressDrawable,android.support.v4.widget.CircularProgressDrawable$Ring) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
android.support.v4.widget.CircularProgressDrawable$ProgressDrawableSize -> android.support.v4.widget.CircularProgressDrawable$ProgressDrawableSize:
android.support.v4.widget.CircularProgressDrawable$Ring -> android.support.v4.widget.CircularProgressDrawable$Ring:
    android.graphics.RectF mTempBounds -> mTempBounds
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mArrowPaint -> mArrowPaint
    android.graphics.Paint mCirclePaint -> mCirclePaint
    float mStartTrim -> mStartTrim
    float mEndTrim -> mEndTrim
    float mRotation -> mRotation
    float mStrokeWidth -> mStrokeWidth
    int[] mColors -> mColors
    int mColorIndex -> mColorIndex
    float mStartingStartTrim -> mStartingStartTrim
    float mStartingEndTrim -> mStartingEndTrim
    float mStartingRotation -> mStartingRotation
    boolean mShowArrow -> mShowArrow
    android.graphics.Path mArrow -> mArrow
    float mArrowScale -> mArrowScale
    float mRingCenterRadius -> mRingCenterRadius
    int mArrowWidth -> mArrowWidth
    int mArrowHeight -> mArrowHeight
    int mAlpha -> mAlpha
    int mCurrentColor -> mCurrentColor
    void <init>() -> <init>
    void setArrowDimensions(float,float) -> setArrowDimensions
    void setStrokeCap(android.graphics.Paint$Cap) -> setStrokeCap
    android.graphics.Paint$Cap getStrokeCap() -> getStrokeCap
    float getArrowWidth() -> getArrowWidth
    float getArrowHeight() -> getArrowHeight
    void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> drawTriangle
    void setColors(int[]) -> setColors
    int[] getColors() -> getColors
    void setColor(int) -> setColor
    void setBackgroundColor(int) -> setBackgroundColor
    int getBackgroundColor() -> getBackgroundColor
    void setColorIndex(int) -> setColorIndex
    int getNextColor() -> getNextColor
    int getNextColorIndex() -> getNextColorIndex
    void goToNextColor() -> goToNextColor
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStartTrim(float) -> setStartTrim
    float getStartTrim() -> getStartTrim
    float getStartingStartTrim() -> getStartingStartTrim
    float getStartingEndTrim() -> getStartingEndTrim
    int getStartingColor() -> getStartingColor
    void setEndTrim(float) -> setEndTrim
    float getEndTrim() -> getEndTrim
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setCenterRadius(float) -> setCenterRadius
    float getCenterRadius() -> getCenterRadius
    void setShowArrow(boolean) -> setShowArrow
    boolean getShowArrow() -> getShowArrow
    void setArrowScale(float) -> setArrowScale
    float getArrowScale() -> getArrowScale
    float getStartingRotation() -> getStartingRotation
    void storeOriginals() -> storeOriginals
    void resetOriginals() -> resetOriginals
android.support.v4.widget.CompoundButtonCompat -> android.support.v4.widget.CompoundButtonCompat:
    android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatBaseImpl IMPL -> IMPL
    void <init>() -> <init>
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    void <clinit>() -> <clinit>
android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatApi21Impl -> android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatApi21Impl:
    void <init>() -> <init>
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatApi23Impl -> android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatApi23Impl:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatBaseImpl -> android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatBaseImpl:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sButtonDrawableField -> sButtonDrawableField
    boolean sButtonDrawableFieldFetched -> sButtonDrawableFieldFetched
    void <init>() -> <init>
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void <init>(android.support.v4.widget.ContentLoadingProgressBar) -> <init>
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void <init>(android.support.v4.widget.ContentLoadingProgressBar) -> <init>
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void <init>(android.content.Context,android.database.Cursor) -> <init>
    void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    void <init>(android.content.Context,android.database.Cursor,int) -> <init>
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void <init>(android.support.v4.widget.CursorAdapter) -> <init>
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void <init>(android.support.v4.widget.CursorAdapter) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    void <init>(android.support.v4.widget.CursorFilter$CursorFilterClient) -> <init>
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int LOCK_MODE_UNDEFINED -> LOCK_MODE_UNDEFINED
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DRAWER_ELEVATION -> DRAWER_ELEVATION
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    boolean CAN_HIDE_DESCENDANTS -> CAN_HIDE_DESCENDANTS
    boolean SET_DRAWER_SHADOW_FROM_ELEVATION -> SET_DRAWER_SHADOW_FROM_ELEVATION
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    float mDrawerElevation -> mDrawerElevation
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    int mLockModeStart -> mLockModeStart
    int mLockModeEnd -> mLockModeEnd
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    java.util.List mListeners -> mListeners
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mStatusBarBackground -> mStatusBarBackground
    android.graphics.drawable.Drawable mShadowLeftResolved -> mShadowLeftResolved
    android.graphics.drawable.Drawable mShadowRightResolved -> mShadowRightResolved
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    java.lang.Object mLastInsets -> mLastInsets
    boolean mDrawStatusBarBackground -> mDrawStatusBarBackground
    android.graphics.drawable.Drawable mShadowStart -> mShadowStart
    android.graphics.drawable.Drawable mShadowEnd -> mShadowEnd
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    java.util.ArrayList mNonDrawerViews -> mNonDrawerViews
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setDrawerElevation(float) -> setDrawerElevation
    float getDrawerElevation() -> getDrawerElevation
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void addDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> addDrawerListener
    void removeDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> removeDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void resolveShadowDrawables() -> resolveShadowDrawables
    android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    boolean mirror(android.graphics.drawable.Drawable,int) -> mirror
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(android.view.View,boolean) -> openDrawer
    void openDrawer(int) -> openDrawer
    void openDrawer(int,boolean) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(android.view.View,boolean) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    void closeDrawer(int,boolean) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    void <clinit>() -> <clinit>
android.support.v4.widget.DrawerLayout$1 -> android.support.v4.widget.DrawerLayout$1:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void <init>(android.support.v4.widget.DrawerLayout) -> <init>
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void <init>(android.support.v4.widget.DrawerLayout) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    void <init>() -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int FLAG_IS_OPENED -> FLAG_IS_OPENED
    int FLAG_IS_OPENING -> FLAG_IS_OPENING
    int FLAG_IS_CLOSING -> FLAG_IS_CLOSING
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    int openState -> openState
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(int,int,int) -> <init>
    void <init>(android.support.v4.widget.DrawerLayout$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    int lockModeStart -> lockModeStart
    int lockModeEnd -> lockModeEnd
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    void <init>() -> <init>
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void <init>() -> <init>
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void <init>(android.support.v4.widget.DrawerLayout,int) -> <init>
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void <init>(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> <init>
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    android.widget.EdgeEffect mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectBaseImpl IMPL -> IMPL
    void <init>(android.content.Context) -> <init>
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onPull(float,float) -> onPull
    void onPull(android.widget.EdgeEffect,float,float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
    void <clinit>() -> <clinit>
android.support.v4.widget.EdgeEffectCompat$EdgeEffectApi21Impl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectApi21Impl:
    void <init>() -> <init>
    void onPull(android.widget.EdgeEffect,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompat$EdgeEffectBaseImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectBaseImpl:
    void <init>() -> <init>
    void onPull(android.widget.EdgeEffect,float,float) -> onPull
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    int HOST_ID -> HOST_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect INVALID_PARENT_BOUNDS -> INVALID_PARENT_BOUNDS
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mHost -> mHost
    android.support.v4.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider -> mNodeProvider
    int mAccessibilityFocusedVirtualViewId -> mAccessibilityFocusedVirtualViewId
    int mKeyboardFocusedVirtualViewId -> mKeyboardFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER -> NODE_ADAPTER
    android.support.v4.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER -> SPARSE_VALUES_ADAPTER
    void <init>(android.view.View) -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    int keyToDirection(int) -> keyToDirection
    void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    android.support.v4.util.SparseArrayCompat getAllNodes() -> getAllNodes
    android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    void invalidateVirtualView(int,int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent) -> onPopulateEventForHost
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    void onPopulateNodeForHost(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    int access$000(android.support.v4.widget.ExploreByTouchHelper) -> access$000
    int access$100(android.support.v4.widget.ExploreByTouchHelper) -> access$100
    void <clinit>() -> <clinit>
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
    void <init>() -> <init>
    void obtainBounds(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
    void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
android.support.v4.widget.ExploreByTouchHelper$2 -> android.support.v4.widget.ExploreByTouchHelper$2:
    void <init>() -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat get(android.support.v4.util.SparseArrayCompat,int) -> get
    int size(android.support.v4.util.SparseArrayCompat) -> size
    int size(java.lang.Object) -> size
    java.lang.Object get(java.lang.Object,int) -> get
android.support.v4.widget.ExploreByTouchHelper$MyNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$MyNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    void <init>(android.support.v4.widget.ExploreByTouchHelper) -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.widget.FocusStrategy -> android.support.v4.widget.FocusStrategy:
    void <init>() -> <init>
    java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,android.support.v4.widget.FocusStrategy$CollectionAdapter,android.support.v4.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,android.support.v4.widget.FocusStrategy$CollectionAdapter,android.support.v4.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    int getWeightedDistanceFor(int,int) -> getWeightedDistanceFor
    boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
android.support.v4.widget.FocusStrategy$BoundsAdapter -> android.support.v4.widget.FocusStrategy$BoundsAdapter:
    void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
android.support.v4.widget.FocusStrategy$CollectionAdapter -> android.support.v4.widget.FocusStrategy$CollectionAdapter:
    java.lang.Object get(java.lang.Object,int) -> get
    int size(java.lang.Object) -> size
android.support.v4.widget.FocusStrategy$SequentialComparator -> android.support.v4.widget.FocusStrategy$SequentialComparator:
    android.graphics.Rect mTemp1 -> mTemp1
    android.graphics.Rect mTemp2 -> mTemp2
    boolean mIsLayoutRtl -> mIsLayoutRtl
    android.support.v4.widget.FocusStrategy$BoundsAdapter mAdapter -> mAdapter
    void <init>(boolean,android.support.v4.widget.FocusStrategy$BoundsAdapter) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.ImageViewCompat -> android.support.v4.widget.ImageViewCompat:
    android.support.v4.widget.ImageViewCompat$ImageViewCompatImpl IMPL -> IMPL
    android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.widget.ImageViewCompat$BaseViewCompatImpl -> android.support.v4.widget.ImageViewCompat$BaseViewCompatImpl:
    void <init>() -> <init>
    android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
    android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
android.support.v4.widget.ImageViewCompat$ImageViewCompatImpl -> android.support.v4.widget.ImageViewCompat$ImageViewCompatImpl:
    android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
android.support.v4.widget.ImageViewCompat$LollipopViewCompatImpl -> android.support.v4.widget.ImageViewCompat$LollipopViewCompatImpl:
    void <init>() -> <init>
    android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
    android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    void <init>() -> <init>
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
    android.view.View$OnTouchListener createDragToOpenListener(android.widget.ListPopupWindow,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void <init>(android.widget.ListView) -> <init>
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.ListViewCompat -> android.support.v4.widget.ListViewCompat:
    void scrollListBy(android.widget.ListView,int) -> scrollListBy
    boolean canScrollList(android.widget.ListView,int) -> canScrollList
    void <init>() -> <init>
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    int ANIMATED_SCROLL_GAP -> ANIMATED_SCROLL_GAP
    float MAX_SCROLL_FACTOR -> MAX_SCROLL_FACTOR
    java.lang.String TAG -> TAG
    long mLastScroll -> mLastScroll
    android.graphics.Rect mTempRect -> mTempRect
    android.widget.OverScroller mScroller -> mScroller
    android.widget.EdgeEffect mEdgeGlowTop -> mEdgeGlowTop
    android.widget.EdgeEffect mEdgeGlowBottom -> mEdgeGlowBottom
    int mLastMotionY -> mLastMotionY
    boolean mIsLayoutDirty -> mIsLayoutDirty
    boolean mIsLaidOut -> mIsLaidOut
    android.view.View mChildToScrollTo -> mChildToScrollTo
    boolean mIsBeingDragged -> mIsBeingDragged
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    boolean mFillViewport -> mFillViewport
    boolean mSmoothScrollingEnabled -> mSmoothScrollingEnabled
    int mTouchSlop -> mTouchSlop
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mActivePointerId -> mActivePointerId
    int[] mScrollOffset -> mScrollOffset
    int[] mScrollConsumed -> mScrollConsumed
    int mNestedYOffset -> mNestedYOffset
    int mLastScrollerY -> mLastScrollerY
    int INVALID_POINTER -> INVALID_POINTER
    android.support.v4.widget.NestedScrollView$SavedState mSavedState -> mSavedState
    android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> ACCESSIBILITY_DELEGATE
    int[] SCROLLVIEW_STYLEABLE -> SCROLLVIEW_STYLEABLE
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> mParentHelper
    android.support.v4.view.NestedScrollingChildHelper mChildHelper -> mChildHelper
    float mVerticalScrollFactor -> mVerticalScrollFactor
    android.support.v4.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener -> mOnScrollChangeListener
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    boolean startNestedScroll(int,int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    void stopNestedScroll(int) -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    int getMaxScrollAmount() -> getMaxScrollAmount
    void initScrollView() -> initScrollView
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void setOnScrollChangeListener(android.support.v4.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    boolean canScroll() -> canScroll
    boolean isFillViewport() -> isFillViewport
    void setFillViewport(boolean) -> setFillViewport
    boolean isSmoothScrollingEnabled() -> isSmoothScrollingEnabled
    void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void onMeasure(int,int) -> onMeasure
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean inChild(int,int) -> inChild
    void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    void recycleVelocityTracker() -> recycleVelocityTracker
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    int getScrollRange() -> getScrollRange
    android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    boolean pageScroll(int) -> pageScroll
    boolean fullScroll(int) -> fullScroll
    boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    boolean arrowScroll(int) -> arrowScroll
    boolean isOffScreen(android.view.View) -> isOffScreen
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    void doScrollY(int) -> doScrollY
    void smoothScrollBy(int,int) -> smoothScrollBy
    void smoothScrollTo(int,int) -> smoothScrollTo
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    void measureChild(android.view.View,int,int) -> measureChild
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void computeScroll() -> computeScroll
    void scrollToChild(android.view.View) -> scrollToChild
    boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void requestLayout() -> requestLayout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAttachedToWindow() -> onAttachedToWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    void fling(int) -> fling
    void flingWithNestedDispatch(int) -> flingWithNestedDispatch
    void endDrag() -> endDrag
    void scrollTo(int,int) -> scrollTo
    void ensureGlows() -> ensureGlows
    void draw(android.graphics.Canvas) -> draw
    int clamp(int,int,int) -> clamp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void <clinit>() -> <clinit>
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.NestedScrollView$AccessibilityDelegate:
    void <init>() -> <init>
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
android.support.v4.widget.NestedScrollView$OnScrollChangeListener -> android.support.v4.widget.NestedScrollView$OnScrollChangeListener:
    void onScrollChange(android.support.v4.widget.NestedScrollView,int,int,int,int) -> onScrollChange
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    int scrollPosition -> scrollPosition
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.NestedScrollView$SavedState$1:
    void <init>() -> <init>
    android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    void <init>() -> <init>
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.PopupWindowCompat:
    android.support.v4.widget.PopupWindowCompat$PopupWindowCompatBaseImpl IMPL -> IMPL
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    void <clinit>() -> <clinit>
android.support.v4.widget.PopupWindowCompat$PopupWindowCompatApi19Impl -> android.support.v4.widget.PopupWindowCompat$PopupWindowCompatApi19Impl:
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$PopupWindowCompatApi21Impl -> android.support.v4.widget.PopupWindowCompat$PopupWindowCompatApi21Impl:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sOverlapAnchorField -> sOverlapAnchorField
    void <init>() -> <init>
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    void <clinit>() -> <clinit>
android.support.v4.widget.PopupWindowCompat$PopupWindowCompatApi23Impl -> android.support.v4.widget.PopupWindowCompat$PopupWindowCompatApi23Impl:
    void <init>() -> <init>
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
android.support.v4.widget.PopupWindowCompat$PopupWindowCompatBaseImpl -> android.support.v4.widget.PopupWindowCompat$PopupWindowCompatBaseImpl:
    java.lang.reflect.Method sSetWindowLayoutTypeMethod -> sSetWindowLayoutTypeMethod
    boolean sSetWindowLayoutTypeMethodAttempted -> sSetWindowLayoutTypeMethodAttempted
    java.lang.reflect.Method sGetWindowLayoutTypeMethod -> sGetWindowLayoutTypeMethod
    boolean sGetWindowLayoutTypeMethodAttempted -> sGetWindowLayoutTypeMethodAttempted
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    void <init>(android.content.Context,int,android.database.Cursor) -> <init>
    void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    void <init>(android.content.Context,int,android.database.Cursor,int) -> <init>
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    android.widget.OverScroller mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    void <init>(android.content.Context,android.view.animation.Interpolator) -> <init>
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    boolean springBack(int,int,int,int,int,int) -> springBack
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    void checkIfLegalArg(android.view.View) -> checkIfLegalArg
    void <init>(android.content.Context) -> <init>
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListener) -> setOnQueryTextListener
    android.widget.SearchView$OnQueryTextListener newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListener) -> newOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListener) -> setOnCloseListener
    android.widget.SearchView$OnCloseListener newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListener) -> newOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$1 -> android.support.v4.widget.SearchViewCompat$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListener val$listener -> val$listener
    void <init>(android.support.v4.widget.SearchViewCompat$OnQueryTextListener) -> <init>
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$2 -> android.support.v4.widget.SearchViewCompat$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListener val$listener -> val$listener
    void <init>(android.support.v4.widget.SearchViewCompat$OnCloseListener) -> <init>
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnCloseListener -> android.support.v4.widget.SearchViewCompat$OnCloseListener:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    void <init>() -> <init>
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListener -> android.support.v4.widget.SearchViewCompat$OnQueryTextListener:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    void <init>() -> <init>
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]) -> <init>
    void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int) -> <init>
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(android.database.Cursor,java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    void <clinit>() -> <clinit>
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SlidingPaneLayout) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> <init>
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SlidingPaneLayout) -> <init>
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
    void <init>() -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.support.v4.widget.SlidingPaneLayout$LayoutParams) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    void <init>() -> <init>
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void <init>() -> <init>
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void <init>() -> <init>
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void <init>() -> <init>
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void <init>() -> <init>
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.Space -> android.support.v4.widget.Space:
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void draw(android.graphics.Canvas) -> draw
    int getDefaultSize2(int,int) -> getDefaultSize2
    void onMeasure(int,int) -> onMeasure
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void <init>(android.view.View) -> <init>
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
    void <clinit>() -> <clinit>
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_ALPHA -> MAX_ALPHA
    int STARTING_PROGRESS_ALPHA -> STARTING_PROGRESS_ALPHA
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    int INVALID_POINTER -> INVALID_POINTER
    float DRAG_RATE -> DRAG_RATE
    float MAX_PROGRESS_ANGLE -> MAX_PROGRESS_ANGLE
    int SCALE_DOWN_DURATION -> SCALE_DOWN_DURATION
    int ALPHA_ANIMATION_DURATION -> ALPHA_ANIMATION_DURATION
    int ANIMATE_TO_TRIGGER_DURATION -> ANIMATE_TO_TRIGGER_DURATION
    int ANIMATE_TO_START_DURATION -> ANIMATE_TO_START_DURATION
    int CIRCLE_BG_LIGHT -> CIRCLE_BG_LIGHT
    int DEFAULT_CIRCLE_TARGET -> DEFAULT_CIRCLE_TARGET
    android.view.View mTarget -> mTarget
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mTotalDragDistance -> mTotalDragDistance
    float mTotalUnconsumed -> mTotalUnconsumed
    android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> mNestedScrollingParentHelper
    android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper -> mNestedScrollingChildHelper
    int[] mParentScrollConsumed -> mParentScrollConsumed
    int[] mParentOffsetInWindow -> mParentOffsetInWindow
    boolean mNestedScrollInProgress -> mNestedScrollInProgress
    int mMediumAnimationDuration -> mMediumAnimationDuration
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    float mInitialMotionY -> mInitialMotionY
    float mInitialDownY -> mInitialDownY
    boolean mIsBeingDragged -> mIsBeingDragged
    int mActivePointerId -> mActivePointerId
    boolean mScale -> mScale
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.CircleImageView mCircleView -> mCircleView
    int mCircleViewIndex -> mCircleViewIndex
    int mFrom -> mFrom
    float mStartingScale -> mStartingScale
    int mOriginalOffsetTop -> mOriginalOffsetTop
    int mSpinnerOffsetEnd -> mSpinnerOffsetEnd
    android.support.v4.widget.CircularProgressDrawable mProgress -> mProgress
    android.view.animation.Animation mScaleAnimation -> mScaleAnimation
    android.view.animation.Animation mScaleDownAnimation -> mScaleDownAnimation
    android.view.animation.Animation mAlphaStartAnimation -> mAlphaStartAnimation
    android.view.animation.Animation mAlphaMaxAnimation -> mAlphaMaxAnimation
    android.view.animation.Animation mScaleDownToStartAnimation -> mScaleDownToStartAnimation
    boolean mNotify -> mNotify
    int mCircleDiameter -> mCircleDiameter
    boolean mUsingCustomStart -> mUsingCustomStart
    android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback mChildScrollUpCallback -> mChildScrollUpCallback
    android.view.animation.Animation$AnimationListener mRefreshListener -> mRefreshListener
    android.view.animation.Animation mAnimateToCorrectPosition -> mAnimateToCorrectPosition
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    void reset() -> reset
    void setEnabled(boolean) -> setEnabled
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setColorViewAlpha(int) -> setColorViewAlpha
    void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    int getProgressViewStartOffset() -> getProgressViewStartOffset
    int getProgressViewEndOffset() -> getProgressViewEndOffset
    void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    void setSize(int) -> setSize
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void createProgressView() -> createProgressView
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setRefreshing(boolean) -> setRefreshing
    void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    void setAnimationProgress(float) -> setAnimationProgress
    void setRefreshing(boolean,boolean) -> setRefreshing
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    void setColorScheme(int[]) -> setColorScheme
    void setColorSchemeResources(int[]) -> setColorSchemeResources
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    int getProgressCircleDiameter() -> getProgressCircleDiameter
    boolean canChildScrollUp() -> canChildScrollUp
    void setOnChildScrollUpCallback(android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback) -> setOnChildScrollUpCallback
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    int getNestedScrollAxes() -> getNestedScrollAxes
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    void moveSpinner(float) -> moveSpinner
    void finishSpinner(float) -> finishSpinner
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startDragging(float) -> startDragging
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void moveToStart(float) -> moveToStart
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void <clinit>() -> <clinit>
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    int val$startingAlpha -> val$startingAlpha
    int val$endingAlpha -> val$endingAlpha
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout,int,int) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.SwipeRefreshLayout$7:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.SwipeRefreshLayout$8:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback -> android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback:
    boolean canChildScrollUp(android.support.v4.widget.SwipeRefreshLayout,android.view.View) -> canChildScrollUp
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.TextViewCompat -> android.support.v4.widget.TextViewCompat:
    int AUTO_SIZE_TEXT_TYPE_NONE -> AUTO_SIZE_TEXT_TYPE_NONE
    int AUTO_SIZE_TEXT_TYPE_UNIFORM -> AUTO_SIZE_TEXT_TYPE_UNIFORM
    android.support.v4.widget.TextViewCompat$TextViewCompatBaseImpl IMPL -> IMPL
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    int getMaxLines(android.widget.TextView) -> getMaxLines
    int getMinLines(android.widget.TextView) -> getMinLines
    void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int) -> setAutoSizeTextTypeWithDefaults
    void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    int getAutoSizeTextType(android.widget.TextView) -> getAutoSizeTextType
    int getAutoSizeStepGranularity(android.widget.TextView) -> getAutoSizeStepGranularity
    int getAutoSizeMinTextSize(android.widget.TextView) -> getAutoSizeMinTextSize
    int getAutoSizeMaxTextSize(android.widget.TextView) -> getAutoSizeMaxTextSize
    int[] getAutoSizeTextAvailableSizes(android.widget.TextView) -> getAutoSizeTextAvailableSizes
    void <clinit>() -> <clinit>
android.support.v4.widget.TextViewCompat$AutoSizeTextType -> android.support.v4.widget.TextViewCompat$AutoSizeTextType:
android.support.v4.widget.TextViewCompat$TextViewCompatApi16Impl -> android.support.v4.widget.TextViewCompat$TextViewCompatApi16Impl:
    void <init>() -> <init>
    int getMaxLines(android.widget.TextView) -> getMaxLines
    int getMinLines(android.widget.TextView) -> getMinLines
android.support.v4.widget.TextViewCompat$TextViewCompatApi17Impl -> android.support.v4.widget.TextViewCompat$TextViewCompatApi17Impl:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
android.support.v4.widget.TextViewCompat$TextViewCompatApi18Impl -> android.support.v4.widget.TextViewCompat$TextViewCompatApi18Impl:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
android.support.v4.widget.TextViewCompat$TextViewCompatApi23Impl -> android.support.v4.widget.TextViewCompat$TextViewCompatApi23Impl:
    void <init>() -> <init>
    void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
android.support.v4.widget.TextViewCompat$TextViewCompatApi26Impl -> android.support.v4.widget.TextViewCompat$TextViewCompatApi26Impl:
    void <init>() -> <init>
    void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int) -> setAutoSizeTextTypeWithDefaults
    void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    int getAutoSizeTextType(android.widget.TextView) -> getAutoSizeTextType
    int getAutoSizeStepGranularity(android.widget.TextView) -> getAutoSizeStepGranularity
    int getAutoSizeMinTextSize(android.widget.TextView) -> getAutoSizeMinTextSize
    int getAutoSizeMaxTextSize(android.widget.TextView) -> getAutoSizeMaxTextSize
    int[] getAutoSizeTextAvailableSizes(android.widget.TextView) -> getAutoSizeTextAvailableSizes
android.support.v4.widget.TextViewCompat$TextViewCompatBaseImpl -> android.support.v4.widget.TextViewCompat$TextViewCompatBaseImpl:
    java.lang.String LOG_TAG -> LOG_TAG
    int LINES -> LINES
    java.lang.reflect.Field sMaximumField -> sMaximumField
    boolean sMaximumFieldFetched -> sMaximumFieldFetched
    java.lang.reflect.Field sMaxModeField -> sMaxModeField
    boolean sMaxModeFieldFetched -> sMaxModeFieldFetched
    java.lang.reflect.Field sMinimumField -> sMinimumField
    boolean sMinimumFieldFetched -> sMinimumFieldFetched
    java.lang.reflect.Field sMinModeField -> sMinModeField
    boolean sMinModeFieldFetched -> sMinModeFieldFetched
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    java.lang.reflect.Field retrieveField(java.lang.String) -> retrieveField
    int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView) -> retrieveIntFromField
    int getMaxLines(android.widget.TextView) -> getMaxLines
    int getMinLines(android.widget.TextView) -> getMinLines
    void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int) -> setAutoSizeTextTypeWithDefaults
    void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    int getAutoSizeTextType(android.widget.TextView) -> getAutoSizeTextType
    int getAutoSizeStepGranularity(android.widget.TextView) -> getAutoSizeStepGranularity
    int getAutoSizeMinTextSize(android.widget.TextView) -> getAutoSizeMinTextSize
    int getAutoSizeMaxTextSize(android.widget.TextView) -> getAutoSizeMaxTextSize
    int[] getAutoSizeTextAvailableSizes(android.widget.TextView) -> getAutoSizeTextAvailableSizes
android.support.v4.widget.TintableCompoundButton -> android.support.v4.widget.TintableCompoundButton:
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
android.support.v4.widget.TintableImageSourceView -> android.support.v4.widget.TintableImageSourceView:
    void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.widget.OverScroller mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void <init>(android.content.Context,android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> <init>
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
    boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    void <clinit>() -> <clinit>
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void <init>(android.support.v4.widget.ViewDragHelper) -> <init>
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void <init>() -> <init>
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
android.support.v7.app.ActionBar -> android.support.v7.app.ActionBar:
    int NAVIGATION_MODE_STANDARD -> NAVIGATION_MODE_STANDARD
    int NAVIGATION_MODE_LIST -> NAVIGATION_MODE_LIST
    int NAVIGATION_MODE_TABS -> NAVIGATION_MODE_TABS
    int DISPLAY_USE_LOGO -> DISPLAY_USE_LOGO
    int DISPLAY_SHOW_HOME -> DISPLAY_SHOW_HOME
    int DISPLAY_HOME_AS_UP -> DISPLAY_HOME_AS_UP
    int DISPLAY_SHOW_TITLE -> DISPLAY_SHOW_TITLE
    int DISPLAY_SHOW_CUSTOM -> DISPLAY_SHOW_CUSTOM
    void <init>() -> <init>
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.support.v7.app.ActionBar$Tab newTab() -> newTab
    void addTab(android.support.v7.app.ActionBar$Tab) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,boolean) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(android.support.v7.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(android.support.v7.app.ActionBar$Tab) -> selectTab
    android.support.v7.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    android.support.v7.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
    boolean isTitleTruncated() -> isTitleTruncated
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    int getHideOffset() -> getHideOffset
    void setHideOffset(int) -> setHideOffset
    void setElevation(float) -> setElevation
    float getElevation() -> getElevation
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> startActionMode
    boolean openOptionsMenu() -> openOptionsMenu
    boolean closeOptionsMenu() -> closeOptionsMenu
    boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    boolean collapseActionView() -> collapseActionView
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    boolean requestFocus() -> requestFocus
    void onDestroy() -> onDestroy
android.support.v7.app.ActionBar$DisplayOptions -> android.support.v7.app.ActionBar$DisplayOptions:
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.app.ActionBar$LayoutParams:
    int gravity -> gravity
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(int,int,int) -> <init>
    void <init>(int) -> <init>
    void <init>(android.support.v7.app.ActionBar$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
android.support.v7.app.ActionBar$NavigationMode -> android.support.v7.app.ActionBar$NavigationMode:
android.support.v7.app.ActionBar$OnMenuVisibilityListener -> android.support.v7.app.ActionBar$OnMenuVisibilityListener:
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
android.support.v7.app.ActionBar$OnNavigationListener -> android.support.v7.app.ActionBar$OnNavigationListener:
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
android.support.v7.app.ActionBar$Tab -> android.support.v7.app.ActionBar$Tab:
    int INVALID_POSITION -> INVALID_POSITION
    void <init>() -> <init>
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    android.support.v7.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.support.v7.app.ActionBar$Tab setIcon(int) -> setIcon
    android.support.v7.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    android.support.v7.app.ActionBar$Tab setText(int) -> setText
    android.support.v7.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    android.support.v7.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    android.support.v7.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    android.support.v7.app.ActionBar$Tab setTabListener(android.support.v7.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    android.support.v7.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    android.support.v7.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
android.support.v7.app.ActionBar$TabListener -> android.support.v7.app.ActionBar$TabListener:
    void onTabSelected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabReselected
android.support.v7.app.ActionBarDrawerToggle -> android.support.v7.app.ActionBarDrawerToggle:
    android.support.v7.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    android.support.v7.graphics.drawable.DrawerArrowDrawable mSlider -> mSlider
    boolean mDrawerSlideAnimationEnabled -> mDrawerSlideAnimationEnabled
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> mHomeAsUpIndicator
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    boolean mHasCustomUpIndicator -> mHasCustomUpIndicator
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    android.view.View$OnClickListener mToolbarNavigationClickListener -> mToolbarNavigationClickListener
    boolean mWarnedForDisplayHomeAsUp -> mWarnedForDisplayHomeAsUp
    void <init>(android.app.Activity,android.support.v4.widget.DrawerLayout,int,int) -> <init>
    void <init>(android.app.Activity,android.support.v4.widget.DrawerLayout,android.support.v7.widget.Toolbar,int,int) -> <init>
    void <init>(android.app.Activity,android.support.v7.widget.Toolbar,android.support.v4.widget.DrawerLayout,android.support.v7.graphics.drawable.DrawerArrowDrawable,int,int) -> <init>
    void syncState() -> syncState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void toggle() -> toggle
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    android.support.v7.graphics.drawable.DrawerArrowDrawable getDrawerArrowDrawable() -> getDrawerArrowDrawable
    void setDrawerArrowDrawable(android.support.v7.graphics.drawable.DrawerArrowDrawable) -> setDrawerArrowDrawable
    void setDrawerSlideAnimationEnabled(boolean) -> setDrawerSlideAnimationEnabled
    boolean isDrawerSlideAnimationEnabled() -> isDrawerSlideAnimationEnabled
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.view.View$OnClickListener getToolbarNavigationClickListener() -> getToolbarNavigationClickListener
    void setToolbarNavigationClickListener(android.view.View$OnClickListener) -> setToolbarNavigationClickListener
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setPosition(float) -> setPosition
android.support.v7.app.ActionBarDrawerToggle$1 -> android.support.v7.app.ActionBarDrawerToggle$1:
    android.support.v7.app.ActionBarDrawerToggle this$0 -> this$0
    void <init>(android.support.v7.app.ActionBarDrawerToggle) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.app.ActionBarDrawerToggle$Delegate -> android.support.v7.app.ActionBarDrawerToggle$Delegate:
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    boolean isNavigationVisible() -> isNavigationVisible
android.support.v7.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v7.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v7.app.ActionBarDrawerToggle$DummyDelegate -> android.support.v7.app.ActionBarDrawerToggle$DummyDelegate:
    android.app.Activity mActivity -> mActivity
    void <init>(android.app.Activity) -> <init>
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    boolean isNavigationVisible() -> isNavigationVisible
android.support.v7.app.ActionBarDrawerToggle$HoneycombDelegate -> android.support.v7.app.ActionBarDrawerToggle$HoneycombDelegate:
    android.app.Activity mActivity -> mActivity
    android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo mSetIndicatorInfo -> mSetIndicatorInfo
    void <init>(android.app.Activity) -> <init>
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    boolean isNavigationVisible() -> isNavigationVisible
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v7.app.ActionBarDrawerToggle$IcsDelegate -> android.support.v7.app.ActionBarDrawerToggle$IcsDelegate:
    void <init>(android.app.Activity) -> <init>
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
android.support.v7.app.ActionBarDrawerToggle$JellybeanMr2Delegate -> android.support.v7.app.ActionBarDrawerToggle$JellybeanMr2Delegate:
    android.app.Activity mActivity -> mActivity
    void <init>(android.app.Activity) -> <init>
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    boolean isNavigationVisible() -> isNavigationVisible
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v7.app.ActionBarDrawerToggle$ToolbarCompatDelegate -> android.support.v7.app.ActionBarDrawerToggle$ToolbarCompatDelegate:
    android.support.v7.widget.Toolbar mToolbar -> mToolbar
    android.graphics.drawable.Drawable mDefaultUpIndicator -> mDefaultUpIndicator
    java.lang.CharSequence mDefaultContentDescription -> mDefaultContentDescription
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    boolean isNavigationVisible() -> isNavigationVisible
android.support.v7.app.ActionBarDrawerToggleHoneycomb -> android.support.v7.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    void <init>() -> <init>
    android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarUpIndicator(android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarDescription(android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    void <clinit>() -> <clinit>
android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
    void <init>(android.app.Activity) -> <init>
android.support.v7.app.AlertController -> android.support.v7.app.AlertController:
    android.content.Context mContext -> mContext
    android.support.v7.app.AppCompatDialog mDialog -> mDialog
    android.view.Window mWindow -> mWindow
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mMessage -> mMessage
    android.widget.ListView mListView -> mListView
    android.view.View mView -> mView
    int mViewLayoutResId -> mViewLayoutResId
    int mViewSpacingLeft -> mViewSpacingLeft
    int mViewSpacingTop -> mViewSpacingTop
    int mViewSpacingRight -> mViewSpacingRight
    int mViewSpacingBottom -> mViewSpacingBottom
    boolean mViewSpacingSpecified -> mViewSpacingSpecified
    android.widget.Button mButtonPositive -> mButtonPositive
    java.lang.CharSequence mButtonPositiveText -> mButtonPositiveText
    android.os.Message mButtonPositiveMessage -> mButtonPositiveMessage
    android.widget.Button mButtonNegative -> mButtonNegative
    java.lang.CharSequence mButtonNegativeText -> mButtonNegativeText
    android.os.Message mButtonNegativeMessage -> mButtonNegativeMessage
    android.widget.Button mButtonNeutral -> mButtonNeutral
    java.lang.CharSequence mButtonNeutralText -> mButtonNeutralText
    android.os.Message mButtonNeutralMessage -> mButtonNeutralMessage
    android.support.v4.widget.NestedScrollView mScrollView -> mScrollView
    int mIconId -> mIconId
    android.graphics.drawable.Drawable mIcon -> mIcon
    android.widget.ImageView mIconView -> mIconView
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mMessageView -> mMessageView
    android.view.View mCustomTitleView -> mCustomTitleView
    android.widget.ListAdapter mAdapter -> mAdapter
    int mCheckedItem -> mCheckedItem
    int mAlertDialogLayout -> mAlertDialogLayout
    int mButtonPanelSideLayout -> mButtonPanelSideLayout
    int mListLayout -> mListLayout
    int mMultiChoiceItemLayout -> mMultiChoiceItemLayout
    int mSingleChoiceItemLayout -> mSingleChoiceItemLayout
    int mListItemLayout -> mListItemLayout
    boolean mShowTitle -> mShowTitle
    int mButtonPanelLayoutHint -> mButtonPanelLayoutHint
    android.os.Handler mHandler -> mHandler
    android.view.View$OnClickListener mButtonHandler -> mButtonHandler
    boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
    void <init>(android.content.Context,android.support.v7.app.AppCompatDialog,android.view.Window) -> <init>
    boolean canTextInput(android.view.View) -> canTextInput
    void installContent() -> installContent
    int selectContentView() -> selectContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setCustomTitle(android.view.View) -> setCustomTitle
    void setMessage(java.lang.CharSequence) -> setMessage
    void setView(int) -> setView
    void setView(android.view.View) -> setView
    void setView(android.view.View,int,int,int,int) -> setView
    void setButtonPanelLayoutHint(int) -> setButtonPanelLayoutHint
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message) -> setButton
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    int getIconAttributeResId(int) -> getIconAttributeResId
    android.widget.ListView getListView() -> getListView
    android.widget.Button getButton(int) -> getButton
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    void setupView() -> setupView
    void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    void setupTitle(android.view.ViewGroup) -> setupTitle
    void setupContent(android.view.ViewGroup) -> setupContent
    void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    void setupButtons(android.view.ViewGroup) -> setupButtons
    void centerButton(android.widget.Button) -> centerButton
android.support.v7.app.AlertController$1 -> android.support.v7.app.AlertController$1:
    android.support.v7.app.AlertController this$0 -> this$0
    void <init>(android.support.v7.app.AlertController) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.app.AlertController$2 -> android.support.v7.app.AlertController$2:
    android.view.View val$top -> val$top
    android.view.View val$bottom -> val$bottom
    android.support.v7.app.AlertController this$0 -> this$0
    void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    void onScrollChange(android.support.v4.widget.NestedScrollView,int,int,int,int) -> onScrollChange
android.support.v7.app.AlertController$3 -> android.support.v7.app.AlertController$3:
    android.view.View val$top -> val$top
    android.view.View val$bottom -> val$bottom
    android.support.v7.app.AlertController this$0 -> this$0
    void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    void run() -> run
android.support.v7.app.AlertController$4 -> android.support.v7.app.AlertController$4:
    android.view.View val$top -> val$top
    android.view.View val$bottom -> val$bottom
    android.support.v7.app.AlertController this$0 -> this$0
    void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
android.support.v7.app.AlertController$5 -> android.support.v7.app.AlertController$5:
    android.view.View val$top -> val$top
    android.view.View val$bottom -> val$bottom
    android.support.v7.app.AlertController this$0 -> this$0
    void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    void run() -> run
android.support.v7.app.AlertController$AlertParams -> android.support.v7.app.AlertController$AlertParams:
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    int mIconId -> mIconId
    android.graphics.drawable.Drawable mIcon -> mIcon
    int mIconAttrId -> mIconAttrId
    java.lang.CharSequence mTitle -> mTitle
    android.view.View mCustomTitleView -> mCustomTitleView
    java.lang.CharSequence mMessage -> mMessage
    java.lang.CharSequence mPositiveButtonText -> mPositiveButtonText
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> mPositiveButtonListener
    java.lang.CharSequence mNegativeButtonText -> mNegativeButtonText
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> mNegativeButtonListener
    java.lang.CharSequence mNeutralButtonText -> mNeutralButtonText
    android.content.DialogInterface$OnClickListener mNeutralButtonListener -> mNeutralButtonListener
    boolean mCancelable -> mCancelable
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> mOnCancelListener
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> mOnDismissListener
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> mOnKeyListener
    java.lang.CharSequence[] mItems -> mItems
    android.widget.ListAdapter mAdapter -> mAdapter
    android.content.DialogInterface$OnClickListener mOnClickListener -> mOnClickListener
    int mViewLayoutResId -> mViewLayoutResId
    android.view.View mView -> mView
    int mViewSpacingLeft -> mViewSpacingLeft
    int mViewSpacingTop -> mViewSpacingTop
    int mViewSpacingRight -> mViewSpacingRight
    int mViewSpacingBottom -> mViewSpacingBottom
    boolean mViewSpacingSpecified -> mViewSpacingSpecified
    boolean[] mCheckedItems -> mCheckedItems
    boolean mIsMultiChoice -> mIsMultiChoice
    boolean mIsSingleChoice -> mIsSingleChoice
    int mCheckedItem -> mCheckedItem
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> mOnCheckboxClickListener
    android.database.Cursor mCursor -> mCursor
    java.lang.String mLabelColumn -> mLabelColumn
    java.lang.String mIsCheckedColumn -> mIsCheckedColumn
    boolean mForceInverseBackground -> mForceInverseBackground
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener -> mOnPrepareListViewListener
    boolean mRecycleOnMeasure -> mRecycleOnMeasure
    void <init>(android.content.Context) -> <init>
    void apply(android.support.v7.app.AlertController) -> apply
    void createListView(android.support.v7.app.AlertController) -> createListView
android.support.v7.app.AlertController$AlertParams$1 -> android.support.v7.app.AlertController$AlertParams$1:
    android.support.v7.app.AlertController$RecycleListView val$listView -> val$listView
    android.support.v7.app.AlertController$AlertParams this$0 -> this$0
    void <init>(android.support.v7.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],android.support.v7.app.AlertController$RecycleListView) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.app.AlertController$AlertParams$2 -> android.support.v7.app.AlertController$AlertParams$2:
    int mLabelIndex -> mLabelIndex
    int mIsCheckedIndex -> mIsCheckedIndex
    android.support.v7.app.AlertController$RecycleListView val$listView -> val$listView
    android.support.v7.app.AlertController val$dialog -> val$dialog
    android.support.v7.app.AlertController$AlertParams this$0 -> this$0
    void <init>(android.support.v7.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,android.support.v7.app.AlertController$RecycleListView,android.support.v7.app.AlertController) -> <init>
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
android.support.v7.app.AlertController$AlertParams$3 -> android.support.v7.app.AlertController$AlertParams$3:
    android.support.v7.app.AlertController val$dialog -> val$dialog
    android.support.v7.app.AlertController$AlertParams this$0 -> this$0
    void <init>(android.support.v7.app.AlertController$AlertParams,android.support.v7.app.AlertController) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.app.AlertController$AlertParams$4 -> android.support.v7.app.AlertController$AlertParams$4:
    android.support.v7.app.AlertController$RecycleListView val$listView -> val$listView
    android.support.v7.app.AlertController val$dialog -> val$dialog
    android.support.v7.app.AlertController$AlertParams this$0 -> this$0
    void <init>(android.support.v7.app.AlertController$AlertParams,android.support.v7.app.AlertController$RecycleListView,android.support.v7.app.AlertController) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener -> android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener:
    void onPrepareListView(android.widget.ListView) -> onPrepareListView
android.support.v7.app.AlertController$ButtonHandler -> android.support.v7.app.AlertController$ButtonHandler:
    int MSG_DISMISS_DIALOG -> MSG_DISMISS_DIALOG
    java.lang.ref.WeakReference mDialog -> mDialog
    void <init>(android.content.DialogInterface) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v7.app.AlertController$CheckedItemAdapter -> android.support.v7.app.AlertController$CheckedItemAdapter:
    void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    boolean hasStableIds() -> hasStableIds
    long getItemId(int) -> getItemId
android.support.v7.app.AlertController$RecycleListView -> android.support.v7.app.AlertController$RecycleListView:
    int mPaddingTopNoTitle -> mPaddingTopNoTitle
    int mPaddingBottomNoButtons -> mPaddingBottomNoButtons
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setHasDecor(boolean,boolean) -> setHasDecor
android.support.v7.app.AlertDialog -> android.support.v7.app.AlertDialog:
    android.support.v7.app.AlertController mAlert -> mAlert
    int LAYOUT_HINT_NONE -> LAYOUT_HINT_NONE
    int LAYOUT_HINT_SIDE -> LAYOUT_HINT_SIDE
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,int) -> <init>
    void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    android.widget.Button getButton(int) -> getButton
    android.widget.ListView getListView() -> getListView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setCustomTitle(android.view.View) -> setCustomTitle
    void setMessage(java.lang.CharSequence) -> setMessage
    void setView(android.view.View) -> setView
    void setView(android.view.View,int,int,int,int) -> setView
    void setButtonPanelLayoutHint(int) -> setButtonPanelLayoutHint
    void setButton(int,java.lang.CharSequence,android.os.Message) -> setButton
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setButton
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIconAttribute(int) -> setIconAttribute
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
android.support.v7.app.AlertDialog$Builder -> android.support.v7.app.AlertDialog$Builder:
    android.support.v7.app.AlertController$AlertParams P -> P
    int mTheme -> mTheme
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,int) -> <init>
    android.content.Context getContext() -> getContext
    android.support.v7.app.AlertDialog$Builder setTitle(int) -> setTitle
    android.support.v7.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    android.support.v7.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    android.support.v7.app.AlertDialog$Builder setMessage(int) -> setMessage
    android.support.v7.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    android.support.v7.app.AlertDialog$Builder setIcon(int) -> setIcon
    android.support.v7.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.support.v7.app.AlertDialog$Builder setIconAttribute(int) -> setIconAttribute
    android.support.v7.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    android.support.v7.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    android.support.v7.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    android.support.v7.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    android.support.v7.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    android.support.v7.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    android.support.v7.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
    android.support.v7.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    android.support.v7.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    android.support.v7.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    android.support.v7.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
    android.support.v7.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    android.support.v7.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    android.support.v7.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String) -> setCursor
    android.support.v7.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    android.support.v7.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    android.support.v7.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    android.support.v7.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    android.support.v7.app.AlertDialog$Builder setView(int) -> setView
    android.support.v7.app.AlertDialog$Builder setView(android.view.View) -> setView
    android.support.v7.app.AlertDialog$Builder setView(android.view.View,int,int,int,int) -> setView
    android.support.v7.app.AlertDialog$Builder setInverseBackgroundForced(boolean) -> setInverseBackgroundForced
    android.support.v7.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean) -> setRecycleOnMeasureEnabled
    android.support.v7.app.AlertDialog create() -> create
    android.support.v7.app.AlertDialog show() -> show
android.support.v7.app.AppCompatActivity -> android.support.v7.app.AppCompatActivity:
    android.support.v7.app.AppCompatDelegate mDelegate -> mDelegate
    int mThemeId -> mThemeId
    android.content.res.Resources mResources -> mResources
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void setTheme(int) -> setTheme
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    void setSupportActionBar(android.support.v7.widget.Toolbar) -> setSupportActionBar
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onStart() -> onStart
    void onStop() -> onStop
    android.view.View findViewById(int) -> findViewById
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onDestroy() -> onDestroy
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> onSupportActionModeStarted
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> onSupportActionModeFinished
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> startSupportActionMode
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgress(int) -> setSupportProgress
    void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    boolean onSupportNavigateUp() -> onSupportNavigateUp
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
    void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    void onContentChanged() -> onContentChanged
    void onSupportContentChanged() -> onSupportContentChanged
    android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    android.support.v7.app.AppCompatDelegate getDelegate() -> getDelegate
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    android.content.res.Resources getResources() -> getResources
    boolean performMenuItemShortcut(int,android.view.KeyEvent) -> performMenuItemShortcut
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
android.support.v7.app.AppCompatCallback -> android.support.v7.app.AppCompatCallback:
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> onSupportActionModeStarted
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> onSupportActionModeFinished
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
android.support.v7.app.AppCompatDelegate -> android.support.v7.app.AppCompatDelegate:
    java.lang.String TAG -> TAG
    int MODE_NIGHT_NO -> MODE_NIGHT_NO
    int MODE_NIGHT_YES -> MODE_NIGHT_YES
    int MODE_NIGHT_AUTO -> MODE_NIGHT_AUTO
    int MODE_NIGHT_FOLLOW_SYSTEM -> MODE_NIGHT_FOLLOW_SYSTEM
    int MODE_NIGHT_UNSPECIFIED -> MODE_NIGHT_UNSPECIFIED
    int sDefaultNightMode -> sDefaultNightMode
    boolean sCompatVectorFromResourcesEnabled -> sCompatVectorFromResourcesEnabled
    int FEATURE_SUPPORT_ACTION_BAR -> FEATURE_SUPPORT_ACTION_BAR
    int FEATURE_SUPPORT_ACTION_BAR_OVERLAY -> FEATURE_SUPPORT_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
    android.support.v7.app.AppCompatDelegate create(android.app.Activity,android.support.v7.app.AppCompatCallback) -> create
    android.support.v7.app.AppCompatDelegate create(android.app.Dialog,android.support.v7.app.AppCompatCallback) -> create
    android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> create
    void <init>() -> <init>
    android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    void setSupportActionBar(android.support.v7.widget.Toolbar) -> setSupportActionBar
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStart() -> onStart
    void onStop() -> onStop
    void onPostResume() -> onPostResume
    android.view.View findViewById(int) -> findViewById
    void setContentView(android.view.View) -> setContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void onDestroy() -> onDestroy
    android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    boolean requestWindowFeature(int) -> requestWindowFeature
    boolean hasWindowFeature(int) -> hasWindowFeature
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> startSupportActionMode
    void installViewFactory() -> installViewFactory
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    void setHandleNativeActionModesEnabled(boolean) -> setHandleNativeActionModesEnabled
    boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean applyDayNight() -> applyDayNight
    void setLocalNightMode(int) -> setLocalNightMode
    void setDefaultNightMode(int) -> setDefaultNightMode
    int getDefaultNightMode() -> getDefaultNightMode
    void setCompatVectorFromResourcesEnabled(boolean) -> setCompatVectorFromResourcesEnabled
    boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    void <clinit>() -> <clinit>
android.support.v7.app.AppCompatDelegate$ApplyableNightMode -> android.support.v7.app.AppCompatDelegate$ApplyableNightMode:
android.support.v7.app.AppCompatDelegate$NightMode -> android.support.v7.app.AppCompatDelegate$NightMode:
android.support.v7.app.AppCompatDelegateImplBase -> android.support.v7.app.AppCompatDelegateImplBase:
    boolean DEBUG -> DEBUG
    boolean sInstalledExceptionHandler -> sInstalledExceptionHandler
    boolean SHOULD_INSTALL_EXCEPTION_HANDLER -> SHOULD_INSTALL_EXCEPTION_HANDLER
    java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX -> EXCEPTION_HANDLER_MESSAGE_SUFFIX
    int[] sWindowBackgroundStyleable -> sWindowBackgroundStyleable
    android.content.Context mContext -> mContext
    android.view.Window mWindow -> mWindow
    android.view.Window$Callback mOriginalWindowCallback -> mOriginalWindowCallback
    android.view.Window$Callback mAppCompatWindowCallback -> mAppCompatWindowCallback
    android.support.v7.app.AppCompatCallback mAppCompatCallback -> mAppCompatCallback
    android.support.v7.app.ActionBar mActionBar -> mActionBar
    android.view.MenuInflater mMenuInflater -> mMenuInflater
    boolean mHasActionBar -> mHasActionBar
    boolean mOverlayActionBar -> mOverlayActionBar
    boolean mOverlayActionMode -> mOverlayActionMode
    boolean mIsFloating -> mIsFloating
    boolean mWindowNoTitle -> mWindowNoTitle
    java.lang.CharSequence mTitle -> mTitle
    boolean mIsStarted -> mIsStarted
    boolean mIsDestroyed -> mIsDestroyed
    boolean mEatKeyUpEvent -> mEatKeyUpEvent
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    void initWindowDecorActionBar() -> initWindowDecorActionBar
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> wrapWindowCallback
    android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    android.support.v7.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    void setLocalNightMode(int) -> setLocalNightMode
    android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    void onStart() -> onStart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void setHandleNativeActionModesEnabled(boolean) -> setHandleNativeActionModesEnabled
    boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    boolean applyDayNight() -> applyDayNight
    boolean isDestroyed() -> isDestroyed
    boolean isStarted() -> isStarted
    android.view.Window$Callback getWindowCallback() -> getWindowCallback
    void setTitle(java.lang.CharSequence) -> setTitle
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onTitleChanged(java.lang.CharSequence) -> onTitleChanged
    java.lang.CharSequence getTitle() -> getTitle
    void <clinit>() -> <clinit>
android.support.v7.app.AppCompatDelegateImplBase$1 -> android.support.v7.app.AppCompatDelegateImplBase$1:
    java.lang.Thread$UncaughtExceptionHandler val$defHandler -> val$defHandler
    void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean shouldWrapException(java.lang.Throwable) -> shouldWrapException
android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl -> android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl:
    android.support.v7.app.AppCompatDelegateImplBase this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplBase) -> <init>
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    boolean isNavigationVisible() -> isNavigationVisible
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase -> android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase:
    android.support.v7.app.AppCompatDelegateImplBase this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplBase,android.view.Window$Callback) -> <init>
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    void onContentChanged() -> onContentChanged
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
android.support.v7.app.AppCompatDelegateImplN -> android.support.v7.app.AppCompatDelegateImplN:
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> wrapWindowCallback
android.support.v7.app.AppCompatDelegateImplN$AppCompatWindowCallbackN -> android.support.v7.app.AppCompatDelegateImplN$AppCompatWindowCallbackN:
    android.support.v7.app.AppCompatDelegateImplN this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplN,android.view.Window$Callback) -> <init>
    void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
android.support.v7.app.AppCompatDelegateImplV11 -> android.support.v7.app.AppCompatDelegateImplV11:
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    boolean hasWindowFeature(int) -> hasWindowFeature
    android.view.View callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> callActivityOnCreateView
android.support.v7.app.AppCompatDelegateImplV14 -> android.support.v7.app.AppCompatDelegateImplV14:
    java.lang.String KEY_LOCAL_NIGHT_MODE -> KEY_LOCAL_NIGHT_MODE
    int mLocalNightMode -> mLocalNightMode
    boolean mApplyDayNightCalled -> mApplyDayNightCalled
    boolean mHandleNativeActionModes -> mHandleNativeActionModes
    android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager mAutoNightModeManager -> mAutoNightModeManager
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> wrapWindowCallback
    void setHandleNativeActionModesEnabled(boolean) -> setHandleNativeActionModesEnabled
    boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    boolean applyDayNight() -> applyDayNight
    void onStart() -> onStart
    void onStop() -> onStop
    void setLocalNightMode(int) -> setLocalNightMode
    int mapNightMode(int) -> mapNightMode
    int getNightMode() -> getNightMode
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onDestroy() -> onDestroy
    boolean updateForNightMode(int) -> updateForNightMode
    void ensureAutoNightModeManager() -> ensureAutoNightModeManager
    android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager getAutoNightModeManager() -> getAutoNightModeManager
    boolean shouldRecreateOnNightModeChange() -> shouldRecreateOnNightModeChange
android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14 -> android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14:
    android.support.v7.app.AppCompatDelegateImplV14 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV14,android.view.Window$Callback) -> <init>
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager -> android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager:
    android.support.v7.app.TwilightManager mTwilightManager -> mTwilightManager
    boolean mIsNight -> mIsNight
    android.content.BroadcastReceiver mAutoTimeChangeReceiver -> mAutoTimeChangeReceiver
    android.content.IntentFilter mAutoTimeChangeReceiverFilter -> mAutoTimeChangeReceiverFilter
    android.support.v7.app.AppCompatDelegateImplV14 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV14,android.support.v7.app.TwilightManager) -> <init>
    int getApplyableNightMode() -> getApplyableNightMode
    void dispatchTimeChanged() -> dispatchTimeChanged
    void setup() -> setup
    void cleanup() -> cleanup
android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager$1 -> android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager$1:
    android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager this$1 -> this$1
    void <init>(android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.app.AppCompatDelegateImplV23 -> android.support.v7.app.AppCompatDelegateImplV23:
    android.app.UiModeManager mUiModeManager -> mUiModeManager
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> wrapWindowCallback
    int mapNightMode(int) -> mapNightMode
android.support.v7.app.AppCompatDelegateImplV23$AppCompatWindowCallbackV23 -> android.support.v7.app.AppCompatDelegateImplV23$AppCompatWindowCallbackV23:
    android.support.v7.app.AppCompatDelegateImplV23 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV23,android.view.Window$Callback) -> <init>
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
android.support.v7.app.AppCompatDelegateImplV9 -> android.support.v7.app.AppCompatDelegateImplV9:
    boolean IS_PRE_LOLLIPOP -> IS_PRE_LOLLIPOP
    android.support.v7.widget.DecorContentParent mDecorContentParent -> mDecorContentParent
    android.support.v7.app.AppCompatDelegateImplV9$ActionMenuPresenterCallback mActionMenuPresenterCallback -> mActionMenuPresenterCallback
    android.support.v7.app.AppCompatDelegateImplV9$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> mPanelMenuPresenterCallback
    android.support.v7.view.ActionMode mActionMode -> mActionMode
    android.support.v7.widget.ActionBarContextView mActionModeView -> mActionModeView
    android.widget.PopupWindow mActionModePopup -> mActionModePopup
    java.lang.Runnable mShowActionModePopup -> mShowActionModePopup
    android.support.v4.view.ViewPropertyAnimatorCompat mFadeAnim -> mFadeAnim
    boolean mSubDecorInstalled -> mSubDecorInstalled
    android.view.ViewGroup mSubDecor -> mSubDecor
    android.widget.TextView mTitleView -> mTitleView
    android.view.View mStatusGuard -> mStatusGuard
    boolean mFeatureProgress -> mFeatureProgress
    boolean mFeatureIndeterminateProgress -> mFeatureIndeterminateProgress
    boolean mClosingActionMenu -> mClosingActionMenu
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState[] mPanels -> mPanels
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState mPreparedPanel -> mPreparedPanel
    boolean mLongPressBackDown -> mLongPressBackDown
    boolean mInvalidatePanelMenuPosted -> mInvalidatePanelMenuPosted
    int mInvalidatePanelMenuFeatures -> mInvalidatePanelMenuFeatures
    java.lang.Runnable mInvalidatePanelMenuRunnable -> mInvalidatePanelMenuRunnable
    boolean mEnableDefaultActionBarUp -> mEnableDefaultActionBarUp
    android.graphics.Rect mTempRect1 -> mTempRect1
    android.graphics.Rect mTempRect2 -> mTempRect2
    android.support.v7.app.AppCompatViewInflater mAppCompatViewInflater -> mAppCompatViewInflater
    void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void initWindowDecorActionBar() -> initWindowDecorActionBar
    void setSupportActionBar(android.support.v7.widget.Toolbar) -> setSupportActionBar
    android.view.View findViewById(int) -> findViewById
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStop() -> onStop
    void onPostResume() -> onPostResume
    void setContentView(android.view.View) -> setContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onDestroy() -> onDestroy
    void ensureSubDecor() -> ensureSubDecor
    android.view.ViewGroup createSubDecor() -> createSubDecor
    void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    void applyFixedSizeWindow() -> applyFixedSizeWindow
    boolean requestWindowFeature(int) -> requestWindowFeature
    boolean hasWindowFeature(int) -> hasWindowFeature
    void onTitleChanged(java.lang.CharSequence) -> onTitleChanged
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> startSupportActionMode
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    boolean onBackPressed() -> onBackPressed
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    void installViewFactory() -> installViewFactory
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> callActivityOnCreateView
    void openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent) -> openPanel
    boolean initializePanelDecor(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState) -> initializePanelDecor
    void reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> reopenMenu
    boolean initializePanelMenu(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState) -> initializePanelMenu
    boolean initializePanelContent(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState) -> initializePanelContent
    boolean preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    void checkCloseActionMenu(android.support.v7.view.menu.MenuBuilder) -> checkCloseActionMenu
    void closePanel(int) -> closePanel
    void closePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,boolean) -> closePanel
    boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    void callOnPanelClosed(int,android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    boolean performPanelShortcut(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    void invalidatePanelMenu(int) -> invalidatePanelMenu
    void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    int updateStatusGuard(int) -> updateStatusGuard
    void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    android.view.ViewGroup getSubDecor() -> getSubDecor
    void dismissPopups() -> dismissPopups
    void <clinit>() -> <clinit>
android.support.v7.app.AppCompatDelegateImplV9$1 -> android.support.v7.app.AppCompatDelegateImplV9$1:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void run() -> run
android.support.v7.app.AppCompatDelegateImplV9$2 -> android.support.v7.app.AppCompatDelegateImplV9$2:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v7.app.AppCompatDelegateImplV9$3 -> android.support.v7.app.AppCompatDelegateImplV9$3:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
android.support.v7.app.AppCompatDelegateImplV9$4 -> android.support.v7.app.AppCompatDelegateImplV9$4:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void onAttachedFromWindow() -> onAttachedFromWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
android.support.v7.app.AppCompatDelegateImplV9$5 -> android.support.v7.app.AppCompatDelegateImplV9$5:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void run() -> run
android.support.v7.app.AppCompatDelegateImplV9$5$1 -> android.support.v7.app.AppCompatDelegateImplV9$5$1:
    android.support.v7.app.AppCompatDelegateImplV9$5 this$1 -> this$1
    void <init>(android.support.v7.app.AppCompatDelegateImplV9$5) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.app.AppCompatDelegateImplV9$6 -> android.support.v7.app.AppCompatDelegateImplV9$6:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.app.AppCompatDelegateImplV9$ActionMenuPresenterCallback -> android.support.v7.app.AppCompatDelegateImplV9$ActionMenuPresenterCallback:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9 -> android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9:
    android.support.v7.view.ActionMode$Callback mWrapped -> mWrapped
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV9,android.support.v7.view.ActionMode$Callback) -> <init>
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> onDestroyActionMode
android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9$1 -> android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9$1:
    android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9 this$1 -> this$1
    void <init>(android.support.v7.app.AppCompatDelegateImplV9$ActionModeCallbackWrapperV9) -> <init>
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView -> android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV9,android.content.Context) -> <init>
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setBackgroundResource(int) -> setBackgroundResource
    boolean isOutOfBounds(int,int) -> isOutOfBounds
android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState -> android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState:
    int featureId -> featureId
    int background -> background
    int gravity -> gravity
    int x -> x
    int y -> y
    int windowAnimations -> windowAnimations
    android.view.ViewGroup decorView -> decorView
    android.view.View shownPanelView -> shownPanelView
    android.view.View createdPanelView -> createdPanelView
    android.support.v7.view.menu.MenuBuilder menu -> menu
    android.support.v7.view.menu.ListMenuPresenter listMenuPresenter -> listMenuPresenter
    android.content.Context listPresenterContext -> listPresenterContext
    boolean isPrepared -> isPrepared
    boolean isHandled -> isHandled
    boolean isOpen -> isOpen
    boolean qwertyMode -> qwertyMode
    boolean refreshDecorView -> refreshDecorView
    boolean refreshMenuContent -> refreshMenuContent
    boolean wasLastOpen -> wasLastOpen
    android.os.Bundle frozenMenuState -> frozenMenuState
    android.os.Bundle frozenActionViewState -> frozenActionViewState
    void <init>(int) -> <init>
    boolean hasPanelItems() -> hasPanelItems
    void clearMenuPresenters() -> clearMenuPresenters
    void setStyle(android.content.Context) -> setStyle
    void setMenu(android.support.v7.view.menu.MenuBuilder) -> setMenu
    android.support.v7.view.menu.MenuView getListMenuView(android.support.v7.view.menu.MenuPresenter$Callback) -> getListMenuView
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void applyFrozenState() -> applyFrozenState
android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState -> android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState:
    int featureId -> featureId
    boolean isOpen -> isOpen
    android.os.Bundle menuState -> menuState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    void <clinit>() -> <clinit>
android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState$1 -> android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState$1:
    void <init>() -> <init>
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.app.AppCompatDelegateImplV9$PanelMenuPresenterCallback -> android.support.v7.app.AppCompatDelegateImplV9$PanelMenuPresenterCallback:
    android.support.v7.app.AppCompatDelegateImplV9 this$0 -> this$0
    void <init>(android.support.v7.app.AppCompatDelegateImplV9) -> <init>
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.app.AppCompatDialog -> android.support.v7.app.AppCompatDialog:
    android.support.v7.app.AppCompatDelegate mDelegate -> mDelegate
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,int) -> <init>
    void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    android.view.View findViewById(int) -> findViewById
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onStop() -> onStop
    boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    android.support.v7.app.AppCompatDelegate getDelegate() -> getDelegate
    int getThemeResId(android.content.Context,int) -> getThemeResId
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> onSupportActionModeStarted
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> onSupportActionModeFinished
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
android.support.v7.app.AppCompatDialogFragment -> android.support.v7.app.AppCompatDialogFragment:
    void <init>() -> <init>
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void setupDialog(android.app.Dialog,int) -> setupDialog
android.support.v7.app.AppCompatViewInflater -> android.support.v7.app.AppCompatViewInflater:
    java.lang.Class[] sConstructorSignature -> sConstructorSignature
    int[] sOnClickAttrs -> sOnClickAttrs
    java.lang.String[] sClassPrefixList -> sClassPrefixList
    java.lang.String LOG_TAG -> LOG_TAG
    java.util.Map sConstructorMap -> sConstructorMap
    java.lang.Object[] mConstructorArgs -> mConstructorArgs
    void <init>() -> <init>
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    android.view.View createView(android.content.Context,java.lang.String,java.lang.String) -> createView
    android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    void <clinit>() -> <clinit>
android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener -> android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener:
    android.view.View mHostView -> mHostView
    java.lang.String mMethodName -> mMethodName
    java.lang.reflect.Method mResolvedMethod -> mResolvedMethod
    android.content.Context mResolvedContext -> mResolvedContext
    void <init>(android.view.View,java.lang.String) -> <init>
    void onClick(android.view.View) -> onClick
    void resolveMethod(android.content.Context,java.lang.String) -> resolveMethod
android.support.v7.app.NavItemSelectedListener -> android.support.v7.app.NavItemSelectedListener:
    android.support.v7.app.ActionBar$OnNavigationListener mListener -> mListener
    void <init>(android.support.v7.app.ActionBar$OnNavigationListener) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.app.NotificationCompat -> android.support.v7.app.NotificationCompat:
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$Token getMediaSession(android.app.Notification) -> getMediaSession
android.support.v7.app.NotificationCompat$Builder -> android.support.v7.app.NotificationCompat$Builder:
    void <init>(android.content.Context) -> <init>
android.support.v7.app.NotificationCompat$DecoratedCustomViewStyle -> android.support.v7.app.NotificationCompat$DecoratedCustomViewStyle:
    void <init>() -> <init>
android.support.v7.app.NotificationCompat$DecoratedMediaCustomViewStyle -> android.support.v7.app.NotificationCompat$DecoratedMediaCustomViewStyle:
    void <init>() -> <init>
android.support.v7.app.NotificationCompat$MediaStyle -> android.support.v7.app.NotificationCompat$MediaStyle:
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Builder) -> <init>
    android.support.v7.app.NotificationCompat$MediaStyle setShowActionsInCompactView(int[]) -> setShowActionsInCompactView
    android.support.v7.app.NotificationCompat$MediaStyle setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token) -> setMediaSession
    android.support.v7.app.NotificationCompat$MediaStyle setShowCancelButton(boolean) -> setShowCancelButton
    android.support.v7.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent) -> setCancelButtonIntent
    android.support.v4.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent) -> setCancelButtonIntent
    android.support.v4.media.app.NotificationCompat$MediaStyle setShowCancelButton(boolean) -> setShowCancelButton
    android.support.v4.media.app.NotificationCompat$MediaStyle setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token) -> setMediaSession
    android.support.v4.media.app.NotificationCompat$MediaStyle setShowActionsInCompactView(int[]) -> setShowActionsInCompactView
android.support.v7.app.ResourcesFlusher -> android.support.v7.app.ResourcesFlusher:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sDrawableCacheField -> sDrawableCacheField
    boolean sDrawableCacheFieldFetched -> sDrawableCacheFieldFetched
    java.lang.Class sThemedResourceCacheClazz -> sThemedResourceCacheClazz
    boolean sThemedResourceCacheClazzFetched -> sThemedResourceCacheClazzFetched
    java.lang.reflect.Field sThemedResourceCache_mUnthemedEntriesField -> sThemedResourceCache_mUnthemedEntriesField
    boolean sThemedResourceCache_mUnthemedEntriesFieldFetched -> sThemedResourceCache_mUnthemedEntriesFieldFetched
    java.lang.reflect.Field sResourcesImplField -> sResourcesImplField
    boolean sResourcesImplFieldFetched -> sResourcesImplFieldFetched
    void <init>() -> <init>
    boolean flush(android.content.res.Resources) -> flush
    boolean flushLollipops(android.content.res.Resources) -> flushLollipops
    boolean flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    boolean flushNougats(android.content.res.Resources) -> flushNougats
    boolean flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
android.support.v7.app.ToolbarActionBar -> android.support.v7.app.ToolbarActionBar:
    android.support.v7.widget.DecorToolbar mDecorToolbar -> mDecorToolbar
    boolean mToolbarMenuPrepared -> mToolbarMenuPrepared
    android.view.Window$Callback mWindowCallback -> mWindowCallback
    boolean mMenuCallbackSet -> mMenuCallbackSet
    boolean mLastMenuVisibility -> mLastMenuVisibility
    java.util.ArrayList mMenuVisibilityListeners -> mMenuVisibilityListeners
    android.support.v7.view.menu.ListMenuPresenter mListMenuPresenter -> mListMenuPresenter
    java.lang.Runnable mMenuInvalidator -> mMenuInvalidator
    android.support.v7.widget.Toolbar$OnMenuItemClickListener mMenuClicker -> mMenuClicker
    void <init>(android.support.v7.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    android.view.Window$Callback getWrappedWindowCallback() -> getWrappedWindowCallback
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setElevation(float) -> setElevation
    float getElevation() -> getElevation
    android.content.Context getThemedContext() -> getThemedContext
    boolean isTitleTruncated() -> isTitleTruncated
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    boolean requestFocus() -> requestFocus
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.support.v7.app.ActionBar$Tab newTab() -> newTab
    void addTab(android.support.v7.app.ActionBar$Tab) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,boolean) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(android.support.v7.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(android.support.v7.app.ActionBar$Tab) -> selectTab
    android.support.v7.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    android.support.v7.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    boolean openOptionsMenu() -> openOptionsMenu
    boolean closeOptionsMenu() -> closeOptionsMenu
    boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean collapseActionView() -> collapseActionView
    void populateOptionsMenu() -> populateOptionsMenu
    boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    void onDestroy() -> onDestroy
    void addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    android.view.Menu getMenu() -> getMenu
android.support.v7.app.ToolbarActionBar$1 -> android.support.v7.app.ToolbarActionBar$1:
    android.support.v7.app.ToolbarActionBar this$0 -> this$0
    void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    void run() -> run
android.support.v7.app.ToolbarActionBar$2 -> android.support.v7.app.ToolbarActionBar$2:
    android.support.v7.app.ToolbarActionBar this$0 -> this$0
    void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.app.ToolbarActionBar$ActionMenuPresenterCallback -> android.support.v7.app.ToolbarActionBar$ActionMenuPresenterCallback:
    boolean mClosingActionMenu -> mClosingActionMenu
    android.support.v7.app.ToolbarActionBar this$0 -> this$0
    void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
android.support.v7.app.ToolbarActionBar$MenuBuilderCallback -> android.support.v7.app.ToolbarActionBar$MenuBuilderCallback:
    android.support.v7.app.ToolbarActionBar this$0 -> this$0
    void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.app.ToolbarActionBar$ToolbarCallbackWrapper -> android.support.v7.app.ToolbarActionBar$ToolbarCallbackWrapper:
    android.support.v7.app.ToolbarActionBar this$0 -> this$0
    void <init>(android.support.v7.app.ToolbarActionBar,android.view.Window$Callback) -> <init>
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    android.view.View onCreatePanelView(int) -> onCreatePanelView
android.support.v7.app.TwilightCalculator -> android.support.v7.app.TwilightCalculator:
    android.support.v7.app.TwilightCalculator sInstance -> sInstance
    int DAY -> DAY
    int NIGHT -> NIGHT
    float DEGREES_TO_RADIANS -> DEGREES_TO_RADIANS
    float J0 -> J0
    float ALTIDUTE_CORRECTION_CIVIL_TWILIGHT -> ALTIDUTE_CORRECTION_CIVIL_TWILIGHT
    float C1 -> C1
    float C2 -> C2
    float C3 -> C3
    float OBLIQUITY -> OBLIQUITY
    long UTC_2000 -> UTC_2000
    long sunset -> sunset
    long sunrise -> sunrise
    int state -> state
    void <init>() -> <init>
    android.support.v7.app.TwilightCalculator getInstance() -> getInstance
    void calculateTwilight(long,double,double) -> calculateTwilight
android.support.v7.app.TwilightManager -> android.support.v7.app.TwilightManager:
    java.lang.String TAG -> TAG
    int SUNRISE -> SUNRISE
    int SUNSET -> SUNSET
    android.support.v7.app.TwilightManager sInstance -> sInstance
    android.content.Context mContext -> mContext
    android.location.LocationManager mLocationManager -> mLocationManager
    android.support.v7.app.TwilightManager$TwilightState mTwilightState -> mTwilightState
    android.support.v7.app.TwilightManager getInstance(android.content.Context) -> getInstance
    void setInstance(android.support.v7.app.TwilightManager) -> setInstance
    void <init>(android.content.Context,android.location.LocationManager) -> <init>
    boolean isNight() -> isNight
    android.location.Location getLastKnownLocation() -> getLastKnownLocation
    android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    boolean isStateValid() -> isStateValid
    void updateState(android.location.Location) -> updateState
android.support.v7.app.TwilightManager$TwilightState -> android.support.v7.app.TwilightManager$TwilightState:
    boolean isNight -> isNight
    long yesterdaySunset -> yesterdaySunset
    long todaySunrise -> todaySunrise
    long todaySunset -> todaySunset
    long tomorrowSunrise -> tomorrowSunrise
    long nextUpdate -> nextUpdate
    void <init>() -> <init>
android.support.v7.app.WindowDecorActionBar -> android.support.v7.app.WindowDecorActionBar:
    java.lang.String TAG -> TAG
    android.view.animation.Interpolator sHideInterpolator -> sHideInterpolator
    android.view.animation.Interpolator sShowInterpolator -> sShowInterpolator
    android.content.Context mContext -> mContext
    android.content.Context mThemedContext -> mThemedContext
    android.app.Activity mActivity -> mActivity
    android.app.Dialog mDialog -> mDialog
    android.support.v7.widget.ActionBarOverlayLayout mOverlayLayout -> mOverlayLayout
    android.support.v7.widget.ActionBarContainer mContainerView -> mContainerView
    android.support.v7.widget.DecorToolbar mDecorToolbar -> mDecorToolbar
    android.support.v7.widget.ActionBarContextView mContextView -> mContextView
    android.view.View mContentView -> mContentView
    android.support.v7.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    java.util.ArrayList mTabs -> mTabs
    android.support.v7.app.WindowDecorActionBar$TabImpl mSelectedTab -> mSelectedTab
    int mSavedTabPosition -> mSavedTabPosition
    boolean mDisplayHomeAsUpSet -> mDisplayHomeAsUpSet
    android.support.v7.app.WindowDecorActionBar$ActionModeImpl mActionMode -> mActionMode
    android.support.v7.view.ActionMode mDeferredDestroyActionMode -> mDeferredDestroyActionMode
    android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback -> mDeferredModeDestroyCallback
    boolean mLastMenuVisibility -> mLastMenuVisibility
    java.util.ArrayList mMenuVisibilityListeners -> mMenuVisibilityListeners
    int INVALID_POSITION -> INVALID_POSITION
    long FADE_OUT_DURATION_MS -> FADE_OUT_DURATION_MS
    long FADE_IN_DURATION_MS -> FADE_IN_DURATION_MS
    boolean mHasEmbeddedTabs -> mHasEmbeddedTabs
    int mCurWindowVisibility -> mCurWindowVisibility
    boolean mContentAnimations -> mContentAnimations
    boolean mHiddenByApp -> mHiddenByApp
    boolean mHiddenBySystem -> mHiddenBySystem
    boolean mShowingForMode -> mShowingForMode
    boolean mNowShowing -> mNowShowing
    android.support.v7.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> mCurrentShowAnim
    boolean mShowHideAnimationEnabled -> mShowHideAnimationEnabled
    boolean mHideOnContentScroll -> mHideOnContentScroll
    android.support.v4.view.ViewPropertyAnimatorListener mHideListener -> mHideListener
    android.support.v4.view.ViewPropertyAnimatorListener mShowListener -> mShowListener
    android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> mUpdateListener
    boolean $assertionsDisabled -> $assertionsDisabled
    void <init>(android.app.Activity,boolean) -> <init>
    void <init>(android.app.Dialog) -> <init>
    void <init>(android.view.View) -> <init>
    void init(android.view.View) -> init
    android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    void setElevation(float) -> setElevation
    float getElevation() -> getElevation
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    void ensureTabsExist() -> ensureTabsExist
    void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    void setCustomView(int) -> setCustomView
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    void removeAllTabs() -> removeAllTabs
    void cleanupTabs() -> cleanupTabs
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    boolean requestFocus() -> requestFocus
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> startActionMode
    void configureTab(android.support.v7.app.ActionBar$Tab,int) -> configureTab
    void addTab(android.support.v7.app.ActionBar$Tab) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,boolean) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int,boolean) -> addTab
    android.support.v7.app.ActionBar$Tab newTab() -> newTab
    void removeTab(android.support.v7.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void selectTab(android.support.v7.app.ActionBar$Tab) -> selectTab
    android.support.v7.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    int getHeight() -> getHeight
    void enableContentAnimations(boolean) -> enableContentAnimations
    void show() -> show
    void showForActionMode() -> showForActionMode
    void showForSystem() -> showForSystem
    void hide() -> hide
    void hideForActionMode() -> hideForActionMode
    void hideForSystem() -> hideForSystem
    void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    int getHideOffset() -> getHideOffset
    void setHideOffset(int) -> setHideOffset
    boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    void updateVisibility(boolean) -> updateVisibility
    void doShow(boolean) -> doShow
    void doHide(boolean) -> doHide
    boolean isShowing() -> isShowing
    void animateToMode(boolean) -> animateToMode
    boolean shouldAnimateContextView() -> shouldAnimateContextView
    android.content.Context getThemedContext() -> getThemedContext
    boolean isTitleTruncated() -> isTitleTruncated
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    void onContentScrollStarted() -> onContentScrollStarted
    void onContentScrollStopped() -> onContentScrollStopped
    boolean collapseActionView() -> collapseActionView
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams) -> setCustomView
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    int getTabCount() -> getTabCount
    void setNavigationMode(int) -> setNavigationMode
    android.support.v7.app.ActionBar$Tab getTabAt(int) -> getTabAt
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasIcon() -> hasIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    boolean hasLogo() -> hasLogo
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    void <clinit>() -> <clinit>
android.support.v7.app.WindowDecorActionBar$1 -> android.support.v7.app.WindowDecorActionBar$1:
    android.support.v7.app.WindowDecorActionBar this$0 -> this$0
    void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.app.WindowDecorActionBar$2 -> android.support.v7.app.WindowDecorActionBar$2:
    android.support.v7.app.WindowDecorActionBar this$0 -> this$0
    void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.app.WindowDecorActionBar$3 -> android.support.v7.app.WindowDecorActionBar$3:
    android.support.v7.app.WindowDecorActionBar this$0 -> this$0
    void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    void onAnimationUpdate(android.view.View) -> onAnimationUpdate
android.support.v7.app.WindowDecorActionBar$ActionModeImpl -> android.support.v7.app.WindowDecorActionBar$ActionModeImpl:
    android.content.Context mActionModeContext -> mActionModeContext
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.view.ActionMode$Callback mCallback -> mCallback
    java.lang.ref.WeakReference mCustomView -> mCustomView
    android.support.v7.app.WindowDecorActionBar this$0 -> this$0
    void <init>(android.support.v7.app.WindowDecorActionBar,android.content.Context,android.support.v7.view.ActionMode$Callback) -> <init>
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    android.view.Menu getMenu() -> getMenu
    void finish() -> finish
    void invalidate() -> invalidate
    boolean dispatchOnCreate() -> dispatchOnCreate
    void setCustomView(android.view.View) -> setCustomView
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
    android.view.View getCustomView() -> getCustomView
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(android.support.v7.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.app.WindowDecorActionBar$TabImpl -> android.support.v7.app.WindowDecorActionBar$TabImpl:
    android.support.v7.app.ActionBar$TabListener mCallback -> mCallback
    java.lang.Object mTag -> mTag
    android.graphics.drawable.Drawable mIcon -> mIcon
    java.lang.CharSequence mText -> mText
    java.lang.CharSequence mContentDesc -> mContentDesc
    int mPosition -> mPosition
    android.view.View mCustomView -> mCustomView
    android.support.v7.app.WindowDecorActionBar this$0 -> this$0
    void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    java.lang.Object getTag() -> getTag
    android.support.v7.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    android.support.v7.app.ActionBar$TabListener getCallback() -> getCallback
    android.support.v7.app.ActionBar$Tab setTabListener(android.support.v7.app.ActionBar$TabListener) -> setTabListener
    android.view.View getCustomView() -> getCustomView
    android.support.v7.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    android.support.v7.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.graphics.drawable.Drawable getIcon() -> getIcon
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    java.lang.CharSequence getText() -> getText
    android.support.v7.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.support.v7.app.ActionBar$Tab setIcon(int) -> setIcon
    android.support.v7.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    android.support.v7.app.ActionBar$Tab setText(int) -> setText
    void select() -> select
    android.support.v7.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    android.support.v7.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
android.support.v7.appcompat.BuildConfig -> android.support.v7.appcompat.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.v7.appcompat.R -> android.support.v7.appcompat.R:
    void <init>() -> <init>
android.support.v7.appcompat.R$anim -> android.support.v7.appcompat.R$anim:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_grow_fade_in_from_bottom -> abc_grow_fade_in_from_bottom
    int abc_popup_enter -> abc_popup_enter
    int abc_popup_exit -> abc_popup_exit
    int abc_shrink_fade_out_from_bottom -> abc_shrink_fade_out_from_bottom
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
    int tooltip_enter -> tooltip_enter
    int tooltip_exit -> tooltip_exit
    void <init>() -> <init>
android.support.v7.appcompat.R$attr -> android.support.v7.appcompat.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogButtonGroupStyle -> alertDialogButtonGroupStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int allowStacking -> allowStacking
    int alpha -> alpha
    int alphabeticModifiers -> alphabeticModifiers
    int arrowHeadLength -> arrowHeadLength
    int arrowShaftLength -> arrowShaftLength
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int autoSizeMaxTextSize -> autoSizeMaxTextSize
    int autoSizeMinTextSize -> autoSizeMinTextSize
    int autoSizePresetSizes -> autoSizePresetSizes
    int autoSizeStepGranularity -> autoSizeStepGranularity
    int autoSizeTextType -> autoSizeTextType
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int backgroundTint -> backgroundTint
    int backgroundTintMode -> backgroundTintMode
    int barLength -> barLength
    int borderlessButtonStyle -> borderlessButtonStyle
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarNegativeButtonStyle -> buttonBarNegativeButtonStyle
    int buttonBarNeutralButtonStyle -> buttonBarNeutralButtonStyle
    int buttonBarPositiveButtonStyle -> buttonBarPositiveButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int buttonGravity -> buttonGravity
    int buttonPanelSideLayout -> buttonPanelSideLayout
    int buttonStyle -> buttonStyle
    int buttonStyleSmall -> buttonStyleSmall
    int buttonTint -> buttonTint
    int buttonTintMode -> buttonTintMode
    int checkboxStyle -> checkboxStyle
    int checkedTextViewStyle -> checkedTextViewStyle
    int closeIcon -> closeIcon
    int closeItemLayout -> closeItemLayout
    int collapseContentDescription -> collapseContentDescription
    int collapseIcon -> collapseIcon
    int color -> color
    int colorAccent -> colorAccent
    int colorBackgroundFloating -> colorBackgroundFloating
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorError -> colorError
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int commitIcon -> commitIcon
    int contentDescription -> contentDescription
    int contentInsetEnd -> contentInsetEnd
    int contentInsetEndWithActions -> contentInsetEndWithActions
    int contentInsetLeft -> contentInsetLeft
    int contentInsetRight -> contentInsetRight
    int contentInsetStart -> contentInsetStart
    int contentInsetStartWithNavigation -> contentInsetStartWithNavigation
    int controlBackground -> controlBackground
    int customNavigationLayout -> customNavigationLayout
    int defaultQueryHint -> defaultQueryHint
    int dialogPreferredPadding -> dialogPreferredPadding
    int dialogTheme -> dialogTheme
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int drawableSize -> drawableSize
    int drawerArrowStyle -> drawerArrowStyle
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int editTextBackground -> editTextBackground
    int editTextColor -> editTextColor
    int editTextStyle -> editTextStyle
    int elevation -> elevation
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int font -> font
    int fontFamily -> fontFamily
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    int gapBetweenBars -> gapBetweenBars
    int goIcon -> goIcon
    int height -> height
    int hideOnContentScroll -> hideOnContentScroll
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconTint -> iconTint
    int iconTintMode -> iconTintMode
    int iconifiedByDefault -> iconifiedByDefault
    int imageButtonStyle -> imageButtonStyle
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int layout -> layout
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listMenuViewStyle -> listMenuViewStyle
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int logoDescription -> logoDescription
    int maxButtonHeight -> maxButtonHeight
    int measureWithLargestChild -> measureWithLargestChild
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationContentDescription -> navigationContentDescription
    int navigationIcon -> navigationIcon
    int navigationMode -> navigationMode
    int numericModifiers -> numericModifiers
    int overlapAnchor -> overlapAnchor
    int paddingBottomNoButtons -> paddingBottomNoButtons
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int paddingTopNoTitle -> paddingTopNoTitle
    int panelBackground -> panelBackground
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupTheme -> popupTheme
    int popupWindowStyle -> popupWindowStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryBackground -> queryBackground
    int queryHint -> queryHint
    int radioButtonStyle -> radioButtonStyle
    int ratingBarStyle -> ratingBarStyle
    int ratingBarStyleIndicator -> ratingBarStyleIndicator
    int ratingBarStyleSmall -> ratingBarStyleSmall
    int searchHintIcon -> searchHintIcon
    int searchIcon -> searchIcon
    int searchViewStyle -> searchViewStyle
    int seekBarStyle -> seekBarStyle
    int selectableItemBackground -> selectableItemBackground
    int selectableItemBackgroundBorderless -> selectableItemBackgroundBorderless
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int showText -> showText
    int showTitle -> showTitle
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int spinBars -> spinBars
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerStyle -> spinnerStyle
    int splitTrack -> splitTrack
    int srcCompat -> srcCompat
    int state_above_anchor -> state_above_anchor
    int subMenuArrow -> subMenuArrow
    int submitBackground -> submitBackground
    int subtitle -> subtitle
    int subtitleTextAppearance -> subtitleTextAppearance
    int subtitleTextColor -> subtitleTextColor
    int subtitleTextStyle -> subtitleTextStyle
    int suggestionRowLayout -> suggestionRowLayout
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSecondary -> textAppearanceListItemSecondary
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearancePopupMenuHeader -> textAppearancePopupMenuHeader
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorSearchUrl -> textColorSearchUrl
    int theme -> theme
    int thickness -> thickness
    int thumbTextPadding -> thumbTextPadding
    int thumbTint -> thumbTint
    int thumbTintMode -> thumbTintMode
    int tickMark -> tickMark
    int tickMarkTint -> tickMarkTint
    int tickMarkTintMode -> tickMarkTintMode
    int tint -> tint
    int tintMode -> tintMode
    int title -> title
    int titleMargin -> titleMargin
    int titleMarginBottom -> titleMarginBottom
    int titleMarginEnd -> titleMarginEnd
    int titleMarginStart -> titleMarginStart
    int titleMarginTop -> titleMarginTop
    int titleMargins -> titleMargins
    int titleTextAppearance -> titleTextAppearance
    int titleTextColor -> titleTextColor
    int titleTextStyle -> titleTextStyle
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarStyle -> toolbarStyle
    int tooltipForegroundColor -> tooltipForegroundColor
    int tooltipFrameBackground -> tooltipFrameBackground
    int tooltipText -> tooltipText
    int track -> track
    int trackTint -> trackTint
    int trackTintMode -> trackTintMode
    int voiceIcon -> voiceIcon
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    void <init>() -> <init>
android.support.v7.appcompat.R$bool -> android.support.v7.appcompat.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    int abc_allow_stacked_button_bar -> abc_allow_stacked_button_bar
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_closeDialogWhenTouchOutside -> abc_config_closeDialogWhenTouchOutside
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    void <init>() -> <init>
android.support.v7.appcompat.R$color -> android.support.v7.appcompat.R$color:
    int abc_background_cache_hint_selector_material_dark -> abc_background_cache_hint_selector_material_dark
    int abc_background_cache_hint_selector_material_light -> abc_background_cache_hint_selector_material_light
    int abc_btn_colored_borderless_text_material -> abc_btn_colored_borderless_text_material
    int abc_btn_colored_text_material -> abc_btn_colored_text_material
    int abc_color_highlight_material -> abc_color_highlight_material
    int abc_hint_foreground_material_dark -> abc_hint_foreground_material_dark
    int abc_hint_foreground_material_light -> abc_hint_foreground_material_light
    int abc_input_method_navigation_guard -> abc_input_method_navigation_guard
    int abc_primary_text_disable_only_material_dark -> abc_primary_text_disable_only_material_dark
    int abc_primary_text_disable_only_material_light -> abc_primary_text_disable_only_material_light
    int abc_primary_text_material_dark -> abc_primary_text_material_dark
    int abc_primary_text_material_light -> abc_primary_text_material_light
    int abc_search_url_text -> abc_search_url_text
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int abc_secondary_text_material_dark -> abc_secondary_text_material_dark
    int abc_secondary_text_material_light -> abc_secondary_text_material_light
    int abc_tint_btn_checkable -> abc_tint_btn_checkable
    int abc_tint_default -> abc_tint_default
    int abc_tint_edittext -> abc_tint_edittext
    int abc_tint_seek_thumb -> abc_tint_seek_thumb
    int abc_tint_spinner -> abc_tint_spinner
    int abc_tint_switch_track -> abc_tint_switch_track
    int accent_material_dark -> accent_material_dark
    int accent_material_light -> accent_material_light
    int background_floating_material_dark -> background_floating_material_dark
    int background_floating_material_light -> background_floating_material_light
    int background_material_dark -> background_material_dark
    int background_material_light -> background_material_light
    int bright_foreground_disabled_material_dark -> bright_foreground_disabled_material_dark
    int bright_foreground_disabled_material_light -> bright_foreground_disabled_material_light
    int bright_foreground_inverse_material_dark -> bright_foreground_inverse_material_dark
    int bright_foreground_inverse_material_light -> bright_foreground_inverse_material_light
    int bright_foreground_material_dark -> bright_foreground_material_dark
    int bright_foreground_material_light -> bright_foreground_material_light
    int button_material_dark -> button_material_dark
    int button_material_light -> button_material_light
    int dim_foreground_disabled_material_dark -> dim_foreground_disabled_material_dark
    int dim_foreground_disabled_material_light -> dim_foreground_disabled_material_light
    int dim_foreground_material_dark -> dim_foreground_material_dark
    int dim_foreground_material_light -> dim_foreground_material_light
    int error_color_material -> error_color_material
    int foreground_material_dark -> foreground_material_dark
    int foreground_material_light -> foreground_material_light
    int highlighted_text_material_dark -> highlighted_text_material_dark
    int highlighted_text_material_light -> highlighted_text_material_light
    int material_blue_grey_800 -> material_blue_grey_800
    int material_blue_grey_900 -> material_blue_grey_900
    int material_blue_grey_950 -> material_blue_grey_950
    int material_deep_teal_200 -> material_deep_teal_200
    int material_deep_teal_500 -> material_deep_teal_500
    int material_grey_100 -> material_grey_100
    int material_grey_300 -> material_grey_300
    int material_grey_50 -> material_grey_50
    int material_grey_600 -> material_grey_600
    int material_grey_800 -> material_grey_800
    int material_grey_850 -> material_grey_850
    int material_grey_900 -> material_grey_900
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int notification_material_background_media_default_color -> notification_material_background_media_default_color
    int primary_dark_material_dark -> primary_dark_material_dark
    int primary_dark_material_light -> primary_dark_material_light
    int primary_material_dark -> primary_material_dark
    int primary_material_light -> primary_material_light
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int primary_text_default_material_light -> primary_text_default_material_light
    int primary_text_disabled_material_dark -> primary_text_disabled_material_dark
    int primary_text_disabled_material_light -> primary_text_disabled_material_light
    int ripple_material_dark -> ripple_material_dark
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    int secondary_text_disabled_material_dark -> secondary_text_disabled_material_dark
    int secondary_text_disabled_material_light -> secondary_text_disabled_material_light
    int switch_thumb_disabled_material_dark -> switch_thumb_disabled_material_dark
    int switch_thumb_disabled_material_light -> switch_thumb_disabled_material_light
    int switch_thumb_material_dark -> switch_thumb_material_dark
    int switch_thumb_material_light -> switch_thumb_material_light
    int switch_thumb_normal_material_dark -> switch_thumb_normal_material_dark
    int switch_thumb_normal_material_light -> switch_thumb_normal_material_light
    int tooltip_background_dark -> tooltip_background_dark
    int tooltip_background_light -> tooltip_background_light
    void <init>() -> <init>
android.support.v7.appcompat.R$dimen -> android.support.v7.appcompat.R$dimen:
    int abc_action_bar_content_inset_material -> abc_action_bar_content_inset_material
    int abc_action_bar_content_inset_with_nav -> abc_action_bar_content_inset_with_nav
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_end_material -> abc_action_bar_default_padding_end_material
    int abc_action_bar_default_padding_start_material -> abc_action_bar_default_padding_start_material
    int abc_action_bar_elevation_material -> abc_action_bar_elevation_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_overflow_padding_end_material -> abc_action_bar_overflow_padding_end_material
    int abc_action_bar_overflow_padding_start_material -> abc_action_bar_overflow_padding_start_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_alert_dialog_button_bar_height -> abc_alert_dialog_button_bar_height
    int abc_button_inset_horizontal_material -> abc_button_inset_horizontal_material
    int abc_button_inset_vertical_material -> abc_button_inset_vertical_material
    int abc_button_padding_horizontal_material -> abc_button_padding_horizontal_material
    int abc_button_padding_vertical_material -> abc_button_padding_vertical_material
    int abc_cascading_menus_min_smallest_width -> abc_cascading_menus_min_smallest_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_corner_material -> abc_control_corner_material
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dialog_fixed_height_major -> abc_dialog_fixed_height_major
    int abc_dialog_fixed_height_minor -> abc_dialog_fixed_height_minor
    int abc_dialog_fixed_width_major -> abc_dialog_fixed_width_major
    int abc_dialog_fixed_width_minor -> abc_dialog_fixed_width_minor
    int abc_dialog_list_padding_bottom_no_buttons -> abc_dialog_list_padding_bottom_no_buttons
    int abc_dialog_list_padding_top_no_title -> abc_dialog_list_padding_top_no_title
    int abc_dialog_min_width_major -> abc_dialog_min_width_major
    int abc_dialog_min_width_minor -> abc_dialog_min_width_minor
    int abc_dialog_padding_material -> abc_dialog_padding_material
    int abc_dialog_padding_top_material -> abc_dialog_padding_top_material
    int abc_dialog_title_divider_material -> abc_dialog_title_divider_material
    int abc_disabled_alpha_material_dark -> abc_disabled_alpha_material_dark
    int abc_disabled_alpha_material_light -> abc_disabled_alpha_material_light
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_edit_text_inset_bottom_material -> abc_edit_text_inset_bottom_material
    int abc_edit_text_inset_horizontal_material -> abc_edit_text_inset_horizontal_material
    int abc_edit_text_inset_top_material -> abc_edit_text_inset_top_material
    int abc_floating_window_z -> abc_floating_window_z
    int abc_list_item_padding_horizontal_material -> abc_list_item_padding_horizontal_material
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_progress_bar_height_material -> abc_progress_bar_height_material
    int abc_search_view_preferred_height -> abc_search_view_preferred_height
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_seekbar_track_background_height_material -> abc_seekbar_track_background_height_material
    int abc_seekbar_track_progress_height_material -> abc_seekbar_track_progress_height_material
    int abc_select_dialog_padding_start_material -> abc_select_dialog_padding_start_material
    int abc_switch_padding -> abc_switch_padding
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_header_material -> abc_text_size_menu_header_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int highlight_alpha_material_colored -> highlight_alpha_material_colored
    int highlight_alpha_material_dark -> highlight_alpha_material_dark
    int highlight_alpha_material_light -> highlight_alpha_material_light
    int hint_alpha_material_dark -> hint_alpha_material_dark
    int hint_alpha_material_light -> hint_alpha_material_light
    int hint_pressed_alpha_material_dark -> hint_pressed_alpha_material_dark
    int hint_pressed_alpha_material_light -> hint_pressed_alpha_material_light
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    int tooltip_corner_radius -> tooltip_corner_radius
    int tooltip_horizontal_padding -> tooltip_horizontal_padding
    int tooltip_margin -> tooltip_margin
    int tooltip_precise_anchor_extra_offset -> tooltip_precise_anchor_extra_offset
    int tooltip_precise_anchor_threshold -> tooltip_precise_anchor_threshold
    int tooltip_vertical_padding -> tooltip_vertical_padding
    int tooltip_y_offset_non_touch -> tooltip_y_offset_non_touch
    int tooltip_y_offset_touch -> tooltip_y_offset_touch
    void <init>() -> <init>
android.support.v7.appcompat.R$drawable -> android.support.v7.appcompat.R$drawable:
    int abc_ab_share_pack_mtrl_alpha -> abc_ab_share_pack_mtrl_alpha
    int abc_action_bar_item_background_material -> abc_action_bar_item_background_material
    int abc_btn_borderless_material -> abc_btn_borderless_material
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_colored_material -> abc_btn_colored_material
    int abc_btn_default_mtrl_shape -> abc_btn_default_mtrl_shape
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_control_background_material -> abc_control_background_material
    int abc_dialog_material_background -> abc_dialog_material_background
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_material -> abc_ic_ab_back_material
    int abc_ic_arrow_drop_right_black_24dp -> abc_ic_arrow_drop_right_black_24dp
    int abc_ic_clear_material -> abc_ic_clear_material
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_material -> abc_ic_go_search_api_material
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_overflow_material -> abc_ic_menu_overflow_material
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_material -> abc_ic_search_api_material
    int abc_ic_star_black_16dp -> abc_ic_star_black_16dp
    int abc_ic_star_black_36dp -> abc_ic_star_black_36dp
    int abc_ic_star_black_48dp -> abc_ic_star_black_48dp
    int abc_ic_star_half_black_16dp -> abc_ic_star_half_black_16dp
    int abc_ic_star_half_black_36dp -> abc_ic_star_half_black_36dp
    int abc_ic_star_half_black_48dp -> abc_ic_star_half_black_48dp
    int abc_ic_voice_search_api_material -> abc_ic_voice_search_api_material
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_ratingbar_indicator_material -> abc_ratingbar_indicator_material
    int abc_ratingbar_material -> abc_ratingbar_material
    int abc_ratingbar_small_material -> abc_ratingbar_small_material
    int abc_scrubber_control_off_mtrl_alpha -> abc_scrubber_control_off_mtrl_alpha
    int abc_scrubber_control_to_pressed_mtrl_000 -> abc_scrubber_control_to_pressed_mtrl_000
    int abc_scrubber_control_to_pressed_mtrl_005 -> abc_scrubber_control_to_pressed_mtrl_005
    int abc_scrubber_primary_mtrl_alpha -> abc_scrubber_primary_mtrl_alpha
    int abc_scrubber_track_mtrl_alpha -> abc_scrubber_track_mtrl_alpha
    int abc_seekbar_thumb_material -> abc_seekbar_thumb_material
    int abc_seekbar_tick_mark_material -> abc_seekbar_tick_mark_material
    int abc_seekbar_track_material -> abc_seekbar_track_material
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_spinner_textfield_background_material -> abc_spinner_textfield_background_material
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_text_cursor_material -> abc_text_cursor_material
    int abc_text_select_handle_left_mtrl_dark -> abc_text_select_handle_left_mtrl_dark
    int abc_text_select_handle_left_mtrl_light -> abc_text_select_handle_left_mtrl_light
    int abc_text_select_handle_middle_mtrl_dark -> abc_text_select_handle_middle_mtrl_dark
    int abc_text_select_handle_middle_mtrl_light -> abc_text_select_handle_middle_mtrl_light
    int abc_text_select_handle_right_mtrl_dark -> abc_text_select_handle_right_mtrl_dark
    int abc_text_select_handle_right_mtrl_light -> abc_text_select_handle_right_mtrl_light
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int abc_vector_test -> abc_vector_test
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    int tooltip_frame_dark -> tooltip_frame_dark
    int tooltip_frame_light -> tooltip_frame_light
    void <init>() -> <init>
android.support.v7.appcompat.R$id -> android.support.v7.appcompat.R$id:
    int action0 -> action0
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_container -> action_container
    int action_context_bar -> action_context_bar
    int action_divider -> action_divider
    int action_image -> action_image
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int action_text -> action_text
    int actions -> actions
    int activity_chooser_view_content -> activity_chooser_view_content
    int add -> add
    int alertTitle -> alertTitle
    int async -> async
    int blocking -> blocking
    int buttonPanel -> buttonPanel
    int cancel_action -> cancel_action
    int checkbox -> checkbox
    int chronometer -> chronometer
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int edit_query -> edit_query
    int end_padder -> end_padder
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int forever -> forever
    int home -> home
    int icon -> icon
    int icon_group -> icon_group
    int image -> image
    int info -> info
    int italic -> italic
    int line1 -> line1
    int line3 -> line3
    int listMode -> listMode
    int list_item -> list_item
    int media_actions -> media_actions
    int message -> message
    int multiply -> multiply
    int none -> none
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int parentPanel -> parentPanel
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int right_icon -> right_icon
    int right_side -> right_side
    int screen -> screen
    int scrollIndicatorDown -> scrollIndicatorDown
    int scrollIndicatorUp -> scrollIndicatorUp
    int scrollView -> scrollView
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int select_dialog_listview -> select_dialog_listview
    int shortcut -> shortcut
    int spacer -> spacer
    int split_action_bar -> split_action_bar
    int src_atop -> src_atop
    int src_in -> src_in
    int src_over -> src_over
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int submenuarrow -> submenuarrow
    int submit_area -> submit_area
    int tabMode -> tabMode
    int text -> text
    int text2 -> text2
    int textSpacerNoButtons -> textSpacerNoButtons
    int textSpacerNoTitle -> textSpacerNoTitle
    int time -> time
    int title -> title
    int titleDividerNoCustom -> titleDividerNoCustom
    int title_template -> title_template
    int topPanel -> topPanel
    int uniform -> uniform
    int up -> up
    int wrap_content -> wrap_content
    void <init>() -> <init>
android.support.v7.appcompat.R$integer -> android.support.v7.appcompat.R$integer:
    int abc_config_activityDefaultDur -> abc_config_activityDefaultDur
    int abc_config_activityShortDur -> abc_config_activityShortDur
    int cancel_button_image_alpha -> cancel_button_image_alpha
    int config_tooltipAnimTime -> config_tooltipAnimTime
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
android.support.v7.appcompat.R$layout -> android.support.v7.appcompat.R$layout:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_alert_dialog_button_bar_material -> abc_alert_dialog_button_bar_material
    int abc_alert_dialog_material -> abc_alert_dialog_material
    int abc_alert_dialog_title_material -> abc_alert_dialog_title_material
    int abc_dialog_title_material -> abc_dialog_title_material
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_header_item_layout -> abc_popup_menu_header_item_layout
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_select_dialog_material -> abc_select_dialog_material
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_custom -> notification_template_big_media_custom
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_big_media_narrow_custom -> notification_template_big_media_narrow_custom
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_lines_media -> notification_template_lines_media
    int notification_template_media -> notification_template_media
    int notification_template_media_custom -> notification_template_media_custom
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    int select_dialog_item_material -> select_dialog_item_material
    int select_dialog_multichoice_material -> select_dialog_multichoice_material
    int select_dialog_singlechoice_material -> select_dialog_singlechoice_material
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
    int tooltip -> tooltip
    void <init>() -> <init>
android.support.v7.appcompat.R$string -> android.support.v7.appcompat.R$string:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_home_description_format -> abc_action_bar_home_description_format
    int abc_action_bar_home_subtitle_description_format -> abc_action_bar_home_subtitle_description_format
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_capital_off -> abc_capital_off
    int abc_capital_on -> abc_capital_on
    int abc_font_family_body_1_material -> abc_font_family_body_1_material
    int abc_font_family_body_2_material -> abc_font_family_body_2_material
    int abc_font_family_button_material -> abc_font_family_button_material
    int abc_font_family_caption_material -> abc_font_family_caption_material
    int abc_font_family_display_1_material -> abc_font_family_display_1_material
    int abc_font_family_display_2_material -> abc_font_family_display_2_material
    int abc_font_family_display_3_material -> abc_font_family_display_3_material
    int abc_font_family_display_4_material -> abc_font_family_display_4_material
    int abc_font_family_headline_material -> abc_font_family_headline_material
    int abc_font_family_menu_material -> abc_font_family_menu_material
    int abc_font_family_subhead_material -> abc_font_family_subhead_material
    int abc_font_family_title_material -> abc_font_family_title_material
    int abc_search_hint -> abc_search_hint
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int abc_toolbar_collapse_description -> abc_toolbar_collapse_description
    int search_menu_title -> search_menu_title
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.v7.appcompat.R$style -> android.support.v7.appcompat.R$style:
    int AlertDialog_AppCompat -> AlertDialog_AppCompat
    int AlertDialog_AppCompat_Light -> AlertDialog_AppCompat_Light
    int Animation_AppCompat_Dialog -> Animation_AppCompat_Dialog
    int Animation_AppCompat_DropDownUp -> Animation_AppCompat_DropDownUp
    int Animation_AppCompat_Tooltip -> Animation_AppCompat_Tooltip
    int Base_AlertDialog_AppCompat -> Base_AlertDialog_AppCompat
    int Base_AlertDialog_AppCompat_Light -> Base_AlertDialog_AppCompat_Light
    int Base_Animation_AppCompat_Dialog -> Base_Animation_AppCompat_Dialog
    int Base_Animation_AppCompat_DropDownUp -> Base_Animation_AppCompat_DropDownUp
    int Base_Animation_AppCompat_Tooltip -> Base_Animation_AppCompat_Tooltip
    int Base_DialogWindowTitleBackground_AppCompat -> Base_DialogWindowTitleBackground_AppCompat
    int Base_DialogWindowTitle_AppCompat -> Base_DialogWindowTitle_AppCompat
    int Base_TextAppearance_AppCompat -> Base_TextAppearance_AppCompat
    int Base_TextAppearance_AppCompat_Body1 -> Base_TextAppearance_AppCompat_Body1
    int Base_TextAppearance_AppCompat_Body2 -> Base_TextAppearance_AppCompat_Body2
    int Base_TextAppearance_AppCompat_Button -> Base_TextAppearance_AppCompat_Button
    int Base_TextAppearance_AppCompat_Caption -> Base_TextAppearance_AppCompat_Caption
    int Base_TextAppearance_AppCompat_Display1 -> Base_TextAppearance_AppCompat_Display1
    int Base_TextAppearance_AppCompat_Display2 -> Base_TextAppearance_AppCompat_Display2
    int Base_TextAppearance_AppCompat_Display3 -> Base_TextAppearance_AppCompat_Display3
    int Base_TextAppearance_AppCompat_Display4 -> Base_TextAppearance_AppCompat_Display4
    int Base_TextAppearance_AppCompat_Headline -> Base_TextAppearance_AppCompat_Headline
    int Base_TextAppearance_AppCompat_Inverse -> Base_TextAppearance_AppCompat_Inverse
    int Base_TextAppearance_AppCompat_Large -> Base_TextAppearance_AppCompat_Large
    int Base_TextAppearance_AppCompat_Large_Inverse -> Base_TextAppearance_AppCompat_Large_Inverse
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Medium -> Base_TextAppearance_AppCompat_Medium
    int Base_TextAppearance_AppCompat_Medium_Inverse -> Base_TextAppearance_AppCompat_Medium_Inverse
    int Base_TextAppearance_AppCompat_Menu -> Base_TextAppearance_AppCompat_Menu
    int Base_TextAppearance_AppCompat_SearchResult -> Base_TextAppearance_AppCompat_SearchResult
    int Base_TextAppearance_AppCompat_SearchResult_Subtitle -> Base_TextAppearance_AppCompat_SearchResult_Subtitle
    int Base_TextAppearance_AppCompat_SearchResult_Title -> Base_TextAppearance_AppCompat_SearchResult_Title
    int Base_TextAppearance_AppCompat_Small -> Base_TextAppearance_AppCompat_Small
    int Base_TextAppearance_AppCompat_Small_Inverse -> Base_TextAppearance_AppCompat_Small_Inverse
    int Base_TextAppearance_AppCompat_Subhead -> Base_TextAppearance_AppCompat_Subhead
    int Base_TextAppearance_AppCompat_Subhead_Inverse -> Base_TextAppearance_AppCompat_Subhead_Inverse
    int Base_TextAppearance_AppCompat_Title -> Base_TextAppearance_AppCompat_Title
    int Base_TextAppearance_AppCompat_Title_Inverse -> Base_TextAppearance_AppCompat_Title_Inverse
    int Base_TextAppearance_AppCompat_Tooltip -> Base_TextAppearance_AppCompat_Tooltip
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu -> Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Title -> Base_TextAppearance_AppCompat_Widget_ActionMode_Title
    int Base_TextAppearance_AppCompat_Widget_Button -> Base_TextAppearance_AppCompat_Widget_Button
    int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored -> Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
    int Base_TextAppearance_AppCompat_Widget_Button_Colored -> Base_TextAppearance_AppCompat_Widget_Button_Colored
    int Base_TextAppearance_AppCompat_Widget_Button_Inverse -> Base_TextAppearance_AppCompat_Widget_Button_Inverse
    int Base_TextAppearance_AppCompat_Widget_DropDownItem -> Base_TextAppearance_AppCompat_Widget_DropDownItem
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Widget_Switch -> Base_TextAppearance_AppCompat_Widget_Switch
    int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Title -> Base_TextAppearance_Widget_AppCompat_Toolbar_Title
    int Base_ThemeOverlay_AppCompat -> Base_ThemeOverlay_AppCompat
    int Base_ThemeOverlay_AppCompat_ActionBar -> Base_ThemeOverlay_AppCompat_ActionBar
    int Base_ThemeOverlay_AppCompat_Dark -> Base_ThemeOverlay_AppCompat_Dark
    int Base_ThemeOverlay_AppCompat_Dark_ActionBar -> Base_ThemeOverlay_AppCompat_Dark_ActionBar
    int Base_ThemeOverlay_AppCompat_Dialog -> Base_ThemeOverlay_AppCompat_Dialog
    int Base_ThemeOverlay_AppCompat_Dialog_Alert -> Base_ThemeOverlay_AppCompat_Dialog_Alert
    int Base_ThemeOverlay_AppCompat_Light -> Base_ThemeOverlay_AppCompat_Light
    int Base_Theme_AppCompat -> Base_Theme_AppCompat
    int Base_Theme_AppCompat_CompactMenu -> Base_Theme_AppCompat_CompactMenu
    int Base_Theme_AppCompat_Dialog -> Base_Theme_AppCompat_Dialog
    int Base_Theme_AppCompat_DialogWhenLarge -> Base_Theme_AppCompat_DialogWhenLarge
    int Base_Theme_AppCompat_Dialog_Alert -> Base_Theme_AppCompat_Dialog_Alert
    int Base_Theme_AppCompat_Dialog_FixedSize -> Base_Theme_AppCompat_Dialog_FixedSize
    int Base_Theme_AppCompat_Dialog_MinWidth -> Base_Theme_AppCompat_Dialog_MinWidth
    int Base_Theme_AppCompat_Light -> Base_Theme_AppCompat_Light
    int Base_Theme_AppCompat_Light_DarkActionBar -> Base_Theme_AppCompat_Light_DarkActionBar
    int Base_Theme_AppCompat_Light_Dialog -> Base_Theme_AppCompat_Light_Dialog
    int Base_Theme_AppCompat_Light_DialogWhenLarge -> Base_Theme_AppCompat_Light_DialogWhenLarge
    int Base_Theme_AppCompat_Light_Dialog_Alert -> Base_Theme_AppCompat_Light_Dialog_Alert
    int Base_Theme_AppCompat_Light_Dialog_FixedSize -> Base_Theme_AppCompat_Light_Dialog_FixedSize
    int Base_Theme_AppCompat_Light_Dialog_MinWidth -> Base_Theme_AppCompat_Light_Dialog_MinWidth
    int Base_V11_ThemeOverlay_AppCompat_Dialog -> Base_V11_ThemeOverlay_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Dialog -> Base_V11_Theme_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Light_Dialog -> Base_V11_Theme_AppCompat_Light_Dialog
    int Base_V12_Widget_AppCompat_AutoCompleteTextView -> Base_V12_Widget_AppCompat_AutoCompleteTextView
    int Base_V12_Widget_AppCompat_EditText -> Base_V12_Widget_AppCompat_EditText
    int Base_V21_ThemeOverlay_AppCompat_Dialog -> Base_V21_ThemeOverlay_AppCompat_Dialog
    int Base_V21_Theme_AppCompat -> Base_V21_Theme_AppCompat
    int Base_V21_Theme_AppCompat_Dialog -> Base_V21_Theme_AppCompat_Dialog
    int Base_V21_Theme_AppCompat_Light -> Base_V21_Theme_AppCompat_Light
    int Base_V21_Theme_AppCompat_Light_Dialog -> Base_V21_Theme_AppCompat_Light_Dialog
    int Base_V22_Theme_AppCompat -> Base_V22_Theme_AppCompat
    int Base_V22_Theme_AppCompat_Light -> Base_V22_Theme_AppCompat_Light
    int Base_V23_Theme_AppCompat -> Base_V23_Theme_AppCompat
    int Base_V23_Theme_AppCompat_Light -> Base_V23_Theme_AppCompat_Light
    int Base_V26_Theme_AppCompat -> Base_V26_Theme_AppCompat
    int Base_V26_Theme_AppCompat_Light -> Base_V26_Theme_AppCompat_Light
    int Base_V26_Widget_AppCompat_Toolbar -> Base_V26_Widget_AppCompat_Toolbar
    int Base_V7_ThemeOverlay_AppCompat_Dialog -> Base_V7_ThemeOverlay_AppCompat_Dialog
    int Base_V7_Theme_AppCompat -> Base_V7_Theme_AppCompat
    int Base_V7_Theme_AppCompat_Dialog -> Base_V7_Theme_AppCompat_Dialog
    int Base_V7_Theme_AppCompat_Light -> Base_V7_Theme_AppCompat_Light
    int Base_V7_Theme_AppCompat_Light_Dialog -> Base_V7_Theme_AppCompat_Light_Dialog
    int Base_V7_Widget_AppCompat_AutoCompleteTextView -> Base_V7_Widget_AppCompat_AutoCompleteTextView
    int Base_V7_Widget_AppCompat_EditText -> Base_V7_Widget_AppCompat_EditText
    int Base_V7_Widget_AppCompat_Toolbar -> Base_V7_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_ActionBar -> Base_Widget_AppCompat_ActionBar
    int Base_Widget_AppCompat_ActionBar_Solid -> Base_Widget_AppCompat_ActionBar_Solid
    int Base_Widget_AppCompat_ActionBar_TabBar -> Base_Widget_AppCompat_ActionBar_TabBar
    int Base_Widget_AppCompat_ActionBar_TabText -> Base_Widget_AppCompat_ActionBar_TabText
    int Base_Widget_AppCompat_ActionBar_TabView -> Base_Widget_AppCompat_ActionBar_TabView
    int Base_Widget_AppCompat_ActionButton -> Base_Widget_AppCompat_ActionButton
    int Base_Widget_AppCompat_ActionButton_CloseMode -> Base_Widget_AppCompat_ActionButton_CloseMode
    int Base_Widget_AppCompat_ActionButton_Overflow -> Base_Widget_AppCompat_ActionButton_Overflow
    int Base_Widget_AppCompat_ActionMode -> Base_Widget_AppCompat_ActionMode
    int Base_Widget_AppCompat_ActivityChooserView -> Base_Widget_AppCompat_ActivityChooserView
    int Base_Widget_AppCompat_AutoCompleteTextView -> Base_Widget_AppCompat_AutoCompleteTextView
    int Base_Widget_AppCompat_Button -> Base_Widget_AppCompat_Button
    int Base_Widget_AppCompat_ButtonBar -> Base_Widget_AppCompat_ButtonBar
    int Base_Widget_AppCompat_ButtonBar_AlertDialog -> Base_Widget_AppCompat_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Borderless -> Base_Widget_AppCompat_Button_Borderless
    int Base_Widget_AppCompat_Button_Borderless_Colored -> Base_Widget_AppCompat_Button_Borderless_Colored
    int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog -> Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Colored -> Base_Widget_AppCompat_Button_Colored
    int Base_Widget_AppCompat_Button_Small -> Base_Widget_AppCompat_Button_Small
    int Base_Widget_AppCompat_CompoundButton_CheckBox -> Base_Widget_AppCompat_CompoundButton_CheckBox
    int Base_Widget_AppCompat_CompoundButton_RadioButton -> Base_Widget_AppCompat_CompoundButton_RadioButton
    int Base_Widget_AppCompat_CompoundButton_Switch -> Base_Widget_AppCompat_CompoundButton_Switch
    int Base_Widget_AppCompat_DrawerArrowToggle -> Base_Widget_AppCompat_DrawerArrowToggle
    int Base_Widget_AppCompat_DrawerArrowToggle_Common -> Base_Widget_AppCompat_DrawerArrowToggle_Common
    int Base_Widget_AppCompat_DropDownItem_Spinner -> Base_Widget_AppCompat_DropDownItem_Spinner
    int Base_Widget_AppCompat_EditText -> Base_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_ImageButton -> Base_Widget_AppCompat_ImageButton
    int Base_Widget_AppCompat_Light_ActionBar -> Base_Widget_AppCompat_Light_ActionBar
    int Base_Widget_AppCompat_Light_ActionBar_Solid -> Base_Widget_AppCompat_Light_ActionBar_Solid
    int Base_Widget_AppCompat_Light_ActionBar_TabBar -> Base_Widget_AppCompat_Light_ActionBar_TabBar
    int Base_Widget_AppCompat_Light_ActionBar_TabText -> Base_Widget_AppCompat_Light_ActionBar_TabText
    int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Base_Widget_AppCompat_Light_ActionBar_TabView -> Base_Widget_AppCompat_Light_ActionBar_TabView
    int Base_Widget_AppCompat_Light_PopupMenu -> Base_Widget_AppCompat_Light_PopupMenu
    int Base_Widget_AppCompat_Light_PopupMenu_Overflow -> Base_Widget_AppCompat_Light_PopupMenu_Overflow
    int Base_Widget_AppCompat_ListMenuView -> Base_Widget_AppCompat_ListMenuView
    int Base_Widget_AppCompat_ListPopupWindow -> Base_Widget_AppCompat_ListPopupWindow
    int Base_Widget_AppCompat_ListView -> Base_Widget_AppCompat_ListView
    int Base_Widget_AppCompat_ListView_DropDown -> Base_Widget_AppCompat_ListView_DropDown
    int Base_Widget_AppCompat_ListView_Menu -> Base_Widget_AppCompat_ListView_Menu
    int Base_Widget_AppCompat_PopupMenu -> Base_Widget_AppCompat_PopupMenu
    int Base_Widget_AppCompat_PopupMenu_Overflow -> Base_Widget_AppCompat_PopupMenu_Overflow
    int Base_Widget_AppCompat_PopupWindow -> Base_Widget_AppCompat_PopupWindow
    int Base_Widget_AppCompat_ProgressBar -> Base_Widget_AppCompat_ProgressBar
    int Base_Widget_AppCompat_ProgressBar_Horizontal -> Base_Widget_AppCompat_ProgressBar_Horizontal
    int Base_Widget_AppCompat_RatingBar -> Base_Widget_AppCompat_RatingBar
    int Base_Widget_AppCompat_RatingBar_Indicator -> Base_Widget_AppCompat_RatingBar_Indicator
    int Base_Widget_AppCompat_RatingBar_Small -> Base_Widget_AppCompat_RatingBar_Small
    int Base_Widget_AppCompat_SearchView -> Base_Widget_AppCompat_SearchView
    int Base_Widget_AppCompat_SearchView_ActionBar -> Base_Widget_AppCompat_SearchView_ActionBar
    int Base_Widget_AppCompat_SeekBar -> Base_Widget_AppCompat_SeekBar
    int Base_Widget_AppCompat_SeekBar_Discrete -> Base_Widget_AppCompat_SeekBar_Discrete
    int Base_Widget_AppCompat_Spinner -> Base_Widget_AppCompat_Spinner
    int Base_Widget_AppCompat_Spinner_Underlined -> Base_Widget_AppCompat_Spinner_Underlined
    int Base_Widget_AppCompat_TextView_SpinnerItem -> Base_Widget_AppCompat_TextView_SpinnerItem
    int Base_Widget_AppCompat_Toolbar -> Base_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_Toolbar_Button_Navigation -> Base_Widget_AppCompat_Toolbar_Button_Navigation
    int Platform_AppCompat -> Platform_AppCompat
    int Platform_AppCompat_Light -> Platform_AppCompat_Light
    int Platform_ThemeOverlay_AppCompat -> Platform_ThemeOverlay_AppCompat
    int Platform_ThemeOverlay_AppCompat_Dark -> Platform_ThemeOverlay_AppCompat_Dark
    int Platform_ThemeOverlay_AppCompat_Light -> Platform_ThemeOverlay_AppCompat_Light
    int Platform_V11_AppCompat -> Platform_V11_AppCompat
    int Platform_V11_AppCompat_Light -> Platform_V11_AppCompat_Light
    int Platform_V14_AppCompat -> Platform_V14_AppCompat
    int Platform_V14_AppCompat_Light -> Platform_V14_AppCompat_Light
    int Platform_V21_AppCompat -> Platform_V21_AppCompat
    int Platform_V21_AppCompat_Light -> Platform_V21_AppCompat_Light
    int Platform_V25_AppCompat -> Platform_V25_AppCompat
    int Platform_V25_AppCompat_Light -> Platform_V25_AppCompat_Light
    int Platform_Widget_AppCompat_Spinner -> Platform_Widget_AppCompat_Spinner
    int RtlOverlay_DialogWindowTitle_AppCompat -> RtlOverlay_DialogWindowTitle_AppCompat
    int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem -> RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
    int RtlOverlay_Widget_AppCompat_DialogTitle_Icon -> RtlOverlay_Widget_AppCompat_DialogTitle_Icon
    int RtlOverlay_Widget_AppCompat_PopupMenuItem -> RtlOverlay_Widget_AppCompat_PopupMenuItem
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup -> RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text -> RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
    int RtlOverlay_Widget_AppCompat_SearchView_MagIcon -> RtlOverlay_Widget_AppCompat_SearchView_MagIcon
    int RtlOverlay_Widget_AppCompat_Search_DropDown -> RtlOverlay_Widget_AppCompat_Search_DropDown
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Query -> RtlOverlay_Widget_AppCompat_Search_DropDown_Query
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Text -> RtlOverlay_Widget_AppCompat_Search_DropDown_Text
    int RtlUnderlay_Widget_AppCompat_ActionButton -> RtlUnderlay_Widget_AppCompat_ActionButton
    int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow -> RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
    int TextAppearance_AppCompat -> TextAppearance_AppCompat
    int TextAppearance_AppCompat_Body1 -> TextAppearance_AppCompat_Body1
    int TextAppearance_AppCompat_Body2 -> TextAppearance_AppCompat_Body2
    int TextAppearance_AppCompat_Button -> TextAppearance_AppCompat_Button
    int TextAppearance_AppCompat_Caption -> TextAppearance_AppCompat_Caption
    int TextAppearance_AppCompat_Display1 -> TextAppearance_AppCompat_Display1
    int TextAppearance_AppCompat_Display2 -> TextAppearance_AppCompat_Display2
    int TextAppearance_AppCompat_Display3 -> TextAppearance_AppCompat_Display3
    int TextAppearance_AppCompat_Display4 -> TextAppearance_AppCompat_Display4
    int TextAppearance_AppCompat_Headline -> TextAppearance_AppCompat_Headline
    int TextAppearance_AppCompat_Inverse -> TextAppearance_AppCompat_Inverse
    int TextAppearance_AppCompat_Large -> TextAppearance_AppCompat_Large
    int TextAppearance_AppCompat_Large_Inverse -> TextAppearance_AppCompat_Large_Inverse
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Medium -> TextAppearance_AppCompat_Medium
    int TextAppearance_AppCompat_Medium_Inverse -> TextAppearance_AppCompat_Medium_Inverse
    int TextAppearance_AppCompat_Menu -> TextAppearance_AppCompat_Menu
    int TextAppearance_AppCompat_Notification -> TextAppearance_AppCompat_Notification
    int TextAppearance_AppCompat_Notification_Info -> TextAppearance_AppCompat_Notification_Info
    int TextAppearance_AppCompat_Notification_Info_Media -> TextAppearance_AppCompat_Notification_Info_Media
    int TextAppearance_AppCompat_Notification_Line2 -> TextAppearance_AppCompat_Notification_Line2
    int TextAppearance_AppCompat_Notification_Line2_Media -> TextAppearance_AppCompat_Notification_Line2_Media
    int TextAppearance_AppCompat_Notification_Media -> TextAppearance_AppCompat_Notification_Media
    int TextAppearance_AppCompat_Notification_Time -> TextAppearance_AppCompat_Notification_Time
    int TextAppearance_AppCompat_Notification_Time_Media -> TextAppearance_AppCompat_Notification_Time_Media
    int TextAppearance_AppCompat_Notification_Title -> TextAppearance_AppCompat_Notification_Title
    int TextAppearance_AppCompat_Notification_Title_Media -> TextAppearance_AppCompat_Notification_Title_Media
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Small -> TextAppearance_AppCompat_Small
    int TextAppearance_AppCompat_Small_Inverse -> TextAppearance_AppCompat_Small_Inverse
    int TextAppearance_AppCompat_Subhead -> TextAppearance_AppCompat_Subhead
    int TextAppearance_AppCompat_Subhead_Inverse -> TextAppearance_AppCompat_Subhead_Inverse
    int TextAppearance_AppCompat_Title -> TextAppearance_AppCompat_Title
    int TextAppearance_AppCompat_Title_Inverse -> TextAppearance_AppCompat_Title_Inverse
    int TextAppearance_AppCompat_Tooltip -> TextAppearance_AppCompat_Tooltip
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Button -> TextAppearance_AppCompat_Widget_Button
    int TextAppearance_AppCompat_Widget_Button_Borderless_Colored -> TextAppearance_AppCompat_Widget_Button_Borderless_Colored
    int TextAppearance_AppCompat_Widget_Button_Colored -> TextAppearance_AppCompat_Widget_Button_Colored
    int TextAppearance_AppCompat_Widget_Button_Inverse -> TextAppearance_AppCompat_Widget_Button_Inverse
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Header -> TextAppearance_AppCompat_Widget_PopupMenu_Header
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Widget_Switch -> TextAppearance_AppCompat_Widget_Switch
    int TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int TextAppearance_Compat_Notification -> TextAppearance_Compat_Notification
    int TextAppearance_Compat_Notification_Info -> TextAppearance_Compat_Notification_Info
    int TextAppearance_Compat_Notification_Info_Media -> TextAppearance_Compat_Notification_Info_Media
    int TextAppearance_Compat_Notification_Line2 -> TextAppearance_Compat_Notification_Line2
    int TextAppearance_Compat_Notification_Line2_Media -> TextAppearance_Compat_Notification_Line2_Media
    int TextAppearance_Compat_Notification_Media -> TextAppearance_Compat_Notification_Media
    int TextAppearance_Compat_Notification_Time -> TextAppearance_Compat_Notification_Time
    int TextAppearance_Compat_Notification_Time_Media -> TextAppearance_Compat_Notification_Time_Media
    int TextAppearance_Compat_Notification_Title -> TextAppearance_Compat_Notification_Title
    int TextAppearance_Compat_Notification_Title_Media -> TextAppearance_Compat_Notification_Title_Media
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int TextAppearance_Widget_AppCompat_Toolbar_Title -> TextAppearance_Widget_AppCompat_Toolbar_Title
    int ThemeOverlay_AppCompat -> ThemeOverlay_AppCompat
    int ThemeOverlay_AppCompat_ActionBar -> ThemeOverlay_AppCompat_ActionBar
    int ThemeOverlay_AppCompat_Dark -> ThemeOverlay_AppCompat_Dark
    int ThemeOverlay_AppCompat_Dark_ActionBar -> ThemeOverlay_AppCompat_Dark_ActionBar
    int ThemeOverlay_AppCompat_Dialog -> ThemeOverlay_AppCompat_Dialog
    int ThemeOverlay_AppCompat_Dialog_Alert -> ThemeOverlay_AppCompat_Dialog_Alert
    int ThemeOverlay_AppCompat_Light -> ThemeOverlay_AppCompat_Light
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_DayNight -> Theme_AppCompat_DayNight
    int Theme_AppCompat_DayNight_DarkActionBar -> Theme_AppCompat_DayNight_DarkActionBar
    int Theme_AppCompat_DayNight_Dialog -> Theme_AppCompat_DayNight_Dialog
    int Theme_AppCompat_DayNight_DialogWhenLarge -> Theme_AppCompat_DayNight_DialogWhenLarge
    int Theme_AppCompat_DayNight_Dialog_Alert -> Theme_AppCompat_DayNight_Dialog_Alert
    int Theme_AppCompat_DayNight_Dialog_MinWidth -> Theme_AppCompat_DayNight_Dialog_MinWidth
    int Theme_AppCompat_DayNight_NoActionBar -> Theme_AppCompat_DayNight_NoActionBar
    int Theme_AppCompat_Dialog -> Theme_AppCompat_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Dialog_Alert -> Theme_AppCompat_Dialog_Alert
    int Theme_AppCompat_Dialog_MinWidth -> Theme_AppCompat_Dialog_MinWidth
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_Dialog -> Theme_AppCompat_Light_Dialog
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_AppCompat_Light_Dialog_Alert -> Theme_AppCompat_Light_Dialog_Alert
    int Theme_AppCompat_Light_Dialog_MinWidth -> Theme_AppCompat_Light_Dialog_MinWidth
    int Theme_AppCompat_Light_NoActionBar -> Theme_AppCompat_Light_NoActionBar
    int Theme_AppCompat_NoActionBar -> Theme_AppCompat_NoActionBar
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Button -> Widget_AppCompat_Button
    int Widget_AppCompat_ButtonBar -> Widget_AppCompat_ButtonBar
    int Widget_AppCompat_ButtonBar_AlertDialog -> Widget_AppCompat_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Borderless -> Widget_AppCompat_Button_Borderless
    int Widget_AppCompat_Button_Borderless_Colored -> Widget_AppCompat_Button_Borderless_Colored
    int Widget_AppCompat_Button_ButtonBar_AlertDialog -> Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Colored -> Widget_AppCompat_Button_Colored
    int Widget_AppCompat_Button_Small -> Widget_AppCompat_Button_Small
    int Widget_AppCompat_CompoundButton_CheckBox -> Widget_AppCompat_CompoundButton_CheckBox
    int Widget_AppCompat_CompoundButton_RadioButton -> Widget_AppCompat_CompoundButton_RadioButton
    int Widget_AppCompat_CompoundButton_Switch -> Widget_AppCompat_CompoundButton_Switch
    int Widget_AppCompat_DrawerArrowToggle -> Widget_AppCompat_DrawerArrowToggle
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_EditText -> Widget_AppCompat_EditText
    int Widget_AppCompat_ImageButton -> Widget_AppCompat_ImageButton
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_PopupMenu_Overflow -> Widget_AppCompat_Light_PopupMenu_Overflow
    int Widget_AppCompat_Light_SearchView -> Widget_AppCompat_Light_SearchView
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListMenuView -> Widget_AppCompat_ListMenuView
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView -> Widget_AppCompat_ListView
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_PopupMenu_Overflow -> Widget_AppCompat_PopupMenu_Overflow
    int Widget_AppCompat_PopupWindow -> Widget_AppCompat_PopupWindow
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_RatingBar -> Widget_AppCompat_RatingBar
    int Widget_AppCompat_RatingBar_Indicator -> Widget_AppCompat_RatingBar_Indicator
    int Widget_AppCompat_RatingBar_Small -> Widget_AppCompat_RatingBar_Small
    int Widget_AppCompat_SearchView -> Widget_AppCompat_SearchView
    int Widget_AppCompat_SearchView_ActionBar -> Widget_AppCompat_SearchView_ActionBar
    int Widget_AppCompat_SeekBar -> Widget_AppCompat_SeekBar
    int Widget_AppCompat_SeekBar_Discrete -> Widget_AppCompat_SeekBar_Discrete
    int Widget_AppCompat_Spinner -> Widget_AppCompat_Spinner
    int Widget_AppCompat_Spinner_DropDown -> Widget_AppCompat_Spinner_DropDown
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
    int Widget_AppCompat_Spinner_Underlined -> Widget_AppCompat_Spinner_Underlined
    int Widget_AppCompat_TextView_SpinnerItem -> Widget_AppCompat_TextView_SpinnerItem
    int Widget_AppCompat_Toolbar -> Widget_AppCompat_Toolbar
    int Widget_AppCompat_Toolbar_Button_Navigation -> Widget_AppCompat_Toolbar_Button_Navigation
    int Widget_Compat_NotificationActionContainer -> Widget_Compat_NotificationActionContainer
    int Widget_Compat_NotificationActionText -> Widget_Compat_NotificationActionText
    void <init>() -> <init>
android.support.v7.appcompat.R$styleable -> android.support.v7.appcompat.R$styleable:
    int[] ActionBar -> ActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetEndWithActions -> ActionBar_contentInsetEndWithActions
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_contentInsetStartWithNavigation -> ActionBar_contentInsetStartWithNavigation
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_showTitle -> AlertDialog_showTitle
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AppCompatImageView -> AppCompatImageView
    int AppCompatImageView_android_src -> AppCompatImageView_android_src
    int AppCompatImageView_srcCompat -> AppCompatImageView_srcCompat
    int AppCompatImageView_tint -> AppCompatImageView_tint
    int AppCompatImageView_tintMode -> AppCompatImageView_tintMode
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int AppCompatSeekBar_android_thumb -> AppCompatSeekBar_android_thumb
    int AppCompatSeekBar_tickMark -> AppCompatSeekBar_tickMark
    int AppCompatSeekBar_tickMarkTint -> AppCompatSeekBar_tickMarkTint
    int AppCompatSeekBar_tickMarkTintMode -> AppCompatSeekBar_tickMarkTintMode
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int AppCompatTextHelper_android_textAppearance -> AppCompatTextHelper_android_textAppearance
    int AppCompatTextHelper_android_drawableTop -> AppCompatTextHelper_android_drawableTop
    int AppCompatTextHelper_android_drawableBottom -> AppCompatTextHelper_android_drawableBottom
    int AppCompatTextHelper_android_drawableLeft -> AppCompatTextHelper_android_drawableLeft
    int AppCompatTextHelper_android_drawableRight -> AppCompatTextHelper_android_drawableRight
    int AppCompatTextHelper_android_drawableStart -> AppCompatTextHelper_android_drawableStart
    int AppCompatTextHelper_android_drawableEnd -> AppCompatTextHelper_android_drawableEnd
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_autoSizeMaxTextSize -> AppCompatTextView_autoSizeMaxTextSize
    int AppCompatTextView_autoSizeMinTextSize -> AppCompatTextView_autoSizeMinTextSize
    int AppCompatTextView_autoSizePresetSizes -> AppCompatTextView_autoSizePresetSizes
    int AppCompatTextView_autoSizeStepGranularity -> AppCompatTextView_autoSizeStepGranularity
    int AppCompatTextView_autoSizeTextType -> AppCompatTextView_autoSizeTextType
    int AppCompatTextView_fontFamily -> AppCompatTextView_fontFamily
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] AppCompatTheme -> AppCompatTheme
    int AppCompatTheme_android_windowIsFloating -> AppCompatTheme_android_windowIsFloating
    int AppCompatTheme_android_windowAnimationStyle -> AppCompatTheme_android_windowAnimationStyle
    int AppCompatTheme_actionBarDivider -> AppCompatTheme_actionBarDivider
    int AppCompatTheme_actionBarItemBackground -> AppCompatTheme_actionBarItemBackground
    int AppCompatTheme_actionBarPopupTheme -> AppCompatTheme_actionBarPopupTheme
    int AppCompatTheme_actionBarSize -> AppCompatTheme_actionBarSize
    int AppCompatTheme_actionBarSplitStyle -> AppCompatTheme_actionBarSplitStyle
    int AppCompatTheme_actionBarStyle -> AppCompatTheme_actionBarStyle
    int AppCompatTheme_actionBarTabBarStyle -> AppCompatTheme_actionBarTabBarStyle
    int AppCompatTheme_actionBarTabStyle -> AppCompatTheme_actionBarTabStyle
    int AppCompatTheme_actionBarTabTextStyle -> AppCompatTheme_actionBarTabTextStyle
    int AppCompatTheme_actionBarTheme -> AppCompatTheme_actionBarTheme
    int AppCompatTheme_actionBarWidgetTheme -> AppCompatTheme_actionBarWidgetTheme
    int AppCompatTheme_actionButtonStyle -> AppCompatTheme_actionButtonStyle
    int AppCompatTheme_actionDropDownStyle -> AppCompatTheme_actionDropDownStyle
    int AppCompatTheme_actionMenuTextAppearance -> AppCompatTheme_actionMenuTextAppearance
    int AppCompatTheme_actionMenuTextColor -> AppCompatTheme_actionMenuTextColor
    int AppCompatTheme_actionModeBackground -> AppCompatTheme_actionModeBackground
    int AppCompatTheme_actionModeCloseButtonStyle -> AppCompatTheme_actionModeCloseButtonStyle
    int AppCompatTheme_actionModeCloseDrawable -> AppCompatTheme_actionModeCloseDrawable
    int AppCompatTheme_actionModeCopyDrawable -> AppCompatTheme_actionModeCopyDrawable
    int AppCompatTheme_actionModeCutDrawable -> AppCompatTheme_actionModeCutDrawable
    int AppCompatTheme_actionModeFindDrawable -> AppCompatTheme_actionModeFindDrawable
    int AppCompatTheme_actionModePasteDrawable -> AppCompatTheme_actionModePasteDrawable
    int AppCompatTheme_actionModePopupWindowStyle -> AppCompatTheme_actionModePopupWindowStyle
    int AppCompatTheme_actionModeSelectAllDrawable -> AppCompatTheme_actionModeSelectAllDrawable
    int AppCompatTheme_actionModeShareDrawable -> AppCompatTheme_actionModeShareDrawable
    int AppCompatTheme_actionModeSplitBackground -> AppCompatTheme_actionModeSplitBackground
    int AppCompatTheme_actionModeStyle -> AppCompatTheme_actionModeStyle
    int AppCompatTheme_actionModeWebSearchDrawable -> AppCompatTheme_actionModeWebSearchDrawable
    int AppCompatTheme_actionOverflowButtonStyle -> AppCompatTheme_actionOverflowButtonStyle
    int AppCompatTheme_actionOverflowMenuStyle -> AppCompatTheme_actionOverflowMenuStyle
    int AppCompatTheme_activityChooserViewStyle -> AppCompatTheme_activityChooserViewStyle
    int AppCompatTheme_alertDialogButtonGroupStyle -> AppCompatTheme_alertDialogButtonGroupStyle
    int AppCompatTheme_alertDialogCenterButtons -> AppCompatTheme_alertDialogCenterButtons
    int AppCompatTheme_alertDialogStyle -> AppCompatTheme_alertDialogStyle
    int AppCompatTheme_alertDialogTheme -> AppCompatTheme_alertDialogTheme
    int AppCompatTheme_autoCompleteTextViewStyle -> AppCompatTheme_autoCompleteTextViewStyle
    int AppCompatTheme_borderlessButtonStyle -> AppCompatTheme_borderlessButtonStyle
    int AppCompatTheme_buttonBarButtonStyle -> AppCompatTheme_buttonBarButtonStyle
    int AppCompatTheme_buttonBarNegativeButtonStyle -> AppCompatTheme_buttonBarNegativeButtonStyle
    int AppCompatTheme_buttonBarNeutralButtonStyle -> AppCompatTheme_buttonBarNeutralButtonStyle
    int AppCompatTheme_buttonBarPositiveButtonStyle -> AppCompatTheme_buttonBarPositiveButtonStyle
    int AppCompatTheme_buttonBarStyle -> AppCompatTheme_buttonBarStyle
    int AppCompatTheme_buttonStyle -> AppCompatTheme_buttonStyle
    int AppCompatTheme_buttonStyleSmall -> AppCompatTheme_buttonStyleSmall
    int AppCompatTheme_checkboxStyle -> AppCompatTheme_checkboxStyle
    int AppCompatTheme_checkedTextViewStyle -> AppCompatTheme_checkedTextViewStyle
    int AppCompatTheme_colorAccent -> AppCompatTheme_colorAccent
    int AppCompatTheme_colorBackgroundFloating -> AppCompatTheme_colorBackgroundFloating
    int AppCompatTheme_colorButtonNormal -> AppCompatTheme_colorButtonNormal
    int AppCompatTheme_colorControlActivated -> AppCompatTheme_colorControlActivated
    int AppCompatTheme_colorControlHighlight -> AppCompatTheme_colorControlHighlight
    int AppCompatTheme_colorControlNormal -> AppCompatTheme_colorControlNormal
    int AppCompatTheme_colorError -> AppCompatTheme_colorError
    int AppCompatTheme_colorPrimary -> AppCompatTheme_colorPrimary
    int AppCompatTheme_colorPrimaryDark -> AppCompatTheme_colorPrimaryDark
    int AppCompatTheme_colorSwitchThumbNormal -> AppCompatTheme_colorSwitchThumbNormal
    int AppCompatTheme_controlBackground -> AppCompatTheme_controlBackground
    int AppCompatTheme_dialogPreferredPadding -> AppCompatTheme_dialogPreferredPadding
    int AppCompatTheme_dialogTheme -> AppCompatTheme_dialogTheme
    int AppCompatTheme_dividerHorizontal -> AppCompatTheme_dividerHorizontal
    int AppCompatTheme_dividerVertical -> AppCompatTheme_dividerVertical
    int AppCompatTheme_dropDownListViewStyle -> AppCompatTheme_dropDownListViewStyle
    int AppCompatTheme_dropdownListPreferredItemHeight -> AppCompatTheme_dropdownListPreferredItemHeight
    int AppCompatTheme_editTextBackground -> AppCompatTheme_editTextBackground
    int AppCompatTheme_editTextColor -> AppCompatTheme_editTextColor
    int AppCompatTheme_editTextStyle -> AppCompatTheme_editTextStyle
    int AppCompatTheme_homeAsUpIndicator -> AppCompatTheme_homeAsUpIndicator
    int AppCompatTheme_imageButtonStyle -> AppCompatTheme_imageButtonStyle
    int AppCompatTheme_listChoiceBackgroundIndicator -> AppCompatTheme_listChoiceBackgroundIndicator
    int AppCompatTheme_listDividerAlertDialog -> AppCompatTheme_listDividerAlertDialog
    int AppCompatTheme_listMenuViewStyle -> AppCompatTheme_listMenuViewStyle
    int AppCompatTheme_listPopupWindowStyle -> AppCompatTheme_listPopupWindowStyle
    int AppCompatTheme_listPreferredItemHeight -> AppCompatTheme_listPreferredItemHeight
    int AppCompatTheme_listPreferredItemHeightLarge -> AppCompatTheme_listPreferredItemHeightLarge
    int AppCompatTheme_listPreferredItemHeightSmall -> AppCompatTheme_listPreferredItemHeightSmall
    int AppCompatTheme_listPreferredItemPaddingLeft -> AppCompatTheme_listPreferredItemPaddingLeft
    int AppCompatTheme_listPreferredItemPaddingRight -> AppCompatTheme_listPreferredItemPaddingRight
    int AppCompatTheme_panelBackground -> AppCompatTheme_panelBackground
    int AppCompatTheme_panelMenuListTheme -> AppCompatTheme_panelMenuListTheme
    int AppCompatTheme_panelMenuListWidth -> AppCompatTheme_panelMenuListWidth
    int AppCompatTheme_popupMenuStyle -> AppCompatTheme_popupMenuStyle
    int AppCompatTheme_popupWindowStyle -> AppCompatTheme_popupWindowStyle
    int AppCompatTheme_radioButtonStyle -> AppCompatTheme_radioButtonStyle
    int AppCompatTheme_ratingBarStyle -> AppCompatTheme_ratingBarStyle
    int AppCompatTheme_ratingBarStyleIndicator -> AppCompatTheme_ratingBarStyleIndicator
    int AppCompatTheme_ratingBarStyleSmall -> AppCompatTheme_ratingBarStyleSmall
    int AppCompatTheme_searchViewStyle -> AppCompatTheme_searchViewStyle
    int AppCompatTheme_seekBarStyle -> AppCompatTheme_seekBarStyle
    int AppCompatTheme_selectableItemBackground -> AppCompatTheme_selectableItemBackground
    int AppCompatTheme_selectableItemBackgroundBorderless -> AppCompatTheme_selectableItemBackgroundBorderless
    int AppCompatTheme_spinnerDropDownItemStyle -> AppCompatTheme_spinnerDropDownItemStyle
    int AppCompatTheme_spinnerStyle -> AppCompatTheme_spinnerStyle
    int AppCompatTheme_switchStyle -> AppCompatTheme_switchStyle
    int AppCompatTheme_textAppearanceLargePopupMenu -> AppCompatTheme_textAppearanceLargePopupMenu
    int AppCompatTheme_textAppearanceListItem -> AppCompatTheme_textAppearanceListItem
    int AppCompatTheme_textAppearanceListItemSecondary -> AppCompatTheme_textAppearanceListItemSecondary
    int AppCompatTheme_textAppearanceListItemSmall -> AppCompatTheme_textAppearanceListItemSmall
    int AppCompatTheme_textAppearancePopupMenuHeader -> AppCompatTheme_textAppearancePopupMenuHeader
    int AppCompatTheme_textAppearanceSearchResultSubtitle -> AppCompatTheme_textAppearanceSearchResultSubtitle
    int AppCompatTheme_textAppearanceSearchResultTitle -> AppCompatTheme_textAppearanceSearchResultTitle
    int AppCompatTheme_textAppearanceSmallPopupMenu -> AppCompatTheme_textAppearanceSmallPopupMenu
    int AppCompatTheme_textColorAlertDialogListItem -> AppCompatTheme_textColorAlertDialogListItem
    int AppCompatTheme_textColorSearchUrl -> AppCompatTheme_textColorSearchUrl
    int AppCompatTheme_toolbarNavigationButtonStyle -> AppCompatTheme_toolbarNavigationButtonStyle
    int AppCompatTheme_toolbarStyle -> AppCompatTheme_toolbarStyle
    int AppCompatTheme_tooltipForegroundColor -> AppCompatTheme_tooltipForegroundColor
    int AppCompatTheme_tooltipFrameBackground -> AppCompatTheme_tooltipFrameBackground
    int AppCompatTheme_windowActionBar -> AppCompatTheme_windowActionBar
    int AppCompatTheme_windowActionBarOverlay -> AppCompatTheme_windowActionBarOverlay
    int AppCompatTheme_windowActionModeOverlay -> AppCompatTheme_windowActionModeOverlay
    int AppCompatTheme_windowFixedHeightMajor -> AppCompatTheme_windowFixedHeightMajor
    int AppCompatTheme_windowFixedHeightMinor -> AppCompatTheme_windowFixedHeightMinor
    int AppCompatTheme_windowFixedWidthMajor -> AppCompatTheme_windowFixedWidthMajor
    int AppCompatTheme_windowFixedWidthMinor -> AppCompatTheme_windowFixedWidthMinor
    int AppCompatTheme_windowMinWidthMajor -> AppCompatTheme_windowMinWidthMajor
    int AppCompatTheme_windowMinWidthMinor -> AppCompatTheme_windowMinWidthMinor
    int AppCompatTheme_windowNoTitle -> AppCompatTheme_windowNoTitle
    int[] ButtonBarLayout -> ButtonBarLayout
    int ButtonBarLayout_allowStacking -> ButtonBarLayout_allowStacking
    int[] ColorStateListItem -> ColorStateListItem
    int ColorStateListItem_android_color -> ColorStateListItem_android_color
    int ColorStateListItem_android_alpha -> ColorStateListItem_android_alpha
    int ColorStateListItem_alpha -> ColorStateListItem_alpha
    int[] CompoundButton -> CompoundButton
    int CompoundButton_android_button -> CompoundButton_android_button
    int CompoundButton_buttonTint -> CompoundButton_buttonTint
    int CompoundButton_buttonTintMode -> CompoundButton_buttonTintMode
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_arrowHeadLength -> DrawerArrowToggle_arrowHeadLength
    int DrawerArrowToggle_arrowShaftLength -> DrawerArrowToggle_arrowShaftLength
    int DrawerArrowToggle_barLength -> DrawerArrowToggle_barLength
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int[] MenuItem -> MenuItem
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_alphabeticModifiers -> MenuItem_alphabeticModifiers
    int MenuItem_contentDescription -> MenuItem_contentDescription
    int MenuItem_iconTint -> MenuItem_iconTint
    int MenuItem_iconTintMode -> MenuItem_iconTintMode
    int MenuItem_numericModifiers -> MenuItem_numericModifiers
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int MenuItem_tooltipText -> MenuItem_tooltipText
    int[] MenuView -> MenuView
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int MenuView_subMenuArrow -> MenuView_subMenuArrow
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int[] RecycleListView -> RecycleListView
    int RecycleListView_paddingBottomNoButtons -> RecycleListView_paddingBottomNoButtons
    int RecycleListView_paddingTopNoTitle -> RecycleListView_paddingTopNoTitle
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] Spinner -> Spinner
    int Spinner_android_entries -> Spinner_android_entries
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_popupTheme -> Spinner_popupTheme
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_thumbTint -> SwitchCompat_thumbTint
    int SwitchCompat_thumbTintMode -> SwitchCompat_thumbTintMode
    int SwitchCompat_track -> SwitchCompat_track
    int SwitchCompat_trackTint -> SwitchCompat_trackTint
    int SwitchCompat_trackTintMode -> SwitchCompat_trackTintMode
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textColorHint -> TextAppearance_android_textColorHint
    int TextAppearance_android_textColorLink -> TextAppearance_android_textColorLink
    int TextAppearance_android_shadowColor -> TextAppearance_android_shadowColor
    int TextAppearance_android_shadowDx -> TextAppearance_android_shadowDx
    int TextAppearance_android_shadowDy -> TextAppearance_android_shadowDy
    int TextAppearance_android_shadowRadius -> TextAppearance_android_shadowRadius
    int TextAppearance_android_fontFamily -> TextAppearance_android_fontFamily
    int TextAppearance_fontFamily -> TextAppearance_fontFamily
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_buttonGravity -> Toolbar_buttonGravity
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetEndWithActions -> Toolbar_contentInsetEndWithActions
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_contentInsetStartWithNavigation -> Toolbar_contentInsetStartWithNavigation
    int Toolbar_logo -> Toolbar_logo
    int Toolbar_logoDescription -> Toolbar_logoDescription
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_subtitleTextColor -> Toolbar_subtitleTextColor
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMargin -> Toolbar_titleMargin
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int Toolbar_titleTextColor -> Toolbar_titleTextColor
    int[] View -> View
    int View_android_theme -> View_android_theme
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int ViewBackgroundHelper_android_background -> ViewBackgroundHelper_android_background
    int ViewBackgroundHelper_backgroundTint -> ViewBackgroundHelper_backgroundTint
    int ViewBackgroundHelper_backgroundTintMode -> ViewBackgroundHelper_backgroundTintMode
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.cardview.BuildConfig -> android.support.v7.cardview.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.v7.cardview.R -> android.support.v7.cardview.R:
    void <init>() -> <init>
android.support.v7.cardview.R$attr -> android.support.v7.cardview.R$attr:
    int cardBackgroundColor -> cardBackgroundColor
    int cardCornerRadius -> cardCornerRadius
    int cardElevation -> cardElevation
    int cardMaxElevation -> cardMaxElevation
    int cardPreventCornerOverlap -> cardPreventCornerOverlap
    int cardUseCompatPadding -> cardUseCompatPadding
    int contentPadding -> contentPadding
    int contentPaddingBottom -> contentPaddingBottom
    int contentPaddingLeft -> contentPaddingLeft
    int contentPaddingRight -> contentPaddingRight
    int contentPaddingTop -> contentPaddingTop
    void <init>() -> <init>
android.support.v7.cardview.R$color -> android.support.v7.cardview.R$color:
    int cardview_dark_background -> cardview_dark_background
    int cardview_light_background -> cardview_light_background
    int cardview_shadow_end_color -> cardview_shadow_end_color
    int cardview_shadow_start_color -> cardview_shadow_start_color
    void <init>() -> <init>
android.support.v7.cardview.R$dimen -> android.support.v7.cardview.R$dimen:
    int cardview_compat_inset_shadow -> cardview_compat_inset_shadow
    int cardview_default_elevation -> cardview_default_elevation
    int cardview_default_radius -> cardview_default_radius
    void <init>() -> <init>
android.support.v7.cardview.R$style -> android.support.v7.cardview.R$style:
    int Base_CardView -> Base_CardView
    int CardView -> CardView
    int CardView_Dark -> CardView_Dark
    int CardView_Light -> CardView_Light
    void <init>() -> <init>
android.support.v7.cardview.R$styleable -> android.support.v7.cardview.R$styleable:
    int[] CardView -> CardView
    int CardView_android_minWidth -> CardView_android_minWidth
    int CardView_android_minHeight -> CardView_android_minHeight
    int CardView_cardBackgroundColor -> CardView_cardBackgroundColor
    int CardView_cardCornerRadius -> CardView_cardCornerRadius
    int CardView_cardElevation -> CardView_cardElevation
    int CardView_cardMaxElevation -> CardView_cardMaxElevation
    int CardView_cardPreventCornerOverlap -> CardView_cardPreventCornerOverlap
    int CardView_cardUseCompatPadding -> CardView_cardUseCompatPadding
    int CardView_contentPadding -> CardView_contentPadding
    int CardView_contentPaddingBottom -> CardView_contentPaddingBottom
    int CardView_contentPaddingLeft -> CardView_contentPaddingLeft
    int CardView_contentPaddingRight -> CardView_contentPaddingRight
    int CardView_contentPaddingTop -> CardView_contentPaddingTop
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.content.res.AppCompatColorStateListInflater -> android.support.v7.content.res.AppCompatColorStateListInflater:
    int DEFAULT_COLOR -> DEFAULT_COLOR
    void <init>() -> <init>
    android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    int modulateColorAlpha(int,float) -> modulateColorAlpha
android.support.v7.content.res.AppCompatResources -> android.support.v7.content.res.AppCompatResources:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.ThreadLocal TL_TYPED_VALUE -> TL_TYPED_VALUE
    java.util.WeakHashMap sColorStateCaches -> sColorStateCaches
    java.lang.Object sColorStateCacheLock -> sColorStateCacheLock
    void <init>() -> <init>
    android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> inflateColorStateList
    android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> getCachedColorStateList
    void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addColorStateListToCache
    boolean isColorInt(android.content.Context,int) -> isColorInt
    android.util.TypedValue getTypedValue() -> getTypedValue
    void <clinit>() -> <clinit>
android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry -> android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry:
    android.content.res.ColorStateList value -> value
    android.content.res.Configuration configuration -> configuration
    void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
android.support.v7.content.res.GrowingArrayUtils -> android.support.v7.content.res.GrowingArrayUtils:
    boolean $assertionsDisabled -> $assertionsDisabled
    java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    int[] append(int[],int,int) -> append
    long[] append(long[],int,long) -> append
    boolean[] append(boolean[],int,boolean) -> append
    java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object) -> insert
    int[] insert(int[],int,int,int) -> insert
    long[] insert(long[],int,int,long) -> insert
    boolean[] insert(boolean[],int,int,boolean) -> insert
    int growSize(int) -> growSize
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.graphics.drawable.DrawableWrapper -> android.support.v7.graphics.drawable.DrawableWrapper:
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    void jumpToCurrentState() -> jumpToCurrentState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean onLevelChange(int) -> onLevelChange
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
android.support.v7.graphics.drawable.DrawerArrowDrawable -> android.support.v7.graphics.drawable.DrawerArrowDrawable:
    int ARROW_DIRECTION_LEFT -> ARROW_DIRECTION_LEFT
    int ARROW_DIRECTION_RIGHT -> ARROW_DIRECTION_RIGHT
    int ARROW_DIRECTION_START -> ARROW_DIRECTION_START
    int ARROW_DIRECTION_END -> ARROW_DIRECTION_END
    android.graphics.Paint mPaint -> mPaint
    float ARROW_HEAD_ANGLE -> ARROW_HEAD_ANGLE
    float mArrowHeadLength -> mArrowHeadLength
    float mBarLength -> mBarLength
    float mArrowShaftLength -> mArrowShaftLength
    float mBarGap -> mBarGap
    boolean mSpin -> mSpin
    android.graphics.Path mPath -> mPath
    int mSize -> mSize
    boolean mVerticalMirror -> mVerticalMirror
    float mProgress -> mProgress
    float mMaxCutForBarSize -> mMaxCutForBarSize
    int mDirection -> mDirection
    void <init>(android.content.Context) -> <init>
    void setArrowHeadLength(float) -> setArrowHeadLength
    float getArrowHeadLength() -> getArrowHeadLength
    void setArrowShaftLength(float) -> setArrowShaftLength
    float getArrowShaftLength() -> getArrowShaftLength
    float getBarLength() -> getBarLength
    void setBarLength(float) -> setBarLength
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setBarThickness(float) -> setBarThickness
    float getBarThickness() -> getBarThickness
    float getGapSize() -> getGapSize
    void setGapSize(float) -> setGapSize
    void setDirection(int) -> setDirection
    boolean isSpinEnabled() -> isSpinEnabled
    void setSpinEnabled(boolean) -> setSpinEnabled
    int getDirection() -> getDirection
    void setVerticalMirror(boolean) -> setVerticalMirror
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getOpacity() -> getOpacity
    float getProgress() -> getProgress
    void setProgress(float) -> setProgress
    android.graphics.Paint getPaint() -> getPaint
    float lerp(float,float,float) -> lerp
    void <clinit>() -> <clinit>
android.support.v7.graphics.drawable.DrawerArrowDrawable$ArrowDirection -> android.support.v7.graphics.drawable.DrawerArrowDrawable$ArrowDirection:
android.support.v7.recyclerview.BuildConfig -> android.support.v7.recyclerview.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
android.support.v7.recyclerview.R -> android.support.v7.recyclerview.R:
    void <init>() -> <init>
android.support.v7.recyclerview.R$attr -> android.support.v7.recyclerview.R$attr:
    int fastScrollEnabled -> fastScrollEnabled
    int fastScrollHorizontalThumbDrawable -> fastScrollHorizontalThumbDrawable
    int fastScrollHorizontalTrackDrawable -> fastScrollHorizontalTrackDrawable
    int fastScrollVerticalThumbDrawable -> fastScrollVerticalThumbDrawable
    int fastScrollVerticalTrackDrawable -> fastScrollVerticalTrackDrawable
    int font -> font
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    int layoutManager -> layoutManager
    int reverseLayout -> reverseLayout
    int spanCount -> spanCount
    int stackFromEnd -> stackFromEnd
    void <init>() -> <init>
android.support.v7.recyclerview.R$bool -> android.support.v7.recyclerview.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    void <init>() -> <init>
android.support.v7.recyclerview.R$color -> android.support.v7.recyclerview.R$color:
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_light -> secondary_text_default_material_light
    void <init>() -> <init>
android.support.v7.recyclerview.R$dimen -> android.support.v7.recyclerview.R$dimen:
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int fastscroll_default_thickness -> fastscroll_default_thickness
    int fastscroll_margin -> fastscroll_margin
    int fastscroll_minimum_range -> fastscroll_minimum_range
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
    int item_touch_helper_swipe_escape_max_velocity -> item_touch_helper_swipe_escape_max_velocity
    int item_touch_helper_swipe_escape_velocity -> item_touch_helper_swipe_escape_velocity
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    void <init>() -> <init>
android.support.v7.recyclerview.R$drawable -> android.support.v7.recyclerview.R$drawable:
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    void <init>() -> <init>
android.support.v7.recyclerview.R$id -> android.support.v7.recyclerview.R$id:
    int action_container -> action_container
    int action_divider -> action_divider
    int action_image -> action_image
    int action_text -> action_text
    int actions -> actions
    int async -> async
    int blocking -> blocking
    int chronometer -> chronometer
    int forever -> forever
    int icon -> icon
    int icon_group -> icon_group
    int info -> info
    int italic -> italic
    int item_touch_helper_previous_elevation -> item_touch_helper_previous_elevation
    int line1 -> line1
    int line3 -> line3
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int right_icon -> right_icon
    int right_side -> right_side
    int text -> text
    int text2 -> text2
    int time -> time
    int title -> title
    void <init>() -> <init>
android.support.v7.recyclerview.R$integer -> android.support.v7.recyclerview.R$integer:
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    void <init>() -> <init>
android.support.v7.recyclerview.R$layout -> android.support.v7.recyclerview.R$layout:
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    void <init>() -> <init>
android.support.v7.recyclerview.R$string -> android.support.v7.recyclerview.R$string:
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    void <init>() -> <init>
android.support.v7.recyclerview.R$style -> android.support.v7.recyclerview.R$style:
    int TextAppearance_Compat_Notification -> TextAppearance_Compat_Notification
    int TextAppearance_Compat_Notification_Info -> TextAppearance_Compat_Notification_Info
    int TextAppearance_Compat_Notification_Line2 -> TextAppearance_Compat_Notification_Line2
    int TextAppearance_Compat_Notification_Time -> TextAppearance_Compat_Notification_Time
    int TextAppearance_Compat_Notification_Title -> TextAppearance_Compat_Notification_Title
    int Widget_Compat_NotificationActionContainer -> Widget_Compat_NotificationActionContainer
    int Widget_Compat_NotificationActionText -> Widget_Compat_NotificationActionText
    void <init>() -> <init>
android.support.v7.recyclerview.R$styleable -> android.support.v7.recyclerview.R$styleable:
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_android_descendantFocusability -> RecyclerView_android_descendantFocusability
    int RecyclerView_fastScrollEnabled -> RecyclerView_fastScrollEnabled
    int RecyclerView_fastScrollHorizontalThumbDrawable -> RecyclerView_fastScrollHorizontalThumbDrawable
    int RecyclerView_fastScrollHorizontalTrackDrawable -> RecyclerView_fastScrollHorizontalTrackDrawable
    int RecyclerView_fastScrollVerticalThumbDrawable -> RecyclerView_fastScrollVerticalThumbDrawable
    int RecyclerView_fastScrollVerticalTrackDrawable -> RecyclerView_fastScrollVerticalTrackDrawable
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.text.AllCapsTransformationMethod -> android.support.v7.text.AllCapsTransformationMethod:
    java.util.Locale mLocale -> mLocale
    void <init>(android.content.Context) -> <init>
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.util.AsyncListUtil -> android.support.v7.util.AsyncListUtil:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    java.lang.Class mTClass -> mTClass
    int mTileSize -> mTileSize
    android.support.v7.util.AsyncListUtil$DataCallback mDataCallback -> mDataCallback
    android.support.v7.util.AsyncListUtil$ViewCallback mViewCallback -> mViewCallback
    android.support.v7.util.TileList mTileList -> mTileList
    android.support.v7.util.ThreadUtil$MainThreadCallback mMainThreadProxy -> mMainThreadProxy
    android.support.v7.util.ThreadUtil$BackgroundCallback mBackgroundProxy -> mBackgroundProxy
    int[] mTmpRange -> mTmpRange
    int[] mPrevRange -> mPrevRange
    int[] mTmpRangeExtended -> mTmpRangeExtended
    boolean mAllowScrollHints -> mAllowScrollHints
    int mScrollHint -> mScrollHint
    int mItemCount -> mItemCount
    int mDisplayedGeneration -> mDisplayedGeneration
    int mRequestedGeneration -> mRequestedGeneration
    android.util.SparseIntArray mMissingPositions -> mMissingPositions
    android.support.v7.util.ThreadUtil$MainThreadCallback mMainThreadCallback -> mMainThreadCallback
    android.support.v7.util.ThreadUtil$BackgroundCallback mBackgroundCallback -> mBackgroundCallback
    void log(java.lang.String,java.lang.Object[]) -> log
    void <init>(java.lang.Class,int,android.support.v7.util.AsyncListUtil$DataCallback,android.support.v7.util.AsyncListUtil$ViewCallback) -> <init>
    boolean isRefreshPending() -> isRefreshPending
    void onRangeChanged() -> onRangeChanged
    void refresh() -> refresh
    java.lang.Object getItem(int) -> getItem
    int getItemCount() -> getItemCount
    void updateRange() -> updateRange
android.support.v7.util.AsyncListUtil$1 -> android.support.v7.util.AsyncListUtil$1:
    android.support.v7.util.AsyncListUtil this$0 -> this$0
    void <init>(android.support.v7.util.AsyncListUtil) -> <init>
    void updateItemCount(int,int) -> updateItemCount
    void addTile(int,android.support.v7.util.TileList$Tile) -> addTile
    void removeTile(int,int) -> removeTile
    void recycleAllTiles() -> recycleAllTiles
    boolean isRequestedGeneration(int) -> isRequestedGeneration
android.support.v7.util.AsyncListUtil$2 -> android.support.v7.util.AsyncListUtil$2:
    android.support.v7.util.TileList$Tile mRecycledRoot -> mRecycledRoot
    android.util.SparseBooleanArray mLoadedTiles -> mLoadedTiles
    int mGeneration -> mGeneration
    int mItemCount -> mItemCount
    int mFirstRequiredTileStart -> mFirstRequiredTileStart
    int mLastRequiredTileStart -> mLastRequiredTileStart
    android.support.v7.util.AsyncListUtil this$0 -> this$0
    void <init>(android.support.v7.util.AsyncListUtil) -> <init>
    void refresh(int) -> refresh
    void updateRange(int,int,int,int,int) -> updateRange
    int getTileStart(int) -> getTileStart
    void requestTiles(int,int,int,boolean) -> requestTiles
    void loadTile(int,int) -> loadTile
    void recycleTile(android.support.v7.util.TileList$Tile) -> recycleTile
    android.support.v7.util.TileList$Tile acquireTile() -> acquireTile
    boolean isTileLoaded(int) -> isTileLoaded
    void addTile(android.support.v7.util.TileList$Tile) -> addTile
    void removeTile(int) -> removeTile
    void flushTileCache(int) -> flushTileCache
    void log(java.lang.String,java.lang.Object[]) -> log
android.support.v7.util.AsyncListUtil$DataCallback -> android.support.v7.util.AsyncListUtil$DataCallback:
    void <init>() -> <init>
    int refreshData() -> refreshData
    void fillData(java.lang.Object[],int,int) -> fillData
    void recycleData(java.lang.Object[],int) -> recycleData
    int getMaxCachedTiles() -> getMaxCachedTiles
android.support.v7.util.AsyncListUtil$ViewCallback -> android.support.v7.util.AsyncListUtil$ViewCallback:
    int HINT_SCROLL_NONE -> HINT_SCROLL_NONE
    int HINT_SCROLL_DESC -> HINT_SCROLL_DESC
    int HINT_SCROLL_ASC -> HINT_SCROLL_ASC
    void <init>() -> <init>
    void getItemRangeInto(int[]) -> getItemRangeInto
    void extendRangeInto(int[],int[],int) -> extendRangeInto
    void onDataRefresh() -> onDataRefresh
    void onItemLoaded(int) -> onItemLoaded
android.support.v7.util.BatchingListUpdateCallback -> android.support.v7.util.BatchingListUpdateCallback:
    int TYPE_NONE -> TYPE_NONE
    int TYPE_ADD -> TYPE_ADD
    int TYPE_REMOVE -> TYPE_REMOVE
    int TYPE_CHANGE -> TYPE_CHANGE
    android.support.v7.util.ListUpdateCallback mWrapped -> mWrapped
    int mLastEventType -> mLastEventType
    int mLastEventPosition -> mLastEventPosition
    int mLastEventCount -> mLastEventCount
    java.lang.Object mLastEventPayload -> mLastEventPayload
    void <init>(android.support.v7.util.ListUpdateCallback) -> <init>
    void dispatchLastEvent() -> dispatchLastEvent
    void onInserted(int,int) -> onInserted
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int,java.lang.Object) -> onChanged
android.support.v7.util.DiffUtil -> android.support.v7.util.DiffUtil:
    java.util.Comparator SNAKE_COMPARATOR -> SNAKE_COMPARATOR
    void <init>() -> <init>
    android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback) -> calculateDiff
    android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback,boolean) -> calculateDiff
    android.support.v7.util.DiffUtil$Snake diffPartial(android.support.v7.util.DiffUtil$Callback,int,int,int,int,int[],int[],int) -> diffPartial
    void <clinit>() -> <clinit>
android.support.v7.util.DiffUtil$1 -> android.support.v7.util.DiffUtil$1:
    void <init>() -> <init>
    int compare(android.support.v7.util.DiffUtil$Snake,android.support.v7.util.DiffUtil$Snake) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v7.util.DiffUtil$Callback -> android.support.v7.util.DiffUtil$Callback:
    void <init>() -> <init>
    int getOldListSize() -> getOldListSize
    int getNewListSize() -> getNewListSize
    boolean areItemsTheSame(int,int) -> areItemsTheSame
    boolean areContentsTheSame(int,int) -> areContentsTheSame
    java.lang.Object getChangePayload(int,int) -> getChangePayload
android.support.v7.util.DiffUtil$DiffResult -> android.support.v7.util.DiffUtil$DiffResult:
    int FLAG_NOT_CHANGED -> FLAG_NOT_CHANGED
    int FLAG_CHANGED -> FLAG_CHANGED
    int FLAG_MOVED_CHANGED -> FLAG_MOVED_CHANGED
    int FLAG_MOVED_NOT_CHANGED -> FLAG_MOVED_NOT_CHANGED
    int FLAG_IGNORE -> FLAG_IGNORE
    int FLAG_OFFSET -> FLAG_OFFSET
    int FLAG_MASK -> FLAG_MASK
    java.util.List mSnakes -> mSnakes
    int[] mOldItemStatuses -> mOldItemStatuses
    int[] mNewItemStatuses -> mNewItemStatuses
    android.support.v7.util.DiffUtil$Callback mCallback -> mCallback
    int mOldListSize -> mOldListSize
    int mNewListSize -> mNewListSize
    boolean mDetectMoves -> mDetectMoves
    void <init>(android.support.v7.util.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    void addRootSnake() -> addRootSnake
    void findMatchingItems() -> findMatchingItems
    void findAddition(int,int,int) -> findAddition
    void findRemoval(int,int,int) -> findRemoval
    boolean findMatchingItem(int,int,int,boolean) -> findMatchingItem
    void dispatchUpdatesTo(android.support.v7.widget.RecyclerView$Adapter) -> dispatchUpdatesTo
    void dispatchUpdatesTo(android.support.v7.util.ListUpdateCallback) -> dispatchUpdatesTo
    android.support.v7.util.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean) -> removePostponedUpdate
    void dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int) -> dispatchAdditions
    void dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int) -> dispatchRemovals
    java.util.List getSnakes() -> getSnakes
android.support.v7.util.DiffUtil$DiffResult$1 -> android.support.v7.util.DiffUtil$DiffResult$1:
    android.support.v7.widget.RecyclerView$Adapter val$adapter -> val$adapter
    android.support.v7.util.DiffUtil$DiffResult this$0 -> this$0
    void <init>(android.support.v7.util.DiffUtil$DiffResult,android.support.v7.widget.RecyclerView$Adapter) -> <init>
    void onInserted(int,int) -> onInserted
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int,java.lang.Object) -> onChanged
android.support.v7.util.DiffUtil$PostponedUpdate -> android.support.v7.util.DiffUtil$PostponedUpdate:
    int posInOwnerList -> posInOwnerList
    int currentPos -> currentPos
    boolean removal -> removal
    void <init>(int,int,boolean) -> <init>
android.support.v7.util.DiffUtil$Range -> android.support.v7.util.DiffUtil$Range:
    int oldListStart -> oldListStart
    int oldListEnd -> oldListEnd
    int newListStart -> newListStart
    int newListEnd -> newListEnd
    void <init>() -> <init>
    void <init>(int,int,int,int) -> <init>
android.support.v7.util.DiffUtil$Snake -> android.support.v7.util.DiffUtil$Snake:
    int x -> x
    int y -> y
    int size -> size
    boolean removal -> removal
    boolean reverse -> reverse
    void <init>() -> <init>
android.support.v7.util.ListUpdateCallback -> android.support.v7.util.ListUpdateCallback:
    void onInserted(int,int) -> onInserted
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int,java.lang.Object) -> onChanged
android.support.v7.util.MessageThreadUtil -> android.support.v7.util.MessageThreadUtil:
    void <init>() -> <init>
    android.support.v7.util.ThreadUtil$MainThreadCallback getMainThreadProxy(android.support.v7.util.ThreadUtil$MainThreadCallback) -> getMainThreadProxy
    android.support.v7.util.ThreadUtil$BackgroundCallback getBackgroundProxy(android.support.v7.util.ThreadUtil$BackgroundCallback) -> getBackgroundProxy
android.support.v7.util.MessageThreadUtil$1 -> android.support.v7.util.MessageThreadUtil$1:
    android.support.v7.util.MessageThreadUtil$MessageQueue mQueue -> mQueue
    android.os.Handler mMainThreadHandler -> mMainThreadHandler
    int UPDATE_ITEM_COUNT -> UPDATE_ITEM_COUNT
    int ADD_TILE -> ADD_TILE
    int REMOVE_TILE -> REMOVE_TILE
    java.lang.Runnable mMainThreadRunnable -> mMainThreadRunnable
    android.support.v7.util.ThreadUtil$MainThreadCallback val$callback -> val$callback
    android.support.v7.util.MessageThreadUtil this$0 -> this$0
    void <init>(android.support.v7.util.MessageThreadUtil,android.support.v7.util.ThreadUtil$MainThreadCallback) -> <init>
    void updateItemCount(int,int) -> updateItemCount
    void addTile(int,android.support.v7.util.TileList$Tile) -> addTile
    void removeTile(int,int) -> removeTile
    void sendMessage(android.support.v7.util.MessageThreadUtil$SyncQueueItem) -> sendMessage
android.support.v7.util.MessageThreadUtil$1$1 -> android.support.v7.util.MessageThreadUtil$1$1:
    android.support.v7.util.MessageThreadUtil$1 this$1 -> this$1
    void <init>(android.support.v7.util.MessageThreadUtil$1) -> <init>
    void run() -> run
android.support.v7.util.MessageThreadUtil$2 -> android.support.v7.util.MessageThreadUtil$2:
    android.support.v7.util.MessageThreadUtil$MessageQueue mQueue -> mQueue
    java.util.concurrent.Executor mExecutor -> mExecutor
    java.util.concurrent.atomic.AtomicBoolean mBackgroundRunning -> mBackgroundRunning
    int REFRESH -> REFRESH
    int UPDATE_RANGE -> UPDATE_RANGE
    int LOAD_TILE -> LOAD_TILE
    int RECYCLE_TILE -> RECYCLE_TILE
    java.lang.Runnable mBackgroundRunnable -> mBackgroundRunnable
    android.support.v7.util.ThreadUtil$BackgroundCallback val$callback -> val$callback
    android.support.v7.util.MessageThreadUtil this$0 -> this$0
    void <init>(android.support.v7.util.MessageThreadUtil,android.support.v7.util.ThreadUtil$BackgroundCallback) -> <init>
    void refresh(int) -> refresh
    void updateRange(int,int,int,int,int) -> updateRange
    void loadTile(int,int) -> loadTile
    void recycleTile(android.support.v7.util.TileList$Tile) -> recycleTile
    void sendMessage(android.support.v7.util.MessageThreadUtil$SyncQueueItem) -> sendMessage
    void sendMessageAtFrontOfQueue(android.support.v7.util.MessageThreadUtil$SyncQueueItem) -> sendMessageAtFrontOfQueue
    void maybeExecuteBackgroundRunnable() -> maybeExecuteBackgroundRunnable
android.support.v7.util.MessageThreadUtil$2$1 -> android.support.v7.util.MessageThreadUtil$2$1:
    android.support.v7.util.MessageThreadUtil$2 this$1 -> this$1
    void <init>(android.support.v7.util.MessageThreadUtil$2) -> <init>
    void run() -> run
android.support.v7.util.MessageThreadUtil$MessageQueue -> android.support.v7.util.MessageThreadUtil$MessageQueue:
    android.support.v7.util.MessageThreadUtil$SyncQueueItem mRoot -> mRoot
    void <init>() -> <init>
    android.support.v7.util.MessageThreadUtil$SyncQueueItem next() -> next
    void sendMessageAtFrontOfQueue(android.support.v7.util.MessageThreadUtil$SyncQueueItem) -> sendMessageAtFrontOfQueue
    void sendMessage(android.support.v7.util.MessageThreadUtil$SyncQueueItem) -> sendMessage
    void removeMessages(int) -> removeMessages
android.support.v7.util.MessageThreadUtil$SyncQueueItem -> android.support.v7.util.MessageThreadUtil$SyncQueueItem:
    android.support.v7.util.MessageThreadUtil$SyncQueueItem sPool -> sPool
    java.lang.Object sPoolLock -> sPoolLock
    android.support.v7.util.MessageThreadUtil$SyncQueueItem next -> next
    int what -> what
    int arg1 -> arg1
    int arg2 -> arg2
    int arg3 -> arg3
    int arg4 -> arg4
    int arg5 -> arg5
    java.lang.Object data -> data
    void <init>() -> <init>
    void recycle() -> recycle
    android.support.v7.util.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int,int,int,int,java.lang.Object) -> obtainMessage
    android.support.v7.util.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int) -> obtainMessage
    android.support.v7.util.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,java.lang.Object) -> obtainMessage
    android.support.v7.util.MessageThreadUtil$SyncQueueItem access$000(android.support.v7.util.MessageThreadUtil$SyncQueueItem) -> access$000
    android.support.v7.util.MessageThreadUtil$SyncQueueItem access$002(android.support.v7.util.MessageThreadUtil$SyncQueueItem,android.support.v7.util.MessageThreadUtil$SyncQueueItem) -> access$002
    void <clinit>() -> <clinit>
android.support.v7.util.SortedList -> android.support.v7.util.SortedList:
    int INVALID_POSITION -> INVALID_POSITION
    int MIN_CAPACITY -> MIN_CAPACITY
    int CAPACITY_GROWTH -> CAPACITY_GROWTH
    int INSERTION -> INSERTION
    int DELETION -> DELETION
    int LOOKUP -> LOOKUP
    java.lang.Object[] mData -> mData
    java.lang.Object[] mOldData -> mOldData
    int mOldDataStart -> mOldDataStart
    int mOldDataSize -> mOldDataSize
    int mMergedSize -> mMergedSize
    android.support.v7.util.SortedList$Callback mCallback -> mCallback
    android.support.v7.util.SortedList$BatchedCallback mBatchedCallback -> mBatchedCallback
    int mSize -> mSize
    java.lang.Class mTClass -> mTClass
    void <init>(java.lang.Class,android.support.v7.util.SortedList$Callback) -> <init>
    void <init>(java.lang.Class,android.support.v7.util.SortedList$Callback,int) -> <init>
    int size() -> size
    int add(java.lang.Object) -> add
    void addAll(java.lang.Object[],boolean) -> addAll
    void addAll(java.lang.Object[]) -> addAll
    void addAll(java.util.Collection) -> addAll
    void addAllInternal(java.lang.Object[]) -> addAllInternal
    int deduplicate(java.lang.Object[]) -> deduplicate
    int findSameItem(java.lang.Object,java.lang.Object[],int,int) -> findSameItem
    void merge(java.lang.Object[],int) -> merge
    void throwIfMerging() -> throwIfMerging
    void beginBatchedUpdates() -> beginBatchedUpdates
    void endBatchedUpdates() -> endBatchedUpdates
    int add(java.lang.Object,boolean) -> add
    boolean remove(java.lang.Object) -> remove
    java.lang.Object removeItemAt(int) -> removeItemAt
    boolean remove(java.lang.Object,boolean) -> remove
    void removeItemAtIndex(int,boolean) -> removeItemAtIndex
    void updateItemAt(int,java.lang.Object) -> updateItemAt
    void recalculatePositionOfItemAt(int) -> recalculatePositionOfItemAt
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int) -> findIndexOf
    int linearEqualitySearch(java.lang.Object,int,int,int) -> linearEqualitySearch
    void addToData(int,java.lang.Object) -> addToData
    void clear() -> clear
android.support.v7.util.SortedList$BatchedCallback -> android.support.v7.util.SortedList$BatchedCallback:
    android.support.v7.util.SortedList$Callback mWrappedCallback -> mWrappedCallback
    android.support.v7.util.BatchingListUpdateCallback mBatchingListUpdateCallback -> mBatchingListUpdateCallback
    void <init>(android.support.v7.util.SortedList$Callback) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    void onInserted(int,int) -> onInserted
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int) -> onChanged
    boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
    void dispatchLastEvent() -> dispatchLastEvent
android.support.v7.util.SortedList$Callback -> android.support.v7.util.SortedList$Callback:
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    void onChanged(int,int) -> onChanged
    void onChanged(int,int,java.lang.Object) -> onChanged
    boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
android.support.v7.util.ThreadUtil -> android.support.v7.util.ThreadUtil:
    android.support.v7.util.ThreadUtil$MainThreadCallback getMainThreadProxy(android.support.v7.util.ThreadUtil$MainThreadCallback) -> getMainThreadProxy
    android.support.v7.util.ThreadUtil$BackgroundCallback getBackgroundProxy(android.support.v7.util.ThreadUtil$BackgroundCallback) -> getBackgroundProxy
android.support.v7.util.ThreadUtil$BackgroundCallback -> android.support.v7.util.ThreadUtil$BackgroundCallback:
    void refresh(int) -> refresh
    void updateRange(int,int,int,int,int) -> updateRange
    void loadTile(int,int) -> loadTile
    void recycleTile(android.support.v7.util.TileList$Tile) -> recycleTile
android.support.v7.util.ThreadUtil$MainThreadCallback -> android.support.v7.util.ThreadUtil$MainThreadCallback:
    void updateItemCount(int,int) -> updateItemCount
    void addTile(int,android.support.v7.util.TileList$Tile) -> addTile
    void removeTile(int,int) -> removeTile
android.support.v7.util.TileList -> android.support.v7.util.TileList:
    int mTileSize -> mTileSize
    android.util.SparseArray mTiles -> mTiles
    android.support.v7.util.TileList$Tile mLastAccessedTile -> mLastAccessedTile
    void <init>(int) -> <init>
    java.lang.Object getItemAt(int) -> getItemAt
    int size() -> size
    void clear() -> clear
    android.support.v7.util.TileList$Tile getAtIndex(int) -> getAtIndex
    android.support.v7.util.TileList$Tile addOrReplace(android.support.v7.util.TileList$Tile) -> addOrReplace
    android.support.v7.util.TileList$Tile removeAtPos(int) -> removeAtPos
android.support.v7.util.TileList$Tile -> android.support.v7.util.TileList$Tile:
    java.lang.Object[] mItems -> mItems
    int mStartPosition -> mStartPosition
    int mItemCount -> mItemCount
    android.support.v7.util.TileList$Tile mNext -> mNext
    void <init>(java.lang.Class,int) -> <init>
    boolean containsPosition(int) -> containsPosition
    java.lang.Object getByPosition(int) -> getByPosition
android.support.v7.view.ActionBarPolicy -> android.support.v7.view.ActionBarPolicy:
    android.content.Context mContext -> mContext
    android.support.v7.view.ActionBarPolicy get(android.content.Context) -> get
    void <init>(android.content.Context) -> <init>
    int getMaxActionButtons() -> getMaxActionButtons
    boolean showsOverflowMenuButton() -> showsOverflowMenuButton
    int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    int getTabContainerHeight() -> getTabContainerHeight
    boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    int getStackedTabMaxWidth() -> getStackedTabMaxWidth
android.support.v7.view.ActionMode -> android.support.v7.view.ActionMode:
    java.lang.Object mTag -> mTag
    boolean mTitleOptionalHint -> mTitleOptionalHint
    void <init>() -> <init>
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    boolean getTitleOptionalHint() -> getTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    android.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean isUiFocusable() -> isUiFocusable
android.support.v7.view.ActionMode$Callback -> android.support.v7.view.ActionMode$Callback:
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> onDestroyActionMode
android.support.v7.view.CollapsibleActionView -> android.support.v7.view.CollapsibleActionView:
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v7.view.ContextThemeWrapper -> android.support.v7.view.ContextThemeWrapper:
    int mThemeResource -> mThemeResource
    android.content.res.Resources$Theme mTheme -> mTheme
    android.view.LayoutInflater mInflater -> mInflater
    android.content.res.Configuration mOverrideConfiguration -> mOverrideConfiguration
    android.content.res.Resources mResources -> mResources
    void <init>() -> <init>
    void <init>(android.content.Context,int) -> <init>
    void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    void attachBaseContext(android.content.Context) -> attachBaseContext
    void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    android.content.res.Configuration getOverrideConfiguration() -> getOverrideConfiguration
    android.content.res.Resources getResources() -> getResources
    android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    void setTheme(int) -> setTheme
    int getThemeResId() -> getThemeResId
    android.content.res.Resources$Theme getTheme() -> getTheme
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    void initializeTheme() -> initializeTheme
    android.content.res.AssetManager getAssets() -> getAssets
android.support.v7.view.StandaloneActionMode -> android.support.v7.view.StandaloneActionMode:
    android.content.Context mContext -> mContext
    android.support.v7.widget.ActionBarContextView mContextView -> mContextView
    android.support.v7.view.ActionMode$Callback mCallback -> mCallback
    java.lang.ref.WeakReference mCustomView -> mCustomView
    boolean mFinished -> mFinished
    boolean mFocusable -> mFocusable
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    void <init>(android.content.Context,android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode$Callback,boolean) -> <init>
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    android.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(android.support.v7.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
    boolean isUiFocusable() -> isUiFocusable
android.support.v7.view.SupportActionModeWrapper -> android.support.v7.view.SupportActionModeWrapper:
    android.content.Context mContext -> mContext
    android.support.v7.view.ActionMode mWrappedObject -> mWrappedObject
    void <init>(android.content.Context,android.support.v7.view.ActionMode) -> <init>
    java.lang.Object getTag() -> getTag
    void setTag(java.lang.Object) -> setTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void invalidate() -> invalidate
    void finish() -> finish
    android.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(int) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(int) -> setSubtitle
    android.view.View getCustomView() -> getCustomView
    void setCustomView(android.view.View) -> setCustomView
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean getTitleOptionalHint() -> getTitleOptionalHint
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
android.support.v7.view.SupportActionModeWrapper$CallbackWrapper -> android.support.v7.view.SupportActionModeWrapper$CallbackWrapper:
    android.view.ActionMode$Callback mWrappedCallback -> mWrappedCallback
    android.content.Context mContext -> mContext
    java.util.ArrayList mActionModes -> mActionModes
    android.support.v4.util.SimpleArrayMap mMenus -> mMenus
    void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> onDestroyActionMode
    android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    android.view.ActionMode getActionModeWrapper(android.support.v7.view.ActionMode) -> getActionModeWrapper
android.support.v7.view.SupportMenuInflater -> android.support.v7.view.SupportMenuInflater:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String XML_MENU -> XML_MENU
    java.lang.String XML_GROUP -> XML_GROUP
    java.lang.String XML_ITEM -> XML_ITEM
    int NO_ID -> NO_ID
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> ACTION_VIEW_CONSTRUCTOR_SIGNATURE
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
    java.lang.Object[] mActionViewConstructorArguments -> mActionViewConstructorArguments
    java.lang.Object[] mActionProviderConstructorArguments -> mActionProviderConstructorArguments
    android.content.Context mContext -> mContext
    java.lang.Object mRealOwner -> mRealOwner
    void <init>(android.content.Context) -> <init>
    void inflate(int,android.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
    java.lang.Object getRealOwner() -> getRealOwner
    java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    void <clinit>() -> <clinit>
android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    java.lang.Class[] PARAM_TYPES -> PARAM_TYPES
    java.lang.Object mRealOwner -> mRealOwner
    java.lang.reflect.Method mMethod -> mMethod
    void <init>(java.lang.Object,java.lang.String) -> <init>
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    void <clinit>() -> <clinit>
android.support.v7.view.SupportMenuInflater$MenuState -> android.support.v7.view.SupportMenuInflater$MenuState:
    android.view.Menu menu -> menu
    int groupId -> groupId
    int groupCategory -> groupCategory
    int groupOrder -> groupOrder
    int groupCheckable -> groupCheckable
    boolean groupVisible -> groupVisible
    boolean groupEnabled -> groupEnabled
    boolean itemAdded -> itemAdded
    int itemId -> itemId
    int itemCategoryOrder -> itemCategoryOrder
    java.lang.CharSequence itemTitle -> itemTitle
    java.lang.CharSequence itemTitleCondensed -> itemTitleCondensed
    int itemIconResId -> itemIconResId
    char itemAlphabeticShortcut -> itemAlphabeticShortcut
    int itemAlphabeticModifiers -> itemAlphabeticModifiers
    char itemNumericShortcut -> itemNumericShortcut
    int itemNumericModifiers -> itemNumericModifiers
    int itemCheckable -> itemCheckable
    boolean itemChecked -> itemChecked
    boolean itemVisible -> itemVisible
    boolean itemEnabled -> itemEnabled
    int itemShowAsAction -> itemShowAsAction
    int itemActionViewLayout -> itemActionViewLayout
    java.lang.String itemActionViewClassName -> itemActionViewClassName
    java.lang.String itemActionProviderClassName -> itemActionProviderClassName
    java.lang.String itemListenerMethodName -> itemListenerMethodName
    android.support.v4.view.ActionProvider itemActionProvider -> itemActionProvider
    java.lang.CharSequence itemContentDescription -> itemContentDescription
    java.lang.CharSequence itemTooltipText -> itemTooltipText
    android.content.res.ColorStateList itemIconTintList -> itemIconTintList
    android.graphics.PorterDuff$Mode itemIconTintMode -> itemIconTintMode
    int defaultGroupId -> defaultGroupId
    int defaultItemId -> defaultItemId
    int defaultItemCategory -> defaultItemCategory
    int defaultItemOrder -> defaultItemOrder
    int defaultItemCheckable -> defaultItemCheckable
    boolean defaultItemChecked -> defaultItemChecked
    boolean defaultItemVisible -> defaultItemVisible
    boolean defaultItemEnabled -> defaultItemEnabled
    android.support.v7.view.SupportMenuInflater this$0 -> this$0
    void <init>(android.support.v7.view.SupportMenuInflater,android.view.Menu) -> <init>
    void resetGroup() -> resetGroup
    void readGroup(android.util.AttributeSet) -> readGroup
    void readItem(android.util.AttributeSet) -> readItem
    char getShortcut(java.lang.String) -> getShortcut
    void setItem(android.view.MenuItem) -> setItem
    void addItem() -> addItem
    android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    boolean hasAddedItem() -> hasAddedItem
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
android.support.v7.view.ViewPropertyAnimatorCompatSet -> android.support.v7.view.ViewPropertyAnimatorCompatSet:
    java.util.ArrayList mAnimators -> mAnimators
    long mDuration -> mDuration
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    android.support.v4.view.ViewPropertyAnimatorListener mListener -> mListener
    boolean mIsStarted -> mIsStarted
    android.support.v4.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> mProxyListener
    void <init>() -> <init>
    android.support.v7.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat) -> play
    android.support.v7.view.ViewPropertyAnimatorCompatSet playSequentially(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorCompat) -> playSequentially
    void start() -> start
    void onAnimationsEnded() -> onAnimationsEnded
    void cancel() -> cancel
    android.support.v7.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    android.support.v7.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.support.v7.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v7.view.ViewPropertyAnimatorCompatSet$1 -> android.support.v7.view.ViewPropertyAnimatorCompatSet$1:
    boolean mProxyStarted -> mProxyStarted
    int mProxyEndCount -> mProxyEndCount
    android.support.v7.view.ViewPropertyAnimatorCompatSet this$0 -> this$0
    void <init>(android.support.v7.view.ViewPropertyAnimatorCompatSet) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onEnd() -> onEnd
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.view.WindowCallbackWrapper -> android.support.v7.view.WindowCallbackWrapper:
    android.view.Window$Callback mWrapped -> mWrapped
    void <init>(android.view.Window$Callback) -> <init>
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onContentChanged() -> onContentChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    boolean onSearchRequested() -> onSearchRequested
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
android.support.v7.view.menu.ActionMenuItem -> android.support.v7.view.menu.ActionMenuItem:
    int mId -> mId
    int mGroup -> mGroup
    int mCategoryOrder -> mCategoryOrder
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    int mShortcutNumericModifiers -> mShortcutNumericModifiers
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    int mShortcutAlphabeticModifiers -> mShortcutAlphabeticModifiers
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    int mIconResId -> mIconResId
    android.content.Context mContext -> mContext
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    java.lang.CharSequence mContentDescription -> mContentDescription
    java.lang.CharSequence mTooltipText -> mTooltipText
    android.content.res.ColorStateList mIconTintList -> mIconTintList
    android.graphics.PorterDuff$Mode mIconTintMode -> mIconTintMode
    boolean mHasIconTint -> mHasIconTint
    boolean mHasIconTintMode -> mHasIconTintMode
    int NO_ICON -> NO_ICON
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getAlphabeticModifiers() -> getAlphabeticModifiers
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getNumericModifiers() -> getNumericModifiers
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.support.v7.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> setExclusiveCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean invoke() -> invoke
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> setActionView
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
    android.support.v4.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    java.lang.CharSequence getTooltipText() -> getTooltipText
    android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    android.content.res.ColorStateList getIconTintList() -> getIconTintList
    android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    void applyIconTint() -> applyIconTint
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
android.support.v7.view.menu.ActionMenuItemView -> android.support.v7.view.menu.ActionMenuItemView:
    java.lang.String TAG -> TAG
    android.support.v7.view.menu.MenuItemImpl mItemData -> mItemData
    java.lang.CharSequence mTitle -> mTitle
    android.graphics.drawable.Drawable mIcon -> mIcon
    android.support.v7.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> mItemInvoker
    android.support.v7.widget.ForwardingListener mForwardingListener -> mForwardingListener
    android.support.v7.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> mPopupCallback
    boolean mAllowTextWithIcon -> mAllowTextWithIcon
    boolean mExpandedFormat -> mExpandedFormat
    int mMinWidth -> mMinWidth
    int mSavedPaddingLeft -> mSavedPaddingLeft
    int MAX_ICON_SIZE -> MAX_ICON_SIZE
    int mMaxIconSize -> mMaxIconSize
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    void setPadding(int,int,int,int) -> setPadding
    android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onClick(android.view.View) -> onClick
    void setItemInvoker(android.support.v7.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    void setPopupCallback(android.support.v7.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> updateTextButtonVisibility
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> hasText
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean showsIcon() -> showsIcon
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    android.support.v7.view.menu.ActionMenuItemView this$0 -> this$0
    void <init>(android.support.v7.view.menu.ActionMenuItemView) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    boolean onForwardingStarted() -> onForwardingStarted
android.support.v7.view.menu.ActionMenuItemView$PopupCallback -> android.support.v7.view.menu.ActionMenuItemView$PopupCallback:
    void <init>() -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
android.support.v7.view.menu.BaseMenuPresenter -> android.support.v7.view.menu.BaseMenuPresenter:
    android.content.Context mSystemContext -> mSystemContext
    android.content.Context mContext -> mContext
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.view.LayoutInflater mSystemInflater -> mSystemInflater
    android.view.LayoutInflater mInflater -> mInflater
    android.support.v7.view.menu.MenuPresenter$Callback mCallback -> mCallback
    int mMenuLayoutRes -> mMenuLayoutRes
    int mItemLayoutRes -> mItemLayoutRes
    android.support.v7.view.menu.MenuView mMenuView -> mMenuView
    int mId -> mId
    void <init>(android.content.Context,int,int) -> <init>
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void addItemView(android.view.View,int) -> addItemView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    android.support.v7.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    android.support.v7.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(android.support.v7.view.menu.MenuItemImpl,android.support.v7.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,android.support.v7.view.menu.MenuItemImpl) -> shouldIncludeItem
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    void setId(int) -> setId
android.support.v7.view.menu.BaseMenuWrapper -> android.support.v7.view.menu.BaseMenuWrapper:
    android.content.Context mContext -> mContext
    java.util.Map mMenuItems -> mMenuItems
    java.util.Map mSubMenus -> mSubMenus
    void <init>(android.content.Context,java.lang.Object) -> <init>
    android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    void internalClear() -> internalClear
    void internalRemoveGroup(int) -> internalRemoveGroup
    void internalRemoveItem(int) -> internalRemoveItem
android.support.v7.view.menu.BaseWrapper -> android.support.v7.view.menu.BaseWrapper:
    java.lang.Object mWrappedObject -> mWrappedObject
    void <init>(java.lang.Object) -> <init>
    java.lang.Object getWrappedObject() -> getWrappedObject
android.support.v7.view.menu.CascadingMenuPopup -> android.support.v7.view.menu.CascadingMenuPopup:
    int HORIZ_POSITION_LEFT -> HORIZ_POSITION_LEFT
    int HORIZ_POSITION_RIGHT -> HORIZ_POSITION_RIGHT
    int SUBMENU_TIMEOUT_MS -> SUBMENU_TIMEOUT_MS
    android.content.Context mContext -> mContext
    int mMenuMaxWidth -> mMenuMaxWidth
    int mPopupStyleAttr -> mPopupStyleAttr
    int mPopupStyleRes -> mPopupStyleRes
    boolean mOverflowOnly -> mOverflowOnly
    android.os.Handler mSubMenuHoverHandler -> mSubMenuHoverHandler
    java.util.List mPendingMenus -> mPendingMenus
    java.util.List mShowingMenus -> mShowingMenus
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> mGlobalLayoutListener
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> mAttachStateChangeListener
    android.support.v7.widget.MenuItemHoverListener mMenuItemHoverListener -> mMenuItemHoverListener
    int mRawDropDownGravity -> mRawDropDownGravity
    int mDropDownGravity -> mDropDownGravity
    android.view.View mAnchorView -> mAnchorView
    android.view.View mShownAnchorView -> mShownAnchorView
    int mLastPosition -> mLastPosition
    boolean mHasXOffset -> mHasXOffset
    boolean mHasYOffset -> mHasYOffset
    int mXOffset -> mXOffset
    int mYOffset -> mYOffset
    boolean mForceShowIcon -> mForceShowIcon
    boolean mShowTitle -> mShowTitle
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    android.view.ViewTreeObserver mTreeObserver -> mTreeObserver
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    boolean mShouldCloseImmediately -> mShouldCloseImmediately
    void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    void setForceShowIcon(boolean) -> setForceShowIcon
    android.support.v7.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    void show() -> show
    void dismiss() -> dismiss
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int getInitialMenuPosition() -> getInitialMenuPosition
    int getNextMenuPosition(int) -> getNextMenuPosition
    void addMenu(android.support.v7.view.menu.MenuBuilder) -> addMenu
    void showMenu(android.support.v7.view.menu.MenuBuilder) -> showMenu
    android.view.MenuItem findMenuItemForSubmenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    android.view.View findParentViewForSubmenu(android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.support.v7.view.menu.MenuBuilder) -> findParentViewForSubmenu
    boolean isShowing() -> isShowing
    void onDismiss() -> onDismiss
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    int findIndexOfAddedMenu(android.support.v7.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setGravity(int) -> setGravity
    void setAnchorView(android.view.View) -> setAnchorView
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    android.widget.ListView getListView() -> getListView
    void setHorizontalOffset(int) -> setHorizontalOffset
    void setVerticalOffset(int) -> setVerticalOffset
    void setShowTitle(boolean) -> setShowTitle
    boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    android.view.ViewTreeObserver access$000(android.support.v7.view.menu.CascadingMenuPopup) -> access$000
    android.view.ViewTreeObserver access$002(android.support.v7.view.menu.CascadingMenuPopup,android.view.ViewTreeObserver) -> access$002
    android.view.ViewTreeObserver$OnGlobalLayoutListener access$100(android.support.v7.view.menu.CascadingMenuPopup) -> access$100
android.support.v7.view.menu.CascadingMenuPopup$1 -> android.support.v7.view.menu.CascadingMenuPopup$1:
    android.support.v7.view.menu.CascadingMenuPopup this$0 -> this$0
    void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.view.menu.CascadingMenuPopup$2 -> android.support.v7.view.menu.CascadingMenuPopup$2:
    android.support.v7.view.menu.CascadingMenuPopup this$0 -> this$0
    void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.v7.view.menu.CascadingMenuPopup$3 -> android.support.v7.view.menu.CascadingMenuPopup$3:
    android.support.v7.view.menu.CascadingMenuPopup this$0 -> this$0
    void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
    void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
android.support.v7.view.menu.CascadingMenuPopup$3$1 -> android.support.v7.view.menu.CascadingMenuPopup$3$1:
    android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo -> val$nextInfo
    android.view.MenuItem val$item -> val$item
    android.support.v7.view.menu.MenuBuilder val$menu -> val$menu
    android.support.v7.view.menu.CascadingMenuPopup$3 this$1 -> this$1
    void <init>(android.support.v7.view.menu.CascadingMenuPopup$3,android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,android.support.v7.view.menu.MenuBuilder) -> <init>
    void run() -> run
android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo -> android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    android.support.v7.widget.MenuPopupWindow window -> window
    android.support.v7.view.menu.MenuBuilder menu -> menu
    int position -> position
    void <init>(android.support.v7.widget.MenuPopupWindow,android.support.v7.view.menu.MenuBuilder,int) -> <init>
    android.widget.ListView getListView() -> getListView
android.support.v7.view.menu.CascadingMenuPopup$HorizPosition -> android.support.v7.view.menu.CascadingMenuPopup$HorizPosition:
android.support.v7.view.menu.ExpandedMenuView -> android.support.v7.view.menu.ExpandedMenuView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    int mAnimations -> mAnimations
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void initialize(android.support.v7.view.menu.MenuBuilder) -> initialize
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> invokeItem
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getWindowAnimations() -> getWindowAnimations
    void <clinit>() -> <clinit>
android.support.v7.view.menu.ListMenuItemView -> android.support.v7.view.menu.ListMenuItemView:
    java.lang.String TAG -> TAG
    android.support.v7.view.menu.MenuItemImpl mItemData -> mItemData
    android.widget.ImageView mIconView -> mIconView
    android.widget.RadioButton mRadioButton -> mRadioButton
    android.widget.TextView mTitleView -> mTitleView
    android.widget.CheckBox mCheckBox -> mCheckBox
    android.widget.TextView mShortcutView -> mShortcutView
    android.widget.ImageView mSubMenuArrowView -> mSubMenuArrowView
    android.graphics.drawable.Drawable mBackground -> mBackground
    int mTextAppearance -> mTextAppearance
    android.content.Context mTextAppearanceContext -> mTextAppearanceContext
    boolean mPreserveIconSpacing -> mPreserveIconSpacing
    android.graphics.drawable.Drawable mSubMenuArrow -> mSubMenuArrow
    int mMenuType -> mMenuType
    android.view.LayoutInflater mInflater -> mInflater
    boolean mForceShowIcon -> mForceShowIcon
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onFinishInflate() -> onFinishInflate
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> insertIconView
    void insertRadioButton() -> insertRadioButton
    void insertCheckBox() -> insertCheckBox
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
    android.view.LayoutInflater getInflater() -> getInflater
android.support.v7.view.menu.ListMenuPresenter -> android.support.v7.view.menu.ListMenuPresenter:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.view.menu.ExpandedMenuView mMenuView -> mMenuView
    int mItemIndexOffset -> mItemIndexOffset
    int mThemeRes -> mThemeRes
    int mItemLayoutRes -> mItemLayoutRes
    android.support.v7.view.menu.MenuPresenter$Callback mCallback -> mCallback
    android.support.v7.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> mAdapter
    int mId -> mId
    java.lang.String VIEWS_TAG -> VIEWS_TAG
    void <init>(android.content.Context,int) -> <init>
    void <init>(int,int) -> <init>
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    android.widget.ListAdapter getAdapter() -> getAdapter
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    int getItemIndexOffset() -> getItemIndexOffset
    void setItemIndexOffset(int) -> setItemIndexOffset
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    void setId(int) -> setId
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
android.support.v7.view.menu.ListMenuPresenter$MenuAdapter -> android.support.v7.view.menu.ListMenuPresenter$MenuAdapter:
    int mExpandedIndex -> mExpandedIndex
    android.support.v7.view.menu.ListMenuPresenter this$0 -> this$0
    void <init>(android.support.v7.view.menu.ListMenuPresenter) -> <init>
    int getCount() -> getCount
    android.support.v7.view.menu.MenuItemImpl getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> findExpandedIndex
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
android.support.v7.view.menu.MenuAdapter -> android.support.v7.view.menu.MenuAdapter:
    int ITEM_LAYOUT -> ITEM_LAYOUT
    android.support.v7.view.menu.MenuBuilder mAdapterMenu -> mAdapterMenu
    int mExpandedIndex -> mExpandedIndex
    boolean mForceShowIcon -> mForceShowIcon
    boolean mOverflowOnly -> mOverflowOnly
    android.view.LayoutInflater mInflater -> mInflater
    void <init>(android.support.v7.view.menu.MenuBuilder,android.view.LayoutInflater,boolean) -> <init>
    boolean getForceShowIcon() -> getForceShowIcon
    void setForceShowIcon(boolean) -> setForceShowIcon
    int getCount() -> getCount
    android.support.v7.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    android.support.v7.view.menu.MenuItemImpl getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> findExpandedIndex
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
    void <clinit>() -> <clinit>
android.support.v7.view.menu.MenuBuilder -> android.support.v7.view.menu.MenuBuilder:
    java.lang.String TAG -> TAG
    java.lang.String PRESENTER_KEY -> PRESENTER_KEY
    java.lang.String ACTION_VIEW_STATES_KEY -> ACTION_VIEW_STATES_KEY
    java.lang.String EXPANDED_ACTION_VIEW_ID -> EXPANDED_ACTION_VIEW_ID
    int[] sCategoryToOrder -> sCategoryToOrder
    android.content.Context mContext -> mContext
    android.content.res.Resources mResources -> mResources
    boolean mQwertyMode -> mQwertyMode
    boolean mShortcutsVisible -> mShortcutsVisible
    android.support.v7.view.menu.MenuBuilder$Callback mCallback -> mCallback
    java.util.ArrayList mItems -> mItems
    java.util.ArrayList mVisibleItems -> mVisibleItems
    boolean mIsVisibleItemsStale -> mIsVisibleItemsStale
    java.util.ArrayList mActionItems -> mActionItems
    java.util.ArrayList mNonActionItems -> mNonActionItems
    boolean mIsActionItemsStale -> mIsActionItemsStale
    int mDefaultShowAsAction -> mDefaultShowAsAction
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> mCurrentMenuInfo
    java.lang.CharSequence mHeaderTitle -> mHeaderTitle
    android.graphics.drawable.Drawable mHeaderIcon -> mHeaderIcon
    android.view.View mHeaderView -> mHeaderView
    android.util.SparseArray mFrozenViewStates -> mFrozenViewStates
    boolean mPreventDispatchingItemsChanged -> mPreventDispatchingItemsChanged
    boolean mItemsChangedWhileDispatchPrevented -> mItemsChangedWhileDispatchPrevented
    boolean mStructureChangedWhileDispatchPrevented -> mStructureChangedWhileDispatchPrevented
    boolean mOptionalIconsVisible -> mOptionalIconsVisible
    boolean mIsClosing -> mIsClosing
    java.util.ArrayList mTempShortcutItemList -> mTempShortcutItemList
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> mPresenters
    android.support.v7.view.menu.MenuItemImpl mExpandedItem -> mExpandedItem
    boolean mOverrideVisibleItems -> mOverrideVisibleItems
    void <init>(android.content.Context) -> <init>
    android.support.v7.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    void addMenuPresenter(android.support.v7.view.menu.MenuPresenter) -> addMenuPresenter
    void addMenuPresenter(android.support.v7.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    void removeMenuPresenter(android.support.v7.view.menu.MenuPresenter) -> removeMenuPresenter
    void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    boolean dispatchSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder,android.support.v7.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    void savePresenterStates(android.os.Bundle) -> savePresenterStates
    void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    void setCallback(android.support.v7.view.menu.MenuBuilder$Callback) -> setCallback
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    android.support.v7.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> removeItemAtInt
    void removeItemAt(int) -> removeItemAt
    void clearAll() -> clearAll
    void clear() -> clear
    void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> findItemIndex
    int findGroupIndex(int) -> findGroupIndex
    int findGroupIndex(int,int) -> findGroupIndex
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> getOrdering
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    boolean isShortcutsVisible() -> isShortcutsVisible
    android.content.res.Resources getResources() -> getResources
    android.content.Context getContext() -> getContext
    boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    void changeMenuMode() -> changeMenuMode
    int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    android.support.v7.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int) -> performItemAction
    void close(boolean) -> close
    void close() -> close
    void onItemsChanged(boolean) -> onItemsChanged
    void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
    void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    void onItemVisibleChanged(android.support.v7.view.menu.MenuItemImpl) -> onItemVisibleChanged
    void onItemActionRequestChanged(android.support.v7.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    java.util.ArrayList getVisibleItems() -> getVisibleItems
    void flagActionItems() -> flagActionItems
    java.util.ArrayList getActionItems() -> getActionItems
    java.util.ArrayList getNonActionItems() -> getNonActionItems
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    android.support.v7.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    android.support.v7.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    android.support.v7.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    android.support.v7.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    android.support.v7.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    android.view.View getHeaderView() -> getHeaderView
    android.support.v7.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    android.support.v7.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    void <clinit>() -> <clinit>
android.support.v7.view.menu.MenuBuilder$Callback -> android.support.v7.view.menu.MenuBuilder$Callback:
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.view.menu.MenuBuilder$ItemInvoker -> android.support.v7.view.menu.MenuBuilder$ItemInvoker:
    boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> invokeItem
android.support.v7.view.menu.MenuDialogHelper -> android.support.v7.view.menu.MenuDialogHelper:
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.app.AlertDialog mDialog -> mDialog
    android.support.v7.view.menu.ListMenuPresenter mPresenter -> mPresenter
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    void <init>(android.support.v7.view.menu.MenuBuilder) -> <init>
    void show(android.os.IBinder) -> show
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    void setPresenterCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    void dismiss() -> dismiss
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.view.menu.MenuHelper -> android.support.v7.view.menu.MenuHelper:
    void setPresenterCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    void dismiss() -> dismiss
android.support.v7.view.menu.MenuItemImpl -> android.support.v7.view.menu.MenuItemImpl:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_MASK -> SHOW_AS_ACTION_MASK
    int mId -> mId
    int mGroup -> mGroup
    int mCategoryOrder -> mCategoryOrder
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    int mShortcutNumericModifiers -> mShortcutNumericModifiers
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    int mShortcutAlphabeticModifiers -> mShortcutAlphabeticModifiers
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    int mIconResId -> mIconResId
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.view.menu.SubMenuBuilder mSubMenu -> mSubMenu
    java.lang.Runnable mItemCallback -> mItemCallback
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    java.lang.CharSequence mContentDescription -> mContentDescription
    java.lang.CharSequence mTooltipText -> mTooltipText
    android.content.res.ColorStateList mIconTintList -> mIconTintList
    android.graphics.PorterDuff$Mode mIconTintMode -> mIconTintMode
    boolean mHasIconTint -> mHasIconTint
    boolean mHasIconTintMode -> mHasIconTintMode
    boolean mNeedToApplyIconTint -> mNeedToApplyIconTint
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    int IS_ACTION -> IS_ACTION
    int mShowAsAction -> mShowAsAction
    android.view.View mActionView -> mActionView
    android.support.v4.view.ActionProvider mActionProvider -> mActionProvider
    android.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> mOnActionExpandListener
    boolean mIsActionViewExpanded -> mIsActionViewExpanded
    int NO_ICON -> NO_ICON
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> mMenuInfo
    java.lang.String sPrependShortcutLabel -> sPrependShortcutLabel
    java.lang.String sEnterShortcutLabel -> sEnterShortcutLabel
    java.lang.String sDeleteShortcutLabel -> sDeleteShortcutLabel
    java.lang.String sSpaceShortcutLabel -> sSpaceShortcutLabel
    void <init>(android.support.v7.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    boolean invoke() -> invoke
    boolean isEnabled() -> isEnabled
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> getOrdering
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    java.lang.Runnable getCallback() -> getCallback
    android.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    int getAlphabeticModifiers() -> getAlphabeticModifiers
    char getNumericShortcut() -> getNumericShortcut
    int getNumericModifiers() -> getNumericModifiers
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    char getShortcut() -> getShortcut
    java.lang.String getShortcutLabel() -> getShortcutLabel
    boolean shouldShowShortcut() -> shouldShowShortcut
    android.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(android.support.v7.view.menu.SubMenuBuilder) -> setSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(android.support.v7.view.menu.MenuView$ItemView) -> getTitleForItemView
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    android.content.res.ColorStateList getIconTintList() -> getIconTintList
    android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    boolean isExclusiveCheckable() -> isExclusiveCheckable
    boolean isChecked() -> isChecked
    android.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> setCheckedInt
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> setVisibleInt
    android.view.MenuItem setVisible(boolean) -> setVisible
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> actionFormatChanged
    boolean shouldShowIcon() -> shouldShowIcon
    boolean isActionButton() -> isActionButton
    boolean requestsActionButton() -> requestsActionButton
    boolean requiresActionButton() -> requiresActionButton
    void setIsActionButton(boolean) -> setIsActionButton
    boolean showsTextAsAction() -> showsTextAsAction
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    void setActionViewExpanded(boolean) -> setActionViewExpanded
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
    android.support.v4.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    java.lang.CharSequence getTooltipText() -> getTooltipText
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
android.support.v7.view.menu.MenuItemImpl$1 -> android.support.v7.view.menu.MenuItemImpl$1:
    android.support.v7.view.menu.MenuItemImpl this$0 -> this$0
    void <init>(android.support.v7.view.menu.MenuItemImpl) -> <init>
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.view.menu.MenuItemWrapperICS -> android.support.v7.view.menu.MenuItemWrapperICS:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> mSetExclusiveCheckableMethod
    void <init>(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> <init>
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    int getNumericModifiers() -> getNumericModifiers
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getAlphabeticModifiers() -> getAlphabeticModifiers
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    android.view.SubMenu getSubMenu() -> getSubMenu
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
    android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    java.lang.CharSequence getTooltipText() -> getTooltipText
    android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    android.content.res.ColorStateList getIconTintList() -> getIconTintList
    android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    android.view.ActionProvider mInner -> mInner
    android.support.v7.view.menu.MenuItemWrapperICS this$0 -> this$0
    void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    android.view.CollapsibleActionView mWrappedView -> mWrappedView
    void <init>(android.view.View) -> <init>
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View getWrappedView() -> getWrappedView
android.support.v7.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    android.support.v7.view.menu.MenuItemWrapperICS this$0 -> this$0
    void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v7.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    android.support.v7.view.menu.MenuItemWrapperICS this$0 -> this$0
    void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.view.menu.MenuItemWrapperJB -> android.support.v7.view.menu.MenuItemWrapperJB:
    void <init>(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> <init>
    android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
android.support.v7.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> android.support.v7.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB:
    android.support.v4.view.ActionProvider$VisibilityListener mListener -> mListener
    android.support.v7.view.menu.MenuItemWrapperJB this$0 -> this$0
    void <init>(android.support.v7.view.menu.MenuItemWrapperJB,android.content.Context,android.view.ActionProvider) -> <init>
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.view.menu.MenuPopup -> android.support.v7.view.menu.MenuPopup:
    android.graphics.Rect mEpicenterBounds -> mEpicenterBounds
    void <init>() -> <init>
    void setForceShowIcon(boolean) -> setForceShowIcon
    void addMenu(android.support.v7.view.menu.MenuBuilder) -> addMenu
    void setGravity(int) -> setGravity
    void setAnchorView(android.view.View) -> setAnchorView
    void setHorizontalOffset(int) -> setHorizontalOffset
    void setVerticalOffset(int) -> setVerticalOffset
    void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    void setShowTitle(boolean) -> setShowTitle
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    android.support.v7.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
    boolean shouldPreserveIconSpacing(android.support.v7.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
android.support.v7.view.menu.MenuPopupHelper -> android.support.v7.view.menu.MenuPopupHelper:
    int TOUCH_EPICENTER_SIZE_DP -> TOUCH_EPICENTER_SIZE_DP
    android.content.Context mContext -> mContext
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    boolean mOverflowOnly -> mOverflowOnly
    int mPopupStyleAttr -> mPopupStyleAttr
    int mPopupStyleRes -> mPopupStyleRes
    android.view.View mAnchorView -> mAnchorView
    int mDropDownGravity -> mDropDownGravity
    boolean mForceShowIcon -> mForceShowIcon
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    android.support.v7.view.menu.MenuPopup mPopup -> mPopup
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener -> mInternalOnDismissListener
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> <init>
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View) -> <init>
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setAnchorView(android.view.View) -> setAnchorView
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setGravity(int) -> setGravity
    int getGravity() -> getGravity
    void show() -> show
    void show(int,int) -> show
    android.support.v7.view.menu.MenuPopup getPopup() -> getPopup
    boolean tryShow() -> tryShow
    boolean tryShow(int,int) -> tryShow
    android.support.v7.view.menu.MenuPopup createPopup() -> createPopup
    void showPopup(int,int,boolean,boolean) -> showPopup
    void dismiss() -> dismiss
    void onDismiss() -> onDismiss
    boolean isShowing() -> isShowing
    void setPresenterCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setPresenterCallback
android.support.v7.view.menu.MenuPopupHelper$1 -> android.support.v7.view.menu.MenuPopupHelper$1:
    android.support.v7.view.menu.MenuPopupHelper this$0 -> this$0
    void <init>(android.support.v7.view.menu.MenuPopupHelper) -> <init>
    void onDismiss() -> onDismiss
android.support.v7.view.menu.MenuPresenter -> android.support.v7.view.menu.MenuPresenter:
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
android.support.v7.view.menu.MenuPresenter$Callback -> android.support.v7.view.menu.MenuPresenter$Callback:
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.view.menu.MenuView -> android.support.v7.view.menu.MenuView:
    void initialize(android.support.v7.view.menu.MenuBuilder) -> initialize
    int getWindowAnimations() -> getWindowAnimations
android.support.v7.view.menu.MenuView$ItemView -> android.support.v7.view.menu.MenuView$ItemView:
    void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
    android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    void setTitle(java.lang.CharSequence) -> setTitle
    void setEnabled(boolean) -> setEnabled
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
android.support.v7.view.menu.MenuWrapperFactory -> android.support.v7.view.menu.MenuWrapperFactory:
    void <init>() -> <init>
    android.view.Menu wrapSupportMenu(android.content.Context,android.support.v4.internal.view.SupportMenu) -> wrapSupportMenu
    android.view.MenuItem wrapSupportMenuItem(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> wrapSupportMenuItem
    android.view.SubMenu wrapSupportSubMenu(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> wrapSupportSubMenu
android.support.v7.view.menu.MenuWrapperICS -> android.support.v7.view.menu.MenuWrapperICS:
    void <init>(android.content.Context,android.support.v4.internal.view.SupportMenu) -> <init>
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
android.support.v7.view.menu.ShowableListMenu -> android.support.v7.view.menu.ShowableListMenu:
    void show() -> show
    void dismiss() -> dismiss
    boolean isShowing() -> isShowing
    android.widget.ListView getListView() -> getListView
android.support.v7.view.menu.StandardMenuPopup -> android.support.v7.view.menu.StandardMenuPopup:
    android.content.Context mContext -> mContext
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.view.menu.MenuAdapter mAdapter -> mAdapter
    boolean mOverflowOnly -> mOverflowOnly
    int mPopupMaxWidth -> mPopupMaxWidth
    int mPopupStyleAttr -> mPopupStyleAttr
    int mPopupStyleRes -> mPopupStyleRes
    android.support.v7.widget.MenuPopupWindow mPopup -> mPopup
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> mGlobalLayoutListener
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> mAttachStateChangeListener
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    android.view.View mAnchorView -> mAnchorView
    android.view.View mShownAnchorView -> mShownAnchorView
    android.support.v7.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    android.view.ViewTreeObserver mTreeObserver -> mTreeObserver
    boolean mWasDismissed -> mWasDismissed
    boolean mHasContentWidth -> mHasContentWidth
    int mContentWidth -> mContentWidth
    int mDropDownGravity -> mDropDownGravity
    boolean mShowTitle -> mShowTitle
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setGravity(int) -> setGravity
    boolean tryShow() -> tryShow
    void show() -> show
    void dismiss() -> dismiss
    void addMenu(android.support.v7.view.menu.MenuBuilder) -> addMenu
    boolean isShowing() -> isShowing
    void onDismiss() -> onDismiss
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAnchorView(android.view.View) -> setAnchorView
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    android.widget.ListView getListView() -> getListView
    void setHorizontalOffset(int) -> setHorizontalOffset
    void setVerticalOffset(int) -> setVerticalOffset
    void setShowTitle(boolean) -> setShowTitle
    android.view.ViewTreeObserver access$000(android.support.v7.view.menu.StandardMenuPopup) -> access$000
    android.view.ViewTreeObserver access$002(android.support.v7.view.menu.StandardMenuPopup,android.view.ViewTreeObserver) -> access$002
    android.view.ViewTreeObserver$OnGlobalLayoutListener access$100(android.support.v7.view.menu.StandardMenuPopup) -> access$100
android.support.v7.view.menu.StandardMenuPopup$1 -> android.support.v7.view.menu.StandardMenuPopup$1:
    android.support.v7.view.menu.StandardMenuPopup this$0 -> this$0
    void <init>(android.support.v7.view.menu.StandardMenuPopup) -> <init>
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.view.menu.StandardMenuPopup$2 -> android.support.v7.view.menu.StandardMenuPopup$2:
    android.support.v7.view.menu.StandardMenuPopup this$0 -> this$0
    void <init>(android.support.v7.view.menu.StandardMenuPopup) -> <init>
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.v7.view.menu.SubMenuBuilder -> android.support.v7.view.menu.SubMenuBuilder:
    android.support.v7.view.menu.MenuBuilder mParentMenu -> mParentMenu
    android.support.v7.view.menu.MenuItemImpl mItem -> mItem
    void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> <init>
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    boolean isShortcutsVisible() -> isShortcutsVisible
    android.view.Menu getParentMenu() -> getParentMenu
    android.view.MenuItem getItem() -> getItem
    void setCallback(android.support.v7.view.menu.MenuBuilder$Callback) -> setCallback
    android.support.v7.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
android.support.v7.view.menu.SubMenuWrapperICS -> android.support.v7.view.menu.SubMenuWrapperICS:
    void <init>(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> <init>
    android.support.v4.internal.view.SupportSubMenu getWrappedObject() -> getWrappedObject
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem getItem() -> getItem
    java.lang.Object getWrappedObject() -> getWrappedObject
android.support.v7.widget.AbsActionBarView -> android.support.v7.widget.AbsActionBarView:
    int FADE_DURATION -> FADE_DURATION
    android.support.v7.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.content.Context mPopupContext -> mPopupContext
    android.support.v7.widget.ActionMenuView mMenuView -> mMenuView
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> mActionMenuPresenter
    int mContentHeight -> mContentHeight
    android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim -> mVisibilityAnim
    boolean mEatingTouch -> mEatingTouch
    boolean mEatingHover -> mEatingHover
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    int getAnimatedVisibility() -> getAnimatedVisibility
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    void animateToVisibility(int) -> animateToVisibility
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> showOverflowMenu
    void postShowOverflowMenu() -> postShowOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean isOverflowReserved() -> isOverflowReserved
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    void dismissPopupMenus() -> dismissPopupMenus
    int measureChildView(android.view.View,int,int,int) -> measureChildView
    int next(int,int,boolean) -> next
    int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    void access$001(android.support.v7.widget.AbsActionBarView,int) -> access$001
    void access$101(android.support.v7.widget.AbsActionBarView,int) -> access$101
android.support.v7.widget.AbsActionBarView$1 -> android.support.v7.widget.AbsActionBarView$1:
    android.support.v7.widget.AbsActionBarView this$0 -> this$0
    void <init>(android.support.v7.widget.AbsActionBarView) -> <init>
    void run() -> run
android.support.v7.widget.AbsActionBarView$VisibilityAnimListener -> android.support.v7.widget.AbsActionBarView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    android.support.v7.widget.AbsActionBarView this$0 -> this$0
    void <init>(android.support.v7.widget.AbsActionBarView) -> <init>
    android.support.v7.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v7.widget.ActionBarBackgroundDrawable -> android.support.v7.widget.ActionBarBackgroundDrawable:
    android.support.v7.widget.ActionBarContainer mContainer -> mContainer
    void <init>(android.support.v7.widget.ActionBarContainer) -> <init>
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
android.support.v7.widget.ActionBarBackgroundDrawableV21 -> android.support.v7.widget.ActionBarBackgroundDrawableV21:
    void <init>(android.support.v7.widget.ActionBarContainer) -> <init>
    void getOutline(android.graphics.Outline) -> getOutline
android.support.v7.widget.ActionBarContainer -> android.support.v7.widget.ActionBarContainer:
    boolean mIsTransitioning -> mIsTransitioning
    android.view.View mTabContainer -> mTabContainer
    android.view.View mActionBarView -> mActionBarView
    android.view.View mContextView -> mContextView
    android.graphics.drawable.Drawable mBackground -> mBackground
    android.graphics.drawable.Drawable mStackedBackground -> mStackedBackground
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    boolean mIsSplit -> mIsSplit
    boolean mIsStacked -> mIsStacked
    int mHeight -> mHeight
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setVisibility(int) -> setVisibility
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(android.support.v7.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    boolean isCollapsed(android.view.View) -> isCollapsed
    int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v7.widget.ActionBarContextView -> android.support.v7.widget.ActionBarContextView:
    java.lang.String TAG -> TAG
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    android.view.View mClose -> mClose
    android.view.View mCustomView -> mCustomView
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mSubtitleView -> mSubtitleView
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    boolean mTitleOptional -> mTitleOptional
    int mCloseItemLayout -> mCloseItemLayout
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> initTitle
    void initForMode(android.support.v7.view.ActionMode) -> initForMode
    void closeMode() -> closeMode
    void killMode() -> killMode
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void setTitleOptional(boolean) -> setTitleOptional
    boolean isTitleOptional() -> isTitleOptional
    void dismissPopupMenus() -> dismissPopupMenus
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowReserved() -> isOverflowReserved
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    void postShowOverflowMenu() -> postShowOverflowMenu
    void setVisibility(int) -> setVisibility
    void animateToVisibility(int) -> animateToVisibility
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    int getAnimatedVisibility() -> getAnimatedVisibility
    int getContentHeight() -> getContentHeight
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
android.support.v7.widget.ActionBarContextView$1 -> android.support.v7.widget.ActionBarContextView$1:
    android.support.v7.view.ActionMode val$mode -> val$mode
    android.support.v7.widget.ActionBarContextView this$0 -> this$0
    void <init>(android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.widget.ActionBarOverlayLayout -> android.support.v7.widget.ActionBarOverlayLayout:
    java.lang.String TAG -> TAG
    int mActionBarHeight -> mActionBarHeight
    int mWindowVisibility -> mWindowVisibility
    android.support.v7.widget.ContentFrameLayout mContent -> mContent
    android.support.v7.widget.ActionBarContainer mActionBarTop -> mActionBarTop
    android.support.v7.widget.DecorToolbar mDecorToolbar -> mDecorToolbar
    android.graphics.drawable.Drawable mWindowContentOverlay -> mWindowContentOverlay
    boolean mIgnoreWindowContentOverlay -> mIgnoreWindowContentOverlay
    boolean mOverlayMode -> mOverlayMode
    boolean mHasNonEmbeddedTabs -> mHasNonEmbeddedTabs
    boolean mHideOnContentScroll -> mHideOnContentScroll
    boolean mAnimatingForFling -> mAnimatingForFling
    int mHideOnContentScrollReference -> mHideOnContentScrollReference
    int mLastSystemUiVisibility -> mLastSystemUiVisibility
    android.graphics.Rect mBaseContentInsets -> mBaseContentInsets
    android.graphics.Rect mLastBaseContentInsets -> mLastBaseContentInsets
    android.graphics.Rect mContentInsets -> mContentInsets
    android.graphics.Rect mBaseInnerInsets -> mBaseInnerInsets
    android.graphics.Rect mLastBaseInnerInsets -> mLastBaseInnerInsets
    android.graphics.Rect mInnerInsets -> mInnerInsets
    android.graphics.Rect mLastInnerInsets -> mLastInnerInsets
    android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> mActionBarVisibilityCallback
    int ACTION_BAR_ANIMATE_DELAY -> ACTION_BAR_ANIMATE_DELAY
    android.widget.OverScroller mFlingEstimator -> mFlingEstimator
    android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator -> mCurrentActionBarTopAnimator
    android.animation.AnimatorListenerAdapter mTopAnimatorListener -> mTopAnimatorListener
    java.lang.Runnable mRemoveActionBarHideOffset -> mRemoveActionBarHideOffset
    java.lang.Runnable mAddActionBarHideOffset -> mAddActionBarHideOffset
    int[] ATTRS -> ATTRS
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> mParentHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void init(android.content.Context) -> init
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setActionBarVisibilityCallback(android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    void setOverlayMode(boolean) -> setOverlayMode
    boolean isInOverlayMode() -> isInOverlayMode
    void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    void setShowingForActionMode(boolean) -> setShowingForActionMode
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void draw(android.graphics.Canvas) -> draw
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    void pullChildren() -> pullChildren
    android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    int getActionBarHideOffset() -> getActionBarHideOffset
    void setActionBarHideOffset(int) -> setActionBarHideOffset
    void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    void removeActionBarHideOffset() -> removeActionBarHideOffset
    void addActionBarHideOffset() -> addActionBarHideOffset
    boolean shouldHideActionBarOnFling(float,float) -> shouldHideActionBarOnFling
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    java.lang.CharSequence getTitle() -> getTitle
    void initFeature(int) -> initFeature
    void setUiOptions(int) -> setUiOptions
    boolean hasIcon() -> hasIcon
    boolean hasLogo() -> hasLogo
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> setMenu
    void saveToolbarHierarchyState(android.util.SparseArray) -> saveToolbarHierarchyState
    void restoreToolbarHierarchyState(android.util.SparseArray) -> restoreToolbarHierarchyState
    void dismissPopups() -> dismissPopups
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void <clinit>() -> <clinit>
android.support.v7.widget.ActionBarOverlayLayout$1 -> android.support.v7.widget.ActionBarOverlayLayout$1:
    android.support.v7.widget.ActionBarOverlayLayout this$0 -> this$0
    void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
android.support.v7.widget.ActionBarOverlayLayout$2 -> android.support.v7.widget.ActionBarOverlayLayout$2:
    android.support.v7.widget.ActionBarOverlayLayout this$0 -> this$0
    void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    void run() -> run
android.support.v7.widget.ActionBarOverlayLayout$3 -> android.support.v7.widget.ActionBarOverlayLayout$3:
    android.support.v7.widget.ActionBarOverlayLayout this$0 -> this$0
    void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    void run() -> run
android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback:
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void showForSystem() -> showForSystem
    void hideForSystem() -> hideForSystem
    void enableContentAnimations(boolean) -> enableContentAnimations
    void onContentScrollStarted() -> onContentScrollStarted
    void onContentScrollStopped() -> onContentScrollStopped
android.support.v7.widget.ActionBarOverlayLayout$LayoutParams -> android.support.v7.widget.ActionBarOverlayLayout$LayoutParams:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
android.support.v7.widget.ActionMenuPresenter -> android.support.v7.widget.ActionMenuPresenter:
    java.lang.String TAG -> TAG
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton -> mOverflowButton
    android.graphics.drawable.Drawable mPendingOverflowIcon -> mPendingOverflowIcon
    boolean mPendingOverflowIconSet -> mPendingOverflowIconSet
    boolean mReserveOverflow -> mReserveOverflow
    boolean mReserveOverflowSet -> mReserveOverflowSet
    int mWidthLimit -> mWidthLimit
    int mActionItemWidthLimit -> mActionItemWidthLimit
    int mMaxItems -> mMaxItems
    boolean mMaxItemsSet -> mMaxItemsSet
    boolean mStrictWidthLimit -> mStrictWidthLimit
    boolean mWidthLimitSet -> mWidthLimitSet
    boolean mExpandedActionViewsExclusive -> mExpandedActionViewsExclusive
    int mMinCellSize -> mMinCellSize
    android.util.SparseBooleanArray mActionButtonGroups -> mActionButtonGroups
    android.view.View mScrapActionButtonView -> mScrapActionButtonView
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> mOverflowPopup
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> mActionButtonPopup
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> mPostedOpenRunnable
    android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> mPopupCallback
    android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> mPopupPresenterCallback
    int mOpenSubMenuId -> mOpenSubMenuId
    void <init>(android.content.Context) -> <init>
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWidthLimit(int,boolean) -> setWidthLimit
    void setReserveOverflow(boolean) -> setReserveOverflow
    void setItemLimit(int) -> setItemLimit
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(android.support.v7.view.menu.MenuItemImpl,android.support.v7.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,android.support.v7.view.menu.MenuItemImpl) -> shouldIncludeItem
    void updateMenuView(boolean) -> updateMenuView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean dismissPopupMenus() -> dismissPopupMenus
    boolean hideSubMenus() -> hideSubMenus
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean isOverflowReserved() -> isOverflowReserved
    boolean flagActionItems() -> flagActionItems
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    void setMenuView(android.support.v7.widget.ActionMenuView) -> setMenuView
    android.support.v7.view.menu.MenuBuilder access$000(android.support.v7.widget.ActionMenuPresenter) -> access$000
    android.support.v7.view.menu.MenuBuilder access$100(android.support.v7.widget.ActionMenuPresenter) -> access$100
    android.support.v7.view.menu.MenuView access$200(android.support.v7.widget.ActionMenuPresenter) -> access$200
    android.support.v7.view.menu.MenuBuilder access$300(android.support.v7.widget.ActionMenuPresenter) -> access$300
    android.support.v7.view.menu.MenuBuilder access$400(android.support.v7.widget.ActionMenuPresenter) -> access$400
    android.support.v7.view.menu.MenuView access$500(android.support.v7.widget.ActionMenuPresenter) -> access$500
android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu:
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.SubMenuBuilder,android.view.View) -> <init>
    void onDismiss() -> onDismiss
android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback -> android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void <init>(android.support.v7.widget.ActionMenuPresenter) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable:
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mPopup -> mPopup
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    void run() -> run
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton:
    float[] mTempPts -> mTempPts
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context) -> <init>
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    boolean setFrame(int,int,int,int) -> setFrame
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 -> android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1:
    android.support.v7.widget.ActionMenuPresenter val$this$0 -> val$this$0
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> this$1
    void <init>(android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,android.support.v7.widget.ActionMenuPresenter) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    boolean onForwardingStarted() -> onForwardingStarted
    boolean onForwardingStopped() -> onForwardingStopped
android.support.v7.widget.ActionMenuPresenter$OverflowPopup -> android.support.v7.widget.ActionMenuPresenter$OverflowPopup:
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    void onDismiss() -> onDismiss
android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback:
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void <init>(android.support.v7.widget.ActionMenuPresenter) -> <init>
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
android.support.v7.widget.ActionMenuPresenter$SavedState -> android.support.v7.widget.ActionMenuPresenter$SavedState:
    int openSubMenuId -> openSubMenuId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v7.widget.ActionMenuPresenter$SavedState$1 -> android.support.v7.widget.ActionMenuPresenter$SavedState$1:
    void <init>() -> <init>
    android.support.v7.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.ActionMenuView -> android.support.v7.widget.ActionMenuView:
    java.lang.String TAG -> TAG
    int MIN_CELL_SIZE -> MIN_CELL_SIZE
    int GENERATED_ITEM_PADDING -> GENERATED_ITEM_PADDING
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.content.Context mPopupContext -> mPopupContext
    int mPopupTheme -> mPopupTheme
    boolean mReserveOverflow -> mReserveOverflow
    android.support.v7.widget.ActionMenuPresenter mPresenter -> mPresenter
    android.support.v7.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> mActionMenuPresenterCallback
    android.support.v7.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> mMenuBuilderCallback
    boolean mFormatItems -> mFormatItems
    int mFormatItemsWidth -> mFormatItemsWidth
    int mMinCellSize -> mMinCellSize
    int mGeneratedItemPadding -> mGeneratedItemPadding
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setPopupTheme(int) -> setPopupTheme
    int getPopupTheme() -> getPopupTheme
    void setPresenter(android.support.v7.widget.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    boolean isOverflowReserved() -> isOverflowReserved
    void setOverflowReserved(boolean) -> setOverflowReserved
    android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> invokeItem
    int getWindowAnimations() -> getWindowAnimations
    void initialize(android.support.v7.view.menu.MenuBuilder) -> initialize
    android.view.Menu getMenu() -> getMenu
    void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    android.support.v7.view.menu.MenuBuilder peekMenu() -> peekMenu
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    void dismissPopupMenus() -> dismissPopupMenus
    boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v7.widget.ActionMenuView$ActionMenuChildView -> android.support.v7.widget.ActionMenuView$ActionMenuChildView:
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback -> android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback:
    void <init>() -> <init>
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.widget.ActionMenuView$LayoutParams -> android.support.v7.widget.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> isOverflowButton
    int cellsUsed -> cellsUsed
    int extraPixels -> extraPixels
    boolean expandable -> expandable
    boolean preventEdgeOffset -> preventEdgeOffset
    boolean expanded -> expanded
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.support.v7.widget.ActionMenuView$LayoutParams) -> <init>
    void <init>(int,int) -> <init>
    void <init>(int,int,boolean) -> <init>
android.support.v7.widget.ActionMenuView$MenuBuilderCallback -> android.support.v7.widget.ActionMenuView$MenuBuilderCallback:
    android.support.v7.widget.ActionMenuView this$0 -> this$0
    void <init>(android.support.v7.widget.ActionMenuView) -> <init>
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.widget.ActionMenuView$OnMenuItemClickListener -> android.support.v7.widget.ActionMenuView$OnMenuItemClickListener:
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.ActivityChooserModel -> android.support.v7.widget.ActivityChooserModel:
    boolean DEBUG -> DEBUG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String TAG_HISTORICAL_RECORDS -> TAG_HISTORICAL_RECORDS
    java.lang.String TAG_HISTORICAL_RECORD -> TAG_HISTORICAL_RECORD
    java.lang.String ATTRIBUTE_ACTIVITY -> ATTRIBUTE_ACTIVITY
    java.lang.String ATTRIBUTE_TIME -> ATTRIBUTE_TIME
    java.lang.String ATTRIBUTE_WEIGHT -> ATTRIBUTE_WEIGHT
    java.lang.String DEFAULT_HISTORY_FILE_NAME -> DEFAULT_HISTORY_FILE_NAME
    int DEFAULT_HISTORY_MAX_LENGTH -> DEFAULT_HISTORY_MAX_LENGTH
    int DEFAULT_ACTIVITY_INFLATION -> DEFAULT_ACTIVITY_INFLATION
    float DEFAULT_HISTORICAL_RECORD_WEIGHT -> DEFAULT_HISTORICAL_RECORD_WEIGHT
    java.lang.String HISTORY_FILE_EXTENSION -> HISTORY_FILE_EXTENSION
    int INVALID_INDEX -> INVALID_INDEX
    java.lang.Object sRegistryLock -> sRegistryLock
    java.util.Map sDataModelRegistry -> sDataModelRegistry
    java.lang.Object mInstanceLock -> mInstanceLock
    java.util.List mActivities -> mActivities
    java.util.List mHistoricalRecords -> mHistoricalRecords
    android.content.Context mContext -> mContext
    java.lang.String mHistoryFileName -> mHistoryFileName
    android.content.Intent mIntent -> mIntent
    android.support.v7.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> mActivitySorter
    int mHistoryMaxSize -> mHistoryMaxSize
    boolean mCanReadHistoricalData -> mCanReadHistoricalData
    boolean mReadShareHistoryCalled -> mReadShareHistoryCalled
    boolean mHistoricalRecordsChanged -> mHistoricalRecordsChanged
    boolean mReloadActivities -> mReloadActivities
    android.support.v7.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> mActivityChoserModelPolicy
    android.support.v7.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> get
    void <init>(android.content.Context,java.lang.String) -> <init>
    void setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    int getActivityCount() -> getActivityCount
    android.content.pm.ResolveInfo getActivity(int) -> getActivity
    int getActivityIndex(android.content.pm.ResolveInfo) -> getActivityIndex
    android.content.Intent chooseActivity(int) -> chooseActivity
    void setOnChooseActivityListener(android.support.v7.widget.ActivityChooserModel$OnChooseActivityListener) -> setOnChooseActivityListener
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setDefaultActivity(int) -> setDefaultActivity
    void persistHistoricalDataIfNeeded() -> persistHistoricalDataIfNeeded
    void setActivitySorter(android.support.v7.widget.ActivityChooserModel$ActivitySorter) -> setActivitySorter
    void setHistoryMaxSize(int) -> setHistoryMaxSize
    int getHistoryMaxSize() -> getHistoryMaxSize
    int getHistorySize() -> getHistorySize
    void ensureConsistentState() -> ensureConsistentState
    boolean sortActivitiesIfNeeded() -> sortActivitiesIfNeeded
    boolean loadActivitiesIfNeeded() -> loadActivitiesIfNeeded
    boolean readHistoricalDataIfNeeded() -> readHistoricalDataIfNeeded
    boolean addHistoricalRecord(android.support.v7.widget.ActivityChooserModel$HistoricalRecord) -> addHistoricalRecord
    void pruneExcessiveHistoricalRecordsIfNeeded() -> pruneExcessiveHistoricalRecordsIfNeeded
    void readHistoricalDataImpl() -> readHistoricalDataImpl
    void <clinit>() -> <clinit>
android.support.v7.widget.ActivityChooserModel$ActivityChooserModelClient -> android.support.v7.widget.ActivityChooserModel$ActivityChooserModelClient:
    void setActivityChooserModel(android.support.v7.widget.ActivityChooserModel) -> setActivityChooserModel
android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo -> android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo:
    android.content.pm.ResolveInfo resolveInfo -> resolveInfo
    float weight -> weight
    void <init>(android.content.pm.ResolveInfo) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(android.support.v7.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
android.support.v7.widget.ActivityChooserModel$ActivitySorter -> android.support.v7.widget.ActivityChooserModel$ActivitySorter:
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
android.support.v7.widget.ActivityChooserModel$DefaultSorter -> android.support.v7.widget.ActivityChooserModel$DefaultSorter:
    float WEIGHT_DECAY_COEFFICIENT -> WEIGHT_DECAY_COEFFICIENT
    java.util.Map mPackageNameToActivityMap -> mPackageNameToActivityMap
    void <init>() -> <init>
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
android.support.v7.widget.ActivityChooserModel$HistoricalRecord -> android.support.v7.widget.ActivityChooserModel$HistoricalRecord:
    android.content.ComponentName activity -> activity
    long time -> time
    float weight -> weight
    void <init>(java.lang.String,long,float) -> <init>
    void <init>(android.content.ComponentName,long,float) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v7.widget.ActivityChooserModel$OnChooseActivityListener -> android.support.v7.widget.ActivityChooserModel$OnChooseActivityListener:
    boolean onChooseActivity(android.support.v7.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
android.support.v7.widget.ActivityChooserModel$PersistHistoryAsyncTask -> android.support.v7.widget.ActivityChooserModel$PersistHistoryAsyncTask:
    android.support.v7.widget.ActivityChooserModel this$0 -> this$0
    void <init>(android.support.v7.widget.ActivityChooserModel) -> <init>
    java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v7.widget.ActivityChooserView -> android.support.v7.widget.ActivityChooserView:
    java.lang.String LOG_TAG -> LOG_TAG
    android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> mAdapter
    android.support.v7.widget.ActivityChooserView$Callbacks mCallbacks -> mCallbacks
    android.support.v7.widget.LinearLayoutCompat mActivityChooserContent -> mActivityChooserContent
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> mActivityChooserContentBackground
    android.widget.FrameLayout mExpandActivityOverflowButton -> mExpandActivityOverflowButton
    android.widget.ImageView mExpandActivityOverflowButtonImage -> mExpandActivityOverflowButtonImage
    android.widget.FrameLayout mDefaultActivityButton -> mDefaultActivityButton
    android.widget.ImageView mDefaultActivityButtonImage -> mDefaultActivityButtonImage
    int mListPopupMaxWidth -> mListPopupMaxWidth
    android.support.v4.view.ActionProvider mProvider -> mProvider
    android.database.DataSetObserver mModelDataSetObserver -> mModelDataSetObserver
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> mOnGlobalLayoutListener
    android.support.v7.widget.ListPopupWindow mListPopupWindow -> mListPopupWindow
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    boolean mIsSelectingDefaultActivity -> mIsSelectingDefaultActivity
    int mInitialActivityCount -> mInitialActivityCount
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    int mDefaultActionButtonContentDescription -> mDefaultActionButtonContentDescription
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setActivityChooserModel(android.support.v7.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(android.support.v4.view.ActionProvider) -> setProvider
    boolean showPopup() -> showPopup
    void showPopupUnchecked(int) -> showPopupUnchecked
    boolean dismissPopup() -> dismissPopup
    boolean isShowingPopup() -> isShowingPopup
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.v7.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    android.support.v7.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> updateAppearance
android.support.v7.widget.ActivityChooserView$1 -> android.support.v7.widget.ActivityChooserView$1:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.widget.ActivityChooserView$2 -> android.support.v7.widget.ActivityChooserView$2:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.widget.ActivityChooserView$3 -> android.support.v7.widget.ActivityChooserView$3:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
android.support.v7.widget.ActivityChooserView$4 -> android.support.v7.widget.ActivityChooserView$4:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    void <init>(android.support.v7.widget.ActivityChooserView,android.view.View) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    boolean onForwardingStarted() -> onForwardingStarted
    boolean onForwardingStopped() -> onForwardingStopped
android.support.v7.widget.ActivityChooserView$5 -> android.support.v7.widget.ActivityChooserView$5:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void onChanged() -> onChanged
android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter -> android.support.v7.widget.ActivityChooserView$ActivityChooserViewAdapter:
    int MAX_ACTIVITY_COUNT_UNLIMITED -> MAX_ACTIVITY_COUNT_UNLIMITED
    int MAX_ACTIVITY_COUNT_DEFAULT -> MAX_ACTIVITY_COUNT_DEFAULT
    int ITEM_VIEW_TYPE_ACTIVITY -> ITEM_VIEW_TYPE_ACTIVITY
    int ITEM_VIEW_TYPE_FOOTER -> ITEM_VIEW_TYPE_FOOTER
    int ITEM_VIEW_TYPE_COUNT -> ITEM_VIEW_TYPE_COUNT
    android.support.v7.widget.ActivityChooserModel mDataModel -> mDataModel
    int mMaxActivityCount -> mMaxActivityCount
    boolean mShowDefaultActivity -> mShowDefaultActivity
    boolean mHighlightDefaultActivity -> mHighlightDefaultActivity
    boolean mShowFooterView -> mShowFooterView
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void setDataModel(android.support.v7.widget.ActivityChooserModel) -> setDataModel
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> measureContentWidth
    void setMaxActivityCount(int) -> setMaxActivityCount
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setShowFooterView(boolean) -> setShowFooterView
    int getActivityCount() -> getActivityCount
    int getHistorySize() -> getHistorySize
    android.support.v7.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    boolean getShowDefaultActivity() -> getShowDefaultActivity
android.support.v7.widget.ActivityChooserView$Callbacks -> android.support.v7.widget.ActivityChooserView$Callbacks:
    android.support.v7.widget.ActivityChooserView this$0 -> this$0
    void <init>(android.support.v7.widget.ActivityChooserView) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> notifyOnDismissListener
android.support.v7.widget.ActivityChooserView$InnerLayout -> android.support.v7.widget.ActivityChooserView$InnerLayout:
    int[] TINT_ATTRS -> TINT_ATTRS
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <clinit>() -> <clinit>
android.support.v7.widget.AdapterHelper -> android.support.v7.widget.AdapterHelper:
    int POSITION_TYPE_INVISIBLE -> POSITION_TYPE_INVISIBLE
    int POSITION_TYPE_NEW_OR_LAID_OUT -> POSITION_TYPE_NEW_OR_LAID_OUT
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    android.support.v4.util.Pools$Pool mUpdateOpPool -> mUpdateOpPool
    java.util.ArrayList mPendingUpdates -> mPendingUpdates
    java.util.ArrayList mPostponedList -> mPostponedList
    android.support.v7.widget.AdapterHelper$Callback mCallback -> mCallback
    java.lang.Runnable mOnItemProcessedCallback -> mOnItemProcessedCallback
    boolean mDisableRecycler -> mDisableRecycler
    android.support.v7.widget.OpReorderer mOpReorderer -> mOpReorderer
    int mExistingUpdateTypes -> mExistingUpdateTypes
    void <init>(android.support.v7.widget.AdapterHelper$Callback) -> <init>
    void <init>(android.support.v7.widget.AdapterHelper$Callback,boolean) -> <init>
    android.support.v7.widget.AdapterHelper addUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp[]) -> addUpdateOp
    void reset() -> reset
    void preProcess() -> preProcess
    void consumePostponedUpdates() -> consumePostponedUpdates
    void applyMove(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyMove
    void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyRemove
    void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyUpdate
    void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
    boolean canFindInPreLayout(int) -> canFindInPreLayout
    void applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyAdd
    void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    boolean hasPendingUpdates() -> hasPendingUpdates
    boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    int findPositionOffset(int) -> findPositionOffset
    int findPositionOffset(int,int) -> findPositionOffset
    boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    boolean onItemRangeMoved(int,int,int) -> onItemRangeMoved
    void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    boolean hasUpdates() -> hasUpdates
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
android.support.v7.widget.AdapterHelper$Callback -> android.support.v7.widget.AdapterHelper$Callback:
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
    void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    void offsetPositionsForMove(int,int) -> offsetPositionsForMove
android.support.v7.widget.AdapterHelper$UpdateOp -> android.support.v7.widget.AdapterHelper$UpdateOp:
    int ADD -> ADD
    int REMOVE -> REMOVE
    int UPDATE -> UPDATE
    int MOVE -> MOVE
    int POOL_SIZE -> POOL_SIZE
    int cmd -> cmd
    int positionStart -> positionStart
    java.lang.Object payload -> payload
    int itemCount -> itemCount
    void <init>(int,int,int,java.lang.Object) -> <init>
    java.lang.String cmdToString() -> cmdToString
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v7.widget.AlertDialogLayout -> android.support.v7.widget.AlertDialogLayout:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onMeasure(int,int) -> onMeasure
    boolean tryOnMeasure(int,int) -> tryOnMeasure
    void forceUniformWidth(int,int) -> forceUniformWidth
    int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
android.support.v7.widget.AppCompatAutoCompleteTextView -> android.support.v7.widget.AppCompatAutoCompleteTextView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void <clinit>() -> <clinit>
android.support.v7.widget.AppCompatBackgroundHelper -> android.support.v7.widget.AppCompatBackgroundHelper:
    android.view.View mView -> mView
    android.support.v7.widget.AppCompatDrawableManager mDrawableManager -> mDrawableManager
    int mBackgroundResId -> mBackgroundResId
    android.support.v7.widget.TintInfo mInternalBackgroundTint -> mInternalBackgroundTint
    android.support.v7.widget.TintInfo mBackgroundTint -> mBackgroundTint
    android.support.v7.widget.TintInfo mTmpInfo -> mTmpInfo
    void <init>(android.view.View) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    void onSetBackgroundResource(int) -> onSetBackgroundResource
    void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void applySupportBackgroundTint() -> applySupportBackgroundTint
    void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
    boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
android.support.v7.widget.AppCompatButton -> android.support.v7.widget.AppCompatButton:
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setTextSize(int,float) -> setTextSize
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    int getAutoSizeTextType() -> getAutoSizeTextType
    int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    void setSupportAllCaps(boolean) -> setSupportAllCaps
android.support.v7.widget.AppCompatCheckBox -> android.support.v7.widget.AppCompatCheckBox:
    android.support.v7.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> mCompoundButtonHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    void setButtonDrawable(int) -> setButtonDrawable
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
android.support.v7.widget.AppCompatCheckedTextView -> android.support.v7.widget.AppCompatCheckedTextView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void drawableStateChanged() -> drawableStateChanged
    void <clinit>() -> <clinit>
android.support.v7.widget.AppCompatCompoundButtonHelper -> android.support.v7.widget.AppCompatCompoundButtonHelper:
    android.widget.CompoundButton mView -> mView
    android.content.res.ColorStateList mButtonTintList -> mButtonTintList
    android.graphics.PorterDuff$Mode mButtonTintMode -> mButtonTintMode
    boolean mHasButtonTint -> mHasButtonTint
    boolean mHasButtonTintMode -> mHasButtonTintMode
    boolean mSkipNextApply -> mSkipNextApply
    void <init>(android.widget.CompoundButton) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    void onSetButtonDrawable() -> onSetButtonDrawable
    void applyButtonTint() -> applyButtonTint
    int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
android.support.v7.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface -> android.support.v7.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface:
    void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
android.support.v7.widget.AppCompatDrawableManager -> android.support.v7.widget.AppCompatDrawableManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> DEFAULT_MODE
    java.lang.String SKIP_DRAWABLE_TAG -> SKIP_DRAWABLE_TAG
    java.lang.String PLATFORM_VD_CLAZZ -> PLATFORM_VD_CLAZZ
    android.support.v7.widget.AppCompatDrawableManager INSTANCE -> INSTANCE
    android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE -> COLOR_FILTER_CACHE
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> COLORFILTER_TINT_COLOR_CONTROL_NORMAL
    int[] TINT_COLOR_CONTROL_NORMAL -> TINT_COLOR_CONTROL_NORMAL
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> COLORFILTER_COLOR_CONTROL_ACTIVATED
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> COLORFILTER_COLOR_BACKGROUND_MULTIPLY
    int[] TINT_COLOR_CONTROL_STATE_LIST -> TINT_COLOR_CONTROL_STATE_LIST
    int[] TINT_CHECKABLE_BUTTON_LIST -> TINT_CHECKABLE_BUTTON_LIST
    java.util.WeakHashMap mTintLists -> mTintLists
    android.support.v4.util.ArrayMap mDelegates -> mDelegates
    android.support.v4.util.SparseArrayCompat mKnownDrawableIdTags -> mKnownDrawableIdTags
    java.lang.Object mDrawableCacheLock -> mDrawableCacheLock
    java.util.WeakHashMap mDrawableCaches -> mDrawableCaches
    android.util.TypedValue mTypedValue -> mTypedValue
    boolean mHasCheckedVectorDrawableSetup -> mHasCheckedVectorDrawableSetup
    void <init>() -> <init>
    android.support.v7.widget.AppCompatDrawableManager get() -> get
    void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager) -> installDefaultInflateDelegates
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    long createCacheKey(android.util.TypedValue) -> createCacheKey
    android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,android.support.v7.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
    void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate) -> addDelegate
    void removeDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate) -> removeDelegate
    boolean arrayContains(int[],int) -> arrayContains
    android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    void tintDrawable(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo,int[]) -> tintDrawable
    android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    void <clinit>() -> <clinit>
android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate -> android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate:
    void <init>() -> <init>
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache -> android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache:
    void <init>(int) -> <init>
    android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
    int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
android.support.v7.widget.AppCompatDrawableManager$InflateDelegate -> android.support.v7.widget.AppCompatDrawableManager$InflateDelegate:
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate -> android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate:
    void <init>() -> <init>
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
android.support.v7.widget.AppCompatEditText -> android.support.v7.widget.AppCompatEditText:
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.AppCompatImageButton -> android.support.v7.widget.AppCompatImageButton:
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    android.support.v7.widget.AppCompatImageHelper mImageHelper -> mImageHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setImageResource(int) -> setImageResource
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageIcon(android.graphics.drawable.Icon) -> setImageIcon
    void setImageURI(android.net.Uri) -> setImageURI
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    void drawableStateChanged() -> drawableStateChanged
    boolean hasOverlappingRendering() -> hasOverlappingRendering
android.support.v7.widget.AppCompatImageHelper -> android.support.v7.widget.AppCompatImageHelper:
    android.widget.ImageView mView -> mView
    android.support.v7.widget.TintInfo mInternalImageTint -> mInternalImageTint
    android.support.v7.widget.TintInfo mImageTint -> mImageTint
    android.support.v7.widget.TintInfo mTmpInfo -> mTmpInfo
    void <init>(android.widget.ImageView) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    void setImageResource(int) -> setImageResource
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    void applySupportImageTint() -> applySupportImageTint
    void setInternalImageTint(android.content.res.ColorStateList) -> setInternalImageTint
    boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
    boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
android.support.v7.widget.AppCompatImageView -> android.support.v7.widget.AppCompatImageView:
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    android.support.v7.widget.AppCompatImageHelper mImageHelper -> mImageHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setImageResource(int) -> setImageResource
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageIcon(android.graphics.drawable.Icon) -> setImageIcon
    void setImageURI(android.net.Uri) -> setImageURI
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    void drawableStateChanged() -> drawableStateChanged
    boolean hasOverlappingRendering() -> hasOverlappingRendering
android.support.v7.widget.AppCompatMultiAutoCompleteTextView -> android.support.v7.widget.AppCompatMultiAutoCompleteTextView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void <clinit>() -> <clinit>
android.support.v7.widget.AppCompatPopupWindow -> android.support.v7.widget.AppCompatPopupWindow:
    java.lang.String TAG -> TAG
    boolean COMPAT_OVERLAP_ANCHOR -> COMPAT_OVERLAP_ANCHOR
    boolean mOverlapAnchor -> mOverlapAnchor
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    void update(android.view.View,int,int,int,int) -> update
    void wrapOnScrollChangedListener(android.widget.PopupWindow) -> wrapOnScrollChangedListener
    void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    boolean getSupportOverlapAnchor() -> getSupportOverlapAnchor
    void <clinit>() -> <clinit>
android.support.v7.widget.AppCompatPopupWindow$1 -> android.support.v7.widget.AppCompatPopupWindow$1:
    java.lang.reflect.Field val$fieldAnchor -> val$fieldAnchor
    android.widget.PopupWindow val$popup -> val$popup
    android.view.ViewTreeObserver$OnScrollChangedListener val$originalListener -> val$originalListener
    void <init>(java.lang.reflect.Field,android.widget.PopupWindow,android.view.ViewTreeObserver$OnScrollChangedListener) -> <init>
    void onScrollChanged() -> onScrollChanged
android.support.v7.widget.AppCompatProgressBarHelper -> android.support.v7.widget.AppCompatProgressBarHelper:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.widget.ProgressBar mView -> mView
    android.graphics.Bitmap mSampleTile -> mSampleTile
    void <init>(android.widget.ProgressBar) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.Bitmap getSampleTime() -> getSampleTime
    void <clinit>() -> <clinit>
android.support.v7.widget.AppCompatRadioButton -> android.support.v7.widget.AppCompatRadioButton:
    android.support.v7.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> mCompoundButtonHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    void setButtonDrawable(int) -> setButtonDrawable
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
android.support.v7.widget.AppCompatRatingBar -> android.support.v7.widget.AppCompatRatingBar:
    android.support.v7.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper -> mAppCompatProgressBarHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onMeasure(int,int) -> onMeasure
android.support.v7.widget.AppCompatSeekBar -> android.support.v7.widget.AppCompatSeekBar:
    android.support.v7.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper -> mAppCompatSeekBarHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
android.support.v7.widget.AppCompatSeekBarHelper -> android.support.v7.widget.AppCompatSeekBarHelper:
    android.widget.SeekBar mView -> mView
    android.graphics.drawable.Drawable mTickMark -> mTickMark
    android.content.res.ColorStateList mTickMarkTintList -> mTickMarkTintList
    android.graphics.PorterDuff$Mode mTickMarkTintMode -> mTickMarkTintMode
    boolean mHasTickMarkTint -> mHasTickMarkTint
    boolean mHasTickMarkTintMode -> mHasTickMarkTintMode
    void <init>(android.widget.SeekBar) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
    android.graphics.drawable.Drawable getTickMark() -> getTickMark
    void setTickMarkTintList(android.content.res.ColorStateList) -> setTickMarkTintList
    android.content.res.ColorStateList getTickMarkTintList() -> getTickMarkTintList
    void setTickMarkTintMode(android.graphics.PorterDuff$Mode) -> setTickMarkTintMode
    android.graphics.PorterDuff$Mode getTickMarkTintMode() -> getTickMarkTintMode
    void applyTickMarkTint() -> applyTickMarkTint
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void drawableStateChanged() -> drawableStateChanged
    void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
android.support.v7.widget.AppCompatSpinner -> android.support.v7.widget.AppCompatSpinner:
    int[] ATTRS_ANDROID_SPINNERMODE -> ATTRS_ANDROID_SPINNERMODE
    int MAX_ITEMS_MEASURED -> MAX_ITEMS_MEASURED
    java.lang.String TAG -> TAG
    int MODE_DIALOG -> MODE_DIALOG
    int MODE_DROPDOWN -> MODE_DROPDOWN
    int MODE_THEME -> MODE_THEME
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    android.content.Context mPopupContext -> mPopupContext
    android.support.v7.widget.ForwardingListener mForwardingListener -> mForwardingListener
    android.widget.SpinnerAdapter mTempAdapter -> mTempAdapter
    boolean mPopupSet -> mPopupSet
    android.support.v7.widget.AppCompatSpinner$DropdownPopup mPopup -> mPopup
    int mDropDownWidth -> mDropDownWidth
    android.graphics.Rect mTempRect -> mTempRect
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    android.content.Context getPopupContext() -> getPopupContext
    void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    void setDropDownWidth(int) -> setDropDownWidth
    int getDropDownWidth() -> getDropDownWidth
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    boolean performClick() -> performClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    java.lang.CharSequence getPrompt() -> getPrompt
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.support.v7.widget.AppCompatSpinner$DropdownPopup access$000(android.support.v7.widget.AppCompatSpinner) -> access$000
    android.graphics.Rect access$100(android.support.v7.widget.AppCompatSpinner) -> access$100
    int access$200(android.support.v7.widget.AppCompatSpinner) -> access$200
    void <clinit>() -> <clinit>
android.support.v7.widget.AppCompatSpinner$1 -> android.support.v7.widget.AppCompatSpinner$1:
    android.support.v7.widget.AppCompatSpinner$DropdownPopup val$popup -> val$popup
    android.support.v7.widget.AppCompatSpinner this$0 -> this$0
    void <init>(android.support.v7.widget.AppCompatSpinner,android.view.View,android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    boolean onForwardingStarted() -> onForwardingStarted
android.support.v7.widget.AppCompatSpinner$DropDownAdapter -> android.support.v7.widget.AppCompatSpinner$DropDownAdapter:
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    android.widget.ListAdapter mListAdapter -> mListAdapter
    void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
android.support.v7.widget.AppCompatSpinner$DropdownPopup -> android.support.v7.widget.AppCompatSpinner$DropdownPopup:
    java.lang.CharSequence mHintText -> mHintText
    android.widget.ListAdapter mAdapter -> mAdapter
    android.graphics.Rect mVisibleRect -> mVisibleRect
    android.support.v7.widget.AppCompatSpinner this$0 -> this$0
    void <init>(android.support.v7.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    java.lang.CharSequence getHintText() -> getHintText
    void setPromptText(java.lang.CharSequence) -> setPromptText
    void computeContentWidth() -> computeContentWidth
    void show() -> show
    boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    void access$301(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> access$301
android.support.v7.widget.AppCompatSpinner$DropdownPopup$1 -> android.support.v7.widget.AppCompatSpinner$DropdownPopup$1:
    android.support.v7.widget.AppCompatSpinner val$this$0 -> val$this$0
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> this$1
    void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.support.v7.widget.AppCompatSpinner) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.AppCompatSpinner$DropdownPopup$2 -> android.support.v7.widget.AppCompatSpinner$DropdownPopup$2:
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> this$1
    void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> <init>
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.widget.AppCompatSpinner$DropdownPopup$3 -> android.support.v7.widget.AppCompatSpinner$DropdownPopup$3:
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> val$layoutListener
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> this$1
    void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    void onDismiss() -> onDismiss
android.support.v7.widget.AppCompatTextHelper -> android.support.v7.widget.AppCompatTextHelper:
    android.widget.TextView mView -> mView
    android.support.v7.widget.TintInfo mDrawableLeftTint -> mDrawableLeftTint
    android.support.v7.widget.TintInfo mDrawableTopTint -> mDrawableTopTint
    android.support.v7.widget.TintInfo mDrawableRightTint -> mDrawableRightTint
    android.support.v7.widget.TintInfo mDrawableBottomTint -> mDrawableBottomTint
    android.support.v7.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper -> mAutoSizeTextHelper
    int mStyle -> mStyle
    android.graphics.Typeface mFontTypeface -> mFontTypeface
    android.support.v7.widget.AppCompatTextHelper create(android.widget.TextView) -> create
    void <init>(android.widget.TextView) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    void updateTypefaceAndStyle(android.content.Context,android.support.v7.widget.TintTypedArray) -> updateTypefaceAndStyle
    void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    void setAllCaps(boolean) -> setAllCaps
    void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    void applyCompoundDrawableTint(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo) -> applyCompoundDrawableTint
    android.support.v7.widget.TintInfo createTintInfo(android.content.Context,android.support.v7.widget.AppCompatDrawableManager,int) -> createTintInfo
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setTextSize(int,float) -> setTextSize
    void autoSizeText() -> autoSizeText
    boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    void setTextSizeInternal(int,float) -> setTextSizeInternal
    void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    int getAutoSizeTextType() -> getAutoSizeTextType
    int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
android.support.v7.widget.AppCompatTextHelperV17 -> android.support.v7.widget.AppCompatTextHelperV17:
    android.support.v7.widget.TintInfo mDrawableStartTint -> mDrawableStartTint
    android.support.v7.widget.TintInfo mDrawableEndTint -> mDrawableEndTint
    void <init>(android.widget.TextView) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
android.support.v7.widget.AppCompatTextView -> android.support.v7.widget.AppCompatTextView:
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> mBackgroundTintHelper
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> mTextHelper
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void drawableStateChanged() -> drawableStateChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setTextSize(int,float) -> setTextSize
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    int getAutoSizeTextType() -> getAutoSizeTextType
    int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
android.support.v7.widget.AppCompatTextViewAutoSizeHelper -> android.support.v7.widget.AppCompatTextViewAutoSizeHelper:
    java.lang.String TAG -> TAG
    android.graphics.RectF TEMP_RECTF -> TEMP_RECTF
    int DEFAULT_AUTO_SIZE_MIN_TEXT_SIZE_IN_SP -> DEFAULT_AUTO_SIZE_MIN_TEXT_SIZE_IN_SP
    int DEFAULT_AUTO_SIZE_MAX_TEXT_SIZE_IN_SP -> DEFAULT_AUTO_SIZE_MAX_TEXT_SIZE_IN_SP
    int DEFAULT_AUTO_SIZE_GRANULARITY_IN_PX -> DEFAULT_AUTO_SIZE_GRANULARITY_IN_PX
    java.util.Hashtable sTextViewMethodByNameCache -> sTextViewMethodByNameCache
    float UNSET_AUTO_SIZE_UNIFORM_CONFIGURATION_VALUE -> UNSET_AUTO_SIZE_UNIFORM_CONFIGURATION_VALUE
    int VERY_WIDE -> VERY_WIDE
    int mAutoSizeTextType -> mAutoSizeTextType
    boolean mNeedsAutoSizeText -> mNeedsAutoSizeText
    float mAutoSizeStepGranularityInPx -> mAutoSizeStepGranularityInPx
    float mAutoSizeMinTextSizeInPx -> mAutoSizeMinTextSizeInPx
    float mAutoSizeMaxTextSizeInPx -> mAutoSizeMaxTextSizeInPx
    int[] mAutoSizeTextSizesInPx -> mAutoSizeTextSizesInPx
    boolean mHasPresetAutoSizeValues -> mHasPresetAutoSizeValues
    android.text.TextPaint mTempTextPaint -> mTempTextPaint
    android.widget.TextView mTextView -> mTextView
    android.content.Context mContext -> mContext
    void <init>(android.widget.TextView) -> <init>
    void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    int getAutoSizeTextType() -> getAutoSizeTextType
    int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
    boolean setupAutoSizeText() -> setupAutoSizeText
    void autoSizeText() -> autoSizeText
    void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    void setTextSizeInternal(int,float) -> setTextSizeInternal
    void setRawTextSize(float) -> setRawTextSize
    int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre23
    java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    boolean supportsAutoSizeText() -> supportsAutoSizeText
    void <clinit>() -> <clinit>
android.support.v7.widget.ButtonBarLayout -> android.support.v7.widget.ButtonBarLayout:
    int ALLOW_STACKING_MIN_HEIGHT_DP -> ALLOW_STACKING_MIN_HEIGHT_DP
    int PEEK_BUTTON_DP -> PEEK_BUTTON_DP
    boolean mAllowStacking -> mAllowStacking
    int mLastWidthSize -> mLastWidthSize
    int mMinimumHeight -> mMinimumHeight
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setAllowStacking(boolean) -> setAllowStacking
    void onMeasure(int,int) -> onMeasure
    int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    int getMinimumHeight() -> getMinimumHeight
    void setStacked(boolean) -> setStacked
    boolean isStacked() -> isStacked
android.support.v7.widget.CardView -> android.support.v7.widget.CardView:
    int[] COLOR_BACKGROUND_ATTR -> COLOR_BACKGROUND_ATTR
    android.support.v7.widget.CardViewImpl IMPL -> IMPL
    boolean mCompatPadding -> mCompatPadding
    boolean mPreventCornerOverlap -> mPreventCornerOverlap
    int mUserSetMinWidth -> mUserSetMinWidth
    int mUserSetMinHeight -> mUserSetMinHeight
    android.graphics.Rect mContentPadding -> mContentPadding
    android.graphics.Rect mShadowBounds -> mShadowBounds
    android.support.v7.widget.CardViewDelegate mCardViewDelegate -> mCardViewDelegate
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setPadding(int,int,int,int) -> setPadding
    void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    boolean getUseCompatPadding() -> getUseCompatPadding
    void setUseCompatPadding(boolean) -> setUseCompatPadding
    void setContentPadding(int,int,int,int) -> setContentPadding
    void onMeasure(int,int) -> onMeasure
    void initialize(android.content.Context,android.util.AttributeSet,int) -> initialize
    void setMinimumWidth(int) -> setMinimumWidth
    void setMinimumHeight(int) -> setMinimumHeight
    void setCardBackgroundColor(int) -> setCardBackgroundColor
    void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    int getContentPaddingLeft() -> getContentPaddingLeft
    int getContentPaddingRight() -> getContentPaddingRight
    int getContentPaddingTop() -> getContentPaddingTop
    int getContentPaddingBottom() -> getContentPaddingBottom
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setCardElevation(float) -> setCardElevation
    float getCardElevation() -> getCardElevation
    void setMaxCardElevation(float) -> setMaxCardElevation
    float getMaxCardElevation() -> getMaxCardElevation
    boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    void access$001(android.support.v7.widget.CardView,int,int,int,int) -> access$001
    void access$101(android.support.v7.widget.CardView,int) -> access$101
    void access$201(android.support.v7.widget.CardView,int) -> access$201
    void <clinit>() -> <clinit>
android.support.v7.widget.CardView$1 -> android.support.v7.widget.CardView$1:
    android.graphics.drawable.Drawable mCardBackground -> mCardBackground
    android.support.v7.widget.CardView this$0 -> this$0
    void <init>(android.support.v7.widget.CardView) -> <init>
    void setCardBackground(android.graphics.drawable.Drawable) -> setCardBackground
    boolean getUseCompatPadding() -> getUseCompatPadding
    boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    void setShadowPadding(int,int,int,int) -> setShadowPadding
    void setMinWidthHeightInternal(int,int) -> setMinWidthHeightInternal
    android.graphics.drawable.Drawable getCardBackground() -> getCardBackground
    android.view.View getCardView() -> getCardView
android.support.v7.widget.CardViewApi17Impl -> android.support.v7.widget.CardViewApi17Impl:
    void <init>() -> <init>
    void initStatic() -> initStatic
android.support.v7.widget.CardViewApi17Impl$1 -> android.support.v7.widget.CardViewApi17Impl$1:
    android.support.v7.widget.CardViewApi17Impl this$0 -> this$0
    void <init>(android.support.v7.widget.CardViewApi17Impl) -> <init>
    void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
android.support.v7.widget.CardViewApi21Impl -> android.support.v7.widget.CardViewApi21Impl:
    void <init>() -> <init>
    void initialize(android.support.v7.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    void setRadius(android.support.v7.widget.CardViewDelegate,float) -> setRadius
    void initStatic() -> initStatic
    void setMaxElevation(android.support.v7.widget.CardViewDelegate,float) -> setMaxElevation
    float getMaxElevation(android.support.v7.widget.CardViewDelegate) -> getMaxElevation
    float getMinWidth(android.support.v7.widget.CardViewDelegate) -> getMinWidth
    float getMinHeight(android.support.v7.widget.CardViewDelegate) -> getMinHeight
    float getRadius(android.support.v7.widget.CardViewDelegate) -> getRadius
    void setElevation(android.support.v7.widget.CardViewDelegate,float) -> setElevation
    float getElevation(android.support.v7.widget.CardViewDelegate) -> getElevation
    void updatePadding(android.support.v7.widget.CardViewDelegate) -> updatePadding
    void onCompatPaddingChanged(android.support.v7.widget.CardViewDelegate) -> onCompatPaddingChanged
    void onPreventCornerOverlapChanged(android.support.v7.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    void setBackgroundColor(android.support.v7.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    android.content.res.ColorStateList getBackgroundColor(android.support.v7.widget.CardViewDelegate) -> getBackgroundColor
    android.support.v7.widget.RoundRectDrawable getCardBackground(android.support.v7.widget.CardViewDelegate) -> getCardBackground
android.support.v7.widget.CardViewBaseImpl -> android.support.v7.widget.CardViewBaseImpl:
    android.graphics.RectF mCornerRect -> mCornerRect
    void <init>() -> <init>
    void initStatic() -> initStatic
    void initialize(android.support.v7.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    android.support.v7.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float) -> createBackground
    void updatePadding(android.support.v7.widget.CardViewDelegate) -> updatePadding
    void onCompatPaddingChanged(android.support.v7.widget.CardViewDelegate) -> onCompatPaddingChanged
    void onPreventCornerOverlapChanged(android.support.v7.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    void setBackgroundColor(android.support.v7.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    android.content.res.ColorStateList getBackgroundColor(android.support.v7.widget.CardViewDelegate) -> getBackgroundColor
    void setRadius(android.support.v7.widget.CardViewDelegate,float) -> setRadius
    float getRadius(android.support.v7.widget.CardViewDelegate) -> getRadius
    void setElevation(android.support.v7.widget.CardViewDelegate,float) -> setElevation
    float getElevation(android.support.v7.widget.CardViewDelegate) -> getElevation
    void setMaxElevation(android.support.v7.widget.CardViewDelegate,float) -> setMaxElevation
    float getMaxElevation(android.support.v7.widget.CardViewDelegate) -> getMaxElevation
    float getMinWidth(android.support.v7.widget.CardViewDelegate) -> getMinWidth
    float getMinHeight(android.support.v7.widget.CardViewDelegate) -> getMinHeight
    android.support.v7.widget.RoundRectDrawableWithShadow getShadowBackground(android.support.v7.widget.CardViewDelegate) -> getShadowBackground
    android.graphics.RectF access$000(android.support.v7.widget.CardViewBaseImpl) -> access$000
android.support.v7.widget.CardViewBaseImpl$1 -> android.support.v7.widget.CardViewBaseImpl$1:
    android.support.v7.widget.CardViewBaseImpl this$0 -> this$0
    void <init>(android.support.v7.widget.CardViewBaseImpl) -> <init>
    void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
android.support.v7.widget.CardViewDelegate -> android.support.v7.widget.CardViewDelegate:
    void setCardBackground(android.graphics.drawable.Drawable) -> setCardBackground
    android.graphics.drawable.Drawable getCardBackground() -> getCardBackground
    boolean getUseCompatPadding() -> getUseCompatPadding
    boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    void setShadowPadding(int,int,int,int) -> setShadowPadding
    void setMinWidthHeightInternal(int,int) -> setMinWidthHeightInternal
    android.view.View getCardView() -> getCardView
android.support.v7.widget.CardViewImpl -> android.support.v7.widget.CardViewImpl:
    void initialize(android.support.v7.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    void setRadius(android.support.v7.widget.CardViewDelegate,float) -> setRadius
    float getRadius(android.support.v7.widget.CardViewDelegate) -> getRadius
    void setElevation(android.support.v7.widget.CardViewDelegate,float) -> setElevation
    float getElevation(android.support.v7.widget.CardViewDelegate) -> getElevation
    void initStatic() -> initStatic
    void setMaxElevation(android.support.v7.widget.CardViewDelegate,float) -> setMaxElevation
    float getMaxElevation(android.support.v7.widget.CardViewDelegate) -> getMaxElevation
    float getMinWidth(android.support.v7.widget.CardViewDelegate) -> getMinWidth
    float getMinHeight(android.support.v7.widget.CardViewDelegate) -> getMinHeight
    void updatePadding(android.support.v7.widget.CardViewDelegate) -> updatePadding
    void onCompatPaddingChanged(android.support.v7.widget.CardViewDelegate) -> onCompatPaddingChanged
    void onPreventCornerOverlapChanged(android.support.v7.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    void setBackgroundColor(android.support.v7.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    android.content.res.ColorStateList getBackgroundColor(android.support.v7.widget.CardViewDelegate) -> getBackgroundColor
android.support.v7.widget.ChildHelper -> android.support.v7.widget.ChildHelper:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    android.support.v7.widget.ChildHelper$Callback mCallback -> mCallback
    android.support.v7.widget.ChildHelper$Bucket mBucket -> mBucket
    java.util.List mHiddenViews -> mHiddenViews
    void <init>(android.support.v7.widget.ChildHelper$Callback) -> <init>
    void hideViewInternal(android.view.View) -> hideViewInternal
    boolean unhideViewInternal(android.view.View) -> unhideViewInternal
    void addView(android.view.View,boolean) -> addView
    void addView(android.view.View,int,boolean) -> addView
    int getOffset(int) -> getOffset
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    android.view.View getChildAt(int) -> getChildAt
    void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    int getChildCount() -> getChildCount
    int getUnfilteredChildCount() -> getUnfilteredChildCount
    android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    void detachViewFromParent(int) -> detachViewFromParent
    int indexOfChild(android.view.View) -> indexOfChild
    boolean isHidden(android.view.View) -> isHidden
    void hide(android.view.View) -> hide
    void unhide(android.view.View) -> unhide
    java.lang.String toString() -> toString
    boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
android.support.v7.widget.ChildHelper$Bucket -> android.support.v7.widget.ChildHelper$Bucket:
    int BITS_PER_WORD -> BITS_PER_WORD
    long LAST_BIT -> LAST_BIT
    long mData -> mData
    android.support.v7.widget.ChildHelper$Bucket mNext -> mNext
    void <init>() -> <init>
    void set(int) -> set
    void ensureNext() -> ensureNext
    void clear(int) -> clear
    boolean get(int) -> get
    void reset() -> reset
    void insert(int,boolean) -> insert
    boolean remove(int) -> remove
    int countOnesBefore(int) -> countOnesBefore
    java.lang.String toString() -> toString
android.support.v7.widget.ChildHelper$Callback -> android.support.v7.widget.ChildHelper$Callback:
    int getChildCount() -> getChildCount
    void addView(android.view.View,int) -> addView
    int indexOfChild(android.view.View) -> indexOfChild
    void removeViewAt(int) -> removeViewAt
    android.view.View getChildAt(int) -> getChildAt
    void removeAllViews() -> removeAllViews
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    void detachViewFromParent(int) -> detachViewFromParent
    void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    void onLeftHiddenState(android.view.View) -> onLeftHiddenState
android.support.v7.widget.ContentFrameLayout -> android.support.v7.widget.ContentFrameLayout:
    android.util.TypedValue mMinWidthMajor -> mMinWidthMajor
    android.util.TypedValue mMinWidthMinor -> mMinWidthMinor
    android.util.TypedValue mFixedWidthMajor -> mFixedWidthMajor
    android.util.TypedValue mFixedWidthMinor -> mFixedWidthMinor
    android.util.TypedValue mFixedHeightMajor -> mFixedHeightMajor
    android.util.TypedValue mFixedHeightMinor -> mFixedHeightMinor
    android.graphics.Rect mDecorPadding -> mDecorPadding
    android.support.v7.widget.ContentFrameLayout$OnAttachListener mAttachListener -> mAttachListener
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    void setAttachListener(android.support.v7.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    void setDecorPadding(int,int,int,int) -> setDecorPadding
    void onMeasure(int,int) -> onMeasure
    android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
android.support.v7.widget.ContentFrameLayout$OnAttachListener -> android.support.v7.widget.ContentFrameLayout$OnAttachListener:
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedFromWindow() -> onAttachedFromWindow
android.support.v7.widget.DecorContentParent -> android.support.v7.widget.DecorContentParent:
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    java.lang.CharSequence getTitle() -> getTitle
    void initFeature(int) -> initFeature
    void setUiOptions(int) -> setUiOptions
    boolean hasIcon() -> hasIcon
    boolean hasLogo() -> hasLogo
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> setMenu
    void saveToolbarHierarchyState(android.util.SparseArray) -> saveToolbarHierarchyState
    void restoreToolbarHierarchyState(android.util.SparseArray) -> restoreToolbarHierarchyState
    void dismissPopups() -> dismissPopups
android.support.v7.widget.DecorToolbar -> android.support.v7.widget.DecorToolbar:
    android.view.ViewGroup getViewGroup() -> getViewGroup
    android.content.Context getContext() -> getContext
    boolean hasExpandedActionView() -> hasExpandedActionView
    void collapseActionView() -> collapseActionView
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void initProgress() -> initProgress
    void initIndeterminateProgress() -> initIndeterminateProgress
    boolean hasIcon() -> hasIcon
    boolean hasLogo() -> hasLogo
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> setMenu
    void dismissPopupMenus() -> dismissPopupMenus
    int getDisplayOptions() -> getDisplayOptions
    void setDisplayOptions(int) -> setDisplayOptions
    void setEmbeddedTabView(android.support.v7.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    boolean isTitleTruncated() -> isTitleTruncated
    void setCollapsible(boolean) -> setCollapsible
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener) -> setDropdownParams
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    int getDropdownItemCount() -> getDropdownItemCount
    void setCustomView(android.view.View) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    void animateToVisibility(int) -> animateToVisibility
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    void setNavigationIcon(int) -> setNavigationIcon
    void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    void setNavigationContentDescription(int) -> setNavigationContentDescription
    void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> setDefaultNavigationIcon
    void saveHierarchyState(android.util.SparseArray) -> saveHierarchyState
    void restoreHierarchyState(android.util.SparseArray) -> restoreHierarchyState
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    int getHeight() -> getHeight
    void setVisibility(int) -> setVisibility
    int getVisibility() -> getVisibility
    void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    android.view.Menu getMenu() -> getMenu
android.support.v7.widget.DefaultItemAnimator -> android.support.v7.widget.DefaultItemAnimator:
    boolean DEBUG -> DEBUG
    android.animation.TimeInterpolator sDefaultInterpolator -> sDefaultInterpolator
    java.util.ArrayList mPendingRemovals -> mPendingRemovals
    java.util.ArrayList mPendingAdditions -> mPendingAdditions
    java.util.ArrayList mPendingMoves -> mPendingMoves
    java.util.ArrayList mPendingChanges -> mPendingChanges
    java.util.ArrayList mAdditionsList -> mAdditionsList
    java.util.ArrayList mMovesList -> mMovesList
    java.util.ArrayList mChangesList -> mChangesList
    java.util.ArrayList mAddAnimations -> mAddAnimations
    java.util.ArrayList mMoveAnimations -> mMoveAnimations
    java.util.ArrayList mRemoveAnimations -> mRemoveAnimations
    java.util.ArrayList mChangeAnimations -> mChangeAnimations
    void <init>() -> <init>
    void runPendingAnimations() -> runPendingAnimations
    boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> animateRemove
    void animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> animateAdd
    void animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> animateAddImpl
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    void animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    void animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    void endChangeAnimation(java.util.List,android.support.v7.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    void endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    boolean endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v7.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> endAnimation
    void resetAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> resetAnimation
    boolean isRunning() -> isRunning
    void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    void endAnimations() -> endAnimations
    void cancelAll(java.util.List) -> cancelAll
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
android.support.v7.widget.DefaultItemAnimator$1 -> android.support.v7.widget.DefaultItemAnimator$1:
    java.util.ArrayList val$moves -> val$moves
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$2 -> android.support.v7.widget.DefaultItemAnimator$2:
    java.util.ArrayList val$changes -> val$changes
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$3 -> android.support.v7.widget.DefaultItemAnimator$3:
    java.util.ArrayList val$additions -> val$additions
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$4 -> android.support.v7.widget.DefaultItemAnimator$4:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> val$holder
    android.view.ViewPropertyAnimator val$animation -> val$animation
    android.view.View val$view -> val$view
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$5 -> android.support.v7.widget.DefaultItemAnimator$5:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> val$holder
    android.view.View val$view -> val$view
    android.view.ViewPropertyAnimator val$animation -> val$animation
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$6 -> android.support.v7.widget.DefaultItemAnimator$6:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> val$holder
    int val$deltaX -> val$deltaX
    android.view.View val$view -> val$view
    int val$deltaY -> val$deltaY
    android.view.ViewPropertyAnimator val$animation -> val$animation
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$7 -> android.support.v7.widget.DefaultItemAnimator$7:
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> val$changeInfo
    android.view.ViewPropertyAnimator val$oldViewAnim -> val$oldViewAnim
    android.view.View val$view -> val$view
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$8 -> android.support.v7.widget.DefaultItemAnimator$8:
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> val$changeInfo
    android.view.ViewPropertyAnimator val$newViewAnimation -> val$newViewAnimation
    android.view.View val$newView -> val$newView
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$ChangeInfo -> android.support.v7.widget.DefaultItemAnimator$ChangeInfo:
    android.support.v7.widget.RecyclerView$ViewHolder oldHolder -> oldHolder
    android.support.v7.widget.RecyclerView$ViewHolder newHolder -> newHolder
    int fromX -> fromX
    int fromY -> fromY
    int toX -> toX
    int toY -> toY
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> <init>
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    java.lang.String toString() -> toString
android.support.v7.widget.DefaultItemAnimator$MoveInfo -> android.support.v7.widget.DefaultItemAnimator$MoveInfo:
    android.support.v7.widget.RecyclerView$ViewHolder holder -> holder
    int fromX -> fromX
    int fromY -> fromY
    int toX -> toX
    int toY -> toY
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
android.support.v7.widget.DialogTitle -> android.support.v7.widget.DialogTitle:
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void onMeasure(int,int) -> onMeasure
android.support.v7.widget.DividerItemDecoration -> android.support.v7.widget.DividerItemDecoration:
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    java.lang.String TAG -> TAG
    int[] ATTRS -> ATTRS
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mOrientation -> mOrientation
    android.graphics.Rect mBounds -> mBounds
    void <init>(android.content.Context,int) -> <init>
    void setOrientation(int) -> setOrientation
    void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDraw
    void drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> drawVertical
    void drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> drawHorizontal
    void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> getItemOffsets
    void <clinit>() -> <clinit>
android.support.v7.widget.DrawableUtils -> android.support.v7.widget.DrawableUtils:
    java.lang.String TAG -> TAG
    android.graphics.Rect INSETS_NONE -> INSETS_NONE
    java.lang.Class sInsetsClazz -> sInsetsClazz
    java.lang.String VECTOR_DRAWABLE_CLAZZ_NAME -> VECTOR_DRAWABLE_CLAZZ_NAME
    void <init>() -> <init>
    android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> fixVectorDrawableTinting
    android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
    void <clinit>() -> <clinit>
android.support.v7.widget.DropDownListView -> android.support.v7.widget.DropDownListView:
    boolean mListSelectionHidden -> mListSelectionHidden
    boolean mHijackFocus -> mHijackFocus
    boolean mDrawsInPressedState -> mDrawsInPressedState
    android.support.v4.view.ViewPropertyAnimatorCompat mClickAnimation -> mClickAnimation
    android.support.v4.widget.ListViewAutoScrollHelper mScrollHelper -> mScrollHelper
    void <init>(android.content.Context,boolean) -> <init>
    boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    void clickPressedItem(android.view.View,int) -> clickPressedItem
    void setListSelectionHidden(boolean) -> setListSelectionHidden
    void clearPressedItem() -> clearPressedItem
    void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
android.support.v7.widget.FastScroller -> android.support.v7.widget.FastScroller:
    int STATE_HIDDEN -> STATE_HIDDEN
    int STATE_VISIBLE -> STATE_VISIBLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int DRAG_NONE -> DRAG_NONE
    int DRAG_X -> DRAG_X
    int DRAG_Y -> DRAG_Y
    int ANIMATION_STATE_OUT -> ANIMATION_STATE_OUT
    int ANIMATION_STATE_FADING_IN -> ANIMATION_STATE_FADING_IN
    int ANIMATION_STATE_IN -> ANIMATION_STATE_IN
    int ANIMATION_STATE_FADING_OUT -> ANIMATION_STATE_FADING_OUT
    int SHOW_DURATION_MS -> SHOW_DURATION_MS
    int HIDE_DELAY_AFTER_VISIBLE_MS -> HIDE_DELAY_AFTER_VISIBLE_MS
    int HIDE_DELAY_AFTER_DRAGGING_MS -> HIDE_DELAY_AFTER_DRAGGING_MS
    int HIDE_DURATION_MS -> HIDE_DURATION_MS
    int SCROLLBAR_FULL_OPAQUE -> SCROLLBAR_FULL_OPAQUE
    int[] PRESSED_STATE_SET -> PRESSED_STATE_SET
    int[] EMPTY_STATE_SET -> EMPTY_STATE_SET
    int mScrollbarMinimumRange -> mScrollbarMinimumRange
    int mMargin -> mMargin
    android.graphics.drawable.StateListDrawable mVerticalThumbDrawable -> mVerticalThumbDrawable
    android.graphics.drawable.Drawable mVerticalTrackDrawable -> mVerticalTrackDrawable
    int mVerticalThumbWidth -> mVerticalThumbWidth
    int mVerticalTrackWidth -> mVerticalTrackWidth
    android.graphics.drawable.StateListDrawable mHorizontalThumbDrawable -> mHorizontalThumbDrawable
    android.graphics.drawable.Drawable mHorizontalTrackDrawable -> mHorizontalTrackDrawable
    int mHorizontalThumbHeight -> mHorizontalThumbHeight
    int mHorizontalTrackHeight -> mHorizontalTrackHeight
    int mVerticalThumbHeight -> mVerticalThumbHeight
    int mVerticalThumbCenterY -> mVerticalThumbCenterY
    float mVerticalDragY -> mVerticalDragY
    int mHorizontalThumbWidth -> mHorizontalThumbWidth
    int mHorizontalThumbCenterX -> mHorizontalThumbCenterX
    float mHorizontalDragX -> mHorizontalDragX
    int mRecyclerViewWidth -> mRecyclerViewWidth
    int mRecyclerViewHeight -> mRecyclerViewHeight
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    boolean mNeedVerticalScrollbar -> mNeedVerticalScrollbar
    boolean mNeedHorizontalScrollbar -> mNeedHorizontalScrollbar
    int mState -> mState
    int mDragState -> mDragState
    int[] mVerticalRange -> mVerticalRange
    int[] mHorizontalRange -> mHorizontalRange
    android.animation.ValueAnimator mShowHideAnimator -> mShowHideAnimator
    int mAnimationState -> mAnimationState
    java.lang.Runnable mHideRunnable -> mHideRunnable
    android.support.v7.widget.RecyclerView$OnScrollListener mOnScrollListener -> mOnScrollListener
    void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    void attachToRecyclerView(android.support.v7.widget.RecyclerView) -> attachToRecyclerView
    void setupCallbacks() -> setupCallbacks
    void destroyCallbacks() -> destroyCallbacks
    void requestRedraw() -> requestRedraw
    void setState(int) -> setState
    boolean isLayoutRTL() -> isLayoutRTL
    boolean isDragging() -> isDragging
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void show() -> show
    void hide() -> hide
    void hide(int) -> hide
    void cancelHide() -> cancelHide
    void resetHideDelay(int) -> resetHideDelay
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDrawOver
    void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    void updateScrollPosition(int,int) -> updateScrollPosition
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    void verticalScrollTo(float) -> verticalScrollTo
    void horizontalScrollTo(float) -> horizontalScrollTo
    int scrollTo(float,float,int[],int,int,int) -> scrollTo
    boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    android.graphics.drawable.Drawable getHorizontalTrackDrawable() -> getHorizontalTrackDrawable
    android.graphics.drawable.Drawable getHorizontalThumbDrawable() -> getHorizontalThumbDrawable
    android.graphics.drawable.Drawable getVerticalTrackDrawable() -> getVerticalTrackDrawable
    android.graphics.drawable.Drawable getVerticalThumbDrawable() -> getVerticalThumbDrawable
    int[] getVerticalRange() -> getVerticalRange
    int[] getHorizontalRange() -> getHorizontalRange
    android.animation.ValueAnimator access$200(android.support.v7.widget.FastScroller) -> access$200
    int access$302(android.support.v7.widget.FastScroller,int) -> access$302
    void access$400(android.support.v7.widget.FastScroller,int) -> access$400
    void access$500(android.support.v7.widget.FastScroller) -> access$500
    android.graphics.drawable.StateListDrawable access$600(android.support.v7.widget.FastScroller) -> access$600
    android.graphics.drawable.Drawable access$700(android.support.v7.widget.FastScroller) -> access$700
    void <clinit>() -> <clinit>
android.support.v7.widget.FastScroller$1 -> android.support.v7.widget.FastScroller$1:
    android.support.v7.widget.FastScroller this$0 -> this$0
    void <init>(android.support.v7.widget.FastScroller) -> <init>
    void run() -> run
android.support.v7.widget.FastScroller$2 -> android.support.v7.widget.FastScroller$2:
    android.support.v7.widget.FastScroller this$0 -> this$0
    void <init>(android.support.v7.widget.FastScroller) -> <init>
    void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> onScrolled
android.support.v7.widget.FastScroller$AnimationState -> android.support.v7.widget.FastScroller$AnimationState:
android.support.v7.widget.FastScroller$AnimatorListener -> android.support.v7.widget.FastScroller$AnimatorListener:
    boolean mCanceled -> mCanceled
    android.support.v7.widget.FastScroller this$0 -> this$0
    void <init>(android.support.v7.widget.FastScroller) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void <init>(android.support.v7.widget.FastScroller,android.support.v7.widget.FastScroller$1) -> <init>
android.support.v7.widget.FastScroller$AnimatorUpdater -> android.support.v7.widget.FastScroller$AnimatorUpdater:
    android.support.v7.widget.FastScroller this$0 -> this$0
    void <init>(android.support.v7.widget.FastScroller) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
    void <init>(android.support.v7.widget.FastScroller,android.support.v7.widget.FastScroller$1) -> <init>
android.support.v7.widget.FastScroller$DragState -> android.support.v7.widget.FastScroller$DragState:
android.support.v7.widget.FastScroller$State -> android.support.v7.widget.FastScroller$State:
android.support.v7.widget.FitWindowsFrameLayout -> android.support.v7.widget.FitWindowsFrameLayout:
    android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> mListener
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
android.support.v7.widget.FitWindowsLinearLayout -> android.support.v7.widget.FitWindowsLinearLayout:
    android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> mListener
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
android.support.v7.widget.FitWindowsViewGroup -> android.support.v7.widget.FitWindowsViewGroup:
    void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener:
    void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
android.support.v7.widget.ForwardingListener -> android.support.v7.widget.ForwardingListener:
    float mScaledTouchSlop -> mScaledTouchSlop
    int mTapTimeout -> mTapTimeout
    int mLongPressTimeout -> mLongPressTimeout
    android.view.View mSrc -> mSrc
    java.lang.Runnable mDisallowIntercept -> mDisallowIntercept
    java.lang.Runnable mTriggerLongPress -> mTriggerLongPress
    boolean mForwarding -> mForwarding
    int mActivePointerId -> mActivePointerId
    int[] mTmpLocation -> mTmpLocation
    void <init>(android.view.View) -> <init>
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    boolean onForwardingStarted() -> onForwardingStarted
    boolean onForwardingStopped() -> onForwardingStopped
    boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    void clearCallbacks() -> clearCallbacks
    void onLongPress() -> onLongPress
    boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    boolean pointInView(android.view.View,float,float,float) -> pointInView
    boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
    boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
android.support.v7.widget.ForwardingListener$DisallowIntercept -> android.support.v7.widget.ForwardingListener$DisallowIntercept:
    android.support.v7.widget.ForwardingListener this$0 -> this$0
    void <init>(android.support.v7.widget.ForwardingListener) -> <init>
    void run() -> run
android.support.v7.widget.ForwardingListener$TriggerLongPress -> android.support.v7.widget.ForwardingListener$TriggerLongPress:
    android.support.v7.widget.ForwardingListener this$0 -> this$0
    void <init>(android.support.v7.widget.ForwardingListener) -> <init>
    void run() -> run
android.support.v7.widget.GapWorker -> android.support.v7.widget.GapWorker:
    java.lang.ThreadLocal sGapWorker -> sGapWorker
    java.util.ArrayList mRecyclerViews -> mRecyclerViews
    long mPostTimeNs -> mPostTimeNs
    long mFrameIntervalNs -> mFrameIntervalNs
    java.util.ArrayList mTasks -> mTasks
    java.util.Comparator sTaskComparator -> sTaskComparator
    void <init>() -> <init>
    void add(android.support.v7.widget.RecyclerView) -> add
    void remove(android.support.v7.widget.RecyclerView) -> remove
    void postFromTraversal(android.support.v7.widget.RecyclerView,int,int) -> postFromTraversal
    void buildTaskList() -> buildTaskList
    boolean isPrefetchPositionAttached(android.support.v7.widget.RecyclerView,int) -> isPrefetchPositionAttached
    android.support.v7.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(android.support.v7.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    void prefetch(long) -> prefetch
    void run() -> run
    void <clinit>() -> <clinit>
android.support.v7.widget.GapWorker$1 -> android.support.v7.widget.GapWorker$1:
    void <init>() -> <init>
    int compare(android.support.v7.widget.GapWorker$Task,android.support.v7.widget.GapWorker$Task) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl -> android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl:
    int mPrefetchDx -> mPrefetchDx
    int mPrefetchDy -> mPrefetchDy
    int[] mPrefetchArray -> mPrefetchArray
    int mCount -> mCount
    void <init>() -> <init>
    void setPrefetchVector(int,int) -> setPrefetchVector
    void collectPrefetchPositionsFromView(android.support.v7.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    void addPosition(int,int) -> addPosition
    boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    void clearPrefetchPositions() -> clearPrefetchPositions
android.support.v7.widget.GapWorker$Task -> android.support.v7.widget.GapWorker$Task:
    boolean immediate -> immediate
    int viewVelocity -> viewVelocity
    int distanceToItem -> distanceToItem
    android.support.v7.widget.RecyclerView view -> view
    int position -> position
    void <init>() -> <init>
    void clear() -> clear
android.support.v7.widget.GridLayoutManager -> android.support.v7.widget.GridLayoutManager:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int DEFAULT_SPAN_COUNT -> DEFAULT_SPAN_COUNT
    boolean mPendingSpanCountChange -> mPendingSpanCountChange
    int mSpanCount -> mSpanCount
    int[] mCachedBorders -> mCachedBorders
    android.view.View[] mSet -> mSet
    android.util.SparseIntArray mPreLayoutSpanSizeCache -> mPreLayoutSpanSizeCache
    android.util.SparseIntArray mPreLayoutSpanIndexCache -> mPreLayoutSpanIndexCache
    android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> mSpanSizeLookup
    android.graphics.Rect mDecorInsets -> mDecorInsets
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void <init>(android.content.Context,int) -> <init>
    void <init>(android.content.Context,int,int,boolean) -> <init>
    void setStackFromEnd(boolean) -> setStackFromEnd
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getRowCountForAccessibility
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getColumnCountForAccessibility
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
    void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> onItemsAdded
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> onItemsChanged
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> onItemsRemoved
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> onItemsMoved
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    void setSpanSizeLookup(android.support.v7.widget.GridLayoutManager$SpanSizeLookup) -> setSpanSizeLookup
    android.support.v7.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> getSpanSizeLookup
    void updateMeasurements() -> updateMeasurements
    void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    void calculateItemBorders(int) -> calculateItemBorders
    int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    void ensureViewSet() -> ensureViewSet
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    void ensureAnchorIsInCorrectSpan(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> getSpanGroupIndex
    int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> getSpanIndex
    int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> getSpanSize
    void collectPrefetchPositionsForLayoutState(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    void measureChild(android.view.View,int,boolean) -> measureChild
    void guessMeasurement(float,int) -> guessMeasurement
    void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    void assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean) -> assignSpans
    int getSpanCount() -> getSpanCount
    void setSpanCount(int) -> setSpanCount
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup -> android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup:
    void <init>() -> <init>
    int getSpanSize(int) -> getSpanSize
    int getSpanIndex(int,int) -> getSpanIndex
android.support.v7.widget.GridLayoutManager$LayoutParams -> android.support.v7.widget.GridLayoutManager$LayoutParams:
    int INVALID_SPAN_ID -> INVALID_SPAN_ID
    int mSpanIndex -> mSpanIndex
    int mSpanSize -> mSpanSize
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.support.v7.widget.RecyclerView$LayoutParams) -> <init>
    int getSpanIndex() -> getSpanIndex
    int getSpanSize() -> getSpanSize
android.support.v7.widget.GridLayoutManager$SpanSizeLookup -> android.support.v7.widget.GridLayoutManager$SpanSizeLookup:
    android.util.SparseIntArray mSpanIndexCache -> mSpanIndexCache
    boolean mCacheSpanIndices -> mCacheSpanIndices
    void <init>() -> <init>
    int getSpanSize(int) -> getSpanSize
    void setSpanIndexCacheEnabled(boolean) -> setSpanIndexCacheEnabled
    void invalidateSpanIndexCache() -> invalidateSpanIndexCache
    boolean isSpanIndexCacheEnabled() -> isSpanIndexCacheEnabled
    int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    int getSpanIndex(int,int) -> getSpanIndex
    int findReferenceIndexFromCache(int) -> findReferenceIndexFromCache
    int getSpanGroupIndex(int,int) -> getSpanGroupIndex
android.support.v7.widget.LayoutState -> android.support.v7.widget.LayoutState:
    java.lang.String TAG -> TAG
    int LAYOUT_START -> LAYOUT_START
    int LAYOUT_END -> LAYOUT_END
    int INVALID_LAYOUT -> INVALID_LAYOUT
    int ITEM_DIRECTION_HEAD -> ITEM_DIRECTION_HEAD
    int ITEM_DIRECTION_TAIL -> ITEM_DIRECTION_TAIL
    boolean mRecycle -> mRecycle
    int mAvailable -> mAvailable
    int mCurrentPosition -> mCurrentPosition
    int mItemDirection -> mItemDirection
    int mLayoutDirection -> mLayoutDirection
    int mStartLine -> mStartLine
    int mEndLine -> mEndLine
    boolean mStopInFocusable -> mStopInFocusable
    boolean mInfinite -> mInfinite
    void <init>() -> <init>
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> hasMore
    android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> next
    java.lang.String toString() -> toString
android.support.v7.widget.LinearLayoutCompat -> android.support.v7.widget.LinearLayoutCompat:
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int SHOW_DIVIDER_NONE -> SHOW_DIVIDER_NONE
    int SHOW_DIVIDER_BEGINNING -> SHOW_DIVIDER_BEGINNING
    int SHOW_DIVIDER_MIDDLE -> SHOW_DIVIDER_MIDDLE
    int SHOW_DIVIDER_END -> SHOW_DIVIDER_END
    boolean mBaselineAligned -> mBaselineAligned
    int mBaselineAlignedChildIndex -> mBaselineAlignedChildIndex
    int mBaselineChildTop -> mBaselineChildTop
    int mOrientation -> mOrientation
    int mGravity -> mGravity
    int mTotalLength -> mTotalLength
    float mWeightSum -> mWeightSum
    boolean mUseLargestChild -> mUseLargestChild
    int[] mMaxAscent -> mMaxAscent
    int[] mMaxDescent -> mMaxDescent
    int VERTICAL_GRAVITY_COUNT -> VERTICAL_GRAVITY_COUNT
    int INDEX_CENTER_VERTICAL -> INDEX_CENTER_VERTICAL
    int INDEX_TOP -> INDEX_TOP
    int INDEX_BOTTOM -> INDEX_BOTTOM
    int INDEX_FILL -> INDEX_FILL
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mDividerWidth -> mDividerWidth
    int mDividerHeight -> mDividerHeight
    int mShowDividers -> mShowDividers
    int mDividerPadding -> mDividerPadding
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setShowDividers(int) -> setShowDividers
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    int getShowDividers() -> getShowDividers
    android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    boolean isBaselineAligned() -> isBaselineAligned
    void setBaselineAligned(boolean) -> setBaselineAligned
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    int getBaseline() -> getBaseline
    int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    int getVirtualChildCount() -> getVirtualChildCount
    float getWeightSum() -> getWeightSum
    void setWeightSum(float) -> setWeightSum
    void onMeasure(int,int) -> onMeasure
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    void measureVertical(int,int) -> measureVertical
    void forceUniformWidth(int,int) -> forceUniformWidth
    void measureHorizontal(int,int) -> measureHorizontal
    void forceUniformHeight(int,int) -> forceUniformHeight
    int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    int measureNullChild(int) -> measureNullChild
    void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    int getLocationOffset(android.view.View) -> getLocationOffset
    int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layoutVertical(int,int,int,int) -> layoutVertical
    void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void setGravity(int) -> setGravity
    int getGravity() -> getGravity
    void setHorizontalGravity(int) -> setHorizontalGravity
    void setVerticalGravity(int) -> setVerticalGravity
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v7.widget.LinearLayoutCompat$DividerMode -> android.support.v7.widget.LinearLayoutCompat$DividerMode:
android.support.v7.widget.LinearLayoutCompat$LayoutParams -> android.support.v7.widget.LinearLayoutCompat$LayoutParams:
    float weight -> weight
    int gravity -> gravity
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(int,int,float) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.support.v7.widget.LinearLayoutCompat$LayoutParams) -> <init>
android.support.v7.widget.LinearLayoutCompat$OrientationMode -> android.support.v7.widget.LinearLayoutCompat$OrientationMode:
android.support.v7.widget.LinearLayoutManager -> android.support.v7.widget.LinearLayoutManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int INVALID_OFFSET -> INVALID_OFFSET
    float MAX_SCROLL_FACTOR -> MAX_SCROLL_FACTOR
    int mOrientation -> mOrientation
    android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState -> mLayoutState
    android.support.v7.widget.OrientationHelper mOrientationHelper -> mOrientationHelper
    boolean mLastStackFromEnd -> mLastStackFromEnd
    boolean mReverseLayout -> mReverseLayout
    boolean mShouldReverseLayout -> mShouldReverseLayout
    boolean mStackFromEnd -> mStackFromEnd
    boolean mSmoothScrollbarEnabled -> mSmoothScrollbarEnabled
    int mPendingScrollPosition -> mPendingScrollPosition
    int mPendingScrollPositionOffset -> mPendingScrollPositionOffset
    boolean mRecycleChildrenOnDetach -> mRecycleChildrenOnDetach
    android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState -> mPendingSavedState
    android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo -> mAnchorInfo
    android.support.v7.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult -> mLayoutChunkResult
    int mInitialPrefetchItemCount -> mInitialPrefetchItemCount
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,int,boolean) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean getRecycleChildrenOnDetach() -> getRecycleChildrenOnDetach
    void setRecycleChildrenOnDetach(boolean) -> setRecycleChildrenOnDetach
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean canScrollHorizontally() -> canScrollHorizontally
    boolean canScrollVertically() -> canScrollVertically
    void setStackFromEnd(boolean) -> setStackFromEnd
    boolean getStackFromEnd() -> getStackFromEnd
    int getOrientation() -> getOrientation
    void setOrientation(int) -> setOrientation
    void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    boolean getReverseLayout() -> getReverseLayout
    void setReverseLayout(boolean) -> setReverseLayout
    android.view.View findViewByPosition(int) -> findViewByPosition
    int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State) -> getExtraLayoutSpace
    void smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int) -> smoothScrollToPosition
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
    boolean isLayoutRTL() -> isLayoutRTL
    void ensureLayoutState() -> ensureLayoutState
    android.support.v7.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    void scrollToPosition(int) -> scrollToPosition
    void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollOffset
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollExtent
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollRange
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollRange
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeScrollOffset
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeScrollExtent
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> computeScrollRange
    void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State) -> updateLayoutState
    boolean resolveIsInfinite() -> resolveIsInfinite
    void collectPrefetchPositionsForLayoutState(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    void collectInitialPrefetchPositions(int,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    void setInitialPrefetchItemCount(int) -> setInitialPrefetchItemCount
    int getInitialPrefetchItemCount() -> getInitialPrefetchItemCount
    void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollBy
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleViewsFromStart
    void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleViewsFromEnd
    void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean) -> fill
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    boolean shouldMeasureTwice() -> shouldMeasureTwice
    int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    android.view.View getChildClosestToStart() -> getChildClosestToStart
    android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    android.view.View findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    android.view.View findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    android.view.View findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findFirstReferenceChild
    android.view.View findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findLastReferenceChild
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    android.view.View findFirstPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findFirstPartiallyOrCompletelyInvisibleChild
    android.view.View findLastPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findLastPartiallyOrCompletelyInvisibleChild
    int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    void logChildren() -> logChildren
    void validateChildOrder() -> validateChildOrder
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
android.support.v7.widget.LinearLayoutManager$AnchorInfo -> android.support.v7.widget.LinearLayoutManager$AnchorInfo:
    int mPosition -> mPosition
    int mCoordinate -> mCoordinate
    boolean mLayoutFromEnd -> mLayoutFromEnd
    boolean mValid -> mValid
    android.support.v7.widget.LinearLayoutManager this$0 -> this$0
    void <init>(android.support.v7.widget.LinearLayoutManager) -> <init>
    void reset() -> reset
    void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    java.lang.String toString() -> toString
    boolean isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State) -> isViewValidAsAnchor
    void assignFromViewAndKeepVisibleRect(android.view.View) -> assignFromViewAndKeepVisibleRect
    void assignFromView(android.view.View) -> assignFromView
android.support.v7.widget.LinearLayoutManager$LayoutChunkResult -> android.support.v7.widget.LinearLayoutManager$LayoutChunkResult:
    int mConsumed -> mConsumed
    boolean mFinished -> mFinished
    boolean mIgnoreConsumed -> mIgnoreConsumed
    boolean mFocusable -> mFocusable
    void <init>() -> <init>
    void resetInternal() -> resetInternal
android.support.v7.widget.LinearLayoutManager$LayoutState -> android.support.v7.widget.LinearLayoutManager$LayoutState:
    java.lang.String TAG -> TAG
    int LAYOUT_START -> LAYOUT_START
    int LAYOUT_END -> LAYOUT_END
    int INVALID_LAYOUT -> INVALID_LAYOUT
    int ITEM_DIRECTION_HEAD -> ITEM_DIRECTION_HEAD
    int ITEM_DIRECTION_TAIL -> ITEM_DIRECTION_TAIL
    int SCROLLING_OFFSET_NaN -> SCROLLING_OFFSET_NaN
    boolean mRecycle -> mRecycle
    int mOffset -> mOffset
    int mAvailable -> mAvailable
    int mCurrentPosition -> mCurrentPosition
    int mItemDirection -> mItemDirection
    int mLayoutDirection -> mLayoutDirection
    int mScrollingOffset -> mScrollingOffset
    int mExtra -> mExtra
    boolean mIsPreLayout -> mIsPreLayout
    int mLastScrollDelta -> mLastScrollDelta
    java.util.List mScrapList -> mScrapList
    boolean mInfinite -> mInfinite
    void <init>() -> <init>
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> hasMore
    android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> next
    android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    void assignPositionFromScrapList() -> assignPositionFromScrapList
    void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
    void log() -> log
android.support.v7.widget.LinearLayoutManager$SavedState -> android.support.v7.widget.LinearLayoutManager$SavedState:
    int mAnchorPosition -> mAnchorPosition
    int mAnchorOffset -> mAnchorOffset
    boolean mAnchorLayoutFromEnd -> mAnchorLayoutFromEnd
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.support.v7.widget.LinearLayoutManager$SavedState) -> <init>
    boolean hasValidAnchor() -> hasValidAnchor
    void invalidateAnchor() -> invalidateAnchor
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v7.widget.LinearLayoutManager$SavedState$1 -> android.support.v7.widget.LinearLayoutManager$SavedState$1:
    void <init>() -> <init>
    android.support.v7.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.LinearSmoothScroller -> android.support.v7.widget.LinearSmoothScroller:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    float MILLISECONDS_PER_INCH -> MILLISECONDS_PER_INCH
    int TARGET_SEEK_SCROLL_DISTANCE_PX -> TARGET_SEEK_SCROLL_DISTANCE_PX
    int SNAP_TO_START -> SNAP_TO_START
    int SNAP_TO_END -> SNAP_TO_END
    int SNAP_TO_ANY -> SNAP_TO_ANY
    float TARGET_SEEK_EXTRA_SCROLL_RATIO -> TARGET_SEEK_EXTRA_SCROLL_RATIO
    android.view.animation.LinearInterpolator mLinearInterpolator -> mLinearInterpolator
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    android.graphics.PointF mTargetVector -> mTargetVector
    float MILLISECONDS_PER_PX -> MILLISECONDS_PER_PX
    int mInterimTargetDx -> mInterimTargetDx
    int mInterimTargetDy -> mInterimTargetDy
    void <init>(android.content.Context) -> <init>
    void onStart() -> onStart
    void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    void onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    void onStop() -> onStop
    float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    int getVerticalSnapPreference() -> getVerticalSnapPreference
    void updateActionForInterimTarget(android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
    int clampApplyScroll(int,int) -> clampApplyScroll
    int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
android.support.v7.widget.LinearSnapHelper -> android.support.v7.widget.LinearSnapHelper:
    float INVALID_DISTANCE -> INVALID_DISTANCE
    android.support.v7.widget.OrientationHelper mVerticalHelper -> mVerticalHelper
    android.support.v7.widget.OrientationHelper mHorizontalHelper -> mHorizontalHelper
    void <init>() -> <init>
    int[] calculateDistanceToFinalSnap(android.support.v7.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    int findTargetSnapPosition(android.support.v7.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    android.view.View findSnapView(android.support.v7.widget.RecyclerView$LayoutManager) -> findSnapView
    int distanceToCenter(android.support.v7.widget.RecyclerView$LayoutManager,android.view.View,android.support.v7.widget.OrientationHelper) -> distanceToCenter
    int estimateNextPositionDiffForFling(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.OrientationHelper,int,int) -> estimateNextPositionDiffForFling
    android.view.View findCenterView(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.OrientationHelper) -> findCenterView
    float computeDistancePerChild(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.OrientationHelper) -> computeDistancePerChild
    android.support.v7.widget.OrientationHelper getVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> getVerticalHelper
    android.support.v7.widget.OrientationHelper getHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
android.support.v7.widget.ListPopupWindow -> android.support.v7.widget.ListPopupWindow:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int EXPAND_LIST_TIMEOUT -> EXPAND_LIST_TIMEOUT
    java.lang.reflect.Method sClipToWindowEnabledMethod -> sClipToWindowEnabledMethod
    java.lang.reflect.Method sGetMaxAvailableHeightMethod -> sGetMaxAvailableHeightMethod
    java.lang.reflect.Method sSetEpicenterBoundsMethod -> sSetEpicenterBoundsMethod
    android.content.Context mContext -> mContext
    android.widget.ListAdapter mAdapter -> mAdapter
    android.support.v7.widget.DropDownListView mDropDownList -> mDropDownList
    int mDropDownHeight -> mDropDownHeight
    int mDropDownWidth -> mDropDownWidth
    int mDropDownHorizontalOffset -> mDropDownHorizontalOffset
    int mDropDownVerticalOffset -> mDropDownVerticalOffset
    int mDropDownWindowLayoutType -> mDropDownWindowLayoutType
    boolean mDropDownVerticalOffsetSet -> mDropDownVerticalOffsetSet
    boolean mIsAnimatedFromAnchor -> mIsAnimatedFromAnchor
    boolean mOverlapAnchor -> mOverlapAnchor
    boolean mOverlapAnchorSet -> mOverlapAnchorSet
    int mDropDownGravity -> mDropDownGravity
    boolean mDropDownAlwaysVisible -> mDropDownAlwaysVisible
    boolean mForceIgnoreOutsideTouch -> mForceIgnoreOutsideTouch
    int mListItemExpandMaximum -> mListItemExpandMaximum
    android.view.View mPromptView -> mPromptView
    int mPromptPosition -> mPromptPosition
    android.database.DataSetObserver mObserver -> mObserver
    android.view.View mDropDownAnchorView -> mDropDownAnchorView
    android.graphics.drawable.Drawable mDropDownListHighlight -> mDropDownListHighlight
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> mItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> mItemSelectedListener
    android.support.v7.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> mResizePopupRunnable
    android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> mTouchInterceptor
    android.support.v7.widget.ListPopupWindow$PopupScrollListener mScrollListener -> mScrollListener
    android.support.v7.widget.ListPopupWindow$ListSelectorHider mHideSelector -> mHideSelector
    java.lang.Runnable mShowDropDownRunnable -> mShowDropDownRunnable
    android.os.Handler mHandler -> mHandler
    android.graphics.Rect mTempRect -> mTempRect
    android.graphics.Rect mEpicenterBounds -> mEpicenterBounds
    boolean mModal -> mModal
    android.widget.PopupWindow mPopup -> mPopup
    int POSITION_PROMPT_ABOVE -> POSITION_PROMPT_ABOVE
    int POSITION_PROMPT_BELOW -> POSITION_PROMPT_BELOW
    int MATCH_PARENT -> MATCH_PARENT
    int WRAP_CONTENT -> WRAP_CONTENT
    int INPUT_METHOD_FROM_FOCUSABLE -> INPUT_METHOD_FROM_FOCUSABLE
    int INPUT_METHOD_NEEDED -> INPUT_METHOD_NEEDED
    int INPUT_METHOD_NOT_NEEDED -> INPUT_METHOD_NOT_NEEDED
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPromptPosition(int) -> setPromptPosition
    int getPromptPosition() -> getPromptPosition
    void setModal(boolean) -> setModal
    boolean isModal() -> isModal
    void setForceIgnoreOutsideTouch(boolean) -> setForceIgnoreOutsideTouch
    void setDropDownAlwaysVisible(boolean) -> setDropDownAlwaysVisible
    boolean isDropDownAlwaysVisible() -> isDropDownAlwaysVisible
    void setSoftInputMode(int) -> setSoftInputMode
    int getSoftInputMode() -> getSoftInputMode
    void setListSelector(android.graphics.drawable.Drawable) -> setListSelector
    android.graphics.drawable.Drawable getBackground() -> getBackground
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setAnimationStyle(int) -> setAnimationStyle
    int getAnimationStyle() -> getAnimationStyle
    android.view.View getAnchorView() -> getAnchorView
    void setAnchorView(android.view.View) -> setAnchorView
    int getHorizontalOffset() -> getHorizontalOffset
    void setHorizontalOffset(int) -> setHorizontalOffset
    int getVerticalOffset() -> getVerticalOffset
    void setVerticalOffset(int) -> setVerticalOffset
    void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    void setDropDownGravity(int) -> setDropDownGravity
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    void setContentWidth(int) -> setContentWidth
    int getHeight() -> getHeight
    void setHeight(int) -> setHeight
    void setWindowLayoutType(int) -> setWindowLayoutType
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setPromptView(android.view.View) -> setPromptView
    void postShow() -> postShow
    void show() -> show
    void dismiss() -> dismiss
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void removePromptView() -> removePromptView
    void setInputMethodMode(int) -> setInputMethodMode
    int getInputMethodMode() -> getInputMethodMode
    void setSelection(int) -> setSelection
    void clearListSelection() -> clearListSelection
    boolean isShowing() -> isShowing
    boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    boolean performItemClick(int) -> performItemClick
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    android.widget.ListView getListView() -> getListView
    android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    void setListItemExpandMax(int) -> setListItemExpandMax
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    android.view.View$OnTouchListener createDragToOpenListener(android.view.View) -> createDragToOpenListener
    int buildDropDown() -> buildDropDown
    void setOverlapAnchor(boolean) -> setOverlapAnchor
    boolean isConfirmKey(int) -> isConfirmKey
    void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    void <clinit>() -> <clinit>
android.support.v7.widget.ListPopupWindow$1 -> android.support.v7.widget.ListPopupWindow$1:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void <init>(android.support.v7.widget.ListPopupWindow,android.view.View) -> <init>
    android.support.v7.widget.ListPopupWindow getPopup() -> getPopup
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
android.support.v7.widget.ListPopupWindow$2 -> android.support.v7.widget.ListPopupWindow$2:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void run() -> run
android.support.v7.widget.ListPopupWindow$3 -> android.support.v7.widget.ListPopupWindow$3:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.ListPopupWindow$ListSelectorHider -> android.support.v7.widget.ListPopupWindow$ListSelectorHider:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void run() -> run
android.support.v7.widget.ListPopupWindow$PopupDataSetObserver -> android.support.v7.widget.ListPopupWindow$PopupDataSetObserver:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.widget.ListPopupWindow$PopupScrollListener -> android.support.v7.widget.ListPopupWindow$PopupScrollListener:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor -> android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.v7.widget.ListPopupWindow$ResizePopupRunnable -> android.support.v7.widget.ListPopupWindow$ResizePopupRunnable:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    void run() -> run
android.support.v7.widget.ListViewCompat -> android.support.v7.widget.ListViewCompat:
    int INVALID_POSITION -> INVALID_POSITION
    int NO_POSITION -> NO_POSITION
    int[] STATE_SET_NOTHING -> STATE_SET_NOTHING
    android.graphics.Rect mSelectorRect -> mSelectorRect
    int mSelectionLeftPadding -> mSelectionLeftPadding
    int mSelectionTopPadding -> mSelectionTopPadding
    int mSelectionRightPadding -> mSelectionRightPadding
    int mSelectionBottomPadding -> mSelectionBottomPadding
    int mMotionPosition -> mMotionPosition
    java.lang.reflect.Field mIsChildViewEnabled -> mIsChildViewEnabled
    android.support.v7.widget.ListViewCompat$GateKeeperDrawable mSelector -> mSelector
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    void drawableStateChanged() -> drawableStateChanged
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void updateSelectorStateCompat() -> updateSelectorStateCompat
    boolean shouldShowSelectorCompat() -> shouldShowSelectorCompat
    boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void <clinit>() -> <clinit>
android.support.v7.widget.ListViewCompat$GateKeeperDrawable -> android.support.v7.widget.ListViewCompat$GateKeeperDrawable:
    boolean mEnabled -> mEnabled
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void setEnabled(boolean) -> setEnabled
    boolean setState(int[]) -> setState
    void draw(android.graphics.Canvas) -> draw
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    boolean setVisible(boolean,boolean) -> setVisible
android.support.v7.widget.MenuItemHoverListener -> android.support.v7.widget.MenuItemHoverListener:
    void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
android.support.v7.widget.MenuPopupWindow -> android.support.v7.widget.MenuPopupWindow:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sSetTouchModalMethod -> sSetTouchModalMethod
    android.support.v7.widget.MenuItemHoverListener mHoverListener -> mHoverListener
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    void setEnterTransition(java.lang.Object) -> setEnterTransition
    void setExitTransition(java.lang.Object) -> setExitTransition
    void setHoverListener(android.support.v7.widget.MenuItemHoverListener) -> setHoverListener
    void setTouchModal(boolean) -> setTouchModal
    void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    void <clinit>() -> <clinit>
android.support.v7.widget.MenuPopupWindow$MenuDropDownListView -> android.support.v7.widget.MenuPopupWindow$MenuDropDownListView:
    int mAdvanceKey -> mAdvanceKey
    int mRetreatKey -> mRetreatKey
    android.support.v7.widget.MenuItemHoverListener mHoverListener -> mHoverListener
    android.view.MenuItem mHoveredMenuItem -> mHoveredMenuItem
    void <init>(android.content.Context,boolean) -> <init>
    void setHoverListener(android.support.v7.widget.MenuItemHoverListener) -> setHoverListener
    void clearSelection() -> clearSelection
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    boolean hasFocus() -> hasFocus
    boolean isFocused() -> isFocused
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isInTouchMode() -> isInTouchMode
    boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
android.support.v7.widget.OpReorderer -> android.support.v7.widget.OpReorderer:
    android.support.v7.widget.OpReorderer$Callback mCallback -> mCallback
    void <init>(android.support.v7.widget.OpReorderer$Callback) -> <init>
    void reorderOps(java.util.List) -> reorderOps
    void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    void swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    void swapMoveAdd(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    void swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
    int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
android.support.v7.widget.OpReorderer$Callback -> android.support.v7.widget.OpReorderer$Callback:
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
android.support.v7.widget.OrientationHelper -> android.support.v7.widget.OrientationHelper:
    int INVALID_SIZE -> INVALID_SIZE
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> mLayoutManager
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int mLastTotalSpace -> mLastTotalSpace
    android.graphics.Rect mTmpRect -> mTmpRect
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    void onLayoutComplete() -> onLayoutComplete
    int getTotalSpaceChange() -> getTotalSpaceChange
    int getDecoratedStart(android.view.View) -> getDecoratedStart
    int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    int getStartAfterPadding() -> getStartAfterPadding
    int getEndAfterPadding() -> getEndAfterPadding
    int getEnd() -> getEnd
    void offsetChildren(int) -> offsetChildren
    int getTotalSpace() -> getTotalSpace
    void offsetChild(android.view.View,int) -> offsetChild
    int getEndPadding() -> getEndPadding
    int getMode() -> getMode
    int getModeInOther() -> getModeInOther
    android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    android.support.v7.widget.OrientationHelper createHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    android.support.v7.widget.OrientationHelper createVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.OrientationHelper$1) -> <init>
android.support.v7.widget.OrientationHelper$1 -> android.support.v7.widget.OrientationHelper$1:
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    int getEndAfterPadding() -> getEndAfterPadding
    int getEnd() -> getEnd
    void offsetChildren(int) -> offsetChildren
    int getStartAfterPadding() -> getStartAfterPadding
    int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    int getDecoratedStart(android.view.View) -> getDecoratedStart
    int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    int getTotalSpace() -> getTotalSpace
    void offsetChild(android.view.View,int) -> offsetChild
    int getEndPadding() -> getEndPadding
    int getMode() -> getMode
    int getModeInOther() -> getModeInOther
android.support.v7.widget.OrientationHelper$2 -> android.support.v7.widget.OrientationHelper$2:
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    int getEndAfterPadding() -> getEndAfterPadding
    int getEnd() -> getEnd
    void offsetChildren(int) -> offsetChildren
    int getStartAfterPadding() -> getStartAfterPadding
    int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    int getDecoratedStart(android.view.View) -> getDecoratedStart
    int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    int getTotalSpace() -> getTotalSpace
    void offsetChild(android.view.View,int) -> offsetChild
    int getEndPadding() -> getEndPadding
    int getMode() -> getMode
    int getModeInOther() -> getModeInOther
android.support.v7.widget.PagerSnapHelper -> android.support.v7.widget.PagerSnapHelper:
    int MAX_SCROLL_ON_FLING_DURATION -> MAX_SCROLL_ON_FLING_DURATION
    android.support.v7.widget.OrientationHelper mVerticalHelper -> mVerticalHelper
    android.support.v7.widget.OrientationHelper mHorizontalHelper -> mHorizontalHelper
    void <init>() -> <init>
    int[] calculateDistanceToFinalSnap(android.support.v7.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    android.view.View findSnapView(android.support.v7.widget.RecyclerView$LayoutManager) -> findSnapView
    int findTargetSnapPosition(android.support.v7.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    android.support.v7.widget.LinearSmoothScroller createSnapScroller(android.support.v7.widget.RecyclerView$LayoutManager) -> createSnapScroller
    int distanceToCenter(android.support.v7.widget.RecyclerView$LayoutManager,android.view.View,android.support.v7.widget.OrientationHelper) -> distanceToCenter
    android.view.View findCenterView(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.OrientationHelper) -> findCenterView
    android.view.View findStartView(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.OrientationHelper) -> findStartView
    android.support.v7.widget.OrientationHelper getVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> getVerticalHelper
    android.support.v7.widget.OrientationHelper getHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
android.support.v7.widget.PagerSnapHelper$1 -> android.support.v7.widget.PagerSnapHelper$1:
    android.support.v7.widget.PagerSnapHelper this$0 -> this$0
    void <init>(android.support.v7.widget.PagerSnapHelper,android.content.Context) -> <init>
    void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    int calculateTimeForScrolling(int) -> calculateTimeForScrolling
android.support.v7.widget.PopupMenu -> android.support.v7.widget.PopupMenu:
    android.content.Context mContext -> mContext
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.view.View mAnchor -> mAnchor
    android.support.v7.view.menu.MenuPopupHelper mPopup -> mPopup
    android.support.v7.widget.PopupMenu$OnMenuItemClickListener mMenuItemClickListener -> mMenuItemClickListener
    android.support.v7.widget.PopupMenu$OnDismissListener mOnDismissListener -> mOnDismissListener
    android.view.View$OnTouchListener mDragListener -> mDragListener
    void <init>(android.content.Context,android.view.View) -> <init>
    void <init>(android.content.Context,android.view.View,int) -> <init>
    void <init>(android.content.Context,android.view.View,int,int,int) -> <init>
    void setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.view.View$OnTouchListener getDragToOpenListener() -> getDragToOpenListener
    android.view.Menu getMenu() -> getMenu
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void inflate(int) -> inflate
    void show() -> show
    void dismiss() -> dismiss
    void setOnMenuItemClickListener(android.support.v7.widget.PopupMenu$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void setOnDismissListener(android.support.v7.widget.PopupMenu$OnDismissListener) -> setOnDismissListener
android.support.v7.widget.PopupMenu$1 -> android.support.v7.widget.PopupMenu$1:
    android.support.v7.widget.PopupMenu this$0 -> this$0
    void <init>(android.support.v7.widget.PopupMenu) -> <init>
    boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.widget.PopupMenu$2 -> android.support.v7.widget.PopupMenu$2:
    android.support.v7.widget.PopupMenu this$0 -> this$0
    void <init>(android.support.v7.widget.PopupMenu) -> <init>
    void onDismiss() -> onDismiss
android.support.v7.widget.PopupMenu$3 -> android.support.v7.widget.PopupMenu$3:
    android.support.v7.widget.PopupMenu this$0 -> this$0
    void <init>(android.support.v7.widget.PopupMenu,android.view.View) -> <init>
    boolean onForwardingStarted() -> onForwardingStarted
    boolean onForwardingStopped() -> onForwardingStopped
    android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
android.support.v7.widget.PopupMenu$OnDismissListener -> android.support.v7.widget.PopupMenu$OnDismissListener:
    void onDismiss(android.support.v7.widget.PopupMenu) -> onDismiss
android.support.v7.widget.PopupMenu$OnMenuItemClickListener -> android.support.v7.widget.PopupMenu$OnMenuItemClickListener:
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.PositionMap -> android.support.v7.widget.PositionMap:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    void <init>() -> <init>
    void <init>(int) -> <init>
    android.support.v7.widget.PositionMap clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void insertKeyRange(int,int) -> insertKeyRange
    void removeKeyRange(java.util.ArrayList,int,int) -> removeKeyRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    int idealByteArraySize(int) -> idealByteArraySize
    int idealBooleanArraySize(int) -> idealBooleanArraySize
    int idealShortArraySize(int) -> idealShortArraySize
    int idealCharArraySize(int) -> idealCharArraySize
    int idealIntArraySize(int) -> idealIntArraySize
    int idealFloatArraySize(int) -> idealFloatArraySize
    int idealObjectArraySize(int) -> idealObjectArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
android.support.v7.widget.PositionMap$ContainerHelpers -> android.support.v7.widget.PositionMap$ContainerHelpers:
    boolean[] EMPTY_BOOLEANS -> EMPTY_BOOLEANS
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    void <init>() -> <init>
    int binarySearch(int[],int,int) -> binarySearch
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView -> android.support.v7.widget.RecyclerView:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean VERBOSE_TRACING -> VERBOSE_TRACING
    int[] NESTED_SCROLLING_ATTRS -> NESTED_SCROLLING_ATTRS
    int[] CLIP_TO_PADDING_ATTR -> CLIP_TO_PADDING_ATTR
    boolean FORCE_INVALIDATE_DISPLAY_LIST -> FORCE_INVALIDATE_DISPLAY_LIST
    boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC -> ALLOW_SIZE_IN_UNSPECIFIED_SPEC
    boolean POST_UPDATES_ON_ANIMATION -> POST_UPDATES_ON_ANIMATION
    boolean ALLOW_THREAD_GAP_WORK -> ALLOW_THREAD_GAP_WORK
    boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION -> FORCE_ABS_FOCUS_SEARCH_DIRECTION
    boolean IGNORE_DETACHED_FOCUSED_CHILD -> IGNORE_DETACHED_FOCUSED_CHILD
    boolean DISPATCH_TEMP_DETACH -> DISPATCH_TEMP_DETACH
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int NO_POSITION -> NO_POSITION
    long NO_ID -> NO_ID
    int INVALID_TYPE -> INVALID_TYPE
    int TOUCH_SLOP_DEFAULT -> TOUCH_SLOP_DEFAULT
    int TOUCH_SLOP_PAGING -> TOUCH_SLOP_PAGING
    int MAX_SCROLL_DURATION -> MAX_SCROLL_DURATION
    java.lang.String TRACE_SCROLL_TAG -> TRACE_SCROLL_TAG
    java.lang.String TRACE_ON_LAYOUT_TAG -> TRACE_ON_LAYOUT_TAG
    java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG -> TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
    java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG -> TRACE_HANDLE_ADAPTER_UPDATES_TAG
    java.lang.String TRACE_BIND_VIEW_TAG -> TRACE_BIND_VIEW_TAG
    java.lang.String TRACE_PREFETCH_TAG -> TRACE_PREFETCH_TAG
    java.lang.String TRACE_NESTED_PREFETCH_TAG -> TRACE_NESTED_PREFETCH_TAG
    java.lang.String TRACE_CREATE_VIEW_TAG -> TRACE_CREATE_VIEW_TAG
    java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE -> LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
    android.support.v7.widget.RecyclerView$RecyclerViewDataObserver mObserver -> mObserver
    android.support.v7.widget.RecyclerView$Recycler mRecycler -> mRecycler
    android.support.v7.widget.RecyclerView$SavedState mPendingSavedState -> mPendingSavedState
    android.support.v7.widget.AdapterHelper mAdapterHelper -> mAdapterHelper
    android.support.v7.widget.ChildHelper mChildHelper -> mChildHelper
    android.support.v7.widget.ViewInfoStore mViewInfoStore -> mViewInfoStore
    boolean mClipToPadding -> mClipToPadding
    java.lang.Runnable mUpdateChildViewsRunnable -> mUpdateChildViewsRunnable
    android.graphics.Rect mTempRect -> mTempRect
    android.graphics.Rect mTempRect2 -> mTempRect2
    android.graphics.RectF mTempRectF -> mTempRectF
    android.support.v7.widget.RecyclerView$Adapter mAdapter -> mAdapter
    android.support.v7.widget.RecyclerView$LayoutManager mLayout -> mLayout
    android.support.v7.widget.RecyclerView$RecyclerListener mRecyclerListener -> mRecyclerListener
    java.util.ArrayList mItemDecorations -> mItemDecorations
    java.util.ArrayList mOnItemTouchListeners -> mOnItemTouchListeners
    android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener -> mActiveOnItemTouchListener
    boolean mIsAttached -> mIsAttached
    boolean mHasFixedSize -> mHasFixedSize
    boolean mEnableFastScroller -> mEnableFastScroller
    boolean mFirstLayoutComplete -> mFirstLayoutComplete
    int mEatRequestLayout -> mEatRequestLayout
    boolean mLayoutRequestEaten -> mLayoutRequestEaten
    boolean mLayoutFrozen -> mLayoutFrozen
    boolean mIgnoreMotionEventTillDown -> mIgnoreMotionEventTillDown
    int mEatenAccessibilityChangeFlags -> mEatenAccessibilityChangeFlags
    boolean mAdapterUpdateDuringMeasure -> mAdapterUpdateDuringMeasure
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    java.util.List mOnChildAttachStateListeners -> mOnChildAttachStateListeners
    boolean mDataSetHasChangedAfterLayout -> mDataSetHasChangedAfterLayout
    int mLayoutOrScrollCounter -> mLayoutOrScrollCounter
    int mDispatchScrollCounter -> mDispatchScrollCounter
    android.widget.EdgeEffect mLeftGlow -> mLeftGlow
    android.widget.EdgeEffect mTopGlow -> mTopGlow
    android.widget.EdgeEffect mRightGlow -> mRightGlow
    android.widget.EdgeEffect mBottomGlow -> mBottomGlow
    android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator -> mItemAnimator
    int INVALID_POINTER -> INVALID_POINTER
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    long FOREVER_NS -> FOREVER_NS
    int mScrollState -> mScrollState
    int mScrollPointerId -> mScrollPointerId
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mInitialTouchX -> mInitialTouchX
    int mInitialTouchY -> mInitialTouchY
    int mLastTouchX -> mLastTouchX
    int mLastTouchY -> mLastTouchY
    int mTouchSlop -> mTouchSlop
    android.support.v7.widget.RecyclerView$OnFlingListener mOnFlingListener -> mOnFlingListener
    int mMinFlingVelocity -> mMinFlingVelocity
    int mMaxFlingVelocity -> mMaxFlingVelocity
    float mScaledHorizontalScrollFactor -> mScaledHorizontalScrollFactor
    float mScaledVerticalScrollFactor -> mScaledVerticalScrollFactor
    boolean mPreserveFocusAfterLayout -> mPreserveFocusAfterLayout
    android.support.v7.widget.RecyclerView$ViewFlinger mViewFlinger -> mViewFlinger
    android.support.v7.widget.GapWorker mGapWorker -> mGapWorker
    android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry -> mPrefetchRegistry
    android.support.v7.widget.RecyclerView$State mState -> mState
    android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener -> mScrollListener
    java.util.List mScrollListeners -> mScrollListeners
    boolean mItemsAddedOrRemoved -> mItemsAddedOrRemoved
    boolean mItemsChanged -> mItemsChanged
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> mItemAnimatorListener
    boolean mPostedAnimatorRunner -> mPostedAnimatorRunner
    android.support.v7.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> mAccessibilityDelegate
    android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> mChildDrawingOrderCallback
    int[] mMinMaxLayoutPositions -> mMinMaxLayoutPositions
    android.support.v4.view.NestedScrollingChildHelper mScrollingChildHelper -> mScrollingChildHelper
    int[] mScrollOffset -> mScrollOffset
    int[] mScrollConsumed -> mScrollConsumed
    int[] mNestedOffsets -> mNestedOffsets
    java.util.List mPendingAccessibilityImportanceChange -> mPendingAccessibilityImportanceChange
    java.lang.Runnable mItemAnimatorRunner -> mItemAnimatorRunner
    android.view.animation.Interpolator sQuinticInterpolator -> sQuinticInterpolator
    android.support.v7.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback -> mViewInfoProcessCallback
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    java.lang.String exceptionLabel() -> exceptionLabel
    android.support.v7.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    void setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    void initChildrenHelper() -> initChildrenHelper
    void initAdapterManager() -> initAdapterManager
    void setHasFixedSize(boolean) -> setHasFixedSize
    boolean hasFixedSize() -> hasFixedSize
    void setClipToPadding(boolean) -> setClipToPadding
    boolean getClipToPadding() -> getClipToPadding
    void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    void swapAdapter(android.support.v7.widget.RecyclerView$Adapter,boolean) -> swapAdapter
    void setAdapter(android.support.v7.widget.RecyclerView$Adapter) -> setAdapter
    void removeAndRecycleViews() -> removeAndRecycleViews
    void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    android.support.v7.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    void setRecyclerListener(android.support.v7.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    int getBaseline() -> getBaseline
    void addOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    void removeOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    void clearOnChildAttachStateChangeListeners() -> clearOnChildAttachStateChangeListeners
    void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager) -> setLayoutManager
    void setOnFlingListener(android.support.v7.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    android.support.v7.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder) -> addAnimatingView
    boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    void setItemViewCacheSize(int) -> setItemViewCacheSize
    int getScrollState() -> getScrollState
    void setScrollState(int) -> setScrollState
    void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    android.support.v7.widget.RecyclerView$ItemDecoration getItemDecorationAt(int) -> getItemDecorationAt
    void removeItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    void setChildDrawingOrderCallback(android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    void setOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    void addOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    void removeOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    void clearOnScrollListeners() -> clearOnScrollListeners
    void scrollToPosition(int) -> scrollToPosition
    void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    void smoothScrollToPosition(int) -> smoothScrollToPosition
    void scrollTo(int,int) -> scrollTo
    void scrollBy(int,int) -> scrollBy
    void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    boolean hasUpdatedView() -> hasUpdatedView
    boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    void eatRequestLayout() -> eatRequestLayout
    void resumeRequestLayout(boolean) -> resumeRequestLayout
    void setLayoutFrozen(boolean) -> setLayoutFrozen
    boolean isLayoutFrozen() -> isLayoutFrozen
    void smoothScrollBy(int,int) -> smoothScrollBy
    void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    boolean fling(int,int) -> fling
    void stopScroll() -> stopScroll
    void stopScrollersInternal() -> stopScrollersInternal
    int getMinFlingVelocity() -> getMinFlingVelocity
    int getMaxFlingVelocity() -> getMaxFlingVelocity
    void pullGlows(float,float,float,float) -> pullGlows
    void releaseGlows() -> releaseGlows
    void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    void absorbGlows(int,int) -> absorbGlows
    void ensureLeftGlow() -> ensureLeftGlow
    void ensureRightGlow() -> ensureRightGlow
    void ensureTopGlow() -> ensureTopGlow
    void ensureBottomGlow() -> ensureBottomGlow
    void invalidateGlows() -> invalidateGlows
    android.view.View focusSearch(android.view.View,int) -> focusSearch
    boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int) -> isPreferredNextFocusAbsolute
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isAttachedToWindow() -> isAttachedToWindow
    void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    void addOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    void removeOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    boolean dispatchOnItemTouchIntercept(android.view.MotionEvent) -> dispatchOnItemTouchIntercept
    boolean dispatchOnItemTouch(android.view.MotionEvent) -> dispatchOnItemTouch
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void resetTouch() -> resetTouch
    void cancelTouch() -> cancelTouch
    void onPointerUp(android.view.MotionEvent) -> onPointerUp
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    void onMeasure(int,int) -> onMeasure
    void defaultOnMeasure(int,int) -> defaultOnMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    boolean isComputingLayout() -> isComputingLayout
    boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v7.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    void postAnimationRunner() -> postAnimationRunner
    boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    void dispatchLayout() -> dispatchLayout
    void saveFocusInfo() -> saveFocusInfo
    void resetFocusInfo() -> resetFocusInfo
    android.view.View findNextViewToFocus() -> findNextViewToFocus
    void recoverFocusFromState() -> recoverFocusFromState
    int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    void fillRemainingScrollValues(android.support.v7.widget.RecyclerView$State) -> fillRemainingScrollValues
    void dispatchLayoutStep1() -> dispatchLayoutStep1
    void dispatchLayoutStep2() -> dispatchLayoutStep2
    void dispatchLayoutStep3() -> dispatchLayoutStep3
    void handleMissingPreInfoForChangeError(long,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    boolean didChildRangeChange(int,int) -> didChildRangeChange
    void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    void animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    void animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    void animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean isAnimating() -> isAnimating
    void saveOldPositions() -> saveOldPositions
    void clearOldPositions() -> clearOldPositions
    void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    void setDataSetChangedAfterLayout() -> setDataSetChangedAfterLayout
    void markKnownViewsInvalid() -> markKnownViewsInvalid
    void invalidateItemDecorations() -> invalidateItemDecorations
    boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    android.support.v7.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    int getChildPosition(android.view.View) -> getChildPosition
    int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    long getChildItemId(android.view.View) -> getChildItemId
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int) -> findViewHolderForPosition
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int) -> findViewHolderForLayoutPosition
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void offsetChildrenVertical(int) -> offsetChildrenVertical
    void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    void onScrolled(int,int) -> onScrolled
    void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    void onScrollStateChanged(int) -> onScrollStateChanged
    void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    void repositionShadowingViews() -> repositionShadowingViews
    android.support.v7.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    void clearNestedRecyclerViewIfNotNested(android.support.v7.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    long getNanoTime() -> getNanoTime
    void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    boolean setChildImportantForAccessibilityInternal(android.support.v7.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    boolean startNestedScroll(int,int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    void stopNestedScroll(int) -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    void access$000(android.support.v7.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    void access$100(android.support.v7.widget.RecyclerView,int) -> access$100
    int[] access$500(android.support.v7.widget.RecyclerView) -> access$500
    boolean access$700(android.support.v7.widget.RecyclerView) -> access$700
    boolean access$800() -> access$800
    void access$1200(android.support.v7.widget.RecyclerView,int,int) -> access$1200
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView$1 -> android.support.v7.widget.RecyclerView$1:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void run() -> run
android.support.v7.widget.RecyclerView$2 -> android.support.v7.widget.RecyclerView$2:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void run() -> run
android.support.v7.widget.RecyclerView$3 -> android.support.v7.widget.RecyclerView$3:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v7.widget.RecyclerView$4 -> android.support.v7.widget.RecyclerView$4:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    void processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    void processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    void unused(android.support.v7.widget.RecyclerView$ViewHolder) -> unused
android.support.v7.widget.RecyclerView$5 -> android.support.v7.widget.RecyclerView$5:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    int getChildCount() -> getChildCount
    void addView(android.view.View,int) -> addView
    int indexOfChild(android.view.View) -> indexOfChild
    void removeViewAt(int) -> removeViewAt
    android.view.View getChildAt(int) -> getChildAt
    void removeAllViews() -> removeAllViews
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    void detachViewFromParent(int) -> detachViewFromParent
    void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    void onLeftHiddenState(android.view.View) -> onLeftHiddenState
android.support.v7.widget.RecyclerView$6 -> android.support.v7.widget.RecyclerView$6:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    void dispatchUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
    void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    void offsetPositionsForMove(int,int) -> offsetPositionsForMove
android.support.v7.widget.RecyclerView$Adapter -> android.support.v7.widget.RecyclerView$Adapter:
    android.support.v7.widget.RecyclerView$AdapterDataObservable mObservable -> mObservable
    boolean mHasStableIds -> mHasStableIds
    void <init>() -> <init>
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    android.support.v7.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    void bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    int getItemViewType(int) -> getItemViewType
    void setHasStableIds(boolean) -> setHasStableIds
    long getItemId(int) -> getItemId
    int getItemCount() -> getItemCount
    boolean hasStableIds() -> hasStableIds
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewRecycled
    boolean onFailedToRecycleView(android.support.v7.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    void onViewAttachedToWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    boolean hasObservers() -> hasObservers
    void registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    void unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
    void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView) -> onAttachedToRecyclerView
    void onDetachedFromRecyclerView(android.support.v7.widget.RecyclerView) -> onDetachedFromRecyclerView
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyItemChanged(int) -> notifyItemChanged
    void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    void notifyItemInserted(int) -> notifyItemInserted
    void notifyItemMoved(int,int) -> notifyItemMoved
    void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    void notifyItemRemoved(int) -> notifyItemRemoved
    void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
android.support.v7.widget.RecyclerView$AdapterDataObservable -> android.support.v7.widget.RecyclerView$AdapterDataObservable:
    void <init>() -> <init>
    boolean hasObservers() -> hasObservers
    void notifyChanged() -> notifyChanged
    void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    void notifyItemMoved(int,int) -> notifyItemMoved
android.support.v7.widget.RecyclerView$AdapterDataObserver -> android.support.v7.widget.RecyclerView$AdapterDataObserver:
    void <init>() -> <init>
    void onChanged() -> onChanged
    void onItemRangeChanged(int,int) -> onItemRangeChanged
    void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    void onItemRangeInserted(int,int) -> onItemRangeInserted
    void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    void onItemRangeMoved(int,int,int) -> onItemRangeMoved
android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback -> android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback:
    int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
android.support.v7.widget.RecyclerView$ItemAnimator -> android.support.v7.widget.RecyclerView$ItemAnimator:
    int FLAG_CHANGED -> FLAG_CHANGED
    int FLAG_REMOVED -> FLAG_REMOVED
    int FLAG_INVALIDATED -> FLAG_INVALIDATED
    int FLAG_MOVED -> FLAG_MOVED
    int FLAG_APPEARED_IN_PRE_LAYOUT -> FLAG_APPEARED_IN_PRE_LAYOUT
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> mListener
    java.util.ArrayList mFinishedListeners -> mFinishedListeners
    long mAddDuration -> mAddDuration
    long mRemoveDuration -> mRemoveDuration
    long mMoveDuration -> mMoveDuration
    long mChangeDuration -> mChangeDuration
    void <init>() -> <init>
    long getMoveDuration() -> getMoveDuration
    void setMoveDuration(long) -> setMoveDuration
    long getAddDuration() -> getAddDuration
    void setAddDuration(long) -> setAddDuration
    long getRemoveDuration() -> getRemoveDuration
    void setRemoveDuration(long) -> setRemoveDuration
    long getChangeDuration() -> getChangeDuration
    void setChangeDuration(long) -> setChangeDuration
    void setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    boolean animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    boolean animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    boolean animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    int buildAdapterChangeFlagsForAnimations(android.support.v7.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    void runPendingAnimations() -> runPendingAnimations
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> endAnimation
    void endAnimations() -> endAnimations
    boolean isRunning() -> isRunning
    void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    void dispatchAnimationStarted(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchAnimationStarted
    void onAnimationStarted(android.support.v7.widget.RecyclerView$ViewHolder) -> onAnimationStarted
    boolean isRunning(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
android.support.v7.widget.RecyclerView$ItemAnimator$AdapterChanges -> android.support.v7.widget.RecyclerView$ItemAnimator$AdapterChanges:
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener:
    void onAnimationsFinished() -> onAnimationsFinished
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener:
    void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAnimationFinished
android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    int left -> left
    int top -> top
    int right -> right
    int bottom -> bottom
    int changeFlags -> changeFlags
    void <init>() -> <init>
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(android.support.v7.widget.RecyclerView$ViewHolder) -> setFrom
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(android.support.v7.widget.RecyclerView$ViewHolder,int) -> setFrom
android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener -> android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAnimationFinished
android.support.v7.widget.RecyclerView$ItemDecoration -> android.support.v7.widget.RecyclerView$ItemDecoration:
    void <init>() -> <init>
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDraw
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> onDraw
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDrawOver
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> onDrawOver
    void getItemOffsets(android.graphics.Rect,int,android.support.v7.widget.RecyclerView) -> getItemOffsets
    void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> getItemOffsets
android.support.v7.widget.RecyclerView$LayoutManager -> android.support.v7.widget.RecyclerView$LayoutManager:
    android.support.v7.widget.ChildHelper mChildHelper -> mChildHelper
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    android.support.v7.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback -> mHorizontalBoundCheckCallback
    android.support.v7.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback -> mVerticalBoundCheckCallback
    android.support.v7.widget.ViewBoundsCheck mHorizontalBoundCheck -> mHorizontalBoundCheck
    android.support.v7.widget.ViewBoundsCheck mVerticalBoundCheck -> mVerticalBoundCheck
    android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller -> mSmoothScroller
    boolean mRequestedSimpleAnimations -> mRequestedSimpleAnimations
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    boolean mAutoMeasure -> mAutoMeasure
    boolean mMeasurementCacheEnabled -> mMeasurementCacheEnabled
    boolean mItemPrefetchEnabled -> mItemPrefetchEnabled
    int mPrefetchMaxCountObserved -> mPrefetchMaxCountObserved
    boolean mPrefetchMaxObservedInInitialPrefetch -> mPrefetchMaxObservedInInitialPrefetch
    int mWidthMode -> mWidthMode
    int mHeightMode -> mHeightMode
    int mWidth -> mWidth
    int mHeight -> mHeight
    void <init>() -> <init>
    void setRecyclerView(android.support.v7.widget.RecyclerView) -> setRecyclerView
    void setMeasureSpecs(int,int) -> setMeasureSpecs
    void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    void requestLayout() -> requestLayout
    void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    int chooseSize(int,int,int) -> chooseSize
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    void setAutoMeasureEnabled(boolean) -> setAutoMeasureEnabled
    boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    void setItemPrefetchEnabled(boolean) -> setItemPrefetchEnabled
    boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    void collectInitialPrefetchPositions(int,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    void dispatchAttachedToWindow(android.support.v7.widget.RecyclerView) -> dispatchAttachedToWindow
    void dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    boolean isAttachedToWindow() -> isAttachedToWindow
    void postOnAnimation(java.lang.Runnable) -> postOnAnimation
    boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    void onAttachedToWindow(android.support.v7.widget.RecyclerView) -> onAttachedToWindow
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView) -> onDetachedFromWindow
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    boolean getClipToPadding() -> getClipToPadding
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    boolean canScrollHorizontally() -> canScrollHorizontally
    boolean canScrollVertically() -> canScrollVertically
    void scrollToPosition(int) -> scrollToPosition
    void smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int) -> smoothScrollToPosition
    void startSmoothScroll(android.support.v7.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    boolean isSmoothScrolling() -> isSmoothScrolling
    int getLayoutDirection() -> getLayoutDirection
    void endAnimation(android.view.View) -> endAnimation
    void addDisappearingView(android.view.View) -> addDisappearingView
    void addDisappearingView(android.view.View,int) -> addDisappearingView
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addViewInt(android.view.View,int,boolean) -> addViewInt
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    int getBaseline() -> getBaseline
    int getPosition(android.view.View) -> getPosition
    int getItemViewType(android.view.View) -> getItemViewType
    android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    android.view.View findViewByPosition(int) -> findViewByPosition
    void detachView(android.view.View) -> detachView
    void detachViewAt(int) -> detachViewAt
    void detachViewInternal(int,android.view.View) -> detachViewInternal
    void attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams) -> attachView
    void attachView(android.view.View,int) -> attachView
    void attachView(android.view.View) -> attachView
    void removeDetachedView(android.view.View) -> removeDetachedView
    void moveView(int,int) -> moveView
    void detachAndScrapView(android.view.View,android.support.v7.widget.RecyclerView$Recycler) -> detachAndScrapView
    void detachAndScrapViewAt(int,android.support.v7.widget.RecyclerView$Recycler) -> detachAndScrapViewAt
    void removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleView
    void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    int getChildCount() -> getChildCount
    android.view.View getChildAt(int) -> getChildAt
    int getWidthMode() -> getWidthMode
    int getHeightMode() -> getHeightMode
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getPaddingLeft() -> getPaddingLeft
    int getPaddingTop() -> getPaddingTop
    int getPaddingRight() -> getPaddingRight
    int getPaddingBottom() -> getPaddingBottom
    int getPaddingStart() -> getPaddingStart
    int getPaddingEnd() -> getPaddingEnd
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    android.view.View getFocusedChild() -> getFocusedChild
    int getItemCount() -> getItemCount
    void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    void offsetChildrenVertical(int) -> offsetChildrenVertical
    void ignoreView(android.view.View) -> ignoreView
    void stopIgnoringView(android.view.View) -> stopIgnoringView
    void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    void measureChild(android.view.View,int,int) -> measureChild
    boolean shouldReMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    boolean shouldMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    boolean isMeasurementCacheEnabled() -> isMeasurementCacheEnabled
    void setMeasurementCacheEnabled(boolean) -> setMeasurementCacheEnabled
    boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    int getChildMeasureSpec(int,int,int,boolean) -> getChildMeasureSpec
    int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    void layoutDecorated(android.view.View,int,int,int,int) -> layoutDecorated
    void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    int getDecoratedTop(android.view.View) -> getDecoratedTop
    int getDecoratedRight(android.view.View) -> getDecoratedRight
    int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    int[] getChildRectangleOnScreenScrollAmount(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> getChildRectangleOnScreenScrollAmount
    boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    boolean isFocusedChildVisibleAfterScrolling(android.support.v7.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter) -> onAdapterChanged
    boolean onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> onItemsChanged
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> onItemsAdded
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> onItemsRemoved
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int) -> onItemsUpdated
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> onItemsMoved
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollRange
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollExtent
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollOffset
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollRange
    void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> onMeasure
    void setMeasuredDimension(int,int) -> setMeasuredDimension
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void stopSmoothScroller() -> stopSmoothScroller
    void onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    void onScrollStateChanged(int) -> onScrollStateChanged
    void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    int getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getRowCountForAccessibility
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getColumnCountForAccessibility
    boolean isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> isLayoutHierarchical
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    boolean performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    boolean performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    android.support.v7.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    void setExactMeasureSpecsFrom(android.support.v7.widget.RecyclerView) -> setExactMeasureSpecsFrom
    boolean shouldMeasureTwice() -> shouldMeasureTwice
    boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    void access$1400(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.RecyclerView$SmoothScroller) -> access$1400
android.support.v7.widget.RecyclerView$LayoutManager$1 -> android.support.v7.widget.RecyclerView$LayoutManager$1:
    android.support.v7.widget.RecyclerView$LayoutManager this$0 -> this$0
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    int getChildCount() -> getChildCount
    android.view.View getParent() -> getParent
    android.view.View getChildAt(int) -> getChildAt
    int getParentStart() -> getParentStart
    int getParentEnd() -> getParentEnd
    int getChildStart(android.view.View) -> getChildStart
    int getChildEnd(android.view.View) -> getChildEnd
android.support.v7.widget.RecyclerView$LayoutManager$2 -> android.support.v7.widget.RecyclerView$LayoutManager$2:
    android.support.v7.widget.RecyclerView$LayoutManager this$0 -> this$0
    void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    int getChildCount() -> getChildCount
    android.view.View getParent() -> getParent
    android.view.View getChildAt(int) -> getChildAt
    int getParentStart() -> getParentStart
    int getParentEnd() -> getParentEnd
    int getChildStart(android.view.View) -> getChildStart
    int getChildEnd(android.view.View) -> getChildEnd
android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry -> android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry:
    void addPosition(int,int) -> addPosition
android.support.v7.widget.RecyclerView$LayoutManager$Properties -> android.support.v7.widget.RecyclerView$LayoutManager$Properties:
    int orientation -> orientation
    int spanCount -> spanCount
    boolean reverseLayout -> reverseLayout
    boolean stackFromEnd -> stackFromEnd
    void <init>() -> <init>
android.support.v7.widget.RecyclerView$LayoutParams -> android.support.v7.widget.RecyclerView$LayoutParams:
    android.support.v7.widget.RecyclerView$ViewHolder mViewHolder -> mViewHolder
    android.graphics.Rect mDecorInsets -> mDecorInsets
    boolean mInsetsDirty -> mInsetsDirty
    boolean mPendingInvalidate -> mPendingInvalidate
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.support.v7.widget.RecyclerView$LayoutParams) -> <init>
    boolean viewNeedsUpdate() -> viewNeedsUpdate
    boolean isViewInvalid() -> isViewInvalid
    boolean isItemRemoved() -> isItemRemoved
    boolean isItemChanged() -> isItemChanged
    int getViewPosition() -> getViewPosition
    int getViewLayoutPosition() -> getViewLayoutPosition
    int getViewAdapterPosition() -> getViewAdapterPosition
android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener -> android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener:
    void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
android.support.v7.widget.RecyclerView$OnFlingListener -> android.support.v7.widget.RecyclerView$OnFlingListener:
    void <init>() -> <init>
    boolean onFling(int,int) -> onFling
android.support.v7.widget.RecyclerView$OnItemTouchListener -> android.support.v7.widget.RecyclerView$OnItemTouchListener:
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
android.support.v7.widget.RecyclerView$OnScrollListener -> android.support.v7.widget.RecyclerView$OnScrollListener:
    void <init>() -> <init>
    void onScrollStateChanged(android.support.v7.widget.RecyclerView,int) -> onScrollStateChanged
    void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> onScrolled
android.support.v7.widget.RecyclerView$RecycledViewPool -> android.support.v7.widget.RecyclerView$RecycledViewPool:
    int DEFAULT_MAX_SCRAP -> DEFAULT_MAX_SCRAP
    android.util.SparseArray mScrap -> mScrap
    int mAttachCount -> mAttachCount
    void <init>() -> <init>
    void clear() -> clear
    void setMaxRecycledViews(int,int) -> setMaxRecycledViews
    int getRecycledViewCount(int) -> getRecycledViewCount
    android.support.v7.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    int size() -> size
    void putRecycledView(android.support.v7.widget.RecyclerView$ViewHolder) -> putRecycledView
    long runningAverage(long,long) -> runningAverage
    void factorInCreateTime(int,long) -> factorInCreateTime
    void factorInBindTime(int,long) -> factorInBindTime
    boolean willCreateInTime(int,long,long) -> willCreateInTime
    boolean willBindInTime(int,long,long) -> willBindInTime
    void attach(android.support.v7.widget.RecyclerView$Adapter) -> attach
    void detach() -> detach
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData -> android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData:
    java.util.ArrayList mScrapHeap -> mScrapHeap
    int mMaxScrap -> mMaxScrap
    long mCreateRunningAverageNs -> mCreateRunningAverageNs
    long mBindRunningAverageNs -> mBindRunningAverageNs
    void <init>() -> <init>
android.support.v7.widget.RecyclerView$Recycler -> android.support.v7.widget.RecyclerView$Recycler:
    java.util.ArrayList mAttachedScrap -> mAttachedScrap
    java.util.ArrayList mChangedScrap -> mChangedScrap
    java.util.ArrayList mCachedViews -> mCachedViews
    java.util.List mUnmodifiableAttachedScrap -> mUnmodifiableAttachedScrap
    int mRequestedCacheMax -> mRequestedCacheMax
    int mViewCacheMax -> mViewCacheMax
    android.support.v7.widget.RecyclerView$RecycledViewPool mRecyclerPool -> mRecyclerPool
    android.support.v7.widget.RecyclerView$ViewCacheExtension mViewCacheExtension -> mViewCacheExtension
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void clear() -> clear
    void setViewCacheSize(int) -> setViewCacheSize
    void updateViewCacheSize() -> updateViewCacheSize
    java.util.List getScrapList() -> getScrapList
    boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    void bindViewToPosition(android.view.View,int) -> bindViewToPosition
    int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    android.view.View getViewForPosition(int) -> getViewForPosition
    android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    void invalidateDisplayListInt(android.support.v7.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    void recycleView(android.view.View) -> recycleView
    void recycleViewInternal(android.view.View) -> recycleViewInternal
    void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    void recycleCachedViewAt(int) -> recycleCachedViewAt
    void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    void scrapView(android.view.View) -> scrapView
    void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder) -> unscrapView
    int getScrapCount() -> getScrapCount
    android.view.View getScrapViewAt(int) -> getScrapViewAt
    void clearScrap() -> clearScrap
    android.support.v7.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    android.support.v7.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    void dispatchViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    void viewRangeUpdate(int,int) -> viewRangeUpdate
    void markKnownViewsInvalid() -> markKnownViewsInvalid
    void clearOldPositions() -> clearOldPositions
    void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
android.support.v7.widget.RecyclerView$RecyclerListener -> android.support.v7.widget.RecyclerView$RecyclerListener:
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewRecycled
android.support.v7.widget.RecyclerView$RecyclerViewDataObserver -> android.support.v7.widget.RecyclerView$RecyclerViewDataObserver:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void onChanged() -> onChanged
    void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    void onItemRangeInserted(int,int) -> onItemRangeInserted
    void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    void triggerUpdateProcessor() -> triggerUpdateProcessor
android.support.v7.widget.RecyclerView$SavedState -> android.support.v7.widget.RecyclerView$SavedState:
    android.os.Parcelable mLayoutState -> mLayoutState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void copyFrom(android.support.v7.widget.RecyclerView$SavedState) -> copyFrom
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerView$SavedState$1 -> android.support.v7.widget.RecyclerView$SavedState$1:
    void <init>() -> <init>
    android.support.v7.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v7.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.RecyclerView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.RecyclerView$SimpleOnItemTouchListener -> android.support.v7.widget.RecyclerView$SimpleOnItemTouchListener:
    void <init>() -> <init>
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
android.support.v7.widget.RecyclerView$SmoothScroller -> android.support.v7.widget.RecyclerView$SmoothScroller:
    int mTargetPosition -> mTargetPosition
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> mLayoutManager
    boolean mPendingInitialRun -> mPendingInitialRun
    boolean mRunning -> mRunning
    android.view.View mTargetView -> mTargetView
    android.support.v7.widget.RecyclerView$SmoothScroller$Action mRecyclingAction -> mRecyclingAction
    void <init>() -> <init>
    void start(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$LayoutManager) -> start
    void setTargetPosition(int) -> setTargetPosition
    android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    void stop() -> stop
    boolean isPendingInitialRun() -> isPendingInitialRun
    boolean isRunning() -> isRunning
    int getTargetPosition() -> getTargetPosition
    void onAnimation(int,int) -> onAnimation
    int getChildPosition(android.view.View) -> getChildPosition
    int getChildCount() -> getChildCount
    android.view.View findViewByPosition(int) -> findViewByPosition
    void instantScrollToPosition(int) -> instantScrollToPosition
    void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    void normalize(android.graphics.PointF) -> normalize
    void onStart() -> onStart
    void onStop() -> onStop
    void onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    void access$600(android.support.v7.widget.RecyclerView$SmoothScroller,int,int) -> access$600
android.support.v7.widget.RecyclerView$SmoothScroller$Action -> android.support.v7.widget.RecyclerView$SmoothScroller$Action:
    int UNDEFINED_DURATION -> UNDEFINED_DURATION
    int mDx -> mDx
    int mDy -> mDy
    int mDuration -> mDuration
    int mJumpToPosition -> mJumpToPosition
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mChanged -> mChanged
    int mConsecutiveUpdates -> mConsecutiveUpdates
    void <init>(int,int) -> <init>
    void <init>(int,int,int) -> <init>
    void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    void jumpTo(int) -> jumpTo
    boolean hasJumpTarget() -> hasJumpTarget
    void runIfNecessary(android.support.v7.widget.RecyclerView) -> runIfNecessary
    void validate() -> validate
    int getDx() -> getDx
    void setDx(int) -> setDx
    int getDy() -> getDy
    void setDy(int) -> setDy
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    void update(int,int,int,android.view.animation.Interpolator) -> update
android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider -> android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider:
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
android.support.v7.widget.RecyclerView$State -> android.support.v7.widget.RecyclerView$State:
    int STEP_START -> STEP_START
    int STEP_LAYOUT -> STEP_LAYOUT
    int STEP_ANIMATIONS -> STEP_ANIMATIONS
    int mTargetPosition -> mTargetPosition
    android.util.SparseArray mData -> mData
    int mPreviousLayoutItemCount -> mPreviousLayoutItemCount
    int mDeletedInvisibleItemCountSincePreviousLayout -> mDeletedInvisibleItemCountSincePreviousLayout
    int mLayoutStep -> mLayoutStep
    int mItemCount -> mItemCount
    boolean mStructureChanged -> mStructureChanged
    boolean mInPreLayout -> mInPreLayout
    boolean mTrackOldChangeHolders -> mTrackOldChangeHolders
    boolean mIsMeasuring -> mIsMeasuring
    boolean mRunSimpleAnimations -> mRunSimpleAnimations
    boolean mRunPredictiveAnimations -> mRunPredictiveAnimations
    int mFocusedItemPosition -> mFocusedItemPosition
    long mFocusedItemId -> mFocusedItemId
    int mFocusedSubChildId -> mFocusedSubChildId
    int mRemainingScrollHorizontal -> mRemainingScrollHorizontal
    int mRemainingScrollVertical -> mRemainingScrollVertical
    void <init>() -> <init>
    void assertLayoutStep(int) -> assertLayoutStep
    android.support.v7.widget.RecyclerView$State reset() -> reset
    void prepareForNestedPrefetch(android.support.v7.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    boolean isMeasuring() -> isMeasuring
    boolean isPreLayout() -> isPreLayout
    boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
    boolean willRunSimpleAnimations() -> willRunSimpleAnimations
    void remove(int) -> remove
    java.lang.Object get(int) -> get
    void put(int,java.lang.Object) -> put
    int getTargetScrollPosition() -> getTargetScrollPosition
    boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    boolean didStructureChange() -> didStructureChange
    int getItemCount() -> getItemCount
    int getRemainingScrollHorizontal() -> getRemainingScrollHorizontal
    int getRemainingScrollVertical() -> getRemainingScrollVertical
    java.lang.String toString() -> toString
    int access$1302(android.support.v7.widget.RecyclerView$State,int) -> access$1302
android.support.v7.widget.RecyclerView$State$LayoutState -> android.support.v7.widget.RecyclerView$State$LayoutState:
android.support.v7.widget.RecyclerView$ViewCacheExtension -> android.support.v7.widget.RecyclerView$ViewCacheExtension:
    void <init>() -> <init>
    android.view.View getViewForPositionAndType(android.support.v7.widget.RecyclerView$Recycler,int,int) -> getViewForPositionAndType
android.support.v7.widget.RecyclerView$ViewFlinger -> android.support.v7.widget.RecyclerView$ViewFlinger:
    int mLastFlingX -> mLastFlingX
    int mLastFlingY -> mLastFlingY
    android.widget.OverScroller mScroller -> mScroller
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mEatRunOnAnimationRequest -> mEatRunOnAnimationRequest
    boolean mReSchedulePostAnimationCallback -> mReSchedulePostAnimationCallback
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    void run() -> run
    void disableRunOnAnimationRequests() -> disableRunOnAnimationRequests
    void enableRunOnAnimationRequests() -> enableRunOnAnimationRequests
    void postOnAnimation() -> postOnAnimation
    void fling(int,int) -> fling
    void smoothScrollBy(int,int) -> smoothScrollBy
    void smoothScrollBy(int,int,int,int) -> smoothScrollBy
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    void smoothScrollBy(int,int,int) -> smoothScrollBy
    void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    void stop() -> stop
    android.widget.OverScroller access$400(android.support.v7.widget.RecyclerView$ViewFlinger) -> access$400
android.support.v7.widget.RecyclerView$ViewHolder -> android.support.v7.widget.RecyclerView$ViewHolder:
    android.view.View itemView -> itemView
    java.lang.ref.WeakReference mNestedRecyclerView -> mNestedRecyclerView
    int mPosition -> mPosition
    int mOldPosition -> mOldPosition
    long mItemId -> mItemId
    int mItemViewType -> mItemViewType
    int mPreLayoutPosition -> mPreLayoutPosition
    android.support.v7.widget.RecyclerView$ViewHolder mShadowedHolder -> mShadowedHolder
    android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder -> mShadowingHolder
    int FLAG_BOUND -> FLAG_BOUND
    int FLAG_UPDATE -> FLAG_UPDATE
    int FLAG_INVALID -> FLAG_INVALID
    int FLAG_REMOVED -> FLAG_REMOVED
    int FLAG_NOT_RECYCLABLE -> FLAG_NOT_RECYCLABLE
    int FLAG_RETURNED_FROM_SCRAP -> FLAG_RETURNED_FROM_SCRAP
    int FLAG_IGNORE -> FLAG_IGNORE
    int FLAG_TMP_DETACHED -> FLAG_TMP_DETACHED
    int FLAG_ADAPTER_POSITION_UNKNOWN -> FLAG_ADAPTER_POSITION_UNKNOWN
    int FLAG_ADAPTER_FULLUPDATE -> FLAG_ADAPTER_FULLUPDATE
    int FLAG_MOVED -> FLAG_MOVED
    int FLAG_APPEARED_IN_PRE_LAYOUT -> FLAG_APPEARED_IN_PRE_LAYOUT
    int PENDING_ACCESSIBILITY_STATE_NOT_SET -> PENDING_ACCESSIBILITY_STATE_NOT_SET
    int FLAG_BOUNCED_FROM_HIDDEN_LIST -> FLAG_BOUNCED_FROM_HIDDEN_LIST
    int FLAG_SET_A11Y_ITEM_DELEGATE -> FLAG_SET_A11Y_ITEM_DELEGATE
    int mFlags -> mFlags
    java.util.List FULLUPDATE_PAYLOADS -> FULLUPDATE_PAYLOADS
    java.util.List mPayloads -> mPayloads
    java.util.List mUnmodifiedPayloads -> mUnmodifiedPayloads
    int mIsRecyclableCount -> mIsRecyclableCount
    android.support.v7.widget.RecyclerView$Recycler mScrapContainer -> mScrapContainer
    boolean mInChangeScrap -> mInChangeScrap
    int mWasImportantForAccessibilityBeforeHidden -> mWasImportantForAccessibilityBeforeHidden
    int mPendingAccessibilityState -> mPendingAccessibilityState
    android.support.v7.widget.RecyclerView mOwnerRecyclerView -> mOwnerRecyclerView
    void <init>(android.view.View) -> <init>
    void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    void offsetPosition(int,boolean) -> offsetPosition
    void clearOldPosition() -> clearOldPosition
    void saveOldPosition() -> saveOldPosition
    boolean shouldIgnore() -> shouldIgnore
    int getPosition() -> getPosition
    int getLayoutPosition() -> getLayoutPosition
    int getAdapterPosition() -> getAdapterPosition
    int getOldPosition() -> getOldPosition
    long getItemId() -> getItemId
    int getItemViewType() -> getItemViewType
    boolean isScrap() -> isScrap
    void unScrap() -> unScrap
    boolean wasReturnedFromScrap() -> wasReturnedFromScrap
    void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    void clearTmpDetachFlag() -> clearTmpDetachFlag
    void stopIgnoring() -> stopIgnoring
    void setScrapContainer(android.support.v7.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    boolean isInvalid() -> isInvalid
    boolean needsUpdate() -> needsUpdate
    boolean isBound() -> isBound
    boolean isRemoved() -> isRemoved
    boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    boolean isTmpDetached() -> isTmpDetached
    boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    void setFlags(int,int) -> setFlags
    void addFlags(int) -> addFlags
    void addChangePayload(java.lang.Object) -> addChangePayload
    void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    void clearPayload() -> clearPayload
    java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    void resetInternal() -> resetInternal
    void onEnteredHiddenState(android.support.v7.widget.RecyclerView) -> onEnteredHiddenState
    void onLeftHiddenState(android.support.v7.widget.RecyclerView) -> onLeftHiddenState
    java.lang.String toString() -> toString
    void setIsRecyclable(boolean) -> setIsRecyclable
    boolean isRecyclable() -> isRecyclable
    boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    boolean isUpdated() -> isUpdated
    void access$200(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView) -> access$200
    void access$300(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView) -> access$300
    boolean access$900(android.support.v7.widget.RecyclerView$ViewHolder) -> access$900
    android.support.v7.widget.RecyclerView$Recycler access$1002(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$Recycler) -> access$1002
    boolean access$1102(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> access$1102
    boolean access$1100(android.support.v7.widget.RecyclerView$ViewHolder) -> access$1100
    boolean access$1500(android.support.v7.widget.RecyclerView$ViewHolder) -> access$1500
    int access$1600(android.support.v7.widget.RecyclerView$ViewHolder) -> access$1600
    void <clinit>() -> <clinit>
android.support.v7.widget.RecyclerViewAccessibilityDelegate -> android.support.v7.widget.RecyclerViewAccessibilityDelegate:
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    android.support.v4.view.AccessibilityDelegateCompat mItemDelegate -> mItemDelegate
    void <init>(android.support.v7.widget.RecyclerView) -> <init>
    boolean shouldIgnore() -> shouldIgnore
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    android.support.v4.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
android.support.v7.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> android.support.v7.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    android.support.v7.widget.RecyclerViewAccessibilityDelegate mRecyclerViewDelegate -> mRecyclerViewDelegate
    void <init>(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v7.widget.ResourcesWrapper -> android.support.v7.widget.ResourcesWrapper:
    android.content.res.Resources mResources -> mResources
    void <init>(android.content.res.Resources) -> <init>
    java.lang.CharSequence getText(int) -> getText
    java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    java.lang.String getQuantityString(int,int) -> getQuantityString
    java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    java.lang.CharSequence[] getTextArray(int) -> getTextArray
    java.lang.String[] getStringArray(int) -> getStringArray
    int[] getIntArray(int) -> getIntArray
    android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    float getDimension(int) -> getDimension
    int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    int getDimensionPixelSize(int) -> getDimensionPixelSize
    float getFraction(int,int,int) -> getFraction
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    android.graphics.Movie getMovie(int) -> getMovie
    int getColor(int) -> getColor
    android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    boolean getBoolean(int) -> getBoolean
    int getInteger(int) -> getInteger
    android.content.res.XmlResourceParser getLayout(int) -> getLayout
    android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    android.content.res.XmlResourceParser getXml(int) -> getXml
    java.io.InputStream openRawResource(int) -> openRawResource
    java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    void getValue(int,android.util.TypedValue,boolean) -> getValue
    void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
    android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    android.content.res.Configuration getConfiguration() -> getConfiguration
    int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    java.lang.String getResourceName(int) -> getResourceName
    java.lang.String getResourcePackageName(int) -> getResourcePackageName
    java.lang.String getResourceTypeName(int) -> getResourceTypeName
    java.lang.String getResourceEntryName(int) -> getResourceEntryName
    void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
android.support.v7.widget.RoundRectDrawable -> android.support.v7.widget.RoundRectDrawable:
    float mRadius -> mRadius
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mBoundsF -> mBoundsF
    android.graphics.Rect mBoundsI -> mBoundsI
    float mPadding -> mPadding
    boolean mInsetForPadding -> mInsetForPadding
    boolean mInsetForRadius -> mInsetForRadius
    android.content.res.ColorStateList mBackground -> mBackground
    android.graphics.PorterDuffColorFilter mTintFilter -> mTintFilter
    android.content.res.ColorStateList mTint -> mTint
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    void <init>(android.content.res.ColorStateList,float) -> <init>
    void setBackground(android.content.res.ColorStateList) -> setBackground
    void setPadding(float,boolean,boolean) -> setPadding
    float getPadding() -> getPadding
    void draw(android.graphics.Canvas) -> draw
    void updateBounds(android.graphics.Rect) -> updateBounds
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void getOutline(android.graphics.Outline) -> getOutline
    void setRadius(float) -> setRadius
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    float getRadius() -> getRadius
    void setColor(android.content.res.ColorStateList) -> setColor
    android.content.res.ColorStateList getColor() -> getColor
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean onStateChange(int[]) -> onStateChange
    boolean isStateful() -> isStateful
    android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintFilter
android.support.v7.widget.RoundRectDrawableWithShadow -> android.support.v7.widget.RoundRectDrawableWithShadow:
    double COS_45 -> COS_45
    float SHADOW_MULTIPLIER -> SHADOW_MULTIPLIER
    int mInsetShadow -> mInsetShadow
    android.support.v7.widget.RoundRectDrawableWithShadow$RoundRectHelper sRoundRectHelper -> sRoundRectHelper
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mCornerShadowPaint -> mCornerShadowPaint
    android.graphics.Paint mEdgeShadowPaint -> mEdgeShadowPaint
    android.graphics.RectF mCardBounds -> mCardBounds
    float mCornerRadius -> mCornerRadius
    android.graphics.Path mCornerShadowPath -> mCornerShadowPath
    float mRawMaxShadowSize -> mRawMaxShadowSize
    float mShadowSize -> mShadowSize
    float mRawShadowSize -> mRawShadowSize
    android.content.res.ColorStateList mBackground -> mBackground
    boolean mDirty -> mDirty
    int mShadowStartColor -> mShadowStartColor
    int mShadowEndColor -> mShadowEndColor
    boolean mAddPaddingForCorners -> mAddPaddingForCorners
    boolean mPrintedShadowClipWarning -> mPrintedShadowClipWarning
    void <init>(android.content.res.Resources,android.content.res.ColorStateList,float,float,float) -> <init>
    void setBackground(android.content.res.ColorStateList) -> setBackground
    int toEven(float) -> toEven
    void setAddPaddingForCorners(boolean) -> setAddPaddingForCorners
    void setAlpha(int) -> setAlpha
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setShadowSize(float,float) -> setShadowSize
    boolean getPadding(android.graphics.Rect) -> getPadding
    float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
    float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    boolean onStateChange(int[]) -> onStateChange
    boolean isStateful() -> isStateful
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void setCornerRadius(float) -> setCornerRadius
    void draw(android.graphics.Canvas) -> draw
    void drawShadow(android.graphics.Canvas) -> drawShadow
    void buildShadowCorners() -> buildShadowCorners
    void buildComponents(android.graphics.Rect) -> buildComponents
    float getCornerRadius() -> getCornerRadius
    void getMaxShadowAndCornerPadding(android.graphics.Rect) -> getMaxShadowAndCornerPadding
    void setShadowSize(float) -> setShadowSize
    void setMaxShadowSize(float) -> setMaxShadowSize
    float getShadowSize() -> getShadowSize
    float getMaxShadowSize() -> getMaxShadowSize
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setColor(android.content.res.ColorStateList) -> setColor
    android.content.res.ColorStateList getColor() -> getColor
    void <clinit>() -> <clinit>
android.support.v7.widget.RoundRectDrawableWithShadow$RoundRectHelper -> android.support.v7.widget.RoundRectDrawableWithShadow$RoundRectHelper:
    void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
android.support.v7.widget.RtlSpacingHelper -> android.support.v7.widget.RtlSpacingHelper:
    int UNDEFINED -> UNDEFINED
    int mLeft -> mLeft
    int mRight -> mRight
    int mStart -> mStart
    int mEnd -> mEnd
    int mExplicitLeft -> mExplicitLeft
    int mExplicitRight -> mExplicitRight
    boolean mIsRtl -> mIsRtl
    boolean mIsRelative -> mIsRelative
    void <init>() -> <init>
    int getLeft() -> getLeft
    int getRight() -> getRight
    int getStart() -> getStart
    int getEnd() -> getEnd
    void setRelative(int,int) -> setRelative
    void setAbsolute(int,int) -> setAbsolute
    void setDirection(boolean) -> setDirection
android.support.v7.widget.ScrollbarHelper -> android.support.v7.widget.ScrollbarHelper:
    void <init>() -> <init>
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    int computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
android.support.v7.widget.ScrollingTabContainerView -> android.support.v7.widget.ScrollingTabContainerView:
    java.lang.String TAG -> TAG
    java.lang.Runnable mTabSelector -> mTabSelector
    android.support.v7.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> mTabClickListener
    android.support.v7.widget.LinearLayoutCompat mTabLayout -> mTabLayout
    android.widget.Spinner mTabSpinner -> mTabSpinner
    boolean mAllowCollapse -> mAllowCollapse
    int mMaxTabWidth -> mMaxTabWidth
    int mStackedTabMaxWidth -> mStackedTabMaxWidth
    int mContentHeight -> mContentHeight
    int mSelectedTabIndex -> mSelectedTabIndex
    android.view.ViewPropertyAnimator mVisibilityAnim -> mVisibilityAnim
    android.support.v7.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    void <init>(android.content.Context) -> <init>
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> isCollapsed
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> performCollapse
    boolean performExpand() -> performExpand
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    android.support.v7.widget.LinearLayoutCompat createTabLayout() -> createTabLayout
    android.widget.Spinner createSpinner() -> createSpinner
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToVisibility(int) -> animateToVisibility
    void animateToTab(int) -> animateToTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.support.v7.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> createTabView
    void addTab(android.support.v7.app.ActionBar$Tab,boolean) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int,boolean) -> addTab
    void updateTab(int) -> updateTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void <clinit>() -> <clinit>
android.support.v7.widget.ScrollingTabContainerView$1 -> android.support.v7.widget.ScrollingTabContainerView$1:
    android.view.View val$tabView -> val$tabView
    android.support.v7.widget.ScrollingTabContainerView this$0 -> this$0
    void <init>(android.support.v7.widget.ScrollingTabContainerView,android.view.View) -> <init>
    void run() -> run
android.support.v7.widget.ScrollingTabContainerView$TabAdapter -> android.support.v7.widget.ScrollingTabContainerView$TabAdapter:
    android.support.v7.widget.ScrollingTabContainerView this$0 -> this$0
    void <init>(android.support.v7.widget.ScrollingTabContainerView) -> <init>
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.widget.ScrollingTabContainerView$TabClickListener -> android.support.v7.widget.ScrollingTabContainerView$TabClickListener:
    android.support.v7.widget.ScrollingTabContainerView this$0 -> this$0
    void <init>(android.support.v7.widget.ScrollingTabContainerView) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.widget.ScrollingTabContainerView$TabView -> android.support.v7.widget.ScrollingTabContainerView$TabView:
    int[] BG_ATTRS -> BG_ATTRS
    android.support.v7.app.ActionBar$Tab mTab -> mTab
    android.widget.TextView mTextView -> mTextView
    android.widget.ImageView mIconView -> mIconView
    android.view.View mCustomView -> mCustomView
    android.support.v7.widget.ScrollingTabContainerView this$0 -> this$0
    void <init>(android.support.v7.widget.ScrollingTabContainerView,android.content.Context,android.support.v7.app.ActionBar$Tab,boolean) -> <init>
    void bindTab(android.support.v7.app.ActionBar$Tab) -> bindTab
    void setSelected(boolean) -> setSelected
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void update() -> update
    android.support.v7.app.ActionBar$Tab getTab() -> getTab
android.support.v7.widget.ScrollingTabContainerView$VisibilityAnimListener -> android.support.v7.widget.ScrollingTabContainerView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    android.support.v7.widget.ScrollingTabContainerView this$0 -> this$0
    void <init>(android.support.v7.widget.ScrollingTabContainerView) -> <init>
    android.support.v7.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(android.view.ViewPropertyAnimator,int) -> withFinalVisibility
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String IME_OPTION_NO_MICROPHONE -> IME_OPTION_NO_MICROPHONE
    android.support.v7.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> mSearchSrcTextView
    android.view.View mSearchEditFrame -> mSearchEditFrame
    android.view.View mSearchPlate -> mSearchPlate
    android.view.View mSubmitArea -> mSubmitArea
    android.widget.ImageView mSearchButton -> mSearchButton
    android.widget.ImageView mGoButton -> mGoButton
    android.widget.ImageView mCloseButton -> mCloseButton
    android.widget.ImageView mVoiceButton -> mVoiceButton
    android.view.View mDropDownAnchor -> mDropDownAnchor
    android.support.v7.widget.SearchView$UpdatableTouchDelegate mTouchDelegate -> mTouchDelegate
    android.graphics.Rect mSearchSrcTextViewBounds -> mSearchSrcTextViewBounds
    android.graphics.Rect mSearchSrtTextViewBoundsExpanded -> mSearchSrtTextViewBoundsExpanded
    int[] mTemp -> mTemp
    int[] mTemp2 -> mTemp2
    android.widget.ImageView mCollapsedIcon -> mCollapsedIcon
    android.graphics.drawable.Drawable mSearchHintIcon -> mSearchHintIcon
    int mSuggestionRowLayout -> mSuggestionRowLayout
    int mSuggestionCommitIconResId -> mSuggestionCommitIconResId
    android.content.Intent mVoiceWebSearchIntent -> mVoiceWebSearchIntent
    android.content.Intent mVoiceAppSearchIntent -> mVoiceAppSearchIntent
    java.lang.CharSequence mDefaultQueryHint -> mDefaultQueryHint
    android.support.v7.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> mOnQueryChangeListener
    android.support.v7.widget.SearchView$OnCloseListener mOnCloseListener -> mOnCloseListener
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> mOnQueryTextFocusChangeListener
    android.support.v7.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> mOnSuggestionListener
    android.view.View$OnClickListener mOnSearchClickListener -> mOnSearchClickListener
    boolean mIconifiedByDefault -> mIconifiedByDefault
    boolean mIconified -> mIconified
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> mSuggestionsAdapter
    boolean mSubmitButtonEnabled -> mSubmitButtonEnabled
    java.lang.CharSequence mQueryHint -> mQueryHint
    boolean mQueryRefinement -> mQueryRefinement
    boolean mClearingFocus -> mClearingFocus
    int mMaxWidth -> mMaxWidth
    boolean mVoiceButtonEnabled -> mVoiceButtonEnabled
    java.lang.CharSequence mOldQueryText -> mOldQueryText
    java.lang.CharSequence mUserQuery -> mUserQuery
    boolean mExpandedInActionView -> mExpandedInActionView
    int mCollapsedImeOptions -> mCollapsedImeOptions
    android.app.SearchableInfo mSearchable -> mSearchable
    android.os.Bundle mAppSearchData -> mAppSearchData
    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> HIDDEN_METHOD_INVOKER
    java.lang.Runnable mUpdateDrawableStateRunnable -> mUpdateDrawableStateRunnable
    java.lang.Runnable mReleaseCursorRunnable -> mReleaseCursorRunnable
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    android.view.View$OnKeyListener mTextKeyListener -> mTextKeyListener
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> mOnEditorActionListener
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.text.TextWatcher mTextWatcher -> mTextWatcher
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getSuggestionRowLayout() -> getSuggestionRowLayout
    int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    boolean isIconfiedByDefault() -> isIconfiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> isIconified
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled() -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled() -> isQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    int getPreferredWidth() -> getPreferredWidth
    int getPreferredHeight() -> getPreferredHeight
    void updateViewsVisibility(boolean) -> updateViewsVisibility
    boolean hasVoiceSearch() -> hasVoiceSearch
    boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    void updateSubmitButton(boolean) -> updateSubmitButton
    void updateSubmitArea() -> updateSubmitArea
    void updateCloseButton() -> updateCloseButton
    void postUpdateFocusedState() -> postUpdateFocusedState
    void updateFocusedState() -> updateFocusedState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    void updateQueryHint() -> updateQueryHint
    void updateSearchAutoComplete() -> updateSearchAutoComplete
    void updateVoiceButton(boolean) -> updateVoiceButton
    void onTextChanged(java.lang.CharSequence) -> onTextChanged
    void onSubmitQuery() -> onSubmitQuery
    void dismissSuggestions() -> dismissSuggestions
    void onCloseClicked() -> onCloseClicked
    void onSearchClicked() -> onSearchClicked
    void onVoiceClicked() -> onVoiceClicked
    void onTextFocusChanged() -> onTextFocusChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> onActionViewCollapsed
    void onActionViewExpanded() -> onActionViewExpanded
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    boolean onItemSelected(int) -> onItemSelected
    void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    void launchIntent(android.content.Intent) -> launchIntent
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    void forceSuggestionQuery() -> forceSuggestionQuery
    boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    void <clinit>() -> <clinit>
android.support.v7.widget.SearchView$1 -> android.support.v7.widget.SearchView$1:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void run() -> run
android.support.v7.widget.SearchView$10 -> android.support.v7.widget.SearchView$10:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
android.support.v7.widget.SearchView$2 -> android.support.v7.widget.SearchView$2:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void run() -> run
android.support.v7.widget.SearchView$3 -> android.support.v7.widget.SearchView$3:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
android.support.v7.widget.SearchView$4 -> android.support.v7.widget.SearchView$4:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
android.support.v7.widget.SearchView$5 -> android.support.v7.widget.SearchView$5:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.widget.SearchView$6 -> android.support.v7.widget.SearchView$6:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
android.support.v7.widget.SearchView$7 -> android.support.v7.widget.SearchView$7:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
android.support.v7.widget.SearchView$8 -> android.support.v7.widget.SearchView$8:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.SearchView$9 -> android.support.v7.widget.SearchView$9:
    android.support.v7.widget.SearchView this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.SearchView$AutoCompleteTextViewReflector:
    java.lang.reflect.Method doBeforeTextChanged -> doBeforeTextChanged
    java.lang.reflect.Method doAfterTextChanged -> doAfterTextChanged
    java.lang.reflect.Method ensureImeVisible -> ensureImeVisible
    java.lang.reflect.Method showSoftInputUnchecked -> showSoftInputUnchecked
    void <init>() -> <init>
    void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
android.support.v7.widget.SearchView$OnCloseListener -> android.support.v7.widget.SearchView$OnCloseListener:
    boolean onClose() -> onClose
android.support.v7.widget.SearchView$OnQueryTextListener -> android.support.v7.widget.SearchView$OnQueryTextListener:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v7.widget.SearchView$OnSuggestionListener -> android.support.v7.widget.SearchView$OnSuggestionListener:
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
android.support.v7.widget.SearchView$SavedState -> android.support.v7.widget.SearchView$SavedState:
    boolean isIconified -> isIconified
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
android.support.v7.widget.SearchView$SavedState$1 -> android.support.v7.widget.SearchView$SavedState$1:
    void <init>() -> <init>
    android.support.v7.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v7.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.SearchView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    int mThreshold -> mThreshold
    android.support.v7.widget.SearchView mSearchView -> mSearchView
    boolean mHasPendingShowSoftInputRequest -> mHasPendingShowSoftInputRequest
    java.lang.Runnable mRunShowSoftInputIfNecessary -> mRunShowSoftInputIfNecessary
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onFinishInflate() -> onFinishInflate
    void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> isEmpty
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void showSoftInputIfNecessary() -> showSoftInputIfNecessary
    void setImeVisibility(boolean) -> setImeVisibility
    void access$000(android.support.v7.widget.SearchView$SearchAutoComplete,boolean) -> access$000
    boolean access$100(android.support.v7.widget.SearchView$SearchAutoComplete) -> access$100
    void access$200(android.support.v7.widget.SearchView$SearchAutoComplete) -> access$200
android.support.v7.widget.SearchView$SearchAutoComplete$1 -> android.support.v7.widget.SearchView$SearchAutoComplete$1:
    android.support.v7.widget.SearchView$SearchAutoComplete this$0 -> this$0
    void <init>(android.support.v7.widget.SearchView$SearchAutoComplete) -> <init>
    void run() -> run
android.support.v7.widget.SearchView$UpdatableTouchDelegate -> android.support.v7.widget.SearchView$UpdatableTouchDelegate:
    android.view.View mDelegateView -> mDelegateView
    android.graphics.Rect mTargetBounds -> mTargetBounds
    android.graphics.Rect mActualBounds -> mActualBounds
    android.graphics.Rect mSlopBounds -> mSlopBounds
    int mSlop -> mSlop
    boolean mDelegateTargeted -> mDelegateTargeted
    void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
android.support.v7.widget.ShareActionProvider -> android.support.v7.widget.ShareActionProvider:
    int DEFAULT_INITIAL_ACTIVITY_COUNT -> DEFAULT_INITIAL_ACTIVITY_COUNT
    int mMaxShownActivityCount -> mMaxShownActivityCount
    android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    java.lang.String DEFAULT_SHARE_HISTORY_FILE_NAME -> DEFAULT_SHARE_HISTORY_FILE_NAME
    android.content.Context mContext -> mContext
    java.lang.String mShareHistoryFileName -> mShareHistoryFileName
    android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener mOnShareTargetSelectedListener -> mOnShareTargetSelectedListener
    android.support.v7.widget.ActivityChooserModel$OnChooseActivityListener mOnChooseActivityListener -> mOnChooseActivityListener
    void <init>(android.content.Context) -> <init>
    void setOnShareTargetSelectedListener(android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener) -> setOnShareTargetSelectedListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void setShareHistoryFileName(java.lang.String) -> setShareHistoryFileName
    void setShareIntent(android.content.Intent) -> setShareIntent
    void setActivityChooserPolicyIfNeeded() -> setActivityChooserPolicyIfNeeded
    void updateIntent(android.content.Intent) -> updateIntent
android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener -> android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener:
    boolean onShareTargetSelected(android.support.v7.widget.ShareActionProvider,android.content.Intent) -> onShareTargetSelected
android.support.v7.widget.ShareActionProvider$ShareActivityChooserModelPolicy -> android.support.v7.widget.ShareActionProvider$ShareActivityChooserModelPolicy:
    android.support.v7.widget.ShareActionProvider this$0 -> this$0
    void <init>(android.support.v7.widget.ShareActionProvider) -> <init>
    boolean onChooseActivity(android.support.v7.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener:
    android.support.v7.widget.ShareActionProvider this$0 -> this$0
    void <init>(android.support.v7.widget.ShareActionProvider) -> <init>
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.SimpleItemAnimator -> android.support.v7.widget.SimpleItemAnimator:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean mSupportsChangeAnimations -> mSupportsChangeAnimations
    void <init>() -> <init>
    boolean getSupportsChangeAnimations() -> getSupportsChangeAnimations
    void setSupportsChangeAnimations(boolean) -> setSupportsChangeAnimations
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    boolean animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    boolean animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    boolean animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> animateRemove
    boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> animateAdd
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    void dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    void dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    void dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    void dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    void dispatchRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    void dispatchMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    void dispatchAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    void dispatchChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    void onRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> onRemoveStarting
    void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    void onAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> onAddStarting
    void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAddFinished
    void onMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> onMoveStarting
    void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onMoveFinished
    void onChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
android.support.v7.widget.SnapHelper -> android.support.v7.widget.SnapHelper:
    float MILLISECONDS_PER_INCH -> MILLISECONDS_PER_INCH
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    android.widget.Scroller mGravityScroller -> mGravityScroller
    android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener -> mScrollListener
    void <init>() -> <init>
    boolean onFling(int,int) -> onFling
    void attachToRecyclerView(android.support.v7.widget.RecyclerView) -> attachToRecyclerView
    void setupCallbacks() -> setupCallbacks
    void destroyCallbacks() -> destroyCallbacks
    int[] calculateScrollDistance(int,int) -> calculateScrollDistance
    boolean snapFromFling(android.support.v7.widget.RecyclerView$LayoutManager,int,int) -> snapFromFling
    void snapToTargetExistingView() -> snapToTargetExistingView
    android.support.v7.widget.RecyclerView$SmoothScroller createScroller(android.support.v7.widget.RecyclerView$LayoutManager) -> createScroller
    android.support.v7.widget.LinearSmoothScroller createSnapScroller(android.support.v7.widget.RecyclerView$LayoutManager) -> createSnapScroller
    int[] calculateDistanceToFinalSnap(android.support.v7.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    android.view.View findSnapView(android.support.v7.widget.RecyclerView$LayoutManager) -> findSnapView
    int findTargetSnapPosition(android.support.v7.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
android.support.v7.widget.SnapHelper$1 -> android.support.v7.widget.SnapHelper$1:
    boolean mScrolled -> mScrolled
    android.support.v7.widget.SnapHelper this$0 -> this$0
    void <init>(android.support.v7.widget.SnapHelper) -> <init>
    void onScrollStateChanged(android.support.v7.widget.RecyclerView,int) -> onScrollStateChanged
    void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> onScrolled
android.support.v7.widget.SnapHelper$2 -> android.support.v7.widget.SnapHelper$2:
    android.support.v7.widget.SnapHelper this$0 -> this$0
    void <init>(android.support.v7.widget.SnapHelper,android.content.Context) -> <init>
    void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
android.support.v7.widget.StaggeredGridLayoutManager -> android.support.v7.widget.StaggeredGridLayoutManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int GAP_HANDLING_NONE -> GAP_HANDLING_NONE
    int GAP_HANDLING_LAZY -> GAP_HANDLING_LAZY
    int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS -> GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS
    int INVALID_OFFSET -> INVALID_OFFSET
    float MAX_SCROLL_FACTOR -> MAX_SCROLL_FACTOR
    int mSpanCount -> mSpanCount
    android.support.v7.widget.StaggeredGridLayoutManager$Span[] mSpans -> mSpans
    android.support.v7.widget.OrientationHelper mPrimaryOrientation -> mPrimaryOrientation
    android.support.v7.widget.OrientationHelper mSecondaryOrientation -> mSecondaryOrientation
    int mOrientation -> mOrientation
    int mSizePerSpan -> mSizePerSpan
    android.support.v7.widget.LayoutState mLayoutState -> mLayoutState
    boolean mReverseLayout -> mReverseLayout
    boolean mShouldReverseLayout -> mShouldReverseLayout
    java.util.BitSet mRemainingSpans -> mRemainingSpans
    int mPendingScrollPosition -> mPendingScrollPosition
    int mPendingScrollPositionOffset -> mPendingScrollPositionOffset
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> mLazySpanLookup
    int mGapStrategy -> mGapStrategy
    boolean mLastLayoutFromEnd -> mLastLayoutFromEnd
    boolean mLastLayoutRTL -> mLastLayoutRTL
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> mPendingSavedState
    int mFullSizeSpec -> mFullSizeSpec
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo -> mAnchorInfo
    boolean mLaidOutInvalidFullSpan -> mLaidOutInvalidFullSpan
    boolean mSmoothScrollbarEnabled -> mSmoothScrollbarEnabled
    int[] mPrefetchDistances -> mPrefetchDistances
    java.lang.Runnable mCheckForGapsRunnable -> mCheckForGapsRunnable
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void <init>(int,int) -> <init>
    void createOrientationHelpers() -> createOrientationHelpers
    boolean checkForGaps() -> checkForGaps
    void onScrollStateChanged(int) -> onScrollStateChanged
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    android.view.View hasGapsToFix() -> hasGapsToFix
    boolean checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    void setSpanCount(int) -> setSpanCount
    void setOrientation(int) -> setOrientation
    void setReverseLayout(boolean) -> setReverseLayout
    int getGapStrategy() -> getGapStrategy
    void setGapStrategy(int) -> setGapStrategy
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    int getSpanCount() -> getSpanCount
    void invalidateSpanAssignments() -> invalidateSpanAssignments
    void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    boolean isLayoutRTL() -> isLayoutRTL
    boolean getReverseLayout() -> getReverseLayout
    void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> onLayoutChildren
    void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
    void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    void applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    void updateMeasureSpecs(int) -> updateMeasureSpecs
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    int[] findFirstVisibleItemPositions(int[]) -> findFirstVisibleItemPositions
    int[] findFirstCompletelyVisibleItemPositions(int[]) -> findFirstCompletelyVisibleItemPositions
    int[] findLastVisibleItemPositions(int[]) -> findLastVisibleItemPositions
    int[] findLastCompletelyVisibleItemPositions(int[]) -> findLastCompletelyVisibleItemPositions
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeScrollOffset
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollOffset
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeScrollExtent
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollExtent
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollRange
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> computeScrollRange
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollRange
    void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getRowCountForAccessibility
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getColumnCountForAccessibility
    android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    void fixEndGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixEndGap
    void fixStartGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixStartGap
    void updateLayoutState(int,android.support.v7.widget.RecyclerView$State) -> updateLayoutState
    void setLayoutStateDirection(int) -> setLayoutStateDirection
    void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    void offsetChildrenVertical(int) -> offsetChildrenVertical
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> onItemsRemoved
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> onItemsAdded
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> onItemsChanged
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> onItemsMoved
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    void handleUpdate(int,int,int) -> handleUpdate
    int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State) -> fill
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    void attachViewToSpans(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,android.support.v7.widget.LayoutState) -> attachViewToSpans
    void recycle(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState) -> recycle
    void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    void updateRemainingSpans(android.support.v7.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    int getMaxStart(int) -> getMaxStart
    int getMinStart(int) -> getMinStart
    boolean areAllEndsEqual() -> areAllEndsEqual
    boolean areAllStartsEqual() -> areAllStartsEqual
    int getMaxEnd(int) -> getMaxEnd
    int getMinEnd(int) -> getMinEnd
    void recycleFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleFromStart
    void recycleFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    boolean preferLastSpan(int) -> preferLastSpan
    android.support.v7.widget.StaggeredGridLayoutManager$Span getNextSpan(android.support.v7.widget.LayoutState) -> getNextSpan
    boolean canScrollVertically() -> canScrollVertically
    boolean canScrollHorizontally() -> canScrollHorizontally
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    void smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int) -> smoothScrollToPosition
    void scrollToPosition(int) -> scrollToPosition
    void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    void prepareLayoutStateForDelta(int,android.support.v7.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollBy
    int getLastChildPosition() -> getLastChildPosition
    int getFirstChildPosition() -> getFirstChildPosition
    int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    int getOrientation() -> getOrientation
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
android.support.v7.widget.StaggeredGridLayoutManager$1 -> android.support.v7.widget.StaggeredGridLayoutManager$1:
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> this$0
    void <init>(android.support.v7.widget.StaggeredGridLayoutManager) -> <init>
    void run() -> run
android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo -> android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo:
    int mPosition -> mPosition
    int mOffset -> mOffset
    boolean mLayoutFromEnd -> mLayoutFromEnd
    boolean mInvalidateOffsets -> mInvalidateOffsets
    boolean mValid -> mValid
    int[] mSpanReferenceLines -> mSpanReferenceLines
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> this$0
    void <init>(android.support.v7.widget.StaggeredGridLayoutManager) -> <init>
    void reset() -> reset
    void saveSpanReferenceLines(android.support.v7.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
    void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams -> android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams:
    int INVALID_SPAN_ID -> INVALID_SPAN_ID
    android.support.v7.widget.StaggeredGridLayoutManager$Span mSpan -> mSpan
    boolean mFullSpan -> mFullSpan
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.support.v7.widget.RecyclerView$LayoutParams) -> <init>
    void setFullSpan(boolean) -> setFullSpan
    boolean isFullSpan() -> isFullSpan
    int getSpanIndex() -> getSpanIndex
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup:
    int MIN_SIZE -> MIN_SIZE
    int[] mData -> mData
    java.util.List mFullSpanItems -> mFullSpanItems
    void <init>() -> <init>
    int forceInvalidateAfter(int) -> forceInvalidateAfter
    int invalidateAfter(int) -> invalidateAfter
    int getSpan(int) -> getSpan
    void setSpan(int,android.support.v7.widget.StaggeredGridLayoutManager$Span) -> setSpan
    int sizeForPosition(int) -> sizeForPosition
    void ensureSize(int) -> ensureSize
    void clear() -> clear
    void offsetForRemoval(int,int) -> offsetForRemoval
    void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    void offsetForAddition(int,int) -> offsetForAddition
    void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    void addFullSpanItem(android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    int mPosition -> mPosition
    int mGapDir -> mGapDir
    int[] mGapPerSpan -> mGapPerSpan
    boolean mHasUnwantedGapAfter -> mHasUnwantedGapAfter
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcel) -> <init>
    void <init>() -> <init>
    int getGapForSpan(int) -> getGapForSpan
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    void <init>() -> <init>
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.StaggeredGridLayoutManager$SavedState -> android.support.v7.widget.StaggeredGridLayoutManager$SavedState:
    int mAnchorPosition -> mAnchorPosition
    int mVisibleAnchorPosition -> mVisibleAnchorPosition
    int mSpanOffsetsSize -> mSpanOffsetsSize
    int[] mSpanOffsets -> mSpanOffsets
    int mSpanLookupSize -> mSpanLookupSize
    int[] mSpanLookup -> mSpanLookup
    java.util.List mFullSpanItems -> mFullSpanItems
    boolean mReverseLayout -> mReverseLayout
    boolean mAnchorLayoutFromEnd -> mAnchorLayoutFromEnd
    boolean mLastLayoutRTL -> mLastLayoutRTL
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.support.v7.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    void invalidateSpanInfo() -> invalidateSpanInfo
    void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1 -> android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1:
    void <init>() -> <init>
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.StaggeredGridLayoutManager$Span -> android.support.v7.widget.StaggeredGridLayoutManager$Span:
    int INVALID_LINE -> INVALID_LINE
    java.util.ArrayList mViews -> mViews
    int mCachedStart -> mCachedStart
    int mCachedEnd -> mCachedEnd
    int mDeletedSize -> mDeletedSize
    int mIndex -> mIndex
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> this$0
    void <init>(android.support.v7.widget.StaggeredGridLayoutManager,int) -> <init>
    int getStartLine(int) -> getStartLine
    void calculateCachedStart() -> calculateCachedStart
    int getStartLine() -> getStartLine
    int getEndLine(int) -> getEndLine
    void calculateCachedEnd() -> calculateCachedEnd
    int getEndLine() -> getEndLine
    void prependToSpan(android.view.View) -> prependToSpan
    void appendToSpan(android.view.View) -> appendToSpan
    void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    void clear() -> clear
    void invalidateCache() -> invalidateCache
    void setLine(int) -> setLine
    void popEnd() -> popEnd
    void popStart() -> popStart
    int getDeletedSize() -> getDeletedSize
    android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    void onOffset(int) -> onOffset
    int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    int findOneVisibleChild(int,int,boolean) -> findOneVisibleChild
    int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
android.support.v7.widget.SuggestionsAdapter -> android.support.v7.widget.SuggestionsAdapter:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    int QUERY_LIMIT -> QUERY_LIMIT
    int REFINE_NONE -> REFINE_NONE
    int REFINE_BY_ENTRY -> REFINE_BY_ENTRY
    int REFINE_ALL -> REFINE_ALL
    android.app.SearchManager mSearchManager -> mSearchManager
    android.support.v7.widget.SearchView mSearchView -> mSearchView
    android.app.SearchableInfo mSearchable -> mSearchable
    android.content.Context mProviderContext -> mProviderContext
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    int mCommitIconResId -> mCommitIconResId
    boolean mClosed -> mClosed
    int mQueryRefinement -> mQueryRefinement
    android.content.res.ColorStateList mUrlColor -> mUrlColor
    int INVALID_INDEX -> INVALID_INDEX
    int mText1Col -> mText1Col
    int mText2Col -> mText2Col
    int mText2UrlCol -> mText2UrlCol
    int mIconName1Col -> mIconName1Col
    int mIconName2Col -> mIconName2Col
    int mFlagsCol -> mFlagsCol
    void <init>(android.content.Context,android.support.v7.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    void setQueryRefinement(int) -> setQueryRefinement
    int getQueryRefinement() -> getQueryRefinement
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    void close() -> close
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
    void changeCursor(android.database.Cursor) -> changeCursor
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> android.support.v7.widget.SuggestionsAdapter$ChildViewCache:
    android.widget.TextView mText1 -> mText1
    android.widget.TextView mText2 -> mText2
    android.widget.ImageView mIcon1 -> mIcon1
    android.widget.ImageView mIcon2 -> mIcon2
    android.widget.ImageView mIconRefine -> mIconRefine
    void <init>(android.view.View) -> <init>
android.support.v7.widget.SwitchCompat -> android.support.v7.widget.SwitchCompat:
    int THUMB_ANIMATION_DURATION -> THUMB_ANIMATION_DURATION
    int TOUCH_MODE_IDLE -> TOUCH_MODE_IDLE
    int TOUCH_MODE_DOWN -> TOUCH_MODE_DOWN
    int TOUCH_MODE_DRAGGING -> TOUCH_MODE_DRAGGING
    java.lang.String ACCESSIBILITY_EVENT_CLASS_NAME -> ACCESSIBILITY_EVENT_CLASS_NAME
    int SANS -> SANS
    int SERIF -> SERIF
    int MONOSPACE -> MONOSPACE
    android.util.Property THUMB_POS -> THUMB_POS
    android.graphics.drawable.Drawable mThumbDrawable -> mThumbDrawable
    android.content.res.ColorStateList mThumbTintList -> mThumbTintList
    android.graphics.PorterDuff$Mode mThumbTintMode -> mThumbTintMode
    boolean mHasThumbTint -> mHasThumbTint
    boolean mHasThumbTintMode -> mHasThumbTintMode
    android.graphics.drawable.Drawable mTrackDrawable -> mTrackDrawable
    android.content.res.ColorStateList mTrackTintList -> mTrackTintList
    android.graphics.PorterDuff$Mode mTrackTintMode -> mTrackTintMode
    boolean mHasTrackTint -> mHasTrackTint
    boolean mHasTrackTintMode -> mHasTrackTintMode
    int mThumbTextPadding -> mThumbTextPadding
    int mSwitchMinWidth -> mSwitchMinWidth
    int mSwitchPadding -> mSwitchPadding
    boolean mSplitTrack -> mSplitTrack
    java.lang.CharSequence mTextOn -> mTextOn
    java.lang.CharSequence mTextOff -> mTextOff
    boolean mShowText -> mShowText
    int mTouchMode -> mTouchMode
    int mTouchSlop -> mTouchSlop
    float mTouchX -> mTouchX
    float mTouchY -> mTouchY
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinFlingVelocity -> mMinFlingVelocity
    float mThumbPosition -> mThumbPosition
    int mSwitchWidth -> mSwitchWidth
    int mSwitchHeight -> mSwitchHeight
    int mThumbWidth -> mThumbWidth
    int mSwitchLeft -> mSwitchLeft
    int mSwitchTop -> mSwitchTop
    int mSwitchRight -> mSwitchRight
    int mSwitchBottom -> mSwitchBottom
    android.text.TextPaint mTextPaint -> mTextPaint
    android.content.res.ColorStateList mTextColors -> mTextColors
    android.text.Layout mOnLayout -> mOnLayout
    android.text.Layout mOffLayout -> mOffLayout
    android.text.method.TransformationMethod mSwitchTransformationMethod -> mSwitchTransformationMethod
    android.animation.ObjectAnimator mPositionAnimator -> mPositionAnimator
    android.graphics.Rect mTempRect -> mTempRect
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    void setSwitchPadding(int) -> setSwitchPadding
    int getSwitchPadding() -> getSwitchPadding
    void setSwitchMinWidth(int) -> setSwitchMinWidth
    int getSwitchMinWidth() -> getSwitchMinWidth
    void setThumbTextPadding(int) -> setThumbTextPadding
    int getThumbTextPadding() -> getThumbTextPadding
    void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    void setTrackResource(int) -> setTrackResource
    android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    void applyTrackTint() -> applyTrackTint
    void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    void setThumbResource(int) -> setThumbResource
    android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    void applyThumbTint() -> applyThumbTint
    void setSplitTrack(boolean) -> setSplitTrack
    boolean getSplitTrack() -> getSplitTrack
    java.lang.CharSequence getTextOn() -> getTextOn
    void setTextOn(java.lang.CharSequence) -> setTextOn
    java.lang.CharSequence getTextOff() -> getTextOff
    void setTextOff(java.lang.CharSequence) -> setTextOff
    void setShowText(boolean) -> setShowText
    boolean getShowText() -> getShowText
    void onMeasure(int,int) -> onMeasure
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    boolean hitThumb(float,float) -> hitThumb
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    void stopDrag(android.view.MotionEvent) -> stopDrag
    void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    void cancelPositionAnimator() -> cancelPositionAnimator
    boolean getTargetCheckedState() -> getTargetCheckedState
    void setThumbPosition(float) -> setThumbPosition
    void toggle() -> toggle
    void setChecked(boolean) -> setChecked
    void onLayout(boolean,int,int,int,int) -> onLayout
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    int getCompoundPaddingRight() -> getCompoundPaddingRight
    int getThumbOffset() -> getThumbOffset
    int getThumbScrollRange() -> getThumbScrollRange
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void drawableStateChanged() -> drawableStateChanged
    void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    float constrain(float,float,float) -> constrain
    float access$000(android.support.v7.widget.SwitchCompat) -> access$000
    void <clinit>() -> <clinit>
android.support.v7.widget.SwitchCompat$1 -> android.support.v7.widget.SwitchCompat$1:
    void <init>(java.lang.Class,java.lang.String) -> <init>
    java.lang.Float get(android.support.v7.widget.SwitchCompat) -> get
    void set(android.support.v7.widget.SwitchCompat,java.lang.Float) -> set
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
android.support.v7.widget.ThemeUtils -> android.support.v7.widget.ThemeUtils:
    java.lang.ThreadLocal TL_TYPED_VALUE -> TL_TYPED_VALUE
    int[] DISABLED_STATE_SET -> DISABLED_STATE_SET
    int[] FOCUSED_STATE_SET -> FOCUSED_STATE_SET
    int[] ACTIVATED_STATE_SET -> ACTIVATED_STATE_SET
    int[] PRESSED_STATE_SET -> PRESSED_STATE_SET
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    int[] SELECTED_STATE_SET -> SELECTED_STATE_SET
    int[] NOT_PRESSED_OR_FOCUSED_STATE_SET -> NOT_PRESSED_OR_FOCUSED_STATE_SET
    int[] EMPTY_STATE_SET -> EMPTY_STATE_SET
    int[] TEMP_ARRAY -> TEMP_ARRAY
    void <init>() -> <init>
    android.content.res.ColorStateList createDisabledStateList(int,int) -> createDisabledStateList
    int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    android.util.TypedValue getTypedValue() -> getTypedValue
    int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    void <clinit>() -> <clinit>
android.support.v7.widget.ThemedSpinnerAdapter -> android.support.v7.widget.ThemedSpinnerAdapter:
    void setDropDownViewTheme(android.content.res.Resources$Theme) -> setDropDownViewTheme
    android.content.res.Resources$Theme getDropDownViewTheme() -> getDropDownViewTheme
android.support.v7.widget.ThemedSpinnerAdapter$Helper -> android.support.v7.widget.ThemedSpinnerAdapter$Helper:
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    android.view.LayoutInflater mDropDownInflater -> mDropDownInflater
    void <init>(android.content.Context) -> <init>
    void setDropDownViewTheme(android.content.res.Resources$Theme) -> setDropDownViewTheme
    android.content.res.Resources$Theme getDropDownViewTheme() -> getDropDownViewTheme
    android.view.LayoutInflater getDropDownViewInflater() -> getDropDownViewInflater
android.support.v7.widget.TintContextWrapper -> android.support.v7.widget.TintContextWrapper:
    java.lang.Object CACHE_LOCK -> CACHE_LOCK
    java.util.ArrayList sCache -> sCache
    android.content.res.Resources mResources -> mResources
    android.content.res.Resources$Theme mTheme -> mTheme
    android.content.Context wrap(android.content.Context) -> wrap
    boolean shouldWrap(android.content.Context) -> shouldWrap
    void <init>(android.content.Context) -> <init>
    android.content.res.Resources$Theme getTheme() -> getTheme
    void setTheme(int) -> setTheme
    android.content.res.Resources getResources() -> getResources
    android.content.res.AssetManager getAssets() -> getAssets
    void <clinit>() -> <clinit>
android.support.v7.widget.TintInfo -> android.support.v7.widget.TintInfo:
    android.content.res.ColorStateList mTintList -> mTintList
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    boolean mHasTintMode -> mHasTintMode
    boolean mHasTintList -> mHasTintList
    void <init>() -> <init>
    void clear() -> clear
android.support.v7.widget.TintResources -> android.support.v7.widget.TintResources:
    java.lang.ref.WeakReference mContextRef -> mContextRef
    void <init>(android.content.Context,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
android.support.v7.widget.TintTypedArray -> android.support.v7.widget.TintTypedArray:
    android.content.Context mContext -> mContext
    android.content.res.TypedArray mWrapped -> mWrapped
    android.util.TypedValue mTypedValue -> mTypedValue
    android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    android.graphics.Typeface getFont(int,int,android.widget.TextView) -> getFont
    int length() -> length
    int getIndexCount() -> getIndexCount
    int getIndex(int) -> getIndex
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getNonResourceString(int) -> getNonResourceString
    boolean getBoolean(int,boolean) -> getBoolean
    int getInt(int,int) -> getInt
    float getFloat(int,float) -> getFloat
    int getColor(int,int) -> getColor
    android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    int getInteger(int,int) -> getInteger
    float getDimension(int,float) -> getDimension
    int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    int getLayoutDimension(int,java.lang.String) -> getLayoutDimension
    int getLayoutDimension(int,int) -> getLayoutDimension
    float getFraction(int,int,int,float) -> getFraction
    int getResourceId(int,int) -> getResourceId
    java.lang.CharSequence[] getTextArray(int) -> getTextArray
    boolean getValue(int,android.util.TypedValue) -> getValue
    int getType(int) -> getType
    boolean hasValue(int) -> hasValue
    android.util.TypedValue peekValue(int) -> peekValue
    java.lang.String getPositionDescription() -> getPositionDescription
    void recycle() -> recycle
    int getChangingConfigurations() -> getChangingConfigurations
android.support.v7.widget.Toolbar -> android.support.v7.widget.Toolbar:
    java.lang.String TAG -> TAG
    android.support.v7.widget.ActionMenuView mMenuView -> mMenuView
    android.widget.TextView mTitleTextView -> mTitleTextView
    android.widget.TextView mSubtitleTextView -> mSubtitleTextView
    android.widget.ImageButton mNavButtonView -> mNavButtonView
    android.widget.ImageView mLogoView -> mLogoView
    android.graphics.drawable.Drawable mCollapseIcon -> mCollapseIcon
    java.lang.CharSequence mCollapseDescription -> mCollapseDescription
    android.widget.ImageButton mCollapseButtonView -> mCollapseButtonView
    android.view.View mExpandedActionView -> mExpandedActionView
    android.content.Context mPopupContext -> mPopupContext
    int mPopupTheme -> mPopupTheme
    int mTitleTextAppearance -> mTitleTextAppearance
    int mSubtitleTextAppearance -> mSubtitleTextAppearance
    int mButtonGravity -> mButtonGravity
    int mMaxButtonHeight -> mMaxButtonHeight
    int mTitleMarginStart -> mTitleMarginStart
    int mTitleMarginEnd -> mTitleMarginEnd
    int mTitleMarginTop -> mTitleMarginTop
    int mTitleMarginBottom -> mTitleMarginBottom
    android.support.v7.widget.RtlSpacingHelper mContentInsets -> mContentInsets
    int mContentInsetStartWithNavigation -> mContentInsetStartWithNavigation
    int mContentInsetEndWithActions -> mContentInsetEndWithActions
    int mGravity -> mGravity
    java.lang.CharSequence mTitleText -> mTitleText
    java.lang.CharSequence mSubtitleText -> mSubtitleText
    int mTitleTextColor -> mTitleTextColor
    int mSubtitleTextColor -> mSubtitleTextColor
    boolean mEatingTouch -> mEatingTouch
    boolean mEatingHover -> mEatingHover
    java.util.ArrayList mTempViews -> mTempViews
    java.util.ArrayList mHiddenViews -> mHiddenViews
    int[] mTempMargins -> mTempMargins
    android.support.v7.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> mMenuViewItemClickListener
    android.support.v7.widget.ToolbarWidgetWrapper mWrapper -> mWrapper
    android.support.v7.widget.ActionMenuPresenter mOuterActionMenuPresenter -> mOuterActionMenuPresenter
    android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> mExpandedMenuPresenter
    android.support.v7.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> mActionMenuPresenterCallback
    android.support.v7.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> mMenuBuilderCallback
    boolean mCollapsible -> mCollapsible
    java.lang.Runnable mShowOverflowMenuRunnable -> mShowOverflowMenuRunnable
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setPopupTheme(int) -> setPopupTheme
    int getPopupTheme() -> getPopupTheme
    void setTitleMargin(int,int,int,int) -> setTitleMargin
    int getTitleMarginStart() -> getTitleMarginStart
    void setTitleMarginStart(int) -> setTitleMarginStart
    int getTitleMarginTop() -> getTitleMarginTop
    void setTitleMarginTop(int) -> setTitleMarginTop
    int getTitleMarginEnd() -> getTitleMarginEnd
    void setTitleMarginEnd(int) -> setTitleMarginEnd
    int getTitleMarginBottom() -> getTitleMarginBottom
    void setTitleMarginBottom(int) -> setTitleMarginBottom
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void setLogo(int) -> setLogo
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    void setMenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter) -> setMenu
    void dismissPopupMenus() -> dismissPopupMenus
    boolean isTitleTruncated() -> isTitleTruncated
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    android.graphics.drawable.Drawable getLogo() -> getLogo
    void setLogoDescription(int) -> setLogoDescription
    void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    java.lang.CharSequence getLogoDescription() -> getLogoDescription
    void ensureLogoView() -> ensureLogoView
    boolean hasExpandedActionView() -> hasExpandedActionView
    void collapseActionView() -> collapseActionView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(int) -> setTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(int) -> setSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    void setTitleTextColor(int) -> setTitleTextColor
    void setSubtitleTextColor(int) -> setSubtitleTextColor
    java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    void setNavigationContentDescription(int) -> setNavigationContentDescription
    void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    void setNavigationIcon(int) -> setNavigationIcon
    void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    android.view.Menu getMenu() -> getMenu
    void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    void ensureMenu() -> ensureMenu
    void ensureMenuView() -> ensureMenuView
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void inflateMenu(int) -> inflateMenu
    void setOnMenuItemClickListener(android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    int getContentInsetStart() -> getContentInsetStart
    int getContentInsetEnd() -> getContentInsetEnd
    void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    int getContentInsetLeft() -> getContentInsetLeft
    int getContentInsetRight() -> getContentInsetRight
    int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    void ensureNavButtonView() -> ensureNavButtonView
    void ensureCollapseButtonView() -> ensureCollapseButtonView
    void addSystemView(android.view.View,boolean) -> addSystemView
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void postShowOverflowMenu() -> postShowOverflowMenu
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    boolean shouldCollapse() -> shouldCollapse
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    int getChildTop(android.view.View,int) -> getChildTop
    int getChildVerticalGravity(int) -> getChildVerticalGravity
    void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    boolean shouldLayout(android.view.View) -> shouldLayout
    int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    int getVerticalMargins(android.view.View) -> getVerticalMargins
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    boolean isCustomView(android.view.View) -> isCustomView
    android.support.v7.widget.DecorToolbar getWrapper() -> getWrapper
    void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    void setCollapsible(boolean) -> setCollapsible
    void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    void ensureContentInsets() -> ensureContentInsets
    android.support.v7.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    android.content.Context getPopupContext() -> getPopupContext
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v7.widget.Toolbar$1 -> android.support.v7.widget.Toolbar$1:
    android.support.v7.widget.Toolbar this$0 -> this$0
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.Toolbar$2 -> android.support.v7.widget.Toolbar$2:
    android.support.v7.widget.Toolbar this$0 -> this$0
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    void run() -> run
android.support.v7.widget.Toolbar$3 -> android.support.v7.widget.Toolbar$3:
    android.support.v7.widget.Toolbar this$0 -> this$0
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter -> android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter:
    android.support.v7.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.view.menu.MenuItemImpl mCurrentExpandedItem -> mCurrentExpandedItem
    android.support.v7.widget.Toolbar this$0 -> this$0
    void <init>(android.support.v7.widget.Toolbar) -> <init>
    void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
android.support.v7.widget.Toolbar$LayoutParams -> android.support.v7.widget.Toolbar$LayoutParams:
    int CUSTOM -> CUSTOM
    int SYSTEM -> SYSTEM
    int EXPANDED -> EXPANDED
    int mViewType -> mViewType
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(int,int,int) -> <init>
    void <init>(int) -> <init>
    void <init>(android.support.v7.widget.Toolbar$LayoutParams) -> <init>
    void <init>(android.support.v7.app.ActionBar$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
android.support.v7.widget.Toolbar$OnMenuItemClickListener -> android.support.v7.widget.Toolbar$OnMenuItemClickListener:
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.Toolbar$SavedState -> android.support.v7.widget.Toolbar$SavedState:
    int expandedMenuItemId -> expandedMenuItemId
    boolean isOverflowOpen -> isOverflowOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v7.widget.Toolbar$SavedState$1 -> android.support.v7.widget.Toolbar$SavedState$1:
    void <init>() -> <init>
    android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.Toolbar$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.ToolbarWidgetWrapper -> android.support.v7.widget.ToolbarWidgetWrapper:
    java.lang.String TAG -> TAG
    int AFFECTS_LOGO_MASK -> AFFECTS_LOGO_MASK
    long DEFAULT_FADE_DURATION_MS -> DEFAULT_FADE_DURATION_MS
    android.support.v7.widget.Toolbar mToolbar -> mToolbar
    int mDisplayOpts -> mDisplayOpts
    android.view.View mTabView -> mTabView
    android.widget.Spinner mSpinner -> mSpinner
    android.view.View mCustomView -> mCustomView
    android.graphics.drawable.Drawable mIcon -> mIcon
    android.graphics.drawable.Drawable mLogo -> mLogo
    android.graphics.drawable.Drawable mNavIcon -> mNavIcon
    boolean mTitleSet -> mTitleSet
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    java.lang.CharSequence mHomeDescription -> mHomeDescription
    android.view.Window$Callback mWindowCallback -> mWindowCallback
    boolean mMenuPrepared -> mMenuPrepared
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> mActionMenuPresenter
    int mNavigationMode -> mNavigationMode
    int mDefaultNavigationContentDescription -> mDefaultNavigationContentDescription
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> mDefaultNavigationIcon
    void <init>(android.support.v7.widget.Toolbar,boolean) -> <init>
    void <init>(android.support.v7.widget.Toolbar,boolean,int,int) -> <init>
    void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    int detectDisplayOptions() -> detectDisplayOptions
    android.view.ViewGroup getViewGroup() -> getViewGroup
    android.content.Context getContext() -> getContext
    boolean hasExpandedActionView() -> hasExpandedActionView
    void collapseActionView() -> collapseActionView
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitleInt(java.lang.CharSequence) -> setTitleInt
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void initProgress() -> initProgress
    void initIndeterminateProgress() -> initIndeterminateProgress
    boolean hasIcon() -> hasIcon
    boolean hasLogo() -> hasLogo
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void updateToolbarLogo() -> updateToolbarLogo
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> setMenu
    void dismissPopupMenus() -> dismissPopupMenus
    int getDisplayOptions() -> getDisplayOptions
    void setDisplayOptions(int) -> setDisplayOptions
    void setEmbeddedTabView(android.support.v7.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    boolean isTitleTruncated() -> isTitleTruncated
    void setCollapsible(boolean) -> setCollapsible
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    void ensureSpinner() -> ensureSpinner
    void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener) -> setDropdownParams
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    int getDropdownItemCount() -> getDropdownItemCount
    void setCustomView(android.view.View) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    void animateToVisibility(int) -> animateToVisibility
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    void setNavigationIcon(int) -> setNavigationIcon
    void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> setDefaultNavigationIcon
    void updateNavigationIcon() -> updateNavigationIcon
    void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    void setNavigationContentDescription(int) -> setNavigationContentDescription
    void updateHomeAccessibility() -> updateHomeAccessibility
    void saveHierarchyState(android.util.SparseArray) -> saveHierarchyState
    void restoreHierarchyState(android.util.SparseArray) -> restoreHierarchyState
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    int getHeight() -> getHeight
    void setVisibility(int) -> setVisibility
    int getVisibility() -> getVisibility
    void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    android.view.Menu getMenu() -> getMenu
android.support.v7.widget.ToolbarWidgetWrapper$1 -> android.support.v7.widget.ToolbarWidgetWrapper$1:
    android.support.v7.view.menu.ActionMenuItem mNavItem -> mNavItem
    android.support.v7.widget.ToolbarWidgetWrapper this$0 -> this$0
    void <init>(android.support.v7.widget.ToolbarWidgetWrapper) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v7.widget.ToolbarWidgetWrapper$2 -> android.support.v7.widget.ToolbarWidgetWrapper$2:
    boolean mCanceled -> mCanceled
    int val$visibility -> val$visibility
    android.support.v7.widget.ToolbarWidgetWrapper this$0 -> this$0
    void <init>(android.support.v7.widget.ToolbarWidgetWrapper,int) -> <init>
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v7.widget.TooltipCompat -> android.support.v7.widget.TooltipCompat:
    android.support.v7.widget.TooltipCompat$ViewCompatImpl IMPL -> IMPL
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v7.widget.TooltipCompat$1 -> android.support.v7.widget.TooltipCompat$1:
android.support.v7.widget.TooltipCompat$Api26ViewCompatImpl -> android.support.v7.widget.TooltipCompat$Api26ViewCompatImpl:
    void <init>() -> <init>
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    void <init>(android.support.v7.widget.TooltipCompat$1) -> <init>
android.support.v7.widget.TooltipCompat$BaseViewCompatImpl -> android.support.v7.widget.TooltipCompat$BaseViewCompatImpl:
    void <init>() -> <init>
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    void <init>(android.support.v7.widget.TooltipCompat$1) -> <init>
android.support.v7.widget.TooltipCompat$ViewCompatImpl -> android.support.v7.widget.TooltipCompat$ViewCompatImpl:
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
android.support.v7.widget.TooltipCompatHandler -> android.support.v7.widget.TooltipCompatHandler:
    java.lang.String TAG -> TAG
    long LONG_CLICK_HIDE_TIMEOUT_MS -> LONG_CLICK_HIDE_TIMEOUT_MS
    long HOVER_HIDE_TIMEOUT_MS -> HOVER_HIDE_TIMEOUT_MS
    long HOVER_HIDE_TIMEOUT_SHORT_MS -> HOVER_HIDE_TIMEOUT_SHORT_MS
    android.view.View mAnchor -> mAnchor
    java.lang.CharSequence mTooltipText -> mTooltipText
    java.lang.Runnable mShowRunnable -> mShowRunnable
    java.lang.Runnable mHideRunnable -> mHideRunnable
    int mAnchorX -> mAnchorX
    int mAnchorY -> mAnchorY
    android.support.v7.widget.TooltipPopup mPopup -> mPopup
    boolean mFromTouch -> mFromTouch
    android.support.v7.widget.TooltipCompatHandler sActiveHandler -> sActiveHandler
    void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    void <init>(android.view.View,java.lang.CharSequence) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
    boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void show(boolean) -> show
    void hide() -> hide
    void access$000(android.support.v7.widget.TooltipCompatHandler,boolean) -> access$000
    void access$100(android.support.v7.widget.TooltipCompatHandler) -> access$100
android.support.v7.widget.TooltipCompatHandler$1 -> android.support.v7.widget.TooltipCompatHandler$1:
    android.support.v7.widget.TooltipCompatHandler this$0 -> this$0
    void <init>(android.support.v7.widget.TooltipCompatHandler) -> <init>
    void run() -> run
android.support.v7.widget.TooltipCompatHandler$2 -> android.support.v7.widget.TooltipCompatHandler$2:
    android.support.v7.widget.TooltipCompatHandler this$0 -> this$0
    void <init>(android.support.v7.widget.TooltipCompatHandler) -> <init>
    void run() -> run
android.support.v7.widget.TooltipPopup -> android.support.v7.widget.TooltipPopup:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.view.View mContentView -> mContentView
    android.widget.TextView mMessageView -> mMessageView
    android.view.WindowManager$LayoutParams mLayoutParams -> mLayoutParams
    android.graphics.Rect mTmpDisplayFrame -> mTmpDisplayFrame
    int[] mTmpAnchorPos -> mTmpAnchorPos
    int[] mTmpAppPos -> mTmpAppPos
    void <init>(android.content.Context) -> <init>
    void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    android.view.View getAppRootView(android.view.View) -> getAppRootView
android.support.v7.widget.VectorEnabledTintResources -> android.support.v7.widget.VectorEnabledTintResources:
    int MAX_SDK_WHERE_REQUIRED -> MAX_SDK_WHERE_REQUIRED
    java.lang.ref.WeakReference mContextRef -> mContextRef
    boolean shouldBeUsed() -> shouldBeUsed
    void <init>(android.content.Context,android.content.res.Resources) -> <init>
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
android.support.v7.widget.ViewBoundsCheck -> android.support.v7.widget.ViewBoundsCheck:
    int GT -> GT
    int EQ -> EQ
    int LT -> LT
    int CVS_PVS_POS -> CVS_PVS_POS
    int FLAG_CVS_GT_PVS -> FLAG_CVS_GT_PVS
    int FLAG_CVS_EQ_PVS -> FLAG_CVS_EQ_PVS
    int FLAG_CVS_LT_PVS -> FLAG_CVS_LT_PVS
    int CVS_PVE_POS -> CVS_PVE_POS
    int FLAG_CVS_GT_PVE -> FLAG_CVS_GT_PVE
    int FLAG_CVS_EQ_PVE -> FLAG_CVS_EQ_PVE
    int FLAG_CVS_LT_PVE -> FLAG_CVS_LT_PVE
    int CVE_PVS_POS -> CVE_PVS_POS
    int FLAG_CVE_GT_PVS -> FLAG_CVE_GT_PVS
    int FLAG_CVE_EQ_PVS -> FLAG_CVE_EQ_PVS
    int FLAG_CVE_LT_PVS -> FLAG_CVE_LT_PVS
    int CVE_PVE_POS -> CVE_PVE_POS
    int FLAG_CVE_GT_PVE -> FLAG_CVE_GT_PVE
    int FLAG_CVE_EQ_PVE -> FLAG_CVE_EQ_PVE
    int FLAG_CVE_LT_PVE -> FLAG_CVE_LT_PVE
    int MASK -> MASK
    android.support.v7.widget.ViewBoundsCheck$Callback mCallback -> mCallback
    android.support.v7.widget.ViewBoundsCheck$BoundFlags mBoundFlags -> mBoundFlags
    void <init>(android.support.v7.widget.ViewBoundsCheck$Callback) -> <init>
    android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
android.support.v7.widget.ViewBoundsCheck$BoundFlags -> android.support.v7.widget.ViewBoundsCheck$BoundFlags:
    int mBoundFlags -> mBoundFlags
    int mRvStart -> mRvStart
    int mRvEnd -> mRvEnd
    int mChildStart -> mChildStart
    int mChildEnd -> mChildEnd
    void <init>() -> <init>
    void setBounds(int,int,int,int) -> setBounds
    void setFlags(int,int) -> setFlags
    void addFlags(int) -> addFlags
    void resetFlags() -> resetFlags
    int compare(int,int) -> compare
    boolean boundsMatch() -> boundsMatch
android.support.v7.widget.ViewBoundsCheck$Callback -> android.support.v7.widget.ViewBoundsCheck$Callback:
    int getChildCount() -> getChildCount
    android.view.View getParent() -> getParent
    android.view.View getChildAt(int) -> getChildAt
    int getParentStart() -> getParentStart
    int getParentEnd() -> getParentEnd
    int getChildStart(android.view.View) -> getChildStart
    int getChildEnd(android.view.View) -> getChildEnd
android.support.v7.widget.ViewBoundsCheck$ViewBounds -> android.support.v7.widget.ViewBoundsCheck$ViewBounds:
android.support.v7.widget.ViewInfoStore -> android.support.v7.widget.ViewInfoStore:
    boolean DEBUG -> DEBUG
    android.support.v4.util.ArrayMap mLayoutHolderMap -> mLayoutHolderMap
    android.support.v4.util.LongSparseArray mOldChangedHolders -> mOldChangedHolders
    void <init>() -> <init>
    void clear() -> clear
    void addToPreLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    boolean isDisappearing(android.support.v7.widget.RecyclerView$ViewHolder) -> isDisappearing
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(android.support.v7.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    void addToOldChangeHolders(long,android.support.v7.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    void addToAppearedInPreLayoutHolders(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    boolean isInPreLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> isInPreLayout
    android.support.v7.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    void addToPostLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    void addToDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    void removeFromDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    void process(android.support.v7.widget.ViewInfoStore$ProcessCallback) -> process
    void removeViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> removeViewHolder
    void onDetach() -> onDetach
    void onViewDetached(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewDetached
android.support.v7.widget.ViewInfoStore$InfoRecord -> android.support.v7.widget.ViewInfoStore$InfoRecord:
    int FLAG_DISAPPEARED -> FLAG_DISAPPEARED
    int FLAG_APPEAR -> FLAG_APPEAR
    int FLAG_PRE -> FLAG_PRE
    int FLAG_POST -> FLAG_POST
    int FLAG_APPEAR_AND_DISAPPEAR -> FLAG_APPEAR_AND_DISAPPEAR
    int FLAG_PRE_AND_POST -> FLAG_PRE_AND_POST
    int FLAG_APPEAR_PRE_AND_POST -> FLAG_APPEAR_PRE_AND_POST
    int flags -> flags
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo preInfo -> preInfo
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo postInfo -> postInfo
    android.support.v4.util.Pools$Pool sPool -> sPool
    void <init>() -> <init>
    android.support.v7.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    void recycle(android.support.v7.widget.ViewInfoStore$InfoRecord) -> recycle
    void drainCache() -> drainCache
    void <clinit>() -> <clinit>
android.support.v7.widget.ViewInfoStore$ProcessCallback -> android.support.v7.widget.ViewInfoStore$ProcessCallback:
    void processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    void processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    void processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    void unused(android.support.v7.widget.RecyclerView$ViewHolder) -> unused
android.support.v7.widget.ViewStubCompat -> android.support.v7.widget.ViewStubCompat:
    int mLayoutResource -> mLayoutResource
    int mInflatedId -> mInflatedId
    java.lang.ref.WeakReference mInflatedViewRef -> mInflatedViewRef
    android.view.LayoutInflater mInflater -> mInflater
    android.support.v7.widget.ViewStubCompat$OnInflateListener mInflateListener -> mInflateListener
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getInflatedId() -> getInflatedId
    void setInflatedId(int) -> setInflatedId
    int getLayoutResource() -> getLayoutResource
    void setLayoutResource(int) -> setLayoutResource
    void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    void onMeasure(int,int) -> onMeasure
    void draw(android.graphics.Canvas) -> draw
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setVisibility(int) -> setVisibility
    android.view.View inflate() -> inflate
    void setOnInflateListener(android.support.v7.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
android.support.v7.widget.ViewStubCompat$OnInflateListener -> android.support.v7.widget.ViewStubCompat$OnInflateListener:
    void onInflate(android.support.v7.widget.ViewStubCompat,android.view.View) -> onInflate
android.support.v7.widget.ViewUtils -> android.support.v7.widget.ViewUtils:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> sComputeFitSystemWindowsMethod
    void <init>() -> <init>
    boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
    void <clinit>() -> <clinit>
android.support.v7.widget.helper.ItemTouchHelper -> android.support.v7.widget.helper.ItemTouchHelper:
    int UP -> UP
    int DOWN -> DOWN
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int START -> START
    int END -> END
    int ACTION_STATE_IDLE -> ACTION_STATE_IDLE
    int ACTION_STATE_SWIPE -> ACTION_STATE_SWIPE
    int ACTION_STATE_DRAG -> ACTION_STATE_DRAG
    int ANIMATION_TYPE_SWIPE_SUCCESS -> ANIMATION_TYPE_SWIPE_SUCCESS
    int ANIMATION_TYPE_SWIPE_CANCEL -> ANIMATION_TYPE_SWIPE_CANCEL
    int ANIMATION_TYPE_DRAG -> ANIMATION_TYPE_DRAG
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int ACTIVE_POINTER_ID_NONE -> ACTIVE_POINTER_ID_NONE
    int DIRECTION_FLAG_COUNT -> DIRECTION_FLAG_COUNT
    int ACTION_MODE_IDLE_MASK -> ACTION_MODE_IDLE_MASK
    int ACTION_MODE_SWIPE_MASK -> ACTION_MODE_SWIPE_MASK
    int ACTION_MODE_DRAG_MASK -> ACTION_MODE_DRAG_MASK
    int PIXELS_PER_SECOND -> PIXELS_PER_SECOND
    java.util.List mPendingCleanup -> mPendingCleanup
    float[] mTmpPosition -> mTmpPosition
    android.support.v7.widget.RecyclerView$ViewHolder mSelected -> mSelected
    float mInitialTouchX -> mInitialTouchX
    float mInitialTouchY -> mInitialTouchY
    float mSwipeEscapeVelocity -> mSwipeEscapeVelocity
    float mMaxSwipeVelocity -> mMaxSwipeVelocity
    float mDx -> mDx
    float mDy -> mDy
    float mSelectedStartX -> mSelectedStartX
    float mSelectedStartY -> mSelectedStartY
    int mActivePointerId -> mActivePointerId
    android.support.v7.widget.helper.ItemTouchHelper$Callback mCallback -> mCallback
    int mActionState -> mActionState
    int mSelectedFlags -> mSelectedFlags
    java.util.List mRecoverAnimations -> mRecoverAnimations
    int mSlop -> mSlop
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    java.lang.Runnable mScrollRunnable -> mScrollRunnable
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    java.util.List mSwapTargets -> mSwapTargets
    java.util.List mDistances -> mDistances
    android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> mChildDrawingOrderCallback
    android.view.View mOverdrawChild -> mOverdrawChild
    int mOverdrawChildPosition -> mOverdrawChildPosition
    android.support.v4.view.GestureDetectorCompat mGestureDetector -> mGestureDetector
    android.support.v7.widget.RecyclerView$OnItemTouchListener mOnItemTouchListener -> mOnItemTouchListener
    android.graphics.Rect mTmpRect -> mTmpRect
    long mDragScrollStartTimeInMs -> mDragScrollStartTimeInMs
    void <init>(android.support.v7.widget.helper.ItemTouchHelper$Callback) -> <init>
    boolean hitTest(android.view.View,float,float,float,float) -> hitTest
    void attachToRecyclerView(android.support.v7.widget.RecyclerView) -> attachToRecyclerView
    void setupCallbacks() -> setupCallbacks
    void destroyCallbacks() -> destroyCallbacks
    void initGestureDetector() -> initGestureDetector
    void getSelectedDxDy(float[]) -> getSelectedDxDy
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDrawOver
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDraw
    void select(android.support.v7.widget.RecyclerView$ViewHolder,int) -> select
    void postDispatchSwipe(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation,int) -> postDispatchSwipe
    boolean hasRunningRecoverAnim() -> hasRunningRecoverAnim
    boolean scrollIfNecessary() -> scrollIfNecessary
    java.util.List findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder) -> findSwapTargets
    void moveIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder) -> moveIfNecessary
    void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    int endRecoverAnimation(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> endRecoverAnimation
    void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> getItemOffsets
    void obtainVelocityTracker() -> obtainVelocityTracker
    void releaseVelocityTracker() -> releaseVelocityTracker
    android.support.v7.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> findSwipedView
    boolean checkSelectForSwipe(int,android.view.MotionEvent,int) -> checkSelectForSwipe
    android.view.View findChildView(android.view.MotionEvent) -> findChildView
    void startDrag(android.support.v7.widget.RecyclerView$ViewHolder) -> startDrag
    void startSwipe(android.support.v7.widget.RecyclerView$ViewHolder) -> startSwipe
    android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> findAnimation
    void updateDxDy(android.view.MotionEvent,int,int) -> updateDxDy
    int swipeIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder) -> swipeIfNecessary
    int checkHorizontalSwipe(android.support.v7.widget.RecyclerView$ViewHolder,int) -> checkHorizontalSwipe
    int checkVerticalSwipe(android.support.v7.widget.RecyclerView$ViewHolder,int) -> checkVerticalSwipe
    void addChildDrawingOrderCallback() -> addChildDrawingOrderCallback
    void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> removeChildDrawingOrderCallbackIfNecessary
android.support.v7.widget.helper.ItemTouchHelper$1 -> android.support.v7.widget.helper.ItemTouchHelper$1:
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(android.support.v7.widget.helper.ItemTouchHelper) -> <init>
    void run() -> run
android.support.v7.widget.helper.ItemTouchHelper$2 -> android.support.v7.widget.helper.ItemTouchHelper$2:
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(android.support.v7.widget.helper.ItemTouchHelper) -> <init>
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
android.support.v7.widget.helper.ItemTouchHelper$3 -> android.support.v7.widget.helper.ItemTouchHelper$3:
    int val$swipeDir -> val$swipeDir
    android.support.v7.widget.RecyclerView$ViewHolder val$prevSelected -> val$prevSelected
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,android.support.v7.widget.RecyclerView$ViewHolder) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.helper.ItemTouchHelper$4 -> android.support.v7.widget.helper.ItemTouchHelper$4:
    android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation val$anim -> val$anim
    int val$swipeDir -> val$swipeDir
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation,int) -> <init>
    void run() -> run
android.support.v7.widget.helper.ItemTouchHelper$5 -> android.support.v7.widget.helper.ItemTouchHelper$5:
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(android.support.v7.widget.helper.ItemTouchHelper) -> <init>
    int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
android.support.v7.widget.helper.ItemTouchHelper$Callback -> android.support.v7.widget.helper.ItemTouchHelper$Callback:
    int DEFAULT_DRAG_ANIMATION_DURATION -> DEFAULT_DRAG_ANIMATION_DURATION
    int DEFAULT_SWIPE_ANIMATION_DURATION -> DEFAULT_SWIPE_ANIMATION_DURATION
    int RELATIVE_DIR_FLAGS -> RELATIVE_DIR_FLAGS
    android.support.v7.widget.helper.ItemTouchUIUtil sUICallback -> sUICallback
    int ABS_HORIZONTAL_DIR_FLAGS -> ABS_HORIZONTAL_DIR_FLAGS
    android.view.animation.Interpolator sDragScrollInterpolator -> sDragScrollInterpolator
    android.view.animation.Interpolator sDragViewScrollCapInterpolator -> sDragViewScrollCapInterpolator
    long DRAG_SCROLL_ACCELERATION_LIMIT_TIME_MS -> DRAG_SCROLL_ACCELERATION_LIMIT_TIME_MS
    int mCachedMaxScrollSpeed -> mCachedMaxScrollSpeed
    void <init>() -> <init>
    android.support.v7.widget.helper.ItemTouchUIUtil getDefaultUIUtil() -> getDefaultUIUtil
    int convertToRelativeDirection(int,int) -> convertToRelativeDirection
    int makeMovementFlags(int,int) -> makeMovementFlags
    int makeFlag(int,int) -> makeFlag
    int getMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getMovementFlags
    int convertToAbsoluteDirection(int,int) -> convertToAbsoluteDirection
    int getAbsoluteMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getAbsoluteMovementFlags
    boolean hasDragFlag(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> hasDragFlag
    boolean hasSwipeFlag(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> hasSwipeFlag
    boolean canDropOver(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> canDropOver
    boolean onMove(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> onMove
    boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    int getBoundingBoxMargin() -> getBoundingBoxMargin
    float getSwipeThreshold(android.support.v7.widget.RecyclerView$ViewHolder) -> getSwipeThreshold
    float getMoveThreshold(android.support.v7.widget.RecyclerView$ViewHolder) -> getMoveThreshold
    float getSwipeEscapeVelocity(float) -> getSwipeEscapeVelocity
    float getSwipeVelocityThreshold(float) -> getSwipeVelocityThreshold
    android.support.v7.widget.RecyclerView$ViewHolder chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    void onSwiped(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onSwiped
    void onSelectedChanged(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
    int getMaxDragScroll(android.support.v7.widget.RecyclerView) -> getMaxDragScroll
    void onMoved(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,int,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDraw
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDrawOver
    void clearView(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> clearView
    void onChildDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    void onChildDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    long getAnimationDuration(android.support.v7.widget.RecyclerView,int,float,float) -> getAnimationDuration
    int interpolateOutOfBoundsScroll(android.support.v7.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    void <clinit>() -> <clinit>
android.support.v7.widget.helper.ItemTouchHelper$Callback$1 -> android.support.v7.widget.helper.ItemTouchHelper$Callback$1:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v7.widget.helper.ItemTouchHelper$Callback$2 -> android.support.v7.widget.helper.ItemTouchHelper$Callback$2:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v7.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener -> android.support.v7.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener:
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void <init>(android.support.v7.widget.helper.ItemTouchHelper) -> <init>
    boolean onDown(android.view.MotionEvent) -> onDown
    void onLongPress(android.view.MotionEvent) -> onLongPress
android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation -> android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation:
    float mStartDx -> mStartDx
    float mStartDy -> mStartDy
    float mTargetX -> mTargetX
    float mTargetY -> mTargetY
    android.support.v7.widget.RecyclerView$ViewHolder mViewHolder -> mViewHolder
    int mActionState -> mActionState
    android.animation.ValueAnimator mValueAnimator -> mValueAnimator
    int mAnimationType -> mAnimationType
    boolean mIsPendingCleanup -> mIsPendingCleanup
    float mX -> mX
    float mY -> mY
    boolean mOverridden -> mOverridden
    boolean mEnded -> mEnded
    float mFraction -> mFraction
    void <init>(android.support.v7.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    void setDuration(long) -> setDuration
    void start() -> start
    void cancel() -> cancel
    void setFraction(float) -> setFraction
    void update() -> update
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$1 -> android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$1:
    android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation this$0 -> this$0
    void <init>(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback -> android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback:
    int mDefaultSwipeDirs -> mDefaultSwipeDirs
    int mDefaultDragDirs -> mDefaultDragDirs
    void <init>(int,int) -> <init>
    void setDefaultSwipeDirs(int) -> setDefaultSwipeDirs
    void setDefaultDragDirs(int) -> setDefaultDragDirs
    int getSwipeDirs(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getSwipeDirs
    int getDragDirs(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getDragDirs
    int getMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getMovementFlags
android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler -> android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler:
    void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
android.support.v7.widget.helper.ItemTouchUIUtil -> android.support.v7.widget.helper.ItemTouchUIUtil:
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
    void clearView(android.view.View) -> clearView
    void onSelected(android.view.View) -> onSelected
android.support.v7.widget.helper.ItemTouchUIUtilImpl -> android.support.v7.widget.helper.ItemTouchUIUtilImpl:
    void <init>() -> <init>
android.support.v7.widget.helper.ItemTouchUIUtilImpl$Api21Impl -> android.support.v7.widget.helper.ItemTouchUIUtilImpl$Api21Impl:
    void <init>() -> <init>
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    float findMaxElevation(android.support.v7.widget.RecyclerView,android.view.View) -> findMaxElevation
    void clearView(android.view.View) -> clearView
android.support.v7.widget.helper.ItemTouchUIUtilImpl$BaseImpl -> android.support.v7.widget.helper.ItemTouchUIUtilImpl$BaseImpl:
    void <init>() -> <init>
    void clearView(android.view.View) -> clearView
    void onSelected(android.view.View) -> onSelected
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
android.support.v7.widget.util.SortedListAdapterCallback -> android.support.v7.widget.util.SortedListAdapterCallback:
    android.support.v7.widget.RecyclerView$Adapter mAdapter -> mAdapter
    void <init>(android.support.v7.widget.RecyclerView$Adapter) -> <init>
    void onInserted(int,int) -> onInserted
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int) -> onChanged
com.github.wrdlbrnft.modularadapter.ModularAdapter -> com.a.a.a.a:
    com.github.wrdlbrnft.modularadapter.itemmanager.ItemManager a -> a
    android.view.LayoutInflater b -> b
    void <init>(android.content.Context,com.github.wrdlbrnft.modularadapter.itemmanager.ItemManager) -> <init>
    com.github.wrdlbrnft.modularadapter.itemmanager.ItemManager getItemManager() -> a
    com.github.wrdlbrnft.modularadapter.ModularAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> a
    com.github.wrdlbrnft.modularadapter.ModularAdapter$ViewHolder onCreateViewHolder(android.view.LayoutInflater,android.view.ViewGroup,int) -> a
    void onBindViewHolder(com.github.wrdlbrnft.modularadapter.ModularAdapter$ViewHolder,int) -> a
    int getItemCount() -> getItemCount
    java.lang.Object getItem(int) -> a
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void a(com.github.wrdlbrnft.modularadapter.ModularAdapter,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet) -> a
com.github.wrdlbrnft.modularadapter.ModularAdapter$ViewHolder -> com.a.a.a.a$a:
    java.lang.Object a -> a
    void <init>(android.view.View) -> <init>
    void bind(java.lang.Object) -> a
    void performBind(java.lang.Object) -> b
com.github.wrdlbrnft.modularadapter.a -> com.a.a.a.b:
    com.github.wrdlbrnft.modularadapter.ModularAdapter a -> a
    void <init>(com.github.wrdlbrnft.modularadapter.ModularAdapter) -> <init>
    void onChangeSetAvailable(com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet) -> a
    com.github.wrdlbrnft.modularadapter.itemmanager.ItemManager$ChangeSetCallback a(com.github.wrdlbrnft.modularadapter.ModularAdapter) -> a
com.github.wrdlbrnft.modularadapter.b -> com.a.a.a.c:
    com.github.wrdlbrnft.modularadapter.ModularAdapter a -> a
    void <init>(com.github.wrdlbrnft.modularadapter.ModularAdapter) -> <init>
    void move(int,int) -> b_
    com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$MoveCallback a(com.github.wrdlbrnft.modularadapter.ModularAdapter) -> a
com.github.wrdlbrnft.modularadapter.c -> com.a.a.a.d:
    com.github.wrdlbrnft.modularadapter.ModularAdapter a -> a
    void <init>(com.github.wrdlbrnft.modularadapter.ModularAdapter) -> <init>
    void add(int,int) -> a
    com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$AddCallback a(com.github.wrdlbrnft.modularadapter.ModularAdapter) -> a
com.github.wrdlbrnft.modularadapter.d -> com.a.a.a.e:
    com.github.wrdlbrnft.modularadapter.ModularAdapter a -> a
    void <init>(com.github.wrdlbrnft.modularadapter.ModularAdapter) -> <init>
    void remove(int,int) -> c_
    com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$RemoveCallback a(com.github.wrdlbrnft.modularadapter.ModularAdapter) -> a
com.github.wrdlbrnft.modularadapter.e -> com.a.a.a.f:
    com.github.wrdlbrnft.modularadapter.ModularAdapter a -> a
    void <init>(com.github.wrdlbrnft.modularadapter.ModularAdapter) -> <init>
    void change(int,int) -> a_
    com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$ChangeCallback a(com.github.wrdlbrnft.modularadapter.ModularAdapter) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet -> com.a.a.a.a.a:
    void applyTo(com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$MoveCallback,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$AddCallback,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$RemoveCallback,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$ChangeCallback) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$AddCallback -> com.a.a.a.a.a$a:
    void add(int,int) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$ChangeCallback -> com.a.a.a.a.a$b:
    void change(int,int) -> a_
com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$MoveCallback -> com.a.a.a.a.a$c:
    void move(int,int) -> b_
com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$RemoveCallback -> com.a.a.a.a.a$d:
    void remove(int,int) -> c_
com.github.wrdlbrnft.modularadapter.itemmanager.ItemManager -> com.a.a.a.a.b:
    java.lang.Object getItem(int) -> a
    int getItemCount() -> a
    void addChangeSetCallback(com.github.wrdlbrnft.modularadapter.itemmanager.ItemManager$ChangeSetCallback) -> a
    void addStateCallback(com.github.wrdlbrnft.modularadapter.itemmanager.ItemManager$StateCallback) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.ItemManager$ChangeSetCallback -> com.a.a.a.a.b$a:
    void onChangeSetAvailable(com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.ItemManager$StateCallback -> com.a.a.a.a.b$b:
    void onChangesInProgress() -> a
    void onChangesFinished() -> b
com.github.wrdlbrnft.modularadapter.itemmanager.ModifiableItemManager -> com.a.a.a.a.c:
    com.github.wrdlbrnft.modularadapter.itemmanager.ModifiableItemManager$Transaction newTransaction() -> b
com.github.wrdlbrnft.modularadapter.itemmanager.ModifiableItemManager$Transaction -> com.a.a.a.a.c$a:
    com.github.wrdlbrnft.modularadapter.itemmanager.ModifiableItemManager$Transaction add(java.util.Collection) -> a
    com.github.wrdlbrnft.modularadapter.itemmanager.ModifiableItemManager$Transaction replaceAll(java.util.Collection) -> b
    void commit() -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.ComparatorBuilder -> com.a.a.a.a.a.a:
    java.util.List a -> a
    void <init>() -> <init>
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.ComparatorBuilder setOrderForModel(java.lang.Class,java.util.Comparator) -> a
    java.util.Comparator build() -> a
    int a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.ComparatorBuilder,com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$ViewModel,com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$ViewModel) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.ComparatorBuilder$a -> com.a.a.a.a.a.a$a:
    boolean a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$ViewModel,com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$ViewModel) -> a
    int b(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$ViewModel,com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$ViewModel) -> b
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager -> com.a.a.a.a.a.b:
    android.os.Handler a -> a
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$c b -> b
    java.util.concurrent.BlockingDeque c -> c
    java.util.concurrent.atomic.AtomicBoolean d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.lang.Class g -> g
    java.util.Comparator h -> h
    android.support.v7.util.SortedList i -> i
    void <init>(java.lang.Class,java.util.Comparator) -> <init>
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$ViewModel getItem(int) -> b
    int getItemCount() -> a
    void addChangeSetCallback(com.github.wrdlbrnft.modularadapter.itemmanager.ItemManager$ChangeSetCallback) -> a
    void addStateCallback(com.github.wrdlbrnft.modularadapter.itemmanager.ItemManager$StateCallback) -> a
    com.github.wrdlbrnft.modularadapter.itemmanager.ModifiableItemManager$Transaction newTransaction() -> b
    java.lang.Object getItem(int) -> a
    android.os.Handler a() -> c
    java.util.concurrent.BlockingDeque a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager) -> a
    java.util.concurrent.atomic.AtomicBoolean b(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager) -> b
    java.util.List c(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager) -> c
    android.support.v7.util.SortedList d(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager) -> d
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$c e(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager) -> e
    java.lang.Class f(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager) -> f
    java.util.Comparator g(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager) -> g
    java.util.List h(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager) -> h
    void <clinit>() -> <clinit>
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$ViewModel -> com.a.a.a.a.a.b$a:
    boolean isSameModelAs(java.lang.Object) -> a
    boolean isContentTheSameAs(java.lang.Object) -> b
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$a -> com.a.a.a.a.a.b$b:
    void a() -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$b -> com.a.a.a.a.a.b$c:
    void a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.a) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$c -> com.a.a.a.a.a.b$d:
    java.util.List a -> a
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$d b -> b
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager c -> c
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager) -> <init>
    java.util.List a() -> a
    void onInserted(int,int) -> onInserted
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int) -> onChanged
    boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
    boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    int compare(java.lang.Object,java.lang.Object) -> compare
    void a(int,int,com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.a) -> a
    void b(int,int,com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.a) -> b
    void c(int,int,com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.a) -> c
    void d(int,int,com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.a) -> d
    void a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$c,java.util.List,java.util.List) -> a
    void a(java.util.List,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$MoveCallback,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$AddCallback,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$RemoveCallback,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$ChangeCallback) -> a
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager,byte) -> <init>
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$d -> com.a.a.a.a.a.b$e:
    java.lang.Object a(int) -> a
    int a() -> a
    void a(java.util.List) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e -> com.a.a.a.a.a.b$f:
    java.util.List b -> b
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager a -> a
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager) -> <init>
    com.github.wrdlbrnft.modularadapter.itemmanager.ModifiableItemManager$Transaction add(java.util.Collection) -> a
    com.github.wrdlbrnft.modularadapter.itemmanager.ModifiableItemManager$Transaction replaceAll(java.util.Collection) -> b
    void commit() -> a
    void a() -> b
    void b() -> c
    void a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e,java.util.List) -> a
    void a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e,java.util.Collection) -> a
    void c(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e,java.util.Collection) -> b
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager,byte) -> <init>
    void b(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e) -> a
    void c(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e) -> b
    void d(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e) -> c
    void e(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e) -> d
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.a -> com.a.a.a.a.a.c:
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.b -> com.a.a.a.a.a.d:
    com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$MoveCallback a -> a
    com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$AddCallback b -> b
    com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$RemoveCallback c -> c
    com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$ChangeCallback d -> d
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$MoveCallback,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$AddCallback,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$RemoveCallback,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$ChangeCallback) -> <init>
    void move(int,int) -> b_
    void add(int,int) -> a
    void remove(int,int) -> c_
    void change(int,int) -> a_
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.c -> com.a.a.a.a.a.e:
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.ComparatorBuilder a -> a
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.ComparatorBuilder) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.util.Comparator a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.ComparatorBuilder) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.d -> com.a.a.a.a.a.f:
    java.util.List a -> a
    void <init>() -> <init>
    java.lang.Object a(int) -> a
    int a() -> a
    void a(java.util.List) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.f -> com.a.a.a.a.a.g:
    java.lang.Class a -> a
    java.util.Comparator b -> b
    void <init>(java.lang.Class,java.util.Comparator) -> <init>
    boolean a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$ViewModel,com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$ViewModel) -> a
    int b(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$ViewModel,com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$ViewModel) -> b
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.h -> com.a.a.a.a.a.h:
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$c a -> a
    java.util.List b -> b
    java.util.List c -> c
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$c,java.util.List,java.util.List) -> <init>
    void run() -> run
    java.lang.Runnable a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$c,java.util.List,java.util.List) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.i -> com.a.a.a.a.a.i:
    int a -> a
    int b -> b
    void <init>(int,int) -> <init>
    void a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.a) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.j -> com.a.a.a.a.a.j:
    int a -> a
    int b -> b
    void <init>(int,int) -> <init>
    void a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.a) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.k -> com.a.a.a.a.a.k:
    int a -> a
    int b -> b
    void <init>(int,int) -> <init>
    void a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.a) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.l -> com.a.a.a.a.a.l:
    int a -> a
    int b -> b
    void <init>(int,int) -> <init>
    void a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.a) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.m -> com.a.a.a.a.a.m:
    java.util.List a -> a
    void <init>(java.util.List) -> <init>
    void applyTo(com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$MoveCallback,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$AddCallback,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$RemoveCallback,com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet$ChangeCallback) -> a
    com.github.wrdlbrnft.modularadapter.itemmanager.ChangeSet a(java.util.List) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.o -> com.a.a.a.a.a.n:
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e a -> a
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e) -> <init>
    void run() -> run
    java.lang.Runnable a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.p -> com.a.a.a.a.a.o:
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e a -> a
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e) -> <init>
    void run() -> run
    java.lang.Runnable a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.q -> com.a.a.a.a.a.p:
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e a -> a
    java.util.Collection b -> b
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e,java.util.Collection) -> <init>
    void a() -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.t -> com.a.a.a.a.a.q:
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e a -> a
    java.util.Collection b -> b
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e,java.util.Collection) -> <init>
    void a() -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.v -> com.a.a.a.a.a.r:
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e a -> a
    java.util.List b -> b
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e,java.util.List) -> <init>
    void run() -> run
    java.lang.Runnable a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e,java.util.List) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.w -> com.a.a.a.a.a.s:
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e a -> a
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e) -> <init>
    void run() -> run
    java.lang.Runnable a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e) -> a
com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.x -> com.a.a.a.a.a.t:
    com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e a -> a
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e) -> <init>
    void run() -> run
    java.lang.Runnable a(com.github.wrdlbrnft.modularadapter.itemmanager.sortedlist.SortedListItemManager$e) -> a
com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter -> com.a.a.b.a:
    com.github.wrdlbrnft.modularadapter.itemmanager.ItemManager$StateCallback a -> a
    java.util.List b -> b
    void <init>(android.content.Context,java.lang.Class,java.util.Comparator) -> <init>
    com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$ViewHolder onCreateViewHolder(android.view.LayoutInflater,android.view.ViewGroup,int) -> b
    void addCallback(com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$Callback) -> a
    com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$Editor edit() -> b
    com.github.wrdlbrnft.modularadapter.ModularAdapter$ViewHolder onCreateViewHolder(android.view.LayoutInflater,android.view.ViewGroup,int) -> a
    java.util.List a(com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter) -> a
com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$1 -> com.a.a.b.a$1:
    com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter a -> a
    void <init>(com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter) -> <init>
    void onChangesInProgress() -> a
    void onChangesFinished() -> b
com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$Callback -> com.a.a.b.a$a:
    void onEditStarted() -> a
    void onEditFinished() -> b
com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$ComparatorBuilder -> com.a.a.b.a$b:
    void <init>() -> <init>
com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$Editor -> com.a.a.b.a$c:
    com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$Editor add(java.util.Collection) -> a
    com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$Editor replaceAll(java.util.Collection) -> b
    void commit() -> a
com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$ViewHolder -> com.a.a.b.a$d:
    void <init>(android.view.View) -> <init>
com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$ViewModel -> com.a.a.b.a$e:
com.github.wrdlbrnft.sortedlistadapter.a -> com.a.a.b.b:
    com.github.wrdlbrnft.modularadapter.itemmanager.ModifiableItemManager$Transaction a -> a
    void <init>(com.github.wrdlbrnft.modularadapter.itemmanager.ModifiableItemManager$Transaction) -> <init>
    com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$Editor add(java.util.Collection) -> a
    com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$Editor replaceAll(java.util.Collection) -> b
    void commit() -> a
com.simplecityapps.recyclerview_fastscroll.R -> com.simplecityapps.recyclerview_fastscroll.a:
com.simplecityapps.recyclerview_fastscroll.R$styleable -> com.simplecityapps.recyclerview_fastscroll.a$a:
    int[] FastScrollRecyclerView -> FastScrollRecyclerView
    int FastScrollRecyclerView_fastScrollAutoHide -> FastScrollRecyclerView_fastScrollAutoHide
    int FastScrollRecyclerView_fastScrollAutoHideDelay -> FastScrollRecyclerView_fastScrollAutoHideDelay
    int FastScrollRecyclerView_fastScrollPopupBackgroundSize -> FastScrollRecyclerView_fastScrollPopupBackgroundSize
    int FastScrollRecyclerView_fastScrollPopupBgColor -> FastScrollRecyclerView_fastScrollPopupBgColor
    int FastScrollRecyclerView_fastScrollPopupPosition -> FastScrollRecyclerView_fastScrollPopupPosition
    int FastScrollRecyclerView_fastScrollPopupTextColor -> FastScrollRecyclerView_fastScrollPopupTextColor
    int FastScrollRecyclerView_fastScrollPopupTextSize -> FastScrollRecyclerView_fastScrollPopupTextSize
    int FastScrollRecyclerView_fastScrollThumbColor -> FastScrollRecyclerView_fastScrollThumbColor
    int FastScrollRecyclerView_fastScrollTrackColor -> FastScrollRecyclerView_fastScrollTrackColor
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_android_descendantFocusability -> RecyclerView_android_descendantFocusability
    int RecyclerView_fastScrollEnabled -> RecyclerView_fastScrollEnabled
    int RecyclerView_fastScrollHorizontalThumbDrawable -> RecyclerView_fastScrollHorizontalThumbDrawable
    int RecyclerView_fastScrollHorizontalTrackDrawable -> RecyclerView_fastScrollHorizontalTrackDrawable
    int RecyclerView_fastScrollVerticalThumbDrawable -> RecyclerView_fastScrollVerticalThumbDrawable
    int RecyclerView_fastScrollVerticalTrackDrawable -> RecyclerView_fastScrollVerticalTrackDrawable
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    void <clinit>() -> <clinit>
com.simplecityapps.recyclerview_fastscroll.interfaces.OnFastScrollStateChangeListener -> com.simplecityapps.recyclerview_fastscroll.a.a:
    void onFastScrollStart() -> a
    void onFastScrollStop() -> b
com.simplecityapps.recyclerview_fastscroll.utils.Utils -> com.simplecityapps.recyclerview_fastscroll.b.a:
    int toPixels(android.content.res.Resources,float) -> a
    int toScreenPixels(android.content.res.Resources,float) -> b
    boolean isRtl(android.content.res.Resources) -> a
com.simplecityapps.recyclerview_fastscroll.views.FastScrollPopup -> com.simplecityapps.recyclerview_fastscroll.views.FastScrollPopup:
    com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView mRecyclerView -> a
    android.content.res.Resources mRes -> b
    int mBackgroundSize -> c
    int mCornerRadius -> d
    android.graphics.Path mBackgroundPath -> e
    android.graphics.RectF mBackgroundRect -> f
    android.graphics.Paint mBackgroundPaint -> g
    int mBackgroundColor -> h
    android.graphics.Rect mInvalidateRect -> i
    android.graphics.Rect mTmpRect -> j
    android.graphics.Rect mBgBounds -> k
    java.lang.String mSectionName -> l
    android.graphics.Paint mTextPaint -> m
    android.graphics.Rect mTextBounds -> n
    float mAlpha -> o
    android.animation.ObjectAnimator mAlphaAnimator -> p
    boolean mVisible -> q
    int mPosition -> r
    void <init>(android.content.res.Resources,com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView) -> <init>
    void setBgColor(int) -> a
    void setTextColor(int) -> b
    void setTextSize(int) -> c
    void setBackgroundSize(int) -> d
    void setTypeface(android.graphics.Typeface) -> a
    void animateVisibility(boolean) -> a
    void setAlpha(float) -> setAlpha
    float getAlpha() -> getAlpha
    void setPopupPosition(int) -> e
    float[] createRadii() -> b
    void draw(android.graphics.Canvas) -> a
    void setSectionName(java.lang.String) -> a
    android.graphics.Rect updateFastScrollerBounds(com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView,int) -> a
    boolean isVisible() -> a
com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView -> com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView:
    com.simplecityapps.recyclerview_fastscroll.views.FastScroller mScrollbar -> a
    com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$ScrollPositionState mScrollPosState -> b
    int mDownX -> c
    int mDownY -> d
    int mLastY -> e
    android.util.SparseIntArray mScrollOffsets -> f
    com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$ScrollOffsetInvalidator mScrollOffsetInvalidator -> g
    com.simplecityapps.recyclerview_fastscroll.interfaces.OnFastScrollStateChangeListener mStateChangeListener -> h
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getScrollBarWidth() -> getScrollBarWidth
    int getScrollBarThumbHeight() -> getScrollBarThumbHeight
    void onFinishInflate() -> onFinishInflate
    void setAdapter(android.support.v7.widget.RecyclerView$Adapter) -> setAdapter
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    boolean handleTouchEvent(android.view.MotionEvent) -> a
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    int getAvailableScrollHeight(int,int,int) -> a
    int getAvailableScrollHeight(int,int) -> a
    int getAvailableScrollBarHeight() -> getAvailableScrollBarHeight
    void draw(android.graphics.Canvas) -> draw
    void updateThumbPosition(com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$ScrollPositionState,int,int) -> a
    void updateThumbPositionWithMeasurableAdapter(com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$ScrollPositionState,int) -> a
    java.lang.String scrollToPositionAtProgress(float) -> a
    void onUpdateScrollbar() -> a
    int calculateAdapterHeight() -> b
    int calculateScrollDistanceToPosition(int) -> a
    void getCurScrollState(com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$ScrollPositionState) -> a
    void setThumbColor(int) -> setThumbColor
    void setTrackColor(int) -> setTrackColor
    void setPopupBgColor(int) -> setPopupBgColor
    void setPopupTextColor(int) -> setPopupTextColor
    void setPopupTextSize(int) -> setPopupTextSize
    void setPopUpTypeface(android.graphics.Typeface) -> setPopUpTypeface
    void setAutoHideDelay(int) -> setAutoHideDelay
    void setAutoHideEnabled(boolean) -> setAutoHideEnabled
    void setStateChangeListener(com.simplecityapps.recyclerview_fastscroll.interfaces.OnFastScrollStateChangeListener) -> setStateChangeListener
    void setPopupPosition(int) -> setPopupPosition
    android.util.SparseIntArray access$100(com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView) -> a
com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$1 -> com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$1:
com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$MeasurableAdapter -> com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$a:
    int getViewTypeHeight(android.support.v7.widget.RecyclerView,int) -> a
com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$ScrollOffsetInvalidator -> com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$b:
    com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView this$0 -> a
    void <init>(com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView) -> <init>
    void invalidateAllScrollOffsets() -> a
    void onChanged() -> onChanged
    void onItemRangeChanged(int,int) -> onItemRangeChanged
    void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    void onItemRangeInserted(int,int) -> onItemRangeInserted
    void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    void <init>(com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView,com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$1) -> <init>
com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$ScrollPositionState -> com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$c:
    int rowIndex -> a
    int rowTopOffset -> b
    int rowHeight -> c
    void <init>() -> <init>
com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$SectionedAdapter -> com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView$d:
    java.lang.String getSectionName(int) -> a_
com.simplecityapps.recyclerview_fastscroll.views.FastScroller -> com.simplecityapps.recyclerview_fastscroll.views.FastScroller:
    com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView mRecyclerView -> d
    com.simplecityapps.recyclerview_fastscroll.views.FastScrollPopup mPopup -> e
    int mThumbHeight -> f
    int mWidth -> g
    android.graphics.Paint mThumb -> h
    android.graphics.Paint mTrack -> i
    android.graphics.Rect mTmpRect -> j
    android.graphics.Rect mInvalidateRect -> k
    android.graphics.Rect mInvalidateTmpRect -> l
    int mTouchInset -> m
    int mTouchOffset -> n
    android.graphics.Point mThumbPosition -> a
    android.graphics.Point mOffset -> b
    boolean mIsDragging -> o
    android.animation.Animator mAutoHideAnimator -> p
    boolean mAnimatingShow -> c
    int mAutoHideDelay -> q
    boolean mAutoHideEnabled -> r
    java.lang.Runnable mHideRunnable -> s
    void <init>(android.content.Context,com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView,android.util.AttributeSet) -> <init>
    int getThumbHeight() -> a
    int getWidth() -> b
    boolean isDragging() -> c
    void handleTouchEvent(android.view.MotionEvent,int,int,int,com.simplecityapps.recyclerview_fastscroll.interfaces.OnFastScrollStateChangeListener) -> a
    void draw(android.graphics.Canvas) -> a
    boolean isNearPoint(int,int) -> c
    void setThumbPosition(int,int) -> a
    void setOffset(int,int) -> b
    void setOffsetX(int) -> setOffsetX
    int getOffsetX() -> getOffsetX
    void show() -> d
    void postAutoHideDelayed() -> e
    void cancelAutoHide() -> f
    void setThumbColor(int) -> a
    void setTrackColor(int) -> b
    void setPopupBgColor(int) -> c
    void setPopupTextColor(int) -> d
    void setPopupTypeface(android.graphics.Typeface) -> a
    void setPopupTextSize(int) -> e
    void setAutoHideDelay(int) -> f
    void setAutoHideEnabled(boolean) -> a
    void setPopupPosition(int) -> g
    boolean access$000(com.simplecityapps.recyclerview_fastscroll.views.FastScroller) -> a
    android.animation.Animator access$100(com.simplecityapps.recyclerview_fastscroll.views.FastScroller) -> b
    android.animation.Animator access$102(com.simplecityapps.recyclerview_fastscroll.views.FastScroller,android.animation.Animator) -> a
    com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView access$200(com.simplecityapps.recyclerview_fastscroll.views.FastScroller) -> c
    int access$300(com.simplecityapps.recyclerview_fastscroll.views.FastScroller) -> d
com.simplecityapps.recyclerview_fastscroll.views.FastScroller$1 -> com.simplecityapps.recyclerview_fastscroll.views.FastScroller$1:
    com.simplecityapps.recyclerview_fastscroll.views.FastScroller this$0 -> a
    void <init>(com.simplecityapps.recyclerview_fastscroll.views.FastScroller) -> <init>
    void run() -> run
com.simplecityapps.recyclerview_fastscroll.views.FastScroller$2 -> com.simplecityapps.recyclerview_fastscroll.views.FastScroller$2:
    com.simplecityapps.recyclerview_fastscroll.views.FastScroller this$0 -> a
    void <init>(com.simplecityapps.recyclerview_fastscroll.views.FastScroller) -> <init>
    void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> onScrolled
com.simplecityapps.recyclerview_fastscroll.views.FastScroller$3 -> com.simplecityapps.recyclerview_fastscroll.views.FastScroller$3:
    com.simplecityapps.recyclerview_fastscroll.views.FastScroller this$0 -> a
    void <init>(com.simplecityapps.recyclerview_fastscroll.views.FastScroller) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
de.mrapp.android.tabswitcher.Animation -> de.mrapp.android.tabswitcher.a:
    long duration -> a
    android.view.animation.Interpolator interpolator -> b
    void <init>(long,android.view.animation.Interpolator) -> <init>
    long getDuration() -> a
    android.view.animation.Interpolator getInterpolator() -> b
de.mrapp.android.tabswitcher.Animation$Builder -> de.mrapp.android.tabswitcher.a$a:
    long duration -> a
    android.view.animation.Interpolator interpolator -> b
    java.lang.Object self() -> a
    void <init>() -> <init>
    java.lang.Object setDuration(long) -> a
    java.lang.Object setInterpolator(android.view.animation.Interpolator) -> a
de.mrapp.android.tabswitcher.Layout -> de.mrapp.android.tabswitcher.b:
    de.mrapp.android.tabswitcher.Layout PHONE_PORTRAIT -> a
    de.mrapp.android.tabswitcher.Layout PHONE_LANDSCAPE -> b
    de.mrapp.android.tabswitcher.Layout TABLET -> c
    de.mrapp.android.tabswitcher.Layout[] $VALUES -> d
    de.mrapp.android.tabswitcher.Layout[] values() -> values
    de.mrapp.android.tabswitcher.Layout valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.LayoutPolicy -> de.mrapp.android.tabswitcher.c:
    de.mrapp.android.tabswitcher.LayoutPolicy AUTO -> a
    de.mrapp.android.tabswitcher.LayoutPolicy PHONE -> b
    de.mrapp.android.tabswitcher.LayoutPolicy TABLET -> c
    int value -> d
    de.mrapp.android.tabswitcher.LayoutPolicy[] $VALUES -> e
    de.mrapp.android.tabswitcher.LayoutPolicy[] values() -> values
    de.mrapp.android.tabswitcher.LayoutPolicy valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int getValue() -> a
    de.mrapp.android.tabswitcher.LayoutPolicy fromValue(int) -> a
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.PeekAnimation -> de.mrapp.android.tabswitcher.d:
    float x -> a
    float y -> b
    float getX() -> c
    float getY() -> d
de.mrapp.android.tabswitcher.R -> de.mrapp.android.tabswitcher.e:
de.mrapp.android.tabswitcher.R$attr -> de.mrapp.android.tabswitcher.e$a:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogButtonGroupStyle -> alertDialogButtonGroupStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int allowStacking -> allowStacking
    int alpha -> alpha
    int alphabeticModifiers -> alphabeticModifiers
    int arrowHeadLength -> arrowHeadLength
    int arrowShaftLength -> arrowShaftLength
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int autoSizeMaxTextSize -> autoSizeMaxTextSize
    int autoSizeMinTextSize -> autoSizeMinTextSize
    int autoSizePresetSizes -> autoSizePresetSizes
    int autoSizeStepGranularity -> autoSizeStepGranularity
    int autoSizeTextType -> autoSizeTextType
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int backgroundTint -> backgroundTint
    int backgroundTintMode -> backgroundTintMode
    int barLength -> barLength
    int borderlessButtonStyle -> borderlessButtonStyle
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarNegativeButtonStyle -> buttonBarNegativeButtonStyle
    int buttonBarNeutralButtonStyle -> buttonBarNeutralButtonStyle
    int buttonBarPositiveButtonStyle -> buttonBarPositiveButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int buttonGravity -> buttonGravity
    int buttonPanelSideLayout -> buttonPanelSideLayout
    int buttonStyle -> buttonStyle
    int buttonStyleSmall -> buttonStyleSmall
    int buttonTint -> buttonTint
    int buttonTintMode -> buttonTintMode
    int checkboxStyle -> checkboxStyle
    int checkedTextViewStyle -> checkedTextViewStyle
    int closeIcon -> closeIcon
    int closeItemLayout -> closeItemLayout
    int collapseContentDescription -> collapseContentDescription
    int collapseIcon -> collapseIcon
    int color -> color
    int colorAccent -> colorAccent
    int colorBackgroundFloating -> colorBackgroundFloating
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorError -> colorError
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int commitIcon -> commitIcon
    int contentDescription -> contentDescription
    int contentInsetEnd -> contentInsetEnd
    int contentInsetEndWithActions -> contentInsetEndWithActions
    int contentInsetLeft -> contentInsetLeft
    int contentInsetRight -> contentInsetRight
    int contentInsetStart -> contentInsetStart
    int contentInsetStartWithNavigation -> contentInsetStartWithNavigation
    int controlBackground -> controlBackground
    int customNavigationLayout -> customNavigationLayout
    int defaultQueryHint -> defaultQueryHint
    int dialogPreferredPadding -> dialogPreferredPadding
    int dialogTheme -> dialogTheme
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int drawableSize -> drawableSize
    int drawerArrowStyle -> drawerArrowStyle
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int editTextBackground -> editTextBackground
    int editTextColor -> editTextColor
    int editTextStyle -> editTextStyle
    int elevation -> elevation
    int emulateParallelLight -> emulateParallelLight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int font -> font
    int fontFamily -> fontFamily
    int fontProviderAuthority -> fontProviderAuthority
    int fontProviderCerts -> fontProviderCerts
    int fontProviderFetchStrategy -> fontProviderFetchStrategy
    int fontProviderFetchTimeout -> fontProviderFetchTimeout
    int fontProviderPackage -> fontProviderPackage
    int fontProviderQuery -> fontProviderQuery
    int fontStyle -> fontStyle
    int fontWeight -> fontWeight
    int gapBetweenBars -> gapBetweenBars
    int goIcon -> goIcon
    int height -> height
    int hideOnContentScroll -> hideOnContentScroll
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconTint -> iconTint
    int iconTintMode -> iconTintMode
    int iconifiedByDefault -> iconifiedByDefault
    int imageButtonStyle -> imageButtonStyle
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int insetDrawable -> insetDrawable
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int layout -> layout
    int layoutManager -> layoutManager
    int layoutPolicy -> layoutPolicy
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listMenuViewStyle -> listMenuViewStyle
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int logoDescription -> logoDescription
    int maxButtonHeight -> maxButtonHeight
    int measureWithLargestChild -> measureWithLargestChild
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationContentDescription -> navigationContentDescription
    int navigationIcon -> navigationIcon
    int navigationMode -> navigationMode
    int numericModifiers -> numericModifiers
    int overlapAnchor -> overlapAnchor
    int paddingBottomNoButtons -> paddingBottomNoButtons
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int paddingTopNoTitle -> paddingTopNoTitle
    int panelBackground -> panelBackground
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupTheme -> popupTheme
    int popupWindowStyle -> popupWindowStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryBackground -> queryBackground
    int queryHint -> queryHint
    int radioButtonStyle -> radioButtonStyle
    int ratingBarStyle -> ratingBarStyle
    int ratingBarStyleIndicator -> ratingBarStyleIndicator
    int ratingBarStyleSmall -> ratingBarStyleSmall
    int reverseLayout -> reverseLayout
    int searchHintIcon -> searchHintIcon
    int searchIcon -> searchIcon
    int searchViewStyle -> searchViewStyle
    int seekBarStyle -> seekBarStyle
    int selectableItemBackground -> selectableItemBackground
    int selectableItemBackgroundBorderless -> selectableItemBackgroundBorderless
    int shadowElevation -> shadowElevation
    int shadowOrientation -> shadowOrientation
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int showText -> showText
    int showTitle -> showTitle
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int spanCount -> spanCount
    int spinBars -> spinBars
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerStyle -> spinnerStyle
    int splitTrack -> splitTrack
    int srcCompat -> srcCompat
    int stackFromEnd -> stackFromEnd
    int state_above_anchor -> state_above_anchor
    int subMenuArrow -> subMenuArrow
    int submitBackground -> submitBackground
    int subtitle -> subtitle
    int subtitleTextAppearance -> subtitleTextAppearance
    int subtitleTextColor -> subtitleTextColor
    int subtitleTextStyle -> subtitleTextStyle
    int suggestionRowLayout -> suggestionRowLayout
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int tabBackgroundColor -> tabBackgroundColor
    int tabCloseButtonIcon -> tabCloseButtonIcon
    int tabIcon -> tabIcon
    int tabTitleTextColor -> tabTitleTextColor
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSecondary -> textAppearanceListItemSecondary
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearancePopupMenuHeader -> textAppearancePopupMenuHeader
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorSearchUrl -> textColorSearchUrl
    int theme -> theme
    int thickness -> thickness
    int thumbTextPadding -> thumbTextPadding
    int thumbTint -> thumbTint
    int thumbTintMode -> thumbTintMode
    int tickMark -> tickMark
    int tickMarkTint -> tickMarkTint
    int tickMarkTintMode -> tickMarkTintMode
    int tint -> tint
    int tintMode -> tintMode
    int title -> title
    int titleMargin -> titleMargin
    int titleMarginBottom -> titleMarginBottom
    int titleMarginEnd -> titleMarginEnd
    int titleMarginStart -> titleMarginStart
    int titleMarginTop -> titleMarginTop
    int titleMargins -> titleMargins
    int titleTextAppearance -> titleTextAppearance
    int titleTextColor -> titleTextColor
    int titleTextStyle -> titleTextStyle
    int toolbarMenu -> toolbarMenu
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarNavigationIcon -> toolbarNavigationIcon
    int toolbarStyle -> toolbarStyle
    int toolbarTitle -> toolbarTitle
    int tooltipForegroundColor -> tooltipForegroundColor
    int tooltipFrameBackground -> tooltipFrameBackground
    int tooltipText -> tooltipText
    int track -> track
    int trackTint -> trackTint
    int trackTintMode -> trackTintMode
    int voiceIcon -> voiceIcon
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
de.mrapp.android.tabswitcher.R$color -> de.mrapp.android.tabswitcher.e$b:
    int abc_background_cache_hint_selector_material_dark -> abc_background_cache_hint_selector_material_dark
    int abc_background_cache_hint_selector_material_light -> abc_background_cache_hint_selector_material_light
    int abc_btn_colored_borderless_text_material -> abc_btn_colored_borderless_text_material
    int abc_btn_colored_text_material -> abc_btn_colored_text_material
    int abc_color_highlight_material -> abc_color_highlight_material
    int abc_hint_foreground_material_dark -> abc_hint_foreground_material_dark
    int abc_hint_foreground_material_light -> abc_hint_foreground_material_light
    int abc_input_method_navigation_guard -> abc_input_method_navigation_guard
    int abc_primary_text_disable_only_material_dark -> abc_primary_text_disable_only_material_dark
    int abc_primary_text_disable_only_material_light -> abc_primary_text_disable_only_material_light
    int abc_primary_text_material_dark -> abc_primary_text_material_dark
    int abc_primary_text_material_light -> abc_primary_text_material_light
    int abc_search_url_text -> abc_search_url_text
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int abc_secondary_text_material_dark -> abc_secondary_text_material_dark
    int abc_secondary_text_material_light -> abc_secondary_text_material_light
    int abc_tint_btn_checkable -> abc_tint_btn_checkable
    int abc_tint_default -> abc_tint_default
    int abc_tint_edittext -> abc_tint_edittext
    int abc_tint_seek_thumb -> abc_tint_seek_thumb
    int abc_tint_spinner -> abc_tint_spinner
    int abc_tint_switch_track -> abc_tint_switch_track
    int accent_material_dark -> accent_material_dark
    int accent_material_light -> accent_material_light
    int background_floating_material_dark -> background_floating_material_dark
    int background_floating_material_light -> background_floating_material_light
    int background_material_dark -> background_material_dark
    int background_material_light -> background_material_light
    int bright_foreground_disabled_material_dark -> bright_foreground_disabled_material_dark
    int bright_foreground_disabled_material_light -> bright_foreground_disabled_material_light
    int bright_foreground_inverse_material_dark -> bright_foreground_inverse_material_dark
    int bright_foreground_inverse_material_light -> bright_foreground_inverse_material_light
    int bright_foreground_material_dark -> bright_foreground_material_dark
    int bright_foreground_material_light -> bright_foreground_material_light
    int button_material_dark -> button_material_dark
    int button_material_light -> button_material_light
    int dim_foreground_disabled_material_dark -> dim_foreground_disabled_material_dark
    int dim_foreground_disabled_material_light -> dim_foreground_disabled_material_light
    int dim_foreground_material_dark -> dim_foreground_material_dark
    int dim_foreground_material_light -> dim_foreground_material_light
    int error_color_material -> error_color_material
    int foreground_material_dark -> foreground_material_dark
    int foreground_material_light -> foreground_material_light
    int highlighted_text_material_dark -> highlighted_text_material_dark
    int highlighted_text_material_light -> highlighted_text_material_light
    int material_blue_grey_800 -> material_blue_grey_800
    int material_blue_grey_900 -> material_blue_grey_900
    int material_blue_grey_950 -> material_blue_grey_950
    int material_deep_teal_200 -> material_deep_teal_200
    int material_deep_teal_500 -> material_deep_teal_500
    int material_grey_100 -> material_grey_100
    int material_grey_300 -> material_grey_300
    int material_grey_50 -> material_grey_50
    int material_grey_600 -> material_grey_600
    int material_grey_800 -> material_grey_800
    int material_grey_850 -> material_grey_850
    int material_grey_900 -> material_grey_900
    int notification_action_color_filter -> notification_action_color_filter
    int notification_icon_bg_color -> notification_icon_bg_color
    int notification_material_background_media_default_color -> notification_material_background_media_default_color
    int primary_dark_material_dark -> primary_dark_material_dark
    int primary_dark_material_light -> primary_dark_material_light
    int primary_material_dark -> primary_material_dark
    int primary_material_light -> primary_material_light
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int primary_text_default_material_light -> primary_text_default_material_light
    int primary_text_disabled_material_dark -> primary_text_disabled_material_dark
    int primary_text_disabled_material_light -> primary_text_disabled_material_light
    int ripple_material_dark -> ripple_material_dark
    int ripple_material_light -> ripple_material_light
    int scrim_insets_layout_insets_drawable_default_value -> scrim_insets_layout_insets_drawable_default_value
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    int secondary_text_disabled_material_dark -> secondary_text_disabled_material_dark
    int secondary_text_disabled_material_light -> secondary_text_disabled_material_light
    int switch_thumb_disabled_material_dark -> switch_thumb_disabled_material_dark
    int switch_thumb_disabled_material_light -> switch_thumb_disabled_material_light
    int switch_thumb_material_dark -> switch_thumb_material_dark
    int switch_thumb_material_light -> switch_thumb_material_light
    int switch_thumb_normal_material_dark -> switch_thumb_normal_material_dark
    int switch_thumb_normal_material_light -> switch_thumb_normal_material_light
    int tab_background_color -> tab_background_color
    int tab_switcher_background_color -> tab_switcher_background_color
    int tab_title_text_color -> tab_title_text_color
    int tooltip_background_dark -> tooltip_background_dark
    int tooltip_background_light -> tooltip_background_light
de.mrapp.android.tabswitcher.R$dimen -> de.mrapp.android.tabswitcher.e$c:
    int abc_action_bar_content_inset_material -> abc_action_bar_content_inset_material
    int abc_action_bar_content_inset_with_nav -> abc_action_bar_content_inset_with_nav
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_end_material -> abc_action_bar_default_padding_end_material
    int abc_action_bar_default_padding_start_material -> abc_action_bar_default_padding_start_material
    int abc_action_bar_elevation_material -> abc_action_bar_elevation_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_overflow_padding_end_material -> abc_action_bar_overflow_padding_end_material
    int abc_action_bar_overflow_padding_start_material -> abc_action_bar_overflow_padding_start_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_alert_dialog_button_bar_height -> abc_alert_dialog_button_bar_height
    int abc_button_inset_horizontal_material -> abc_button_inset_horizontal_material
    int abc_button_inset_vertical_material -> abc_button_inset_vertical_material
    int abc_button_padding_horizontal_material -> abc_button_padding_horizontal_material
    int abc_button_padding_vertical_material -> abc_button_padding_vertical_material
    int abc_cascading_menus_min_smallest_width -> abc_cascading_menus_min_smallest_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_corner_material -> abc_control_corner_material
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dialog_fixed_height_major -> abc_dialog_fixed_height_major
    int abc_dialog_fixed_height_minor -> abc_dialog_fixed_height_minor
    int abc_dialog_fixed_width_major -> abc_dialog_fixed_width_major
    int abc_dialog_fixed_width_minor -> abc_dialog_fixed_width_minor
    int abc_dialog_list_padding_bottom_no_buttons -> abc_dialog_list_padding_bottom_no_buttons
    int abc_dialog_list_padding_top_no_title -> abc_dialog_list_padding_top_no_title
    int abc_dialog_min_width_major -> abc_dialog_min_width_major
    int abc_dialog_min_width_minor -> abc_dialog_min_width_minor
    int abc_dialog_padding_material -> abc_dialog_padding_material
    int abc_dialog_padding_top_material -> abc_dialog_padding_top_material
    int abc_dialog_title_divider_material -> abc_dialog_title_divider_material
    int abc_disabled_alpha_material_dark -> abc_disabled_alpha_material_dark
    int abc_disabled_alpha_material_light -> abc_disabled_alpha_material_light
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_edit_text_inset_bottom_material -> abc_edit_text_inset_bottom_material
    int abc_edit_text_inset_horizontal_material -> abc_edit_text_inset_horizontal_material
    int abc_edit_text_inset_top_material -> abc_edit_text_inset_top_material
    int abc_floating_window_z -> abc_floating_window_z
    int abc_list_item_padding_horizontal_material -> abc_list_item_padding_horizontal_material
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_progress_bar_height_material -> abc_progress_bar_height_material
    int abc_search_view_preferred_height -> abc_search_view_preferred_height
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_seekbar_track_background_height_material -> abc_seekbar_track_background_height_material
    int abc_seekbar_track_progress_height_material -> abc_seekbar_track_progress_height_material
    int abc_select_dialog_padding_start_material -> abc_select_dialog_padding_start_material
    int abc_switch_padding -> abc_switch_padding
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_header_material -> abc_text_size_menu_header_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int compat_button_inset_horizontal_material -> compat_button_inset_horizontal_material
    int compat_button_inset_vertical_material -> compat_button_inset_vertical_material
    int compat_button_padding_horizontal_material -> compat_button_padding_horizontal_material
    int compat_button_padding_vertical_material -> compat_button_padding_vertical_material
    int compat_control_corner_material -> compat_control_corner_material
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int drag_threshold -> drag_threshold
    int elevation_shadow_view_shadow_elevation_default_value -> elevation_shadow_view_shadow_elevation_default_value
    int end_overshoot_pivot -> end_overshoot_pivot
    int highlight_alpha_material_colored -> highlight_alpha_material_colored
    int highlight_alpha_material_dark -> highlight_alpha_material_dark
    int highlight_alpha_material_light -> highlight_alpha_material_light
    int hint_alpha_material_dark -> hint_alpha_material_dark
    int hint_alpha_material_light -> hint_alpha_material_light
    int hint_pressed_alpha_material_dark -> hint_pressed_alpha_material_dark
    int hint_pressed_alpha_material_light -> hint_pressed_alpha_material_light
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
    int item_touch_helper_swipe_escape_max_velocity -> item_touch_helper_swipe_escape_max_velocity
    int item_touch_helper_swipe_escape_velocity -> item_touch_helper_swipe_escape_velocity
    int max_camera_distance -> max_camera_distance
    int max_overshoot_distance -> max_overshoot_distance
    int min_swipe_velocity -> min_swipe_velocity
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
    int stacked_tab_spacing -> stacked_tab_spacing
    int swipe_threshold -> swipe_threshold
    int swiped_tab_alpha -> swiped_tab_alpha
    int swiped_tab_scale -> swiped_tab_scale
    int tab_border_width -> tab_border_width
    int tab_inset -> tab_inset
    int tab_switcher_drawable_font_size_normal -> tab_switcher_drawable_font_size_normal
    int tab_switcher_drawable_font_size_small -> tab_switcher_drawable_font_size_small
    int tab_switcher_drawable_size -> tab_switcher_drawable_size
    int tab_title_container_height -> tab_title_container_height
    int tab_title_drawable_padding -> tab_title_drawable_padding
    int tab_title_padding -> tab_title_padding
    int tooltip_corner_radius -> tooltip_corner_radius
    int tooltip_horizontal_padding -> tooltip_horizontal_padding
    int tooltip_margin -> tooltip_margin
    int tooltip_precise_anchor_extra_offset -> tooltip_precise_anchor_extra_offset
    int tooltip_precise_anchor_threshold -> tooltip_precise_anchor_threshold
    int tooltip_vertical_padding -> tooltip_vertical_padding
    int tooltip_y_offset_non_touch -> tooltip_y_offset_non_touch
    int tooltip_y_offset_touch -> tooltip_y_offset_touch
de.mrapp.android.tabswitcher.R$drawable -> de.mrapp.android.tabswitcher.e$d:
    int abc_ab_share_pack_mtrl_alpha -> abc_ab_share_pack_mtrl_alpha
    int abc_action_bar_item_background_material -> abc_action_bar_item_background_material
    int abc_btn_borderless_material -> abc_btn_borderless_material
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_colored_material -> abc_btn_colored_material
    int abc_btn_default_mtrl_shape -> abc_btn_default_mtrl_shape
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_control_background_material -> abc_control_background_material
    int abc_dialog_material_background -> abc_dialog_material_background
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_material -> abc_ic_ab_back_material
    int abc_ic_arrow_drop_right_black_24dp -> abc_ic_arrow_drop_right_black_24dp
    int abc_ic_clear_material -> abc_ic_clear_material
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_material -> abc_ic_go_search_api_material
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_overflow_material -> abc_ic_menu_overflow_material
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_material -> abc_ic_search_api_material
    int abc_ic_star_black_16dp -> abc_ic_star_black_16dp
    int abc_ic_star_black_36dp -> abc_ic_star_black_36dp
    int abc_ic_star_black_48dp -> abc_ic_star_black_48dp
    int abc_ic_star_half_black_16dp -> abc_ic_star_half_black_16dp
    int abc_ic_star_half_black_36dp -> abc_ic_star_half_black_36dp
    int abc_ic_star_half_black_48dp -> abc_ic_star_half_black_48dp
    int abc_ic_voice_search_api_material -> abc_ic_voice_search_api_material
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_ratingbar_indicator_material -> abc_ratingbar_indicator_material
    int abc_ratingbar_material -> abc_ratingbar_material
    int abc_ratingbar_small_material -> abc_ratingbar_small_material
    int abc_scrubber_control_off_mtrl_alpha -> abc_scrubber_control_off_mtrl_alpha
    int abc_scrubber_control_to_pressed_mtrl_000 -> abc_scrubber_control_to_pressed_mtrl_000
    int abc_scrubber_control_to_pressed_mtrl_005 -> abc_scrubber_control_to_pressed_mtrl_005
    int abc_scrubber_primary_mtrl_alpha -> abc_scrubber_primary_mtrl_alpha
    int abc_scrubber_track_mtrl_alpha -> abc_scrubber_track_mtrl_alpha
    int abc_seekbar_thumb_material -> abc_seekbar_thumb_material
    int abc_seekbar_tick_mark_material -> abc_seekbar_tick_mark_material
    int abc_seekbar_track_material -> abc_seekbar_track_material
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_spinner_textfield_background_material -> abc_spinner_textfield_background_material
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_text_cursor_material -> abc_text_cursor_material
    int abc_text_select_handle_left_mtrl_dark -> abc_text_select_handle_left_mtrl_dark
    int abc_text_select_handle_left_mtrl_light -> abc_text_select_handle_left_mtrl_light
    int abc_text_select_handle_middle_mtrl_dark -> abc_text_select_handle_middle_mtrl_dark
    int abc_text_select_handle_middle_mtrl_light -> abc_text_select_handle_middle_mtrl_light
    int abc_text_select_handle_right_mtrl_dark -> abc_text_select_handle_right_mtrl_dark
    int abc_text_select_handle_right_mtrl_light -> abc_text_select_handle_right_mtrl_light
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int abc_vector_test -> abc_vector_test
    int ic_close_tab_18dp -> ic_close_tab_18dp
    int notification_action_background -> notification_action_background
    int notification_bg -> notification_bg
    int notification_bg_low -> notification_bg_low
    int notification_bg_low_normal -> notification_bg_low_normal
    int notification_bg_low_pressed -> notification_bg_low_pressed
    int notification_bg_normal -> notification_bg_normal
    int notification_bg_normal_pressed -> notification_bg_normal_pressed
    int notification_icon_background -> notification_icon_background
    int notification_template_icon_bg -> notification_template_icon_bg
    int notification_template_icon_low_bg -> notification_template_icon_low_bg
    int notification_tile_bg -> notification_tile_bg
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    int phone_close_tab_icon -> phone_close_tab_icon
    int phone_tab_background -> phone_tab_background
    int phone_tab_border -> phone_tab_border
    int tab_switcher_drawable_background -> tab_switcher_drawable_background
    int tooltip_frame_dark -> tooltip_frame_dark
    int tooltip_frame_light -> tooltip_frame_light
de.mrapp.android.tabswitcher.R$id -> de.mrapp.android.tabswitcher.e$e:
    int action0 -> action0
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_container -> action_container
    int action_context_bar -> action_context_bar
    int action_divider -> action_divider
    int action_image -> action_image
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int action_text -> action_text
    int actions -> actions
    int activity_chooser_view_content -> activity_chooser_view_content
    int add -> add
    int alertTitle -> alertTitle
    int always -> always
    int async -> async
    int auto -> auto
    int beginning -> beginning
    int blocking -> blocking
    int border_view -> border_view
    int bottom -> bottom
    int bottom_left -> bottom_left
    int bottom_right -> bottom_right
    int buttonPanel -> buttonPanel
    int cancel_action -> cancel_action
    int checkbox -> checkbox
    int child_container -> child_container
    int chronometer -> chronometer
    int close_tab_button -> close_tab_button
    int collapseActionView -> collapseActionView
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int disableHome -> disableHome
    int edit_query -> edit_query
    int end -> end
    int end_padder -> end_padder
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int forever -> forever
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int icon_group -> icon_group
    int ifRoom -> ifRoom
    int image -> image
    int info -> info
    int italic -> italic
    int item_touch_helper_previous_elevation -> item_touch_helper_previous_elevation
    int left -> left
    int line1 -> line1
    int line3 -> line3
    int listMode -> listMode
    int list_item -> list_item
    int media_actions -> media_actions
    int message -> message
    int middle -> middle
    int multiply -> multiply
    int never -> never
    int none -> none
    int normal -> normal
    int notification_background -> notification_background
    int notification_main_column -> notification_main_column
    int notification_main_column_container -> notification_main_column_container
    int parentPanel -> parentPanel
    int phone -> phone
    int preview_image_view -> preview_image_view
    int primary_toolbar -> primary_toolbar
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int right -> right
    int right_icon -> right_icon
    int right_side -> right_side
    int screen -> screen
    int scrollIndicatorDown -> scrollIndicatorDown
    int scrollIndicatorUp -> scrollIndicatorUp
    int scrollView -> scrollView
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int select_dialog_listview -> select_dialog_listview
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int spacer -> spacer
    int split_action_bar -> split_action_bar
    int src_atop -> src_atop
    int src_in -> src_in
    int src_over -> src_over
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int submenuarrow -> submenuarrow
    int submit_area -> submit_area
    int tabMode -> tabMode
    int tab_title_container -> tab_title_container
    int tab_title_text_view -> tab_title_text_view
    int tablet -> tablet
    int tag_properties -> tag_properties
    int tag_view_holder -> tag_view_holder
    int text -> text
    int text2 -> text2
    int textSpacerNoButtons -> textSpacerNoButtons
    int textSpacerNoTitle -> textSpacerNoTitle
    int time -> time
    int title -> title
    int titleDividerNoCustom -> titleDividerNoCustom
    int title_template -> title_template
    int top -> top
    int topPanel -> topPanel
    int top_left -> top_left
    int top_right -> top_right
    int uniform -> uniform
    int up -> up
    int useLogo -> useLogo
    int withText -> withText
    int wrap_content -> wrap_content
de.mrapp.android.tabswitcher.R$integer -> de.mrapp.android.tabswitcher.e$f:
    int abc_config_activityDefaultDur -> abc_config_activityDefaultDur
    int abc_config_activityShortDur -> abc_config_activityShortDur
    int cancel_button_image_alpha -> cancel_button_image_alpha
    int clear_animation_delay -> clear_animation_delay
    int config_tooltipAnimTime -> config_tooltipAnimTime
    int elevation_shadow_view_shadow_orientation_default_value -> elevation_shadow_view_shadow_orientation_default_value
    int hide_switcher_animation_duration -> hide_switcher_animation_duration
    int max_end_overshoot_angle -> max_end_overshoot_angle
    int max_start_overshoot_angle -> max_start_overshoot_angle
    int peek_animation_duration -> peek_animation_duration
    int relocate_animation_delay -> relocate_animation_delay
    int relocate_animation_duration -> relocate_animation_duration
    int reveal_animation_duration -> reveal_animation_duration
    int revert_overshoot_animation_duration -> revert_overshoot_animation_duration
    int show_switcher_animation_duration -> show_switcher_animation_duration
    int stacked_tab_count -> stacked_tab_count
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
    int swipe_animation_duration -> swipe_animation_duration
    int toolbar_visibility_animation_delay -> toolbar_visibility_animation_delay
    int toolbar_visibility_animation_duration -> toolbar_visibility_animation_duration
de.mrapp.android.tabswitcher.R$layout -> de.mrapp.android.tabswitcher.e$g:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_alert_dialog_button_bar_material -> abc_alert_dialog_button_bar_material
    int abc_alert_dialog_material -> abc_alert_dialog_material
    int abc_alert_dialog_title_material -> abc_alert_dialog_title_material
    int abc_dialog_title_material -> abc_dialog_title_material
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_header_item_layout -> abc_popup_menu_header_item_layout
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_select_dialog_material -> abc_select_dialog_material
    int notification_action -> notification_action
    int notification_action_tombstone -> notification_action_tombstone
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_custom -> notification_template_big_media_custom
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_big_media_narrow_custom -> notification_template_big_media_narrow_custom
    int notification_template_custom_big -> notification_template_custom_big
    int notification_template_icon_group -> notification_template_icon_group
    int notification_template_lines_media -> notification_template_lines_media
    int notification_template_media -> notification_template_media
    int notification_template_media_custom -> notification_template_media_custom
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    int phone_tab -> phone_tab
    int phone_toolbar -> phone_toolbar
    int select_dialog_item_material -> select_dialog_item_material
    int select_dialog_multichoice_material -> select_dialog_multichoice_material
    int select_dialog_singlechoice_material -> select_dialog_singlechoice_material
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
    int tab_switcher_menu_item -> tab_switcher_menu_item
    int tooltip -> tooltip
de.mrapp.android.tabswitcher.R$styleable -> de.mrapp.android.tabswitcher.e$h:
    int[] ActionBar -> ActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetEndWithActions -> ActionBar_contentInsetEndWithActions
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_contentInsetStartWithNavigation -> ActionBar_contentInsetStartWithNavigation
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_showTitle -> AlertDialog_showTitle
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AppCompatImageView -> AppCompatImageView
    int AppCompatImageView_android_src -> AppCompatImageView_android_src
    int AppCompatImageView_srcCompat -> AppCompatImageView_srcCompat
    int AppCompatImageView_tint -> AppCompatImageView_tint
    int AppCompatImageView_tintMode -> AppCompatImageView_tintMode
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int AppCompatSeekBar_android_thumb -> AppCompatSeekBar_android_thumb
    int AppCompatSeekBar_tickMark -> AppCompatSeekBar_tickMark
    int AppCompatSeekBar_tickMarkTint -> AppCompatSeekBar_tickMarkTint
    int AppCompatSeekBar_tickMarkTintMode -> AppCompatSeekBar_tickMarkTintMode
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int AppCompatTextHelper_android_textAppearance -> AppCompatTextHelper_android_textAppearance
    int AppCompatTextHelper_android_drawableTop -> AppCompatTextHelper_android_drawableTop
    int AppCompatTextHelper_android_drawableBottom -> AppCompatTextHelper_android_drawableBottom
    int AppCompatTextHelper_android_drawableLeft -> AppCompatTextHelper_android_drawableLeft
    int AppCompatTextHelper_android_drawableRight -> AppCompatTextHelper_android_drawableRight
    int AppCompatTextHelper_android_drawableStart -> AppCompatTextHelper_android_drawableStart
    int AppCompatTextHelper_android_drawableEnd -> AppCompatTextHelper_android_drawableEnd
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_autoSizeMaxTextSize -> AppCompatTextView_autoSizeMaxTextSize
    int AppCompatTextView_autoSizeMinTextSize -> AppCompatTextView_autoSizeMinTextSize
    int AppCompatTextView_autoSizePresetSizes -> AppCompatTextView_autoSizePresetSizes
    int AppCompatTextView_autoSizeStepGranularity -> AppCompatTextView_autoSizeStepGranularity
    int AppCompatTextView_autoSizeTextType -> AppCompatTextView_autoSizeTextType
    int AppCompatTextView_fontFamily -> AppCompatTextView_fontFamily
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] AppCompatTheme -> AppCompatTheme
    int AppCompatTheme_android_windowIsFloating -> AppCompatTheme_android_windowIsFloating
    int AppCompatTheme_android_windowAnimationStyle -> AppCompatTheme_android_windowAnimationStyle
    int AppCompatTheme_actionBarDivider -> AppCompatTheme_actionBarDivider
    int AppCompatTheme_actionBarItemBackground -> AppCompatTheme_actionBarItemBackground
    int AppCompatTheme_actionBarPopupTheme -> AppCompatTheme_actionBarPopupTheme
    int AppCompatTheme_actionBarSize -> AppCompatTheme_actionBarSize
    int AppCompatTheme_actionBarSplitStyle -> AppCompatTheme_actionBarSplitStyle
    int AppCompatTheme_actionBarStyle -> AppCompatTheme_actionBarStyle
    int AppCompatTheme_actionBarTabBarStyle -> AppCompatTheme_actionBarTabBarStyle
    int AppCompatTheme_actionBarTabStyle -> AppCompatTheme_actionBarTabStyle
    int AppCompatTheme_actionBarTabTextStyle -> AppCompatTheme_actionBarTabTextStyle
    int AppCompatTheme_actionBarTheme -> AppCompatTheme_actionBarTheme
    int AppCompatTheme_actionBarWidgetTheme -> AppCompatTheme_actionBarWidgetTheme
    int AppCompatTheme_actionButtonStyle -> AppCompatTheme_actionButtonStyle
    int AppCompatTheme_actionDropDownStyle -> AppCompatTheme_actionDropDownStyle
    int AppCompatTheme_actionMenuTextAppearance -> AppCompatTheme_actionMenuTextAppearance
    int AppCompatTheme_actionMenuTextColor -> AppCompatTheme_actionMenuTextColor
    int AppCompatTheme_actionModeBackground -> AppCompatTheme_actionModeBackground
    int AppCompatTheme_actionModeCloseButtonStyle -> AppCompatTheme_actionModeCloseButtonStyle
    int AppCompatTheme_actionModeCloseDrawable -> AppCompatTheme_actionModeCloseDrawable
    int AppCompatTheme_actionModeCopyDrawable -> AppCompatTheme_actionModeCopyDrawable
    int AppCompatTheme_actionModeCutDrawable -> AppCompatTheme_actionModeCutDrawable
    int AppCompatTheme_actionModeFindDrawable -> AppCompatTheme_actionModeFindDrawable
    int AppCompatTheme_actionModePasteDrawable -> AppCompatTheme_actionModePasteDrawable
    int AppCompatTheme_actionModePopupWindowStyle -> AppCompatTheme_actionModePopupWindowStyle
    int AppCompatTheme_actionModeSelectAllDrawable -> AppCompatTheme_actionModeSelectAllDrawable
    int AppCompatTheme_actionModeShareDrawable -> AppCompatTheme_actionModeShareDrawable
    int AppCompatTheme_actionModeSplitBackground -> AppCompatTheme_actionModeSplitBackground
    int AppCompatTheme_actionModeStyle -> AppCompatTheme_actionModeStyle
    int AppCompatTheme_actionModeWebSearchDrawable -> AppCompatTheme_actionModeWebSearchDrawable
    int AppCompatTheme_actionOverflowButtonStyle -> AppCompatTheme_actionOverflowButtonStyle
    int AppCompatTheme_actionOverflowMenuStyle -> AppCompatTheme_actionOverflowMenuStyle
    int AppCompatTheme_activityChooserViewStyle -> AppCompatTheme_activityChooserViewStyle
    int AppCompatTheme_alertDialogButtonGroupStyle -> AppCompatTheme_alertDialogButtonGroupStyle
    int AppCompatTheme_alertDialogCenterButtons -> AppCompatTheme_alertDialogCenterButtons
    int AppCompatTheme_alertDialogStyle -> AppCompatTheme_alertDialogStyle
    int AppCompatTheme_alertDialogTheme -> AppCompatTheme_alertDialogTheme
    int AppCompatTheme_autoCompleteTextViewStyle -> AppCompatTheme_autoCompleteTextViewStyle
    int AppCompatTheme_borderlessButtonStyle -> AppCompatTheme_borderlessButtonStyle
    int AppCompatTheme_buttonBarButtonStyle -> AppCompatTheme_buttonBarButtonStyle
    int AppCompatTheme_buttonBarNegativeButtonStyle -> AppCompatTheme_buttonBarNegativeButtonStyle
    int AppCompatTheme_buttonBarNeutralButtonStyle -> AppCompatTheme_buttonBarNeutralButtonStyle
    int AppCompatTheme_buttonBarPositiveButtonStyle -> AppCompatTheme_buttonBarPositiveButtonStyle
    int AppCompatTheme_buttonBarStyle -> AppCompatTheme_buttonBarStyle
    int AppCompatTheme_buttonStyle -> AppCompatTheme_buttonStyle
    int AppCompatTheme_buttonStyleSmall -> AppCompatTheme_buttonStyleSmall
    int AppCompatTheme_checkboxStyle -> AppCompatTheme_checkboxStyle
    int AppCompatTheme_checkedTextViewStyle -> AppCompatTheme_checkedTextViewStyle
    int AppCompatTheme_colorAccent -> AppCompatTheme_colorAccent
    int AppCompatTheme_colorBackgroundFloating -> AppCompatTheme_colorBackgroundFloating
    int AppCompatTheme_colorButtonNormal -> AppCompatTheme_colorButtonNormal
    int AppCompatTheme_colorControlActivated -> AppCompatTheme_colorControlActivated
    int AppCompatTheme_colorControlHighlight -> AppCompatTheme_colorControlHighlight
    int AppCompatTheme_colorControlNormal -> AppCompatTheme_colorControlNormal
    int AppCompatTheme_colorError -> AppCompatTheme_colorError
    int AppCompatTheme_colorPrimary -> AppCompatTheme_colorPrimary
    int AppCompatTheme_colorPrimaryDark -> AppCompatTheme_colorPrimaryDark
    int AppCompatTheme_colorSwitchThumbNormal -> AppCompatTheme_colorSwitchThumbNormal
    int AppCompatTheme_controlBackground -> AppCompatTheme_controlBackground
    int AppCompatTheme_dialogPreferredPadding -> AppCompatTheme_dialogPreferredPadding
    int AppCompatTheme_dialogTheme -> AppCompatTheme_dialogTheme
    int AppCompatTheme_dividerHorizontal -> AppCompatTheme_dividerHorizontal
    int AppCompatTheme_dividerVertical -> AppCompatTheme_dividerVertical
    int AppCompatTheme_dropDownListViewStyle -> AppCompatTheme_dropDownListViewStyle
    int AppCompatTheme_dropdownListPreferredItemHeight -> AppCompatTheme_dropdownListPreferredItemHeight
    int AppCompatTheme_editTextBackground -> AppCompatTheme_editTextBackground
    int AppCompatTheme_editTextColor -> AppCompatTheme_editTextColor
    int AppCompatTheme_editTextStyle -> AppCompatTheme_editTextStyle
    int AppCompatTheme_homeAsUpIndicator -> AppCompatTheme_homeAsUpIndicator
    int AppCompatTheme_imageButtonStyle -> AppCompatTheme_imageButtonStyle
    int AppCompatTheme_listChoiceBackgroundIndicator -> AppCompatTheme_listChoiceBackgroundIndicator
    int AppCompatTheme_listDividerAlertDialog -> AppCompatTheme_listDividerAlertDialog
    int AppCompatTheme_listMenuViewStyle -> AppCompatTheme_listMenuViewStyle
    int AppCompatTheme_listPopupWindowStyle -> AppCompatTheme_listPopupWindowStyle
    int AppCompatTheme_listPreferredItemHeight -> AppCompatTheme_listPreferredItemHeight
    int AppCompatTheme_listPreferredItemHeightLarge -> AppCompatTheme_listPreferredItemHeightLarge
    int AppCompatTheme_listPreferredItemHeightSmall -> AppCompatTheme_listPreferredItemHeightSmall
    int AppCompatTheme_listPreferredItemPaddingLeft -> AppCompatTheme_listPreferredItemPaddingLeft
    int AppCompatTheme_listPreferredItemPaddingRight -> AppCompatTheme_listPreferredItemPaddingRight
    int AppCompatTheme_panelBackground -> AppCompatTheme_panelBackground
    int AppCompatTheme_panelMenuListTheme -> AppCompatTheme_panelMenuListTheme
    int AppCompatTheme_panelMenuListWidth -> AppCompatTheme_panelMenuListWidth
    int AppCompatTheme_popupMenuStyle -> AppCompatTheme_popupMenuStyle
    int AppCompatTheme_popupWindowStyle -> AppCompatTheme_popupWindowStyle
    int AppCompatTheme_radioButtonStyle -> AppCompatTheme_radioButtonStyle
    int AppCompatTheme_ratingBarStyle -> AppCompatTheme_ratingBarStyle
    int AppCompatTheme_ratingBarStyleIndicator -> AppCompatTheme_ratingBarStyleIndicator
    int AppCompatTheme_ratingBarStyleSmall -> AppCompatTheme_ratingBarStyleSmall
    int AppCompatTheme_searchViewStyle -> AppCompatTheme_searchViewStyle
    int AppCompatTheme_seekBarStyle -> AppCompatTheme_seekBarStyle
    int AppCompatTheme_selectableItemBackground -> AppCompatTheme_selectableItemBackground
    int AppCompatTheme_selectableItemBackgroundBorderless -> AppCompatTheme_selectableItemBackgroundBorderless
    int AppCompatTheme_spinnerDropDownItemStyle -> AppCompatTheme_spinnerDropDownItemStyle
    int AppCompatTheme_spinnerStyle -> AppCompatTheme_spinnerStyle
    int AppCompatTheme_switchStyle -> AppCompatTheme_switchStyle
    int AppCompatTheme_textAppearanceLargePopupMenu -> AppCompatTheme_textAppearanceLargePopupMenu
    int AppCompatTheme_textAppearanceListItem -> AppCompatTheme_textAppearanceListItem
    int AppCompatTheme_textAppearanceListItemSecondary -> AppCompatTheme_textAppearanceListItemSecondary
    int AppCompatTheme_textAppearanceListItemSmall -> AppCompatTheme_textAppearanceListItemSmall
    int AppCompatTheme_textAppearancePopupMenuHeader -> AppCompatTheme_textAppearancePopupMenuHeader
    int AppCompatTheme_textAppearanceSearchResultSubtitle -> AppCompatTheme_textAppearanceSearchResultSubtitle
    int AppCompatTheme_textAppearanceSearchResultTitle -> AppCompatTheme_textAppearanceSearchResultTitle
    int AppCompatTheme_textAppearanceSmallPopupMenu -> AppCompatTheme_textAppearanceSmallPopupMenu
    int AppCompatTheme_textColorAlertDialogListItem -> AppCompatTheme_textColorAlertDialogListItem
    int AppCompatTheme_textColorSearchUrl -> AppCompatTheme_textColorSearchUrl
    int AppCompatTheme_toolbarNavigationButtonStyle -> AppCompatTheme_toolbarNavigationButtonStyle
    int AppCompatTheme_toolbarStyle -> AppCompatTheme_toolbarStyle
    int AppCompatTheme_tooltipForegroundColor -> AppCompatTheme_tooltipForegroundColor
    int AppCompatTheme_tooltipFrameBackground -> AppCompatTheme_tooltipFrameBackground
    int AppCompatTheme_windowActionBar -> AppCompatTheme_windowActionBar
    int AppCompatTheme_windowActionBarOverlay -> AppCompatTheme_windowActionBarOverlay
    int AppCompatTheme_windowActionModeOverlay -> AppCompatTheme_windowActionModeOverlay
    int AppCompatTheme_windowFixedHeightMajor -> AppCompatTheme_windowFixedHeightMajor
    int AppCompatTheme_windowFixedHeightMinor -> AppCompatTheme_windowFixedHeightMinor
    int AppCompatTheme_windowFixedWidthMajor -> AppCompatTheme_windowFixedWidthMajor
    int AppCompatTheme_windowFixedWidthMinor -> AppCompatTheme_windowFixedWidthMinor
    int AppCompatTheme_windowMinWidthMajor -> AppCompatTheme_windowMinWidthMajor
    int AppCompatTheme_windowMinWidthMinor -> AppCompatTheme_windowMinWidthMinor
    int AppCompatTheme_windowNoTitle -> AppCompatTheme_windowNoTitle
    int[] ButtonBarLayout -> ButtonBarLayout
    int ButtonBarLayout_allowStacking -> ButtonBarLayout_allowStacking
    int[] ColorStateListItem -> ColorStateListItem
    int ColorStateListItem_android_color -> ColorStateListItem_android_color
    int ColorStateListItem_android_alpha -> ColorStateListItem_android_alpha
    int ColorStateListItem_alpha -> ColorStateListItem_alpha
    int[] CompoundButton -> CompoundButton
    int CompoundButton_android_button -> CompoundButton_android_button
    int CompoundButton_buttonTint -> CompoundButton_buttonTint
    int CompoundButton_buttonTintMode -> CompoundButton_buttonTintMode
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_arrowHeadLength -> DrawerArrowToggle_arrowHeadLength
    int DrawerArrowToggle_arrowShaftLength -> DrawerArrowToggle_arrowShaftLength
    int DrawerArrowToggle_barLength -> DrawerArrowToggle_barLength
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int[] ElevationShadowView -> ElevationShadowView
    int ElevationShadowView_emulateParallelLight -> ElevationShadowView_emulateParallelLight
    int ElevationShadowView_shadowElevation -> ElevationShadowView_shadowElevation
    int ElevationShadowView_shadowOrientation -> ElevationShadowView_shadowOrientation
    int[] FontFamily -> FontFamily
    int FontFamily_fontProviderAuthority -> FontFamily_fontProviderAuthority
    int FontFamily_fontProviderCerts -> FontFamily_fontProviderCerts
    int FontFamily_fontProviderFetchStrategy -> FontFamily_fontProviderFetchStrategy
    int FontFamily_fontProviderFetchTimeout -> FontFamily_fontProviderFetchTimeout
    int FontFamily_fontProviderPackage -> FontFamily_fontProviderPackage
    int FontFamily_fontProviderQuery -> FontFamily_fontProviderQuery
    int[] FontFamilyFont -> FontFamilyFont
    int FontFamilyFont_font -> FontFamilyFont_font
    int FontFamilyFont_fontStyle -> FontFamilyFont_fontStyle
    int FontFamilyFont_fontWeight -> FontFamilyFont_fontWeight
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int[] MenuItem -> MenuItem
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_alphabeticModifiers -> MenuItem_alphabeticModifiers
    int MenuItem_contentDescription -> MenuItem_contentDescription
    int MenuItem_iconTint -> MenuItem_iconTint
    int MenuItem_iconTintMode -> MenuItem_iconTintMode
    int MenuItem_numericModifiers -> MenuItem_numericModifiers
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int MenuItem_tooltipText -> MenuItem_tooltipText
    int[] MenuView -> MenuView
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int MenuView_subMenuArrow -> MenuView_subMenuArrow
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int[] RecycleListView -> RecycleListView
    int RecycleListView_paddingBottomNoButtons -> RecycleListView_paddingBottomNoButtons
    int RecycleListView_paddingTopNoTitle -> RecycleListView_paddingTopNoTitle
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_android_descendantFocusability -> RecyclerView_android_descendantFocusability
    int RecyclerView_fastScrollEnabled -> RecyclerView_fastScrollEnabled
    int RecyclerView_fastScrollHorizontalThumbDrawable -> RecyclerView_fastScrollHorizontalThumbDrawable
    int RecyclerView_fastScrollHorizontalTrackDrawable -> RecyclerView_fastScrollHorizontalTrackDrawable
    int RecyclerView_fastScrollVerticalThumbDrawable -> RecyclerView_fastScrollVerticalThumbDrawable
    int RecyclerView_fastScrollVerticalTrackDrawable -> RecyclerView_fastScrollVerticalTrackDrawable
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    int[] ScrimInsetsLayout -> ScrimInsetsLayout
    int ScrimInsetsLayout_insetDrawable -> ScrimInsetsLayout_insetDrawable
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] Spinner -> Spinner
    int Spinner_android_entries -> Spinner_android_entries
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_popupTheme -> Spinner_popupTheme
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_thumbTint -> SwitchCompat_thumbTint
    int SwitchCompat_thumbTintMode -> SwitchCompat_thumbTintMode
    int SwitchCompat_track -> SwitchCompat_track
    int SwitchCompat_trackTint -> SwitchCompat_trackTint
    int SwitchCompat_trackTintMode -> SwitchCompat_trackTintMode
    int[] TabSwitcher -> TabSwitcher
    int TabSwitcher_android_background -> TabSwitcher_android_background
    int TabSwitcher_layoutPolicy -> TabSwitcher_layoutPolicy
    int TabSwitcher_tabBackgroundColor -> TabSwitcher_tabBackgroundColor
    int TabSwitcher_tabCloseButtonIcon -> TabSwitcher_tabCloseButtonIcon
    int TabSwitcher_tabIcon -> TabSwitcher_tabIcon
    int TabSwitcher_tabTitleTextColor -> TabSwitcher_tabTitleTextColor
    int TabSwitcher_toolbarMenu -> TabSwitcher_toolbarMenu
    int TabSwitcher_toolbarNavigationIcon -> TabSwitcher_toolbarNavigationIcon
    int TabSwitcher_toolbarTitle -> TabSwitcher_toolbarTitle
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textColorHint -> TextAppearance_android_textColorHint
    int TextAppearance_android_textColorLink -> TextAppearance_android_textColorLink
    int TextAppearance_android_shadowColor -> TextAppearance_android_shadowColor
    int TextAppearance_android_shadowDx -> TextAppearance_android_shadowDx
    int TextAppearance_android_shadowDy -> TextAppearance_android_shadowDy
    int TextAppearance_android_shadowRadius -> TextAppearance_android_shadowRadius
    int TextAppearance_android_fontFamily -> TextAppearance_android_fontFamily
    int TextAppearance_fontFamily -> TextAppearance_fontFamily
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_buttonGravity -> Toolbar_buttonGravity
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetEndWithActions -> Toolbar_contentInsetEndWithActions
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_contentInsetStartWithNavigation -> Toolbar_contentInsetStartWithNavigation
    int Toolbar_logo -> Toolbar_logo
    int Toolbar_logoDescription -> Toolbar_logoDescription
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_subtitleTextColor -> Toolbar_subtitleTextColor
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMargin -> Toolbar_titleMargin
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int Toolbar_titleTextColor -> Toolbar_titleTextColor
    int[] View -> View
    int View_android_theme -> View_android_theme
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int ViewBackgroundHelper_android_background -> ViewBackgroundHelper_android_background
    int ViewBackgroundHelper_backgroundTint -> ViewBackgroundHelper_backgroundTint
    int ViewBackgroundHelper_backgroundTintMode -> ViewBackgroundHelper_backgroundTintMode
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.RevealAnimation -> de.mrapp.android.tabswitcher.f:
    float x -> a
    float y -> b
    void <init>(long,android.view.animation.Interpolator,float,float) -> <init>
    float getX() -> c
    float getY() -> d
    void <init>(long,android.view.animation.Interpolator,float,float,de.mrapp.android.tabswitcher.RevealAnimation$1) -> <init>
de.mrapp.android.tabswitcher.RevealAnimation$1 -> de.mrapp.android.tabswitcher.f$1:
de.mrapp.android.tabswitcher.RevealAnimation$Builder -> de.mrapp.android.tabswitcher.f$a:
    float x -> c
    float y -> d
    void <init>() -> <init>
    de.mrapp.android.tabswitcher.RevealAnimation$Builder setX(float) -> a
    de.mrapp.android.tabswitcher.RevealAnimation$Builder setY(float) -> b
    de.mrapp.android.tabswitcher.RevealAnimation create() -> b
de.mrapp.android.tabswitcher.SwipeAnimation -> de.mrapp.android.tabswitcher.g:
    de.mrapp.android.tabswitcher.SwipeAnimation$SwipeDirection direction -> a
    void <init>(long,android.view.animation.Interpolator,de.mrapp.android.tabswitcher.SwipeAnimation$SwipeDirection) -> <init>
    de.mrapp.android.tabswitcher.SwipeAnimation$SwipeDirection getDirection() -> c
    void <init>(long,android.view.animation.Interpolator,de.mrapp.android.tabswitcher.SwipeAnimation$SwipeDirection,de.mrapp.android.tabswitcher.SwipeAnimation$1) -> <init>
de.mrapp.android.tabswitcher.SwipeAnimation$1 -> de.mrapp.android.tabswitcher.g$1:
de.mrapp.android.tabswitcher.SwipeAnimation$Builder -> de.mrapp.android.tabswitcher.g$a:
    de.mrapp.android.tabswitcher.SwipeAnimation$SwipeDirection direction -> c
    void <init>() -> <init>
    de.mrapp.android.tabswitcher.SwipeAnimation$Builder setDirection(de.mrapp.android.tabswitcher.SwipeAnimation$SwipeDirection) -> a
    de.mrapp.android.tabswitcher.SwipeAnimation create() -> b
de.mrapp.android.tabswitcher.SwipeAnimation$SwipeDirection -> de.mrapp.android.tabswitcher.g$b:
    de.mrapp.android.tabswitcher.SwipeAnimation$SwipeDirection LEFT -> a
    de.mrapp.android.tabswitcher.SwipeAnimation$SwipeDirection RIGHT -> b
    de.mrapp.android.tabswitcher.SwipeAnimation$SwipeDirection[] $VALUES -> c
    de.mrapp.android.tabswitcher.SwipeAnimation$SwipeDirection[] values() -> values
    de.mrapp.android.tabswitcher.SwipeAnimation$SwipeDirection valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.Tab -> de.mrapp.android.tabswitcher.Tab:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.Set callbacks -> callbacks
    java.lang.CharSequence title -> title
    int iconId -> iconId
    android.graphics.Bitmap iconBitmap -> iconBitmap
    boolean closeable -> closeable
    int closeButtonIconId -> closeButtonIconId
    android.graphics.Bitmap closeButtonIconBitmap -> closeButtonIconBitmap
    android.content.res.ColorStateList backgroundColor -> backgroundColor
    android.content.res.ColorStateList titleTextColor -> titleTextColor
    android.os.Bundle parameters -> parameters
    void notifyOnTitleChanged() -> e
    void notifyOnCloseableChanged() -> f
    void notifyOnBackgroundColorChanged() -> g
    void notifyOnTitleTextColorChanged() -> h
    void <init>(android.os.Parcel) -> <init>
    void <init>(java.lang.CharSequence) -> <init>
    java.lang.CharSequence getTitle() -> a
    void setTitle(java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getIcon(android.content.Context) -> a
    boolean isCloseable() -> b
    void setCloseable(boolean) -> a
    android.graphics.drawable.Drawable getCloseButtonIcon(android.content.Context) -> b
    android.content.res.ColorStateList getBackgroundColor() -> c
    void setBackgroundColor(int) -> b_
    void setBackgroundColor(android.content.res.ColorStateList) -> a
    android.content.res.ColorStateList getTitleTextColor() -> d
    void setTitleTextColor(int) -> b
    void setTitleTextColor(android.content.res.ColorStateList) -> b
    void setParameters(android.os.Bundle) -> a
    void addCallback(de.mrapp.android.tabswitcher.Tab$Callback) -> a
    void removeCallback(de.mrapp.android.tabswitcher.Tab$Callback) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.Tab$1 -> de.mrapp.android.tabswitcher.Tab$1:
    void <init>() -> <init>
    de.mrapp.android.tabswitcher.Tab createFromParcel(android.os.Parcel) -> a
    de.mrapp.android.tabswitcher.Tab[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
de.mrapp.android.tabswitcher.Tab$Callback -> de.mrapp.android.tabswitcher.Tab$a:
    void onTitleChanged(de.mrapp.android.tabswitcher.Tab) -> a
    void onCloseableChanged(de.mrapp.android.tabswitcher.Tab) -> b
    void onBackgroundColorChanged(de.mrapp.android.tabswitcher.Tab) -> c
    void onTitleTextColorChanged(de.mrapp.android.tabswitcher.Tab) -> d
de.mrapp.android.tabswitcher.TabCloseListener -> de.mrapp.android.tabswitcher.h:
    boolean onCloseTab(de.mrapp.android.tabswitcher.TabSwitcher,de.mrapp.android.tabswitcher.Tab) -> a
de.mrapp.android.tabswitcher.TabPreviewListener -> de.mrapp.android.tabswitcher.i:
    boolean onLoadTabPreview(de.mrapp.android.tabswitcher.TabSwitcher,de.mrapp.android.tabswitcher.Tab) -> a
de.mrapp.android.tabswitcher.TabSwitcher -> de.mrapp.android.tabswitcher.TabSwitcher:
    java.util.Queue pendingActions -> b
    java.util.Set listeners -> c
    de.mrapp.android.tabswitcher.LayoutPolicy layoutPolicy -> d
    de.mrapp.android.tabswitcher.model.TabSwitcherModel model -> e
    de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout layout -> f
    boolean $assertionsDisabled -> a
    void initialize(android.util.AttributeSet,int,int) -> a
    void initializeLayout(de.mrapp.android.tabswitcher.Layout,boolean) -> a
    void obtainStyledAttributes(android.util.AttributeSet,int,int) -> b
    void obtainLayoutPolicy(android.content.res.TypedArray) -> a
    void obtainBackground(android.content.res.TypedArray) -> b
    void obtainTabIcon(android.content.res.TypedArray) -> c
    void obtainTabBackgroundColor(android.content.res.TypedArray) -> d
    void obtainTabTitleTextColor(android.content.res.TypedArray) -> e
    void obtainTabCloseButtonIcon(android.content.res.TypedArray) -> f
    void obtainToolbarTitle(android.content.res.TypedArray) -> g
    void obtainToolbarNavigationIcon(android.content.res.TypedArray) -> h
    void obtainToolbarMenu(android.content.res.TypedArray) -> i
    void enqueuePendingAction(java.lang.Runnable) -> a
    void executePendingAction() -> g
    de.mrapp.android.tabswitcher.model.Model$Listener createModelListener() -> h
    de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout$Callback createLayoutCallback() -> i
    android.view.ViewTreeObserver$OnGlobalLayoutListener createGlobalLayoutListener(boolean) -> b
    void notifyOnSwitcherShown() -> j
    void notifyOnSwitcherHidden() -> k
    void notifyOnSelectionChanged(int,de.mrapp.android.tabswitcher.Tab) -> a
    void notifyOnTabAdded(int,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> a
    void notifyOnTabRemoved(int,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> b
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    void setupWithMenu(de.mrapp.android.tabswitcher.TabSwitcher,android.view.Menu,android.view.View$OnClickListener) -> a
    void addListener(de.mrapp.android.tabswitcher.TabSwitcherListener) -> a
    de.mrapp.android.tabswitcher.LayoutPolicy getLayoutPolicy() -> getLayoutPolicy
    void setLayoutPolicy(de.mrapp.android.tabswitcher.LayoutPolicy) -> setLayoutPolicy
    de.mrapp.android.tabswitcher.Layout getLayout() -> getLayout
    void addTab(de.mrapp.android.tabswitcher.Tab,int,de.mrapp.android.tabswitcher.Animation) -> a
    void removeTab(de.mrapp.android.tabswitcher.Tab) -> a
    void selectTab(de.mrapp.android.tabswitcher.Tab) -> b
    de.mrapp.android.tabswitcher.Tab getSelectedTab() -> getSelectedTab
    int getSelectedTabIndex() -> getSelectedTabIndex
    java.util.Iterator iterator() -> iterator
    boolean isEmpty() -> a
    int getCount() -> getCount
    de.mrapp.android.tabswitcher.Tab getTab(int) -> a
    int indexOf(de.mrapp.android.tabswitcher.Tab) -> c
    boolean isSwitcherShown() -> b
    void showSwitcher() -> c
    void hideSwitcher() -> d
    void setDecorator(de.mrapp.android.tabswitcher.TabSwitcherDecorator) -> setDecorator
    de.mrapp.android.tabswitcher.TabSwitcherDecorator getDecorator() -> getDecorator
    de.mrapp.android.util.logging.LogLevel getLogLevel() -> getLogLevel
    void setLogLevel(de.mrapp.android.util.logging.LogLevel) -> setLogLevel
    void setPadding(int,int,int,int) -> setPadding
    int getPaddingLeft() -> getPaddingLeft
    int getPaddingTop() -> getPaddingTop
    int getPaddingRight() -> getPaddingRight
    int getPaddingBottom() -> getPaddingBottom
    int getPaddingStart() -> getPaddingStart
    int getPaddingEnd() -> getPaddingEnd
    android.graphics.drawable.Drawable getTabIcon() -> getTabIcon
    void setTabIcon(int) -> setTabIcon
    void setTabIcon(android.graphics.Bitmap) -> setTabIcon
    android.content.res.ColorStateList getTabBackgroundColor() -> getTabBackgroundColor
    void setTabBackgroundColor(int) -> setTabBackgroundColor
    void setTabBackgroundColor(android.content.res.ColorStateList) -> setTabBackgroundColor
    android.content.res.ColorStateList getTabTitleTextColor() -> getTabTitleTextColor
    void setTabTitleTextColor(int) -> setTabTitleTextColor
    void setTabTitleTextColor(android.content.res.ColorStateList) -> setTabTitleTextColor
    android.graphics.drawable.Drawable getTabCloseButtonIcon() -> getTabCloseButtonIcon
    void setTabCloseButtonIcon(int) -> setTabCloseButtonIcon
    void setTabCloseButtonIcon(android.graphics.Bitmap) -> setTabCloseButtonIcon
    boolean areToolbarsShown() -> e
    void showToolbars(boolean) -> a
    java.lang.CharSequence getToolbarTitle() -> getToolbarTitle
    void setToolbarTitle(int) -> setToolbarTitle
    void setToolbarTitle(java.lang.CharSequence) -> setToolbarTitle
    android.graphics.drawable.Drawable getToolbarNavigationIcon() -> getToolbarNavigationIcon
    void setToolbarNavigationIcon(android.graphics.drawable.Drawable,android.view.View$OnClickListener) -> a
    void inflateToolbarMenu(int,android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> a
    boolean isAnimationRunning() -> f
    android.view.ViewGroup getTabContainer() -> getTabContainer
    android.support.v7.widget.Toolbar[] getToolbars() -> getToolbars
    android.view.Menu getToolbarMenu() -> getToolbarMenu
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout access$100(de.mrapp.android.tabswitcher.TabSwitcher) -> a
    void access$200(de.mrapp.android.tabswitcher.TabSwitcher) -> b
    void access$300(de.mrapp.android.tabswitcher.TabSwitcher) -> c
    void access$400(de.mrapp.android.tabswitcher.TabSwitcher) -> d
    void access$500(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab) -> a
    void access$600(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> a
    void access$700(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> b
    void access$900(de.mrapp.android.tabswitcher.TabSwitcher,de.mrapp.android.tabswitcher.Layout,boolean) -> a
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$1000(de.mrapp.android.tabswitcher.TabSwitcher) -> e
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.TabSwitcher$1 -> de.mrapp.android.tabswitcher.TabSwitcher$1:
    android.view.ViewGroup val$tabContainer -> a
    de.mrapp.android.tabswitcher.TabSwitcher this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher,android.view.ViewGroup) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.TabSwitcher$15 -> de.mrapp.android.tabswitcher.TabSwitcher$2:
    de.mrapp.android.tabswitcher.Tab val$tab -> a
    de.mrapp.android.tabswitcher.TabSwitcher this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher,de.mrapp.android.tabswitcher.Tab) -> <init>
    void run() -> run
de.mrapp.android.tabswitcher.TabSwitcher$19 -> de.mrapp.android.tabswitcher.TabSwitcher$3:
    de.mrapp.android.tabswitcher.Tab val$tab -> a
    de.mrapp.android.tabswitcher.TabSwitcher this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher,de.mrapp.android.tabswitcher.Tab) -> <init>
    void run() -> run
de.mrapp.android.tabswitcher.TabSwitcher$2 -> de.mrapp.android.tabswitcher.TabSwitcher$4:
    java.lang.Runnable val$action -> a
    de.mrapp.android.tabswitcher.TabSwitcher this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher,java.lang.Runnable) -> <init>
    void run() -> run
de.mrapp.android.tabswitcher.TabSwitcher$20 -> de.mrapp.android.tabswitcher.TabSwitcher$5:
    de.mrapp.android.tabswitcher.TabSwitcher this$0 -> a
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher) -> <init>
    void run() -> run
de.mrapp.android.tabswitcher.TabSwitcher$21 -> de.mrapp.android.tabswitcher.TabSwitcher$6:
    de.mrapp.android.tabswitcher.TabSwitcher this$0 -> a
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher) -> <init>
    void run() -> run
de.mrapp.android.tabswitcher.TabSwitcher$3 -> de.mrapp.android.tabswitcher.TabSwitcher$7:
    de.mrapp.android.tabswitcher.TabSwitcher this$0 -> a
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher) -> <init>
    void onLogLevelChanged(de.mrapp.android.util.logging.LogLevel) -> a
    void onDecoratorChanged(de.mrapp.android.tabswitcher.TabSwitcherDecorator) -> a
    void onSwitcherShown() -> a_
    void onSwitcherHidden() -> b
    void onSelectionChanged(int,int,de.mrapp.android.tabswitcher.Tab,boolean) -> a
    void onTabAdded(int,de.mrapp.android.tabswitcher.Tab,int,int,boolean,de.mrapp.android.tabswitcher.Animation) -> a
    void onTabRemoved(int,de.mrapp.android.tabswitcher.Tab,int,int,de.mrapp.android.tabswitcher.Animation) -> a
    void onPaddingChanged(int,int,int,int) -> a
    void onTabIconChanged(android.graphics.drawable.Drawable) -> a
    void onTabBackgroundColorChanged(android.content.res.ColorStateList) -> a
    void onTabTitleColorChanged(android.content.res.ColorStateList) -> b
    void onTabCloseButtonIconChanged(android.graphics.drawable.Drawable) -> b
    void onToolbarVisibilityChanged(boolean) -> a
    void onToolbarTitleChanged(java.lang.CharSequence) -> a
    void onToolbarNavigationIconChanged(android.graphics.drawable.Drawable,android.view.View$OnClickListener) -> a
    void onToolbarMenuInflated(int,android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> a
de.mrapp.android.tabswitcher.TabSwitcher$4 -> de.mrapp.android.tabswitcher.TabSwitcher$8:
    de.mrapp.android.tabswitcher.TabSwitcher this$0 -> a
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher) -> <init>
    void onAnimationsEnded() -> a
de.mrapp.android.tabswitcher.TabSwitcher$5 -> de.mrapp.android.tabswitcher.TabSwitcher$9:
    boolean val$inflateTabsOnly -> a
    de.mrapp.android.tabswitcher.TabSwitcher this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher,boolean) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.TabSwitcher$8 -> de.mrapp.android.tabswitcher.TabSwitcher$10:
    de.mrapp.android.tabswitcher.Tab val$tab -> a
    int val$index -> b
    de.mrapp.android.tabswitcher.Animation val$animation -> c
    de.mrapp.android.tabswitcher.TabSwitcher this$0 -> d
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher,de.mrapp.android.tabswitcher.Tab,int,de.mrapp.android.tabswitcher.Animation) -> <init>
    void run() -> run
de.mrapp.android.tabswitcher.TabSwitcher$TabSwitcherState -> de.mrapp.android.tabswitcher.TabSwitcher$TabSwitcherState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    de.mrapp.android.tabswitcher.LayoutPolicy layoutPolicy -> layoutPolicy
    android.os.Bundle modelState -> modelState
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel,de.mrapp.android.tabswitcher.TabSwitcher$1) -> <init>
    de.mrapp.android.tabswitcher.LayoutPolicy access$1102(de.mrapp.android.tabswitcher.TabSwitcher$TabSwitcherState,de.mrapp.android.tabswitcher.LayoutPolicy) -> a
    android.os.Bundle access$1202(de.mrapp.android.tabswitcher.TabSwitcher$TabSwitcherState,android.os.Bundle) -> a
    android.os.Bundle access$1200(de.mrapp.android.tabswitcher.TabSwitcher$TabSwitcherState) -> a
    de.mrapp.android.tabswitcher.LayoutPolicy access$1100(de.mrapp.android.tabswitcher.TabSwitcher$TabSwitcherState) -> b
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.TabSwitcher$TabSwitcherState$1 -> de.mrapp.android.tabswitcher.TabSwitcher$TabSwitcherState$1:
    void <init>() -> <init>
    de.mrapp.android.tabswitcher.TabSwitcher$TabSwitcherState createFromParcel(android.os.Parcel) -> a
    de.mrapp.android.tabswitcher.TabSwitcher$TabSwitcherState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
de.mrapp.android.tabswitcher.TabSwitcherDecorator -> de.mrapp.android.tabswitcher.j:
    java.lang.String VIEW_HIERARCHY_STATE_EXTRA -> a
    void <init>() -> <init>
    android.view.View onInflateView(android.view.LayoutInflater,android.view.ViewGroup,int) -> a
    void onShowTab(android.content.Context,de.mrapp.android.tabswitcher.TabSwitcher,android.view.View,de.mrapp.android.tabswitcher.Tab,int,int,android.os.Bundle) -> a
    void onSaveInstanceState(android.view.View,de.mrapp.android.tabswitcher.Tab,int,int,android.os.Bundle) -> a
    int getViewType(de.mrapp.android.tabswitcher.Tab,int) -> a
    int getViewTypeCount() -> a
    android.view.View inflateView(android.view.LayoutInflater,android.view.ViewGroup,de.mrapp.android.tabswitcher.Tab,int) -> a
    void applyDecorator(android.content.Context,de.mrapp.android.tabswitcher.TabSwitcher,android.view.View,de.mrapp.android.tabswitcher.Tab,int,android.os.Bundle) -> a
    android.os.Bundle saveInstanceState(android.view.View,de.mrapp.android.tabswitcher.Tab,int) -> a
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.TabSwitcherListener -> de.mrapp.android.tabswitcher.k:
    void onSwitcherShown(de.mrapp.android.tabswitcher.TabSwitcher) -> a
    void onSwitcherHidden(de.mrapp.android.tabswitcher.TabSwitcher) -> b
    void onSelectionChanged(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab) -> a
    void onTabAdded(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> a
    void onTabRemoved(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> b
de.mrapp.android.tabswitcher.drawable.TabSwitcherDrawable -> de.mrapp.android.tabswitcher.a.a:
    int size -> a
    int textSizeNormal -> b
    int textSizeSmall -> c
    android.graphics.drawable.Drawable background -> d
    android.graphics.Paint paint -> e
    java.lang.String label -> f
    void <init>(android.content.Context) -> <init>
    void setCount(int) -> a
    void draw(android.graphics.Canvas) -> draw
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void onSwitcherShown(de.mrapp.android.tabswitcher.TabSwitcher) -> a
    void onSwitcherHidden(de.mrapp.android.tabswitcher.TabSwitcher) -> b
    void onSelectionChanged(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab) -> a
    void onTabAdded(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> a
    void onTabRemoved(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> b
de.mrapp.android.tabswitcher.iterator.AbstractTabItemIterator -> de.mrapp.android.tabswitcher.b.a:
    boolean reverse -> a
    int index -> b
    de.mrapp.android.tabswitcher.model.TabItem current -> c
    de.mrapp.android.tabswitcher.model.TabItem previous -> d
    de.mrapp.android.tabswitcher.model.TabItem first -> e
    void <init>() -> <init>
    int getCount() -> a
    de.mrapp.android.tabswitcher.model.TabItem getItem(int) -> a
    void initialize(boolean,int) -> a
    de.mrapp.android.tabswitcher.model.TabItem first() -> b
    de.mrapp.android.tabswitcher.model.TabItem previous() -> c
    de.mrapp.android.tabswitcher.model.TabItem peek() -> d
    boolean hasNext() -> hasNext
    de.mrapp.android.tabswitcher.model.TabItem next() -> e
    java.lang.Object next() -> next
de.mrapp.android.tabswitcher.iterator.AbstractTabItemIterator$AbstractBuilder -> de.mrapp.android.tabswitcher.b.a$a:
    boolean reverse -> a
    int start -> b
    de.mrapp.android.tabswitcher.iterator.AbstractTabItemIterator$AbstractBuilder self() -> b
    void <init>() -> <init>
    de.mrapp.android.tabswitcher.iterator.AbstractTabItemIterator create() -> a
    de.mrapp.android.tabswitcher.iterator.AbstractTabItemIterator$AbstractBuilder reverse(boolean) -> a
    de.mrapp.android.tabswitcher.iterator.AbstractTabItemIterator$AbstractBuilder start(int) -> a
de.mrapp.android.tabswitcher.iterator.TabItemIterator -> de.mrapp.android.tabswitcher.b.b:
    de.mrapp.android.tabswitcher.model.Model model -> a
    de.mrapp.android.util.view.AttachedViewRecycler viewRecycler -> b
    void <init>(de.mrapp.android.tabswitcher.model.Model,de.mrapp.android.util.view.AttachedViewRecycler,boolean,int) -> <init>
    int getCount() -> a
    de.mrapp.android.tabswitcher.model.TabItem getItem(int) -> a
    void <init>(de.mrapp.android.tabswitcher.model.Model,de.mrapp.android.util.view.AttachedViewRecycler,boolean,int,de.mrapp.android.tabswitcher.iterator.TabItemIterator$1) -> <init>
de.mrapp.android.tabswitcher.iterator.TabItemIterator$1 -> de.mrapp.android.tabswitcher.b.b$1:
de.mrapp.android.tabswitcher.iterator.TabItemIterator$Builder -> de.mrapp.android.tabswitcher.b.b$a:
    de.mrapp.android.tabswitcher.model.Model model -> c
    de.mrapp.android.util.view.AttachedViewRecycler viewRecycler -> d
    void <init>(de.mrapp.android.tabswitcher.model.Model,de.mrapp.android.util.view.AttachedViewRecycler) -> <init>
    de.mrapp.android.tabswitcher.iterator.TabItemIterator create() -> b
    de.mrapp.android.tabswitcher.iterator.AbstractTabItemIterator create() -> a
de.mrapp.android.tabswitcher.layout.AbstractDragHandler -> de.mrapp.android.tabswitcher.c.a:
    de.mrapp.android.tabswitcher.TabSwitcher tabSwitcher -> a
    de.mrapp.android.tabswitcher.layout.Arithmetics arithmetics -> b
    boolean swipeEnabled -> c
    de.mrapp.android.util.gesture.DragHelper dragHelper -> d
    de.mrapp.android.util.gesture.DragHelper swipeDragHelper -> e
    float minFlingVelocity -> f
    float maxFlingVelocity -> g
    float minSwipeVelocity -> h
    int dragThreshold -> i
    android.view.VelocityTracker velocityTracker -> j
    int pointerId -> k
    de.mrapp.android.tabswitcher.model.TabItem swipedTabItem -> l
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState dragState -> m
    float dragDistance -> n
    float startOvershootThreshold -> o
    float endOvershootThreshold -> p
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$Callback callback -> q
    void resetDragging(int) -> b
    void handleDown(android.view.MotionEvent) -> b
    void handleClick(android.view.MotionEvent) -> c
    void handleFling(android.view.MotionEvent,de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState) -> a
    void handleOvershoot() -> f
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState notifyOnDrag(de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState,float) -> a
    void notifyOnClick(de.mrapp.android.tabswitcher.model.TabItem) -> b
    void notifyOnFling(float,long) -> a
    void notifyOnCancelFling() -> g
    void notifyOnRevertStartOvershoot() -> h
    void notifyOnRevertEndOvershoot() -> i
    void notifyOnSwipe(de.mrapp.android.tabswitcher.model.TabItem,float) -> a
    void notifyOnSwipeEnded(de.mrapp.android.tabswitcher.model.TabItem,boolean,float) -> a
    de.mrapp.android.tabswitcher.TabSwitcher getTabSwitcher() -> a
    de.mrapp.android.tabswitcher.layout.Arithmetics getArithmetics() -> b
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$Callback getCallback() -> c
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher,de.mrapp.android.tabswitcher.layout.Arithmetics,boolean) -> <init>
    de.mrapp.android.tabswitcher.model.TabItem getFocusedTab(float) -> a
    float onOvershootStart(float,float) -> a
    float onOvershootEnd(float,float) -> b
    void onOvershootReverted() -> d
    void onReset() -> e
    boolean isSwipeThresholdReached(de.mrapp.android.tabswitcher.model.TabItem) -> a
    void setCallback(de.mrapp.android.tabswitcher.layout.AbstractDragHandler$Callback) -> a
    boolean handleTouchEvent(android.view.MotionEvent) -> a
    boolean handleDrag(float,float) -> c
    void handleRelease(android.view.MotionEvent,int) -> a
    void reset(int) -> a
de.mrapp.android.tabswitcher.layout.AbstractDragHandler$Callback -> de.mrapp.android.tabswitcher.c.a$a:
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState onDrag(de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState,float) -> a
    void onClick(de.mrapp.android.tabswitcher.model.TabItem) -> a
    void onFling(float,long) -> a
    void onCancelFling() -> c
    void onRevertStartOvershoot() -> d
    void onRevertEndOvershoot() -> e
    void onSwipe(de.mrapp.android.tabswitcher.model.TabItem,float) -> a
    void onSwipeEnded(de.mrapp.android.tabswitcher.model.TabItem,boolean,float) -> a
de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState -> de.mrapp.android.tabswitcher.c.a$b:
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState NONE -> a
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState DRAG_TO_START -> b
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState DRAG_TO_END -> c
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState OVERSHOOT_START -> d
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState OVERSHOOT_END -> e
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState SWIPE -> f
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState[] $VALUES -> g
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState[] values() -> values
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout -> de.mrapp.android.tabswitcher.c.b:
    de.mrapp.android.tabswitcher.TabSwitcher tabSwitcher -> a
    de.mrapp.android.tabswitcher.model.TabSwitcherModel model -> b
    de.mrapp.android.tabswitcher.layout.Arithmetics arithmetics -> c
    int dragThreshold -> d
    de.mrapp.android.util.logging.Logger logger -> e
    de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout$Callback callback -> f
    int runningAnimations -> g
    android.view.animation.Animation flingAnimation -> h
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler dragHandler -> i
    void adaptToolbarVisibility() -> n
    void adaptToolbarTitle() -> o
    void adaptToolbarNavigationIcon() -> p
    void inflateToolbarMenu() -> q
    android.view.animation.Animation$AnimationListener createFlingAnimationListener() -> r
    void notifyOnAnimationsEnded() -> s
    de.mrapp.android.tabswitcher.TabSwitcher getTabSwitcher() -> f
    de.mrapp.android.tabswitcher.model.TabSwitcherModel getModel() -> g
    de.mrapp.android.tabswitcher.layout.Arithmetics getArithmetics() -> h
    int getDragThreshold() -> i
    de.mrapp.android.util.logging.Logger getLogger() -> j
    android.content.Context getContext() -> k
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher,de.mrapp.android.tabswitcher.model.TabSwitcherModel,de.mrapp.android.tabswitcher.layout.Arithmetics) -> <init>
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler onInflateLayout(boolean) -> b
    android.support.v4.util.Pair onDetachLayout(boolean) -> c
    boolean handleTouchEvent(android.view.MotionEvent) -> a
    void inflateLayout(boolean) -> d
    android.support.v4.util.Pair detachLayout(boolean) -> e
    void setCallback(de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout$Callback) -> a
    boolean isAnimationRunning() -> l
    android.view.Menu getToolbarMenu() -> m
    void onDecoratorChanged(de.mrapp.android.tabswitcher.TabSwitcherDecorator) -> a
    void onToolbarVisibilityChanged(boolean) -> a
    void onToolbarTitleChanged(java.lang.CharSequence) -> a
    void onToolbarNavigationIconChanged(android.graphics.drawable.Drawable,android.view.View$OnClickListener) -> a
    void onToolbarMenuInflated(int,android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> a
    void onFling(float,long) -> a
    void onCancelFling() -> c
    void onRevertStartOvershoot() -> d
    void onRevertEndOvershoot() -> e
    void onSwipe(de.mrapp.android.tabswitcher.model.TabItem,float) -> a
    void onSwipeEnded(de.mrapp.android.tabswitcher.model.TabItem,boolean,float) -> a
    int access$006(de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout) -> a
    void access$100(de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout) -> b
    int access$008(de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout) -> c
    android.view.animation.Animation access$200(de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout) -> d
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler access$300(de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout) -> e
    int access$400(de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout) -> f
    android.view.animation.Animation access$202(de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout,android.view.animation.Animation) -> a
de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout$1 -> de.mrapp.android.tabswitcher.c.b$1:
    de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout this$0 -> a
    void <init>(de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout) -> <init>
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout$AnimationListenerWrapper -> de.mrapp.android.tabswitcher.c.b$a:
    android.animation.Animator$AnimatorListener listener -> b
    de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout this$0 -> a
    void endAnimation() -> a
    void <init>(de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout,android.animation.Animator$AnimatorListener) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout$Callback -> de.mrapp.android.tabswitcher.c.b$b:
    void onAnimationsEnded() -> a
de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout$FlingAnimation -> de.mrapp.android.tabswitcher.c.b$c:
    float distance -> b
    de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout this$0 -> a
    void <init>(de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout,float) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
de.mrapp.android.tabswitcher.layout.AbstractTabSwitcherLayout$LayoutListenerWrapper -> de.mrapp.android.tabswitcher.c.b$d:
    android.view.View view -> a
    android.view.ViewTreeObserver$OnGlobalLayoutListener listener -> b
    void <init>(android.view.View,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.layout.AbstractTabViewHolder -> de.mrapp.android.tabswitcher.c.c:
    android.widget.TextView titleTextView -> a
    android.widget.ImageButton closeButton -> b
    void <init>() -> <init>
de.mrapp.android.tabswitcher.layout.Arithmetics -> de.mrapp.android.tabswitcher.c.d:
    float getPosition(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.MotionEvent) -> a
    float getPosition(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View) -> a
    void setPosition(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View,float) -> a
    void animatePosition(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.ViewPropertyAnimator,android.view.View,float,boolean) -> a
    int getPadding(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,int,android.view.View) -> a
    float getScale(android.view.View,boolean) -> a
    void setScale(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View,float) -> b
    void animateScale(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.ViewPropertyAnimator,float) -> a
    float getSize(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View) -> b
    float getTabContainerSize(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis) -> a
    float getTabContainerSize(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,boolean) -> a
    float getPivot(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View,de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState) -> a
    void setPivot(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View,float) -> c
    float getRotation(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View) -> c
    void setRotation(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View,float) -> d
    void animateRotation(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.ViewPropertyAnimator,float) -> b
de.mrapp.android.tabswitcher.layout.Arithmetics$Axis -> de.mrapp.android.tabswitcher.c.d$a:
    de.mrapp.android.tabswitcher.layout.Arithmetics$Axis DRAGGING_AXIS -> a
    de.mrapp.android.tabswitcher.layout.Arithmetics$Axis ORTHOGONAL_AXIS -> b
    de.mrapp.android.tabswitcher.layout.Arithmetics$Axis X_AXIS -> c
    de.mrapp.android.tabswitcher.layout.Arithmetics$Axis Y_AXIS -> d
    de.mrapp.android.tabswitcher.layout.Arithmetics$Axis[] $VALUES -> e
    de.mrapp.android.tabswitcher.layout.Arithmetics$Axis[] values() -> values
    de.mrapp.android.tabswitcher.layout.Arithmetics$Axis valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.layout.ChildRecyclerAdapter -> de.mrapp.android.tabswitcher.c.e:
    java.lang.String SAVED_INSTANCE_STATES_EXTRA -> a
    de.mrapp.android.tabswitcher.TabSwitcher tabSwitcher -> b
    de.mrapp.android.tabswitcher.TabSwitcherDecorator decorator -> c
    android.util.SparseArray savedInstanceStates -> d
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher,de.mrapp.android.tabswitcher.TabSwitcherDecorator) -> <init>
    android.view.View onInflateView(android.view.LayoutInflater,android.view.ViewGroup,de.mrapp.android.tabswitcher.Tab,int,java.lang.Void[]) -> a
    void onShowView(android.content.Context,android.view.View,de.mrapp.android.tabswitcher.Tab,boolean,java.lang.Void[]) -> a
    void onRemoveView(android.view.View,de.mrapp.android.tabswitcher.Tab) -> a
    int getViewTypeCount() -> a
    int getViewType(de.mrapp.android.tabswitcher.Tab) -> a
    void saveInstanceState(android.os.Bundle) -> a
    void restoreInstanceState(android.os.Bundle) -> b
    int getViewType(java.lang.Object) -> a
    void onRemoveView(android.view.View,java.lang.Object) -> a
    void onShowView(android.content.Context,android.view.View,java.lang.Object,boolean,java.lang.Object[]) -> a
    android.view.View onInflateView(android.view.LayoutInflater,android.view.ViewGroup,java.lang.Object,int,java.lang.Object[]) -> a
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.layout.TabSwitcherLayout -> de.mrapp.android.tabswitcher.c.f:
    android.view.ViewGroup getTabContainer() -> getTabContainer
    android.support.v7.widget.Toolbar[] getToolbars() -> getToolbars
de.mrapp.android.tabswitcher.layout.phone.PhoneArithmetics -> de.mrapp.android.tabswitcher.c.a.a:
    de.mrapp.android.tabswitcher.TabSwitcher tabSwitcher -> b
    int tabTitleContainerHeight -> c
    int tabInset -> d
    int stackedTabCount -> e
    float stackedTabSpacing -> f
    float endOvershootPivot -> g
    boolean $assertionsDisabled -> a
    de.mrapp.android.tabswitcher.layout.Arithmetics$Axis getOrientationInvariantAxis(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis) -> b
    float getDefaultPivot(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View) -> d
    float getPivotWhenSwiping(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View) -> e
    float getPivotWhenOvershootingAtStart(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View) -> f
    float getPivotWhenOvershootingAtEnd(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View) -> g
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher) -> <init>
    float getPosition(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.MotionEvent) -> a
    float getPosition(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View) -> a
    void setPosition(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View,float) -> a
    void animatePosition(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.ViewPropertyAnimator,android.view.View,float,boolean) -> a
    int getPadding(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,int,android.view.View) -> a
    float getScale(android.view.View,boolean) -> a
    void setScale(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View,float) -> b
    void animateScale(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.ViewPropertyAnimator,float) -> a
    float getSize(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View) -> b
    float getTabContainerSize(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis) -> a
    float getTabContainerSize(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,boolean) -> a
    float getPivot(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View,de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState) -> a
    void setPivot(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View,float) -> c
    float getRotation(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View) -> c
    void setRotation(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.View,float) -> d
    void animateRotation(de.mrapp.android.tabswitcher.layout.Arithmetics$Axis,android.view.ViewPropertyAnimator,float) -> b
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.layout.phone.PhoneDragHandler -> de.mrapp.android.tabswitcher.c.a.b:
    de.mrapp.android.util.view.AttachedViewRecycler viewRecycler -> a
    de.mrapp.android.util.gesture.DragHelper overshootDragHelper -> b
    int maxOvershootDistance -> c
    float maxStartOvershootAngle -> d
    float maxEndOvershootAngle -> e
    int stackedTabCount -> f
    int tabInset -> g
    void notifyOnStartOvershoot(float) -> b
    void notifyOnTiltOnStartOvershoot(float) -> c
    void notifyOnTiltOnEndOvershoot(float) -> d
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher,de.mrapp.android.tabswitcher.layout.Arithmetics,de.mrapp.android.util.view.AttachedViewRecycler) -> <init>
    de.mrapp.android.tabswitcher.model.TabItem getFocusedTab(float) -> a
    float onOvershootStart(float,float) -> a
    float onOvershootEnd(float,float) -> b
    void onOvershootReverted() -> d
    void onReset() -> e
    boolean isSwipeThresholdReached(de.mrapp.android.tabswitcher.model.TabItem) -> a
de.mrapp.android.tabswitcher.layout.phone.PhoneDragHandler$Callback -> de.mrapp.android.tabswitcher.c.a.b$a:
    void onStartOvershoot(float) -> a
    void onTiltOnStartOvershoot(float) -> b
    void onTiltOnEndOvershoot(float) -> c
de.mrapp.android.tabswitcher.layout.phone.PhoneRecyclerAdapter -> de.mrapp.android.tabswitcher.c.a.c:
    de.mrapp.android.tabswitcher.TabSwitcher tabSwitcher -> a
    de.mrapp.android.tabswitcher.model.TabSwitcherModel model -> b
    de.mrapp.android.util.view.ViewRecycler childViewRecycler -> c
    de.mrapp.android.util.multithreading.AbstractDataBinder dataBinder -> d
    int tabInset -> e
    int tabBorderWidth -> f
    int tabTitleContainerHeight -> g
    int tabBackgroundColor -> h
    int tabTitleTextColor -> i
    de.mrapp.android.util.view.AttachedViewRecycler viewRecycler -> j
    void addChildView(de.mrapp.android.tabswitcher.model.TabItem) -> a
    void renderChildView(de.mrapp.android.tabswitcher.model.TabItem) -> b
    void removeChildView(de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder,de.mrapp.android.tabswitcher.Tab) -> a
    void adaptLogLevel() -> d
    void adaptTitle(de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder,de.mrapp.android.tabswitcher.Tab) -> b
    void adaptIcon(de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder,de.mrapp.android.tabswitcher.Tab) -> c
    void adaptCloseButton(de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder,de.mrapp.android.tabswitcher.Tab) -> d
    void adaptCloseButtonIcon(de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder,de.mrapp.android.tabswitcher.Tab) -> e
    android.view.View$OnClickListener createCloseButtonClickListener(android.widget.ImageButton,de.mrapp.android.tabswitcher.Tab) -> a
    boolean notifyOnCloseTab(de.mrapp.android.tabswitcher.Tab) -> e
    void adaptBackgroundColor(android.view.View,de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder,de.mrapp.android.tabswitcher.Tab) -> a
    void adaptTitleTextColor(de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder,de.mrapp.android.tabswitcher.Tab) -> f
    void adaptSelectionState(de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder,de.mrapp.android.tabswitcher.Tab) -> g
    void adaptAllSelectionStates() -> e
    void adaptPadding(de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder) -> a
    de.mrapp.android.tabswitcher.model.TabItem getTabItem(de.mrapp.android.tabswitcher.Tab) -> f
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher,de.mrapp.android.tabswitcher.model.TabSwitcherModel,de.mrapp.android.util.view.ViewRecycler) -> <init>
    void setViewRecycler(de.mrapp.android.util.view.AttachedViewRecycler) -> a
    void clearCachedPreviews() -> c
    android.view.View onInflateView(android.view.LayoutInflater,android.view.ViewGroup,de.mrapp.android.tabswitcher.model.TabItem,int,java.lang.Integer[]) -> a
    void onShowView(android.content.Context,android.view.View,de.mrapp.android.tabswitcher.model.TabItem,boolean,java.lang.Integer[]) -> a
    void onRemoveView(android.view.View,de.mrapp.android.tabswitcher.model.TabItem) -> a
    void onTitleChanged(de.mrapp.android.tabswitcher.Tab) -> a
    void onCloseableChanged(de.mrapp.android.tabswitcher.Tab) -> b
    void onBackgroundColorChanged(de.mrapp.android.tabswitcher.Tab) -> c
    void onTitleTextColorChanged(de.mrapp.android.tabswitcher.Tab) -> d
    void onLogLevelChanged(de.mrapp.android.util.logging.LogLevel) -> a
    void onDecoratorChanged(de.mrapp.android.tabswitcher.TabSwitcherDecorator) -> a
    void onSwitcherShown() -> a_
    void onSwitcherHidden() -> b
    void onSelectionChanged(int,int,de.mrapp.android.tabswitcher.Tab,boolean) -> a
    void onTabAdded(int,de.mrapp.android.tabswitcher.Tab,int,int,boolean,de.mrapp.android.tabswitcher.Animation) -> a
    void onTabRemoved(int,de.mrapp.android.tabswitcher.Tab,int,int,de.mrapp.android.tabswitcher.Animation) -> a
    void onPaddingChanged(int,int,int,int) -> a
    void onTabIconChanged(android.graphics.drawable.Drawable) -> a
    void onTabBackgroundColorChanged(android.content.res.ColorStateList) -> a
    void onTabTitleColorChanged(android.content.res.ColorStateList) -> b
    void onTabCloseButtonIconChanged(android.graphics.drawable.Drawable) -> b
    void onToolbarVisibilityChanged(boolean) -> a
    void onToolbarTitleChanged(java.lang.CharSequence) -> a
    void onToolbarNavigationIconChanged(android.graphics.drawable.Drawable,android.view.View$OnClickListener) -> a
    void onToolbarMenuInflated(int,android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> a
    boolean onLoadData(de.mrapp.android.util.multithreading.AbstractDataBinder,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.model.TabItem[]) -> a
    void onFinished(de.mrapp.android.util.multithreading.AbstractDataBinder,de.mrapp.android.tabswitcher.Tab,android.graphics.Bitmap,android.widget.ImageView,de.mrapp.android.tabswitcher.model.TabItem[]) -> a
    void onRemoveView(android.view.View,java.lang.Object) -> a
    void onShowView(android.content.Context,android.view.View,java.lang.Object,boolean,java.lang.Object[]) -> a
    android.view.View onInflateView(android.view.LayoutInflater,android.view.ViewGroup,java.lang.Object,int,java.lang.Object[]) -> a
    void onFinished(de.mrapp.android.util.multithreading.AbstractDataBinder,java.lang.Object,java.lang.Object,android.view.View,java.lang.Object[]) -> a
    boolean onLoadData(de.mrapp.android.util.multithreading.AbstractDataBinder,java.lang.Object,java.lang.Object[]) -> a
    boolean access$000(de.mrapp.android.tabswitcher.layout.phone.PhoneRecyclerAdapter,de.mrapp.android.tabswitcher.Tab) -> a
    de.mrapp.android.tabswitcher.TabSwitcher access$100(de.mrapp.android.tabswitcher.layout.phone.PhoneRecyclerAdapter) -> a
de.mrapp.android.tabswitcher.layout.phone.PhoneRecyclerAdapter$1 -> de.mrapp.android.tabswitcher.c.a.c$1:
    de.mrapp.android.tabswitcher.Tab val$tab -> a
    android.widget.ImageButton val$closeButton -> b
    de.mrapp.android.tabswitcher.layout.phone.PhoneRecyclerAdapter this$0 -> c
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneRecyclerAdapter,de.mrapp.android.tabswitcher.Tab,android.widget.ImageButton) -> <init>
    void onClick(android.view.View) -> onClick
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout -> de.mrapp.android.tabswitcher.c.a.d:
    int tabInset -> a
    int tabBorderWidth -> b
    int tabTitleContainerHeight -> c
    int stackedTabCount -> d
    int stackedTabSpacing -> e
    int maxCameraDistance -> f
    float swipedTabAlpha -> g
    float swipedTabScale -> h
    long showSwitcherAnimationDuration -> i
    long hideSwitcherAnimationDuration -> j
    long toolbarVisibilityAnimationDuration -> k
    long toolbarVisibilityAnimationDelay -> l
    long swipeAnimationDuration -> m
    long clearAnimationDelay -> n
    long relocateAnimationDuration -> o
    long relocateAnimationDelay -> p
    long revertOvershootAnimationDuration -> q
    long revealAnimationDuration -> r
    long peekAnimationDuration -> s
    float maxStartOvershootAngle -> t
    float maxEndOvershootAngle -> u
    de.mrapp.android.tabswitcher.layout.phone.PhoneDragHandler dragHandler -> v
    de.mrapp.android.util.view.ViewRecycler childViewRecycler -> w
    de.mrapp.android.tabswitcher.layout.phone.PhoneRecyclerAdapter recyclerAdapter -> x
    de.mrapp.android.util.view.AttachedViewRecycler viewRecycler -> y
    android.view.ViewGroup tabContainer -> z
    android.support.v7.widget.Toolbar toolbar -> A
    int tabViewBottomMargin -> B
    android.view.ViewPropertyAnimator toolbarAnimation -> C
    int firstVisibleIndex -> D
    void adaptLogLevel() -> n
    void adaptDecorator() -> o
    void adaptToolbarMargin() -> p
    void calculatePositionsWhenDraggingToEnd(float) -> d
    boolean calculatePositionWhenDraggingToEnd(float,de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.model.TabItem) -> a
    void calculatePositionsWhenDraggingToStart(float) -> e
    boolean calculatePositionWhenDraggingToStart(float,de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.model.TabItem) -> b
    float calculateNonLinearPosition(de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.model.TabItem) -> a
    float calculateNonLinearPosition(float,float) -> a
    float calculateEndPosition(int) -> a
    float calculateSwipePosition() -> q
    float calculateMaxTabSpacing(int,de.mrapp.android.tabswitcher.model.TabItem) -> a
    float calculateMinTabSpacing(int) -> b
    float calculateAttachedPosition(int) -> c
    android.support.v4.util.Pair clipTabPosition(int,int,float,de.mrapp.android.tabswitcher.model.TabItem) -> a
    android.support.v4.util.Pair clipTabPosition(int,int,float,de.mrapp.android.tabswitcher.model.State) -> a
    android.support.v4.util.Pair calculatePositionAndStateWhenStackedAtStart(int,int,de.mrapp.android.tabswitcher.model.TabItem) -> a
    android.support.v4.util.Pair calculatePositionAndStateWhenStackedAtStart(int,int,de.mrapp.android.tabswitcher.model.State) -> a
    android.support.v4.util.Pair calculatePositionAndStateWhenStackedAtEnd(int) -> d
    boolean isOvershootingAtStart() -> r
    boolean isOvershootingAtEnd(de.mrapp.android.tabswitcher.iterator.AbstractTabItemIterator) -> a
    int calculateBottomMargin(android.view.View) -> a
    void animateBottomMargin(android.view.View,int,long,long) -> a
    void animateToolbarVisibility(boolean,long) -> a
    void animateShowSwitcher() -> s
    de.mrapp.android.tabswitcher.model.TabItem[] calculateInitialTabItems(int,float) -> a
    void addAllTabs(int,de.mrapp.android.tabswitcher.Tab[],de.mrapp.android.tabswitcher.Animation) -> a
    void animateShowSwitcher(de.mrapp.android.tabswitcher.model.TabItem,android.animation.Animator$AnimatorListener) -> a
    void animateShowSwitcher(de.mrapp.android.tabswitcher.model.TabItem,long,android.view.animation.Interpolator,android.animation.Animator$AnimatorListener) -> a
    void animateHideSwitcher() -> t
    void animateHideSwitcher(de.mrapp.android.tabswitcher.model.TabItem,android.animation.Animator$AnimatorListener) -> b
    void animateHideSwitcher(de.mrapp.android.tabswitcher.model.TabItem,long,android.view.animation.Interpolator,long,android.animation.Animator$AnimatorListener) -> a
    void animateSwipe(de.mrapp.android.tabswitcher.model.TabItem,boolean,long,de.mrapp.android.tabswitcher.SwipeAnimation,android.animation.Animator$AnimatorListener) -> a
    void animateRemove(de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.SwipeAnimation) -> a
    void animateRelocate(de.mrapp.android.tabswitcher.model.TabItem,float,de.mrapp.android.tabswitcher.model.Tag,long,android.animation.Animator$AnimatorListener) -> a
    void animateRevertStartOvershoot() -> u
    void animateRevertStartOvershoot(android.view.animation.Interpolator) -> a
    void animateRevertEndOvershoot() -> v
    boolean animateTilt(android.view.animation.Interpolator,float,android.animation.Animator$AnimatorListener) -> a
    void animateReveal(de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.RevealAnimation) -> a
    void animatePeek(de.mrapp.android.tabswitcher.model.TabItem,long,android.view.animation.Interpolator,float,de.mrapp.android.tabswitcher.PeekAnimation) -> a
    android.view.ViewTreeObserver$OnGlobalLayoutListener createShowSwitcherLayoutListener(de.mrapp.android.tabswitcher.model.TabItem) -> b
    android.view.ViewTreeObserver$OnGlobalLayoutListener createHideSwitcherLayoutListener(de.mrapp.android.tabswitcher.model.TabItem) -> c
    android.view.ViewTreeObserver$OnGlobalLayoutListener createRemoveLayoutListener(de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.SwipeAnimation) -> b
    android.view.ViewTreeObserver$OnGlobalLayoutListener createRelocateLayoutListener(de.mrapp.android.tabswitcher.model.TabItem,float,de.mrapp.android.tabswitcher.model.Tag,long,android.animation.Animator$AnimatorListener) -> b
    android.view.ViewTreeObserver$OnGlobalLayoutListener createAddSelectedTabLayoutListener(de.mrapp.android.tabswitcher.model.TabItem) -> d
    android.view.ViewTreeObserver$OnGlobalLayoutListener createRevealLayoutListener(de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.RevealAnimation) -> b
    android.view.ViewTreeObserver$OnGlobalLayoutListener createPeekLayoutListener(de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.PeekAnimation) -> a
    android.view.ViewTreeObserver$OnGlobalLayoutListener createSwipeLayoutListener(de.mrapp.android.tabswitcher.model.TabItem[],de.mrapp.android.tabswitcher.SwipeAnimation) -> a
    android.view.ViewTreeObserver$OnGlobalLayoutListener createBottomMarginLayoutListener(de.mrapp.android.tabswitcher.model.TabItem) -> e
    android.view.ViewTreeObserver$OnGlobalLayoutListener createInflateViewLayoutListener(de.mrapp.android.tabswitcher.model.TabItem,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> a
    android.animation.Animator$AnimatorListener createUpdateViewAnimationListener(de.mrapp.android.tabswitcher.model.TabItem) -> f
    android.animation.Animator$AnimatorListener createHideSwitcherAnimationListener() -> w
    android.animation.Animator$AnimatorListener createSwipeAnimationListener(de.mrapp.android.tabswitcher.model.TabItem) -> g
    android.animation.Animator$AnimatorListener createRemoveAnimationListener(de.mrapp.android.tabswitcher.model.TabItem) -> h
    android.animation.Animator$AnimatorListener createRelocateAnimationListener(de.mrapp.android.tabswitcher.model.TabItem) -> i
    android.animation.Animator$AnimatorListener createRevertOvershootAnimationListener(android.view.View,android.animation.Animator$AnimatorListener) -> a
    android.animation.Animator$AnimatorListener createRevertStartOvershootAnimationListener() -> x
    android.animation.Animator$AnimatorListener createPeekAnimationListener(de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.PeekAnimation) -> b
    android.animation.Animator$AnimatorListener createRevertPeekAnimationListener(de.mrapp.android.tabswitcher.model.TabItem) -> j
    android.animation.Animator$AnimatorListener createZoomOutAnimationListener(de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.PeekAnimation) -> c
    android.animation.Animator$AnimatorListener createZoomInAnimationListener(de.mrapp.android.tabswitcher.model.TabItem) -> k
    void adaptStackOnSwipe(de.mrapp.android.tabswitcher.model.TabItem,int,int) -> a
    void adaptStackOnSwipeAborted(de.mrapp.android.tabswitcher.model.TabItem,int) -> a
    void inflateOrRemoveView(de.mrapp.android.tabswitcher.model.TabItem) -> l
    void inflateAndUpdateView(de.mrapp.android.tabswitcher.model.TabItem,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> b
    void inflateView(de.mrapp.android.tabswitcher.model.TabItem,android.view.ViewTreeObserver$OnGlobalLayoutListener,java.lang.Integer[]) -> a
    void adaptViewSize(de.mrapp.android.tabswitcher.model.TabItem) -> m
    void updateView(de.mrapp.android.tabswitcher.model.TabItem) -> n
    void relocateWhenRemovingFloatingTab(de.mrapp.android.tabswitcher.model.TabItem,float,boolean) -> a
    void relocateWhenRemovingStackedTab(de.mrapp.android.tabswitcher.model.TabItem,boolean) -> a
    de.mrapp.android.tabswitcher.model.TabItem[] relocateWhenAddingFloatingTabs(de.mrapp.android.tabswitcher.model.TabItem[],de.mrapp.android.tabswitcher.model.TabItem,boolean,float,boolean) -> a
    de.mrapp.android.tabswitcher.model.TabItem[] relocateWhenAddingStackedTabs(boolean,de.mrapp.android.tabswitcher.model.TabItem[]) -> a
    de.mrapp.android.tabswitcher.model.TabItem[] relocateWhenAddingHiddenTabs(de.mrapp.android.tabswitcher.model.TabItem[],de.mrapp.android.tabswitcher.model.TabItem) -> a
    void relocate(de.mrapp.android.tabswitcher.model.TabItem,float,de.mrapp.android.tabswitcher.model.Tag,long) -> a
    void swipe(de.mrapp.android.tabswitcher.model.TabItem,float) -> b
    void startOvershoot(float) -> f
    void tiltOnStartOvershoot(float) -> g
    void tiltOnEndOvershoot(float) -> h
    boolean isStackedAtStart(int) -> e
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher,de.mrapp.android.tabswitcher.model.TabSwitcherModel,de.mrapp.android.tabswitcher.layout.phone.PhoneArithmetics) -> <init>
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler onInflateLayout(boolean) -> b
    android.support.v4.util.Pair onDetachLayout(boolean) -> c
    boolean handleTouchEvent(android.view.MotionEvent) -> a
    android.view.ViewGroup getTabContainer() -> getTabContainer
    android.support.v7.widget.Toolbar[] getToolbars() -> getToolbars
    void onLogLevelChanged(de.mrapp.android.util.logging.LogLevel) -> a
    void onDecoratorChanged(de.mrapp.android.tabswitcher.TabSwitcherDecorator) -> a
    void onSwitcherShown() -> a_
    void onSwitcherHidden() -> b
    void onSelectionChanged(int,int,de.mrapp.android.tabswitcher.Tab,boolean) -> a
    void onTabAdded(int,de.mrapp.android.tabswitcher.Tab,int,int,boolean,de.mrapp.android.tabswitcher.Animation) -> a
    void onTabRemoved(int,de.mrapp.android.tabswitcher.Tab,int,int,de.mrapp.android.tabswitcher.Animation) -> a
    void onPaddingChanged(int,int,int,int) -> a
    void onTabIconChanged(android.graphics.drawable.Drawable) -> a
    void onTabBackgroundColorChanged(android.content.res.ColorStateList) -> a
    void onTabTitleColorChanged(android.content.res.ColorStateList) -> b
    void onTabCloseButtonIconChanged(android.graphics.drawable.Drawable) -> b
    void onGlobalLayout() -> onGlobalLayout
    de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState onDrag(de.mrapp.android.tabswitcher.layout.AbstractDragHandler$DragState,float) -> a
    void onClick(de.mrapp.android.tabswitcher.model.TabItem) -> a
    void onRevertStartOvershoot() -> d
    void onRevertEndOvershoot() -> e
    void onStartOvershoot(float) -> a
    void onTiltOnStartOvershoot(float) -> b
    void onTiltOnEndOvershoot(float) -> c
    void onSwipe(de.mrapp.android.tabswitcher.model.TabItem,float) -> a
    void onSwipeEnded(de.mrapp.android.tabswitcher.model.TabItem,boolean,float) -> a
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$000(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> a
    android.support.v4.util.Pair access$100(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,int,int,float,de.mrapp.android.tabswitcher.model.TabItem) -> a
    int access$200(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> b
    int access$300(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> c
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$400(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> d
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$500(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> e
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$600(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> f
    de.mrapp.android.util.view.AttachedViewRecycler access$700(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> g
    de.mrapp.android.tabswitcher.TabSwitcher access$900(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> h
    de.mrapp.android.tabswitcher.layout.Arithmetics access$1000(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> i
    de.mrapp.android.tabswitcher.layout.Arithmetics access$1100(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> j
    de.mrapp.android.tabswitcher.layout.Arithmetics access$1200(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> k
    android.animation.Animator$AnimatorListener access$1300(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> a
    void access$1400(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,android.animation.Animator$AnimatorListener) -> a
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$1500(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> l
    android.animation.Animator$AnimatorListener access$1600(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> m
    void access$1700(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,android.animation.Animator$AnimatorListener) -> b
    void access$1800(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.SwipeAnimation) -> a
    void access$1900(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,float,de.mrapp.android.tabswitcher.model.Tag,long,android.animation.Animator$AnimatorListener) -> a
    de.mrapp.android.tabswitcher.layout.Arithmetics access$2000(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> n
    de.mrapp.android.tabswitcher.layout.Arithmetics access$2100(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> o
    de.mrapp.android.tabswitcher.layout.Arithmetics access$2200(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> p
    de.mrapp.android.tabswitcher.layout.Arithmetics access$2300(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> q
    de.mrapp.android.tabswitcher.layout.Arithmetics access$2400(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> r
    de.mrapp.android.tabswitcher.layout.Arithmetics access$2500(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> s
    int access$2600(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> t
    de.mrapp.android.tabswitcher.layout.Arithmetics access$2700(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> u
    de.mrapp.android.tabswitcher.layout.Arithmetics access$2800(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> v
    de.mrapp.android.tabswitcher.layout.Arithmetics access$2900(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> w
    de.mrapp.android.tabswitcher.layout.Arithmetics access$3000(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> x
    void access$3100(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.RevealAnimation) -> a
    long access$3200(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> y
    de.mrapp.android.tabswitcher.layout.Arithmetics access$3300(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> z
    void access$3400(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,long,android.view.animation.Interpolator,float,de.mrapp.android.tabswitcher.PeekAnimation) -> a
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$3500(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> A
    float access$3600(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,int) -> a
    de.mrapp.android.tabswitcher.model.TabItem[] access$3700(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,int,float) -> a
    de.mrapp.android.tabswitcher.TabSwitcher access$3800(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> B
    de.mrapp.android.tabswitcher.model.TabItem[] access$3900(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,boolean,de.mrapp.android.tabswitcher.model.TabItem[]) -> a
    de.mrapp.android.tabswitcher.model.TabItem[] access$4000(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem[],de.mrapp.android.tabswitcher.model.TabItem,boolean,float,boolean) -> a
    de.mrapp.android.tabswitcher.model.TabItem[] access$4100(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem[],de.mrapp.android.tabswitcher.model.TabItem) -> a
    android.view.ViewTreeObserver$OnGlobalLayoutListener access$4200(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> b
    float access$4300(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> C
    float access$4400(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> D
    de.mrapp.android.tabswitcher.layout.Arithmetics access$4500(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> E
    de.mrapp.android.tabswitcher.layout.Arithmetics access$4600(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> F
    de.mrapp.android.tabswitcher.layout.Arithmetics access$4700(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> G
    de.mrapp.android.tabswitcher.layout.Arithmetics access$4800(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> H
    de.mrapp.android.tabswitcher.layout.Arithmetics access$4900(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> I
    de.mrapp.android.tabswitcher.layout.Arithmetics access$5000(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> J
    de.mrapp.android.tabswitcher.layout.Arithmetics access$5100(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> K
    de.mrapp.android.tabswitcher.layout.Arithmetics access$5200(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> L
    de.mrapp.android.tabswitcher.layout.Arithmetics access$5300(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> M
    de.mrapp.android.tabswitcher.layout.Arithmetics access$5400(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> N
    de.mrapp.android.tabswitcher.layout.Arithmetics access$5500(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> O
    de.mrapp.android.tabswitcher.layout.Arithmetics access$5600(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> P
    de.mrapp.android.tabswitcher.layout.Arithmetics access$5700(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> Q
    float access$5800(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> R
    de.mrapp.android.tabswitcher.layout.Arithmetics access$5900(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> S
    de.mrapp.android.tabswitcher.layout.Arithmetics access$6000(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> T
    android.animation.Animator$AnimatorListener access$6100(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> c
    void access$6200(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,boolean,long,de.mrapp.android.tabswitcher.SwipeAnimation,android.animation.Animator$AnimatorListener) -> a
    int access$6300(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> U
    int access$6302(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,int) -> b
    int access$6400(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,android.view.View) -> a
    void access$6500(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> d
    void access$6600(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> e
    void access$6700(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> f
    de.mrapp.android.tabswitcher.TabSwitcher access$6800(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> V
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$6900(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> W
    de.mrapp.android.tabswitcher.layout.Arithmetics access$7000(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> X
    de.mrapp.android.tabswitcher.layout.Arithmetics access$7100(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> Y
    de.mrapp.android.tabswitcher.layout.phone.PhoneRecyclerAdapter access$7200(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> Z
    void access$7400(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,boolean,long) -> a
    void access$7500(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,int) -> a
    de.mrapp.android.tabswitcher.layout.Arithmetics access$7600(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> aa
    de.mrapp.android.tabswitcher.layout.Arithmetics access$7700(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> ab
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$7800(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> ac
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$7900(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> ad
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$8000(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> ae
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$8100(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> af
    void access$8200(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,boolean) -> a
    void access$8300(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,float,boolean) -> a
    de.mrapp.android.tabswitcher.layout.Arithmetics access$8400(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> ag
    de.mrapp.android.tabswitcher.layout.Arithmetics access$8500(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> ah
    de.mrapp.android.tabswitcher.layout.Arithmetics access$8600(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> ai
    de.mrapp.android.tabswitcher.layout.Arithmetics access$8700(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> aj
    void access$8800(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,android.view.animation.Interpolator) -> a
    de.mrapp.android.tabswitcher.layout.Arithmetics access$8900(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> ak
    de.mrapp.android.tabswitcher.layout.Arithmetics access$9000(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> al
    de.mrapp.android.tabswitcher.layout.Arithmetics access$9100(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> am
    android.animation.Animator$AnimatorListener access$9200(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> g
    de.mrapp.android.tabswitcher.layout.Arithmetics access$9300(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> an
    de.mrapp.android.tabswitcher.layout.Arithmetics access$9400(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> ao
    de.mrapp.android.tabswitcher.layout.Arithmetics access$9500(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> ap
    de.mrapp.android.tabswitcher.layout.Arithmetics access$9600(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> aq
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$9700(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> ar
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$9800(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> as
    android.animation.Animator$AnimatorListener access$9900(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> h
    void access$10000(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,long,android.view.animation.Interpolator,long,android.animation.Animator$AnimatorListener) -> a
    de.mrapp.android.tabswitcher.model.TabSwitcherModel access$10100(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> at
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$1 -> de.mrapp.android.tabswitcher.c.a.d$1:
    android.view.View val$view -> a
    int val$initialMargin -> b
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> c
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,android.view.View,int) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$10 -> de.mrapp.android.tabswitcher.c.a.d$2:
    de.mrapp.android.tabswitcher.model.TabItem[] val$addedTabItems -> a
    de.mrapp.android.tabswitcher.SwipeAnimation val$swipeAnimation -> b
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> c
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem[],de.mrapp.android.tabswitcher.SwipeAnimation) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$11 -> de.mrapp.android.tabswitcher.c.a.d$3:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$12 -> de.mrapp.android.tabswitcher.c.a.d$4:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> b
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> c
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$13 -> de.mrapp.android.tabswitcher.c.a.d$5:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$14 -> de.mrapp.android.tabswitcher.c.a.d$6:
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> a
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$16 -> de.mrapp.android.tabswitcher.c.a.d$7:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$17 -> de.mrapp.android.tabswitcher.c.a.d$8:
    de.mrapp.android.tabswitcher.model.TabItem val$removedTabItem -> a
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$18 -> de.mrapp.android.tabswitcher.c.a.d$9:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$19 -> de.mrapp.android.tabswitcher.c.a.d$10:
    android.view.View val$view -> a
    android.animation.Animator$AnimatorListener val$listener -> b
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> c
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,android.view.View,android.animation.Animator$AnimatorListener) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$2 -> de.mrapp.android.tabswitcher.c.a.d$11:
    float val$startPosition -> a
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,float) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$20 -> de.mrapp.android.tabswitcher.c.a.d$12:
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> a
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$21 -> de.mrapp.android.tabswitcher.c.a.d$13:
    de.mrapp.android.tabswitcher.PeekAnimation val$peekAnimation -> a
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> b
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> c
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.PeekAnimation,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$22 -> de.mrapp.android.tabswitcher.c.a.d$14:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$23 -> de.mrapp.android.tabswitcher.c.a.d$15:
    de.mrapp.android.tabswitcher.PeekAnimation val$peekAnimation -> a
    de.mrapp.android.tabswitcher.model.TabItem val$selectedTabItem -> b
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> c
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.PeekAnimation,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$24 -> de.mrapp.android.tabswitcher.c.a.d$16:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$3 -> de.mrapp.android.tabswitcher.c.a.d$17:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$4 -> de.mrapp.android.tabswitcher.c.a.d$18:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$5 -> de.mrapp.android.tabswitcher.c.a.d$19:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    de.mrapp.android.tabswitcher.SwipeAnimation val$swipeAnimation -> b
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> c
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.SwipeAnimation) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$6 -> de.mrapp.android.tabswitcher.c.a.d$20:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    float val$position -> b
    de.mrapp.android.tabswitcher.model.Tag val$tag -> c
    long val$delay -> d
    android.animation.Animator$AnimatorListener val$listener -> e
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> f
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,float,de.mrapp.android.tabswitcher.model.Tag,long,android.animation.Animator$AnimatorListener) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$7 -> de.mrapp.android.tabswitcher.c.a.d$21:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> b
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$8 -> de.mrapp.android.tabswitcher.c.a.d$22:
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> a
    de.mrapp.android.tabswitcher.RevealAnimation val$revealAnimation -> b
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> c
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.RevealAnimation) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$9 -> de.mrapp.android.tabswitcher.c.a.d$23:
    de.mrapp.android.tabswitcher.PeekAnimation val$peekAnimation -> a
    de.mrapp.android.tabswitcher.model.TabItem val$tabItem -> b
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> c
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.PeekAnimation,de.mrapp.android.tabswitcher.model.TabItem) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$CompoundLayoutListener -> de.mrapp.android.tabswitcher.c.a.d$a:
    int count -> b
    android.view.ViewTreeObserver$OnGlobalLayoutListener listener -> c
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> a
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,int,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    void onGlobalLayout() -> onGlobalLayout
de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$InitialTabItemIterator -> de.mrapp.android.tabswitcher.c.a.d$b:
    de.mrapp.android.tabswitcher.model.TabItem[] array -> b
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout this$0 -> a
    void calculateAndClipStartPosition(de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.model.TabItem) -> a
    float calculateStartPosition(de.mrapp.android.tabswitcher.model.TabItem) -> a
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem[],boolean,int) -> <init>
    int getCount() -> a
    de.mrapp.android.tabswitcher.model.TabItem getItem(int) -> a
    void <init>(de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout,de.mrapp.android.tabswitcher.model.TabItem[],boolean,int,de.mrapp.android.tabswitcher.layout.phone.PhoneTabSwitcherLayout$1) -> <init>
de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder -> de.mrapp.android.tabswitcher.c.a.e:
    android.view.ViewGroup titleContainer -> c
    android.view.ViewGroup childContainer -> d
    android.view.View child -> e
    android.widget.ImageView previewImageView -> f
    android.view.View borderView -> g
    void <init>() -> <init>
de.mrapp.android.tabswitcher.layout.phone.PreviewDataBinder -> de.mrapp.android.tabswitcher.c.a.f:
    android.view.ViewGroup parent -> a
    de.mrapp.android.util.view.ViewRecycler childViewRecycler -> b
    void <init>(android.view.ViewGroup,de.mrapp.android.util.view.ViewRecycler) -> <init>
    void onPreExecute(android.widget.ImageView,de.mrapp.android.tabswitcher.model.TabItem[]) -> a
    android.graphics.Bitmap doInBackground(de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.model.TabItem[]) -> a
    void onPostExecute(android.widget.ImageView,android.graphics.Bitmap,de.mrapp.android.tabswitcher.model.TabItem[]) -> a
    void onPostExecute(android.view.View,java.lang.Object,java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object,java.lang.Object[]) -> a
    void onPreExecute(android.view.View,java.lang.Object[]) -> a
de.mrapp.android.tabswitcher.model.Model -> de.mrapp.android.tabswitcher.d.a:
    int getCount() -> getCount
    de.mrapp.android.tabswitcher.Tab getTab(int) -> a
de.mrapp.android.tabswitcher.model.Model$Listener -> de.mrapp.android.tabswitcher.d.a$a:
    void onLogLevelChanged(de.mrapp.android.util.logging.LogLevel) -> a
    void onDecoratorChanged(de.mrapp.android.tabswitcher.TabSwitcherDecorator) -> a
    void onSwitcherShown() -> a_
    void onSwitcherHidden() -> b
    void onSelectionChanged(int,int,de.mrapp.android.tabswitcher.Tab,boolean) -> a
    void onTabAdded(int,de.mrapp.android.tabswitcher.Tab,int,int,boolean,de.mrapp.android.tabswitcher.Animation) -> a
    void onTabRemoved(int,de.mrapp.android.tabswitcher.Tab,int,int,de.mrapp.android.tabswitcher.Animation) -> a
    void onPaddingChanged(int,int,int,int) -> a
    void onTabIconChanged(android.graphics.drawable.Drawable) -> a
    void onTabBackgroundColorChanged(android.content.res.ColorStateList) -> a
    void onTabTitleColorChanged(android.content.res.ColorStateList) -> b
    void onTabCloseButtonIconChanged(android.graphics.drawable.Drawable) -> b
    void onToolbarVisibilityChanged(boolean) -> a
    void onToolbarTitleChanged(java.lang.CharSequence) -> a
    void onToolbarNavigationIconChanged(android.graphics.drawable.Drawable,android.view.View$OnClickListener) -> a
    void onToolbarMenuInflated(int,android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> a
de.mrapp.android.tabswitcher.model.State -> de.mrapp.android.tabswitcher.d.b:
    de.mrapp.android.tabswitcher.model.State STACKED_START -> a
    de.mrapp.android.tabswitcher.model.State STACKED_START_ATOP -> b
    de.mrapp.android.tabswitcher.model.State FLOATING -> c
    de.mrapp.android.tabswitcher.model.State STACKED_END -> d
    de.mrapp.android.tabswitcher.model.State HIDDEN -> e
    de.mrapp.android.tabswitcher.model.State[] $VALUES -> f
    de.mrapp.android.tabswitcher.model.State[] values() -> values
    de.mrapp.android.tabswitcher.model.State valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.model.TabItem -> de.mrapp.android.tabswitcher.d.c:
    int index -> a
    de.mrapp.android.tabswitcher.Tab tab -> b
    android.view.View view -> c
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder viewHolder -> d
    de.mrapp.android.tabswitcher.model.Tag tag -> e
    void <init>(int,de.mrapp.android.tabswitcher.Tab) -> <init>
    de.mrapp.android.tabswitcher.model.TabItem create(de.mrapp.android.tabswitcher.model.Model,de.mrapp.android.util.view.AttachedViewRecycler,int) -> a
    de.mrapp.android.tabswitcher.model.TabItem create(de.mrapp.android.util.view.AttachedViewRecycler,int,de.mrapp.android.tabswitcher.Tab) -> a
    int getIndex() -> a
    de.mrapp.android.tabswitcher.Tab getTab() -> b
    android.view.View getView() -> c
    void setView(android.view.View) -> a
    de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder getViewHolder() -> d
    void setViewHolder(de.mrapp.android.tabswitcher.layout.phone.PhoneTabViewHolder) -> a
    de.mrapp.android.tabswitcher.model.Tag getTag() -> e
    void setTag(de.mrapp.android.tabswitcher.model.Tag) -> a
    boolean isInflated() -> f
    boolean isVisible() -> g
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
de.mrapp.android.tabswitcher.model.TabItem$Comparator -> de.mrapp.android.tabswitcher.d.c$a:
    de.mrapp.android.tabswitcher.TabSwitcher tabSwitcher -> a
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher) -> <init>
    int compare(de.mrapp.android.tabswitcher.model.TabItem,de.mrapp.android.tabswitcher.model.TabItem) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
de.mrapp.android.tabswitcher.model.TabSwitcherModel -> de.mrapp.android.tabswitcher.d.d:
    java.lang.String FIRST_VISIBLE_TAB_INDEX_EXTRA -> a
    java.lang.String FIRST_VISIBLE_TAB_POSITION_EXTRA -> b
    java.lang.String LOG_LEVEL_EXTRA -> c
    java.lang.String TABS_EXTRA -> d
    java.lang.String SWITCHER_SHOWN_EXTRA -> e
    java.lang.String SELECTED_TAB_EXTRA -> f
    java.lang.String PADDING_EXTRA -> g
    java.lang.String TAB_ICON_ID_EXTRA -> h
    java.lang.String TAB_ICON_BITMAP_EXTRA -> i
    java.lang.String TAB_BACKGROUND_COLOR_EXTRA -> j
    java.lang.String TAB_TITLE_TEXT_COLOR_EXTRA -> k
    java.lang.String TAB_CLOSE_BUTTON_ICON_ID_EXTRA -> l
    java.lang.String TAB_CLOSE_BUTTON_ICON_BITMAP_EXTRA -> m
    java.lang.String SHOW_TOOLBARS_EXTRA -> n
    java.lang.String TOOLBAR_TITLE_EXTRA -> o
    de.mrapp.android.tabswitcher.TabSwitcher tabSwitcher -> p
    java.util.Set listeners -> q
    int firstVisibleTabIndex -> r
    float firstVisibleTabPosition -> s
    de.mrapp.android.util.logging.LogLevel logLevel -> t
    java.util.ArrayList tabs -> u
    boolean switcherShown -> v
    de.mrapp.android.tabswitcher.Tab selectedTab -> w
    de.mrapp.android.tabswitcher.TabSwitcherDecorator decorator -> x
    de.mrapp.android.tabswitcher.layout.ChildRecyclerAdapter childRecyclerAdapter -> y
    int[] padding -> z
    int tabIconId -> A
    android.graphics.Bitmap tabIconBitmap -> B
    android.content.res.ColorStateList tabBackgroundColor -> C
    android.content.res.ColorStateList tabTitleTextColor -> D
    int tabCloseButtonIconId -> E
    android.graphics.Bitmap tabCloseButtonIconBitmap -> F
    boolean showToolbars -> G
    java.lang.CharSequence toolbarTitle -> H
    android.graphics.drawable.Drawable toolbarNavigationIcon -> I
    android.view.View$OnClickListener toolbarNavigationIconListener -> J
    int toolbarMenuId -> K
    android.support.v7.widget.Toolbar$OnMenuItemClickListener toolbarMenuItemListener -> L
    java.util.Set tabCloseListeners -> M
    java.util.Set tabPreviewListeners -> N
    int indexOfOrThrowException(de.mrapp.android.tabswitcher.Tab) -> d
    boolean setSwitcherShown(boolean) -> b
    void notifyOnLogLevelChanged(de.mrapp.android.util.logging.LogLevel) -> b
    void notifyOnDecoratorChanged(de.mrapp.android.tabswitcher.TabSwitcherDecorator) -> b
    void notifyOnSwitcherShown() -> E
    void notifyOnSwitcherHidden() -> F
    void notifyOnSelectionChanged(int,int,de.mrapp.android.tabswitcher.Tab,boolean) -> a
    void notifyOnTabAdded(int,de.mrapp.android.tabswitcher.Tab,int,int,boolean,de.mrapp.android.tabswitcher.Animation) -> a
    void notifyOnTabRemoved(int,de.mrapp.android.tabswitcher.Tab,int,int,de.mrapp.android.tabswitcher.Animation) -> a
    void notifyOnPaddingChanged(int,int,int,int) -> b
    void notifyOnTabIconChanged(android.graphics.drawable.Drawable) -> a
    void notifyOnTabBackgroundColorChanged(android.content.res.ColorStateList) -> c
    void notifyOnTabTitleColorChanged(android.content.res.ColorStateList) -> d
    void notifyOnTabCloseButtonIconChanged(android.graphics.drawable.Drawable) -> b
    void notifyOnToolbarVisibilityChanged(boolean) -> c
    void notifyOnToolbarTitleChanged(java.lang.CharSequence) -> b
    void notifyOnToolbarMenuInflated(int,android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> b
    void notifyOnToolbarNavigationIconChanged(android.graphics.drawable.Drawable,android.view.View$OnClickListener) -> b
    void <init>(de.mrapp.android.tabswitcher.TabSwitcher) -> <init>
    void addListener(de.mrapp.android.tabswitcher.model.Model$Listener) -> a
    void removeListener(de.mrapp.android.tabswitcher.model.Model$Listener) -> b
    int getFirstVisibleTabIndex() -> a
    void setFirstVisibleTabIndex(int) -> b
    float getFirstVisibleTabPosition() -> b
    void setFirstVisibleTabPosition(float) -> a
    android.view.View$OnClickListener getToolbarNavigationIconListener() -> c
    int getToolbarMenuId() -> d
    android.support.v7.widget.Toolbar$OnMenuItemClickListener getToolbarMenuItemListener() -> e
    java.util.Set getTabCloseListeners() -> f
    java.util.Set getTabPreviewListeners() -> g
    de.mrapp.android.tabswitcher.layout.ChildRecyclerAdapter getChildRecyclerAdapter() -> h
    android.content.Context getContext() -> i
    void setDecorator(de.mrapp.android.tabswitcher.TabSwitcherDecorator) -> a
    de.mrapp.android.tabswitcher.TabSwitcherDecorator getDecorator() -> j
    de.mrapp.android.util.logging.LogLevel getLogLevel() -> k
    void setLogLevel(de.mrapp.android.util.logging.LogLevel) -> a
    boolean isEmpty() -> l
    int getCount() -> getCount
    de.mrapp.android.tabswitcher.Tab getTab(int) -> a
    int indexOf(de.mrapp.android.tabswitcher.Tab) -> a
    void addTab(de.mrapp.android.tabswitcher.Tab,int,de.mrapp.android.tabswitcher.Animation) -> a
    void removeTab(de.mrapp.android.tabswitcher.Tab) -> b
    void removeTab(de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> a
    boolean isSwitcherShown() -> m
    void showSwitcher() -> n
    void hideSwitcher() -> o
    de.mrapp.android.tabswitcher.Tab getSelectedTab() -> p
    int getSelectedTabIndex() -> q
    void selectTab(de.mrapp.android.tabswitcher.Tab) -> c
    java.util.Iterator iterator() -> iterator
    void setPadding(int,int,int,int) -> a
    int getPaddingLeft() -> r
    int getPaddingTop() -> s
    int getPaddingRight() -> t
    int getPaddingBottom() -> u
    int getPaddingStart() -> v
    int getPaddingEnd() -> w
    android.graphics.drawable.Drawable getTabIcon() -> x
    void setTabIcon(int) -> c
    void setTabIcon(android.graphics.Bitmap) -> a
    android.content.res.ColorStateList getTabBackgroundColor() -> y
    void setTabBackgroundColor(int) -> d
    void setTabBackgroundColor(android.content.res.ColorStateList) -> a
    android.content.res.ColorStateList getTabTitleTextColor() -> z
    void setTabTitleTextColor(int) -> e
    void setTabTitleTextColor(android.content.res.ColorStateList) -> b
    android.graphics.drawable.Drawable getTabCloseButtonIcon() -> A
    void setTabCloseButtonIcon(int) -> f
    void setTabCloseButtonIcon(android.graphics.Bitmap) -> b
    boolean areToolbarsShown() -> B
    void showToolbars(boolean) -> a
    java.lang.CharSequence getToolbarTitle() -> C
    void setToolbarTitle(int) -> g
    void setToolbarTitle(java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getToolbarNavigationIcon() -> D
    void setToolbarNavigationIcon(android.graphics.drawable.Drawable,android.view.View$OnClickListener) -> a
    void inflateToolbarMenu(int,android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> a
    void saveInstanceState(android.os.Bundle) -> a
    void restoreInstanceState(android.os.Bundle) -> b
    void <clinit>() -> <clinit>
de.mrapp.android.tabswitcher.model.Tag -> de.mrapp.android.tabswitcher.d.e:
    float position -> a
    de.mrapp.android.tabswitcher.model.State state -> b
    boolean closing -> c
    void <init>() -> <init>
    float getPosition() -> a
    void setPosition(float) -> a
    de.mrapp.android.tabswitcher.model.State getState() -> b
    void setState(de.mrapp.android.tabswitcher.model.State) -> a
    boolean isClosing() -> c
    void setClosing(boolean) -> a
    de.mrapp.android.tabswitcher.model.Tag clone() -> d
    java.lang.Object clone() -> clone
de.mrapp.android.tabswitcher.view.TabSwitcherButton -> de.mrapp.android.tabswitcher.view.TabSwitcherButton:
    de.mrapp.android.tabswitcher.drawable.TabSwitcherDrawable drawable -> a
    void initialize() -> a
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setCount(int) -> setCount
    void onSwitcherShown(de.mrapp.android.tabswitcher.TabSwitcher) -> a
    void onSwitcherHidden(de.mrapp.android.tabswitcher.TabSwitcher) -> b
    void onSelectionChanged(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab) -> a
    void onTabAdded(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> a
    void onTabRemoved(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> b
de.mrapp.android.util.BitmapUtil -> de.mrapp.android.util.a:
    android.graphics.Bitmap resize(android.graphics.Bitmap,int,int) -> a
de.mrapp.android.util.ClassUtil -> de.mrapp.android.util.b:
    java.lang.String getTruncatedName(java.lang.Class) -> a
de.mrapp.android.util.Condition -> de.mrapp.android.util.c:
    void throwException(java.lang.String,java.lang.Class) -> a
    void ensureTrue(boolean,java.lang.String) -> a
    void ensureTrue(boolean,java.lang.String,java.lang.Class) -> a
    void ensureEqual(java.lang.Object,java.lang.Object,java.lang.String) -> a
    void ensureEqual(java.lang.Object,java.lang.Object,java.lang.String,java.lang.Class) -> a
    void ensureNotEqual(java.lang.Object,java.lang.Object,java.lang.String,java.lang.Class) -> b
    void ensureNotNull(java.lang.Object,java.lang.String) -> a
    void ensureNotNull(java.lang.Object,java.lang.String,java.lang.Class) -> a
    void ensureNotEmpty(java.lang.CharSequence,java.lang.String) -> a
    void ensureNotEmpty(java.lang.CharSequence,java.lang.String,java.lang.Class) -> a
    void ensureAtLeast(int,int,java.lang.String) -> a
    void ensureAtLeast(int,int,java.lang.String,java.lang.Class) -> a
    void ensureAtLeast(long,long,java.lang.String) -> a
    void ensureAtLeast(long,long,java.lang.String,java.lang.Class) -> a
    void ensureAtMaximum(int,int,java.lang.String) -> b
    void ensureAtMaximum(int,int,java.lang.String,java.lang.Class) -> b
    void ensureGreater(int,int,java.lang.String) -> c
    void ensureGreater(int,int,java.lang.String,java.lang.Class) -> c
    void ensureGreater(float,float,java.lang.String) -> a
    void ensureGreater(float,float,java.lang.String,java.lang.Class) -> a
    void ensureSmaller(float,float,java.lang.String) -> b
    void ensureSmaller(float,float,java.lang.String,java.lang.Class) -> b
de.mrapp.android.util.DisplayUtil -> de.mrapp.android.util.d:
    int pixelsToDp(android.content.Context,int) -> a
    float dpToPixels(android.content.Context,float) -> a
    de.mrapp.android.util.DisplayUtil$Orientation getOrientation(android.content.Context) -> a
    de.mrapp.android.util.DisplayUtil$DeviceType getDeviceType(android.content.Context) -> b
    int getDisplayWidth(android.content.Context) -> c
    int getDisplayHeight(android.content.Context) -> d
de.mrapp.android.util.DisplayUtil$DeviceType -> de.mrapp.android.util.d$a:
    de.mrapp.android.util.DisplayUtil$DeviceType PHONE -> a
    de.mrapp.android.util.DisplayUtil$DeviceType PHABLET -> b
    de.mrapp.android.util.DisplayUtil$DeviceType TABLET -> c
    java.lang.String value -> d
    de.mrapp.android.util.DisplayUtil$DeviceType[] $VALUES -> e
    de.mrapp.android.util.DisplayUtil$DeviceType[] values() -> values
    de.mrapp.android.util.DisplayUtil$DeviceType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    java.lang.String getValue() -> a
    de.mrapp.android.util.DisplayUtil$DeviceType fromValue(java.lang.String) -> a
    void <clinit>() -> <clinit>
de.mrapp.android.util.DisplayUtil$Orientation -> de.mrapp.android.util.d$b:
    de.mrapp.android.util.DisplayUtil$Orientation PORTRAIT -> a
    de.mrapp.android.util.DisplayUtil$Orientation LANDSCAPE -> b
    de.mrapp.android.util.DisplayUtil$Orientation SQUARE -> c
    de.mrapp.android.util.DisplayUtil$Orientation[] $VALUES -> d
    de.mrapp.android.util.DisplayUtil$Orientation[] values() -> values
    de.mrapp.android.util.DisplayUtil$Orientation valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
de.mrapp.android.util.ElevationUtil -> de.mrapp.android.util.e:
    android.graphics.Bitmap createEdgeShadow(android.content.Context,int,de.mrapp.android.util.ElevationUtil$Orientation,boolean) -> b
    android.graphics.Bitmap createCornerShadow(android.content.Context,int,de.mrapp.android.util.ElevationUtil$Orientation,boolean) -> c
    int[] getCornerColors(de.mrapp.android.util.ElevationUtil$Orientation,int,int) -> a
    android.graphics.RectF getCornerBounds(de.mrapp.android.util.ElevationUtil$Orientation,int) -> a
    float getHorizontalShadowWidth(android.content.Context,int,de.mrapp.android.util.ElevationUtil$Orientation,boolean) -> d
    float getVerticalShadowWidth(android.content.Context,int,de.mrapp.android.util.ElevationUtil$Orientation,boolean) -> e
    float getShadowWidth(android.content.Context,int,de.mrapp.android.util.ElevationUtil$Orientation,boolean) -> f
    int getHorizontalShadowColor(int,de.mrapp.android.util.ElevationUtil$Orientation,boolean) -> a
    int getVerticalShadowColor(int,de.mrapp.android.util.ElevationUtil$Orientation,boolean) -> b
    int getShadowColor(int,de.mrapp.android.util.ElevationUtil$Orientation,boolean) -> c
    int getShadowAlpha(int,int,int) -> a
    android.graphics.Shader createLinearGradient(de.mrapp.android.util.ElevationUtil$Orientation,int,int,float,int) -> a
    android.graphics.Shader createRadialGradient(de.mrapp.android.util.ElevationUtil$Orientation,int,float) -> a
    float getCornerAngle(de.mrapp.android.util.ElevationUtil$Orientation) -> a
    android.graphics.Bitmap createElevationShadow(android.content.Context,int,de.mrapp.android.util.ElevationUtil$Orientation,boolean) -> a
de.mrapp.android.util.ElevationUtil$1 -> de.mrapp.android.util.e$1:
    int[] $SwitchMap$de$mrapp$android$util$ElevationUtil$Orientation -> a
    void <clinit>() -> <clinit>
de.mrapp.android.util.ElevationUtil$Orientation -> de.mrapp.android.util.e$a:
    de.mrapp.android.util.ElevationUtil$Orientation LEFT -> a
    de.mrapp.android.util.ElevationUtil$Orientation TOP -> b
    de.mrapp.android.util.ElevationUtil$Orientation RIGHT -> c
    de.mrapp.android.util.ElevationUtil$Orientation BOTTOM -> d
    de.mrapp.android.util.ElevationUtil$Orientation TOP_LEFT -> e
    de.mrapp.android.util.ElevationUtil$Orientation TOP_RIGHT -> f
    de.mrapp.android.util.ElevationUtil$Orientation BOTTOM_LEFT -> g
    de.mrapp.android.util.ElevationUtil$Orientation BOTTOM_RIGHT -> h
    int value -> i
    de.mrapp.android.util.ElevationUtil$Orientation[] $VALUES -> j
    de.mrapp.android.util.ElevationUtil$Orientation[] values() -> values
    de.mrapp.android.util.ElevationUtil$Orientation valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int getValue() -> a
    de.mrapp.android.util.ElevationUtil$Orientation fromValue(int) -> a
    void <clinit>() -> <clinit>
de.mrapp.android.util.R -> de.mrapp.android.util.f:
de.mrapp.android.util.R$bool -> de.mrapp.android.util.f$a:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    int abc_allow_stacked_button_bar -> abc_allow_stacked_button_bar
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_closeDialogWhenTouchOutside -> abc_config_closeDialogWhenTouchOutside
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    int elevation_shadow_view_emulate_parallel_light_default_value -> elevation_shadow_view_emulate_parallel_light_default_value
de.mrapp.android.util.R$dimen -> de.mrapp.android.util.f$b:
    int abc_action_bar_content_inset_material -> abc_action_bar_content_inset_material
    int abc_action_bar_content_inset_with_nav -> abc_action_bar_content_inset_with_nav
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_end_material -> abc_action_bar_default_padding_end_material
    int abc_action_bar_default_padding_start_material -> abc_action_bar_default_padding_start_material
    int abc_action_bar_elevation_material -> abc_action_bar_elevation_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_overflow_padding_end_material -> abc_action_bar_overflow_padding_end_material
    int abc_action_bar_overflow_padding_start_material -> abc_action_bar_overflow_padding_start_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_alert_dialog_button_bar_height -> abc_alert_dialog_button_bar_height
    int abc_button_inset_horizontal_material -> abc_button_inset_horizontal_material
    int abc_button_inset_vertical_material -> abc_button_inset_vertical_material
    int abc_button_padding_horizontal_material -> abc_button_padding_horizontal_material
    int abc_button_padding_vertical_material -> abc_button_padding_vertical_material
    int abc_cascading_menus_min_smallest_width -> abc_cascading_menus_min_smallest_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_corner_material -> abc_control_corner_material
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dialog_fixed_height_major -> abc_dialog_fixed_height_major
    int abc_dialog_fixed_height_minor -> abc_dialog_fixed_height_minor
    int abc_dialog_fixed_width_major -> abc_dialog_fixed_width_major
    int abc_dialog_fixed_width_minor -> abc_dialog_fixed_width_minor
    int abc_dialog_list_padding_bottom_no_buttons -> abc_dialog_list_padding_bottom_no_buttons
    int abc_dialog_list_padding_top_no_title -> abc_dialog_list_padding_top_no_title
    int abc_dialog_min_width_major -> abc_dialog_min_width_major
    int abc_dialog_min_width_minor -> abc_dialog_min_width_minor
    int abc_dialog_padding_material -> abc_dialog_padding_material
    int abc_dialog_padding_top_material -> abc_dialog_padding_top_material
    int abc_dialog_title_divider_material -> abc_dialog_title_divider_material
    int abc_disabled_alpha_material_dark -> abc_disabled_alpha_material_dark
    int abc_disabled_alpha_material_light -> abc_disabled_alpha_material_light
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_edit_text_inset_bottom_material -> abc_edit_text_inset_bottom_material
    int abc_edit_text_inset_horizontal_material -> abc_edit_text_inset_horizontal_material
    int abc_edit_text_inset_top_material -> abc_edit_text_inset_top_material
    int abc_floating_window_z -> abc_floating_window_z
    int abc_list_item_padding_horizontal_material -> abc_list_item_padding_horizontal_material
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_progress_bar_height_material -> abc_progress_bar_height_material
    int abc_search_view_preferred_height -> abc_search_view_preferred_height
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_seekbar_track_background_height_material -> abc_seekbar_track_background_height_material
    int abc_seekbar_track_progress_height_material -> abc_seekbar_track_progress_height_material
    int abc_select_dialog_padding_start_material -> abc_select_dialog_padding_start_material
    int abc_switch_padding -> abc_switch_padding
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_header_material -> abc_text_size_menu_header_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int elevation_shadow_view_shadow_elevation_default_value -> elevation_shadow_view_shadow_elevation_default_value
    int highlight_alpha_material_colored -> highlight_alpha_material_colored
    int highlight_alpha_material_dark -> highlight_alpha_material_dark
    int highlight_alpha_material_light -> highlight_alpha_material_light
    int hint_alpha_material_dark -> hint_alpha_material_dark
    int hint_alpha_material_light -> hint_alpha_material_light
    int hint_pressed_alpha_material_dark -> hint_pressed_alpha_material_dark
    int hint_pressed_alpha_material_light -> hint_pressed_alpha_material_light
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
    int item_touch_helper_swipe_escape_max_velocity -> item_touch_helper_swipe_escape_max_velocity
    int item_touch_helper_swipe_escape_velocity -> item_touch_helper_swipe_escape_velocity
    int notification_action_icon_size -> notification_action_icon_size
    int notification_action_text_size -> notification_action_text_size
    int notification_big_circle_margin -> notification_big_circle_margin
    int notification_content_margin_start -> notification_content_margin_start
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_main_column_padding_top -> notification_main_column_padding_top
    int notification_media_narrow_margin -> notification_media_narrow_margin
    int notification_right_icon_size -> notification_right_icon_size
    int notification_right_side_padding_top -> notification_right_side_padding_top
    int notification_small_icon_background_padding -> notification_small_icon_background_padding
    int notification_small_icon_size_as_large -> notification_small_icon_size_as_large
    int notification_subtext_size -> notification_subtext_size
    int notification_top_pad -> notification_top_pad
    int notification_top_pad_large_text -> notification_top_pad_large_text
de.mrapp.android.util.R$integer -> de.mrapp.android.util.f$c:
    int abc_config_activityDefaultDur -> abc_config_activityDefaultDur
    int abc_config_activityShortDur -> abc_config_activityShortDur
    int cancel_button_image_alpha -> cancel_button_image_alpha
    int elevation_shadow_view_shadow_orientation_default_value -> elevation_shadow_view_shadow_orientation_default_value
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
de.mrapp.android.util.R$string -> de.mrapp.android.util.f$d:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_home_description_format -> abc_action_bar_home_description_format
    int abc_action_bar_home_subtitle_description_format -> abc_action_bar_home_subtitle_description_format
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_capital_off -> abc_capital_off
    int abc_capital_on -> abc_capital_on
    int abc_font_family_body_1_material -> abc_font_family_body_1_material
    int abc_font_family_body_2_material -> abc_font_family_body_2_material
    int abc_font_family_button_material -> abc_font_family_button_material
    int abc_font_family_caption_material -> abc_font_family_caption_material
    int abc_font_family_display_1_material -> abc_font_family_display_1_material
    int abc_font_family_display_2_material -> abc_font_family_display_2_material
    int abc_font_family_display_3_material -> abc_font_family_display_3_material
    int abc_font_family_display_4_material -> abc_font_family_display_4_material
    int abc_font_family_headline_material -> abc_font_family_headline_material
    int abc_font_family_menu_material -> abc_font_family_menu_material
    int abc_font_family_subhead_material -> abc_font_family_subhead_material
    int abc_font_family_title_material -> abc_font_family_title_material
    int abc_search_hint -> abc_search_hint
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int abc_toolbar_collapse_description -> abc_toolbar_collapse_description
    int device_type -> device_type
    int search_menu_title -> search_menu_title
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
de.mrapp.android.util.R$styleable -> de.mrapp.android.util.f$e:
    int[] ActionBar -> ActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetEndWithActions -> ActionBar_contentInsetEndWithActions
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_contentInsetStartWithNavigation -> ActionBar_contentInsetStartWithNavigation
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_showTitle -> AlertDialog_showTitle
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AppCompatImageView -> AppCompatImageView
    int AppCompatImageView_android_src -> AppCompatImageView_android_src
    int AppCompatImageView_srcCompat -> AppCompatImageView_srcCompat
    int AppCompatImageView_tint -> AppCompatImageView_tint
    int AppCompatImageView_tintMode -> AppCompatImageView_tintMode
    int[] AppCompatSeekBar -> AppCompatSeekBar
    int AppCompatSeekBar_android_thumb -> AppCompatSeekBar_android_thumb
    int AppCompatSeekBar_tickMark -> AppCompatSeekBar_tickMark
    int AppCompatSeekBar_tickMarkTint -> AppCompatSeekBar_tickMarkTint
    int AppCompatSeekBar_tickMarkTintMode -> AppCompatSeekBar_tickMarkTintMode
    int[] AppCompatTextHelper -> AppCompatTextHelper
    int AppCompatTextHelper_android_textAppearance -> AppCompatTextHelper_android_textAppearance
    int AppCompatTextHelper_android_drawableTop -> AppCompatTextHelper_android_drawableTop
    int AppCompatTextHelper_android_drawableBottom -> AppCompatTextHelper_android_drawableBottom
    int AppCompatTextHelper_android_drawableLeft -> AppCompatTextHelper_android_drawableLeft
    int AppCompatTextHelper_android_drawableRight -> AppCompatTextHelper_android_drawableRight
    int AppCompatTextHelper_android_drawableStart -> AppCompatTextHelper_android_drawableStart
    int AppCompatTextHelper_android_drawableEnd -> AppCompatTextHelper_android_drawableEnd
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_autoSizeMaxTextSize -> AppCompatTextView_autoSizeMaxTextSize
    int AppCompatTextView_autoSizeMinTextSize -> AppCompatTextView_autoSizeMinTextSize
    int AppCompatTextView_autoSizePresetSizes -> AppCompatTextView_autoSizePresetSizes
    int AppCompatTextView_autoSizeStepGranularity -> AppCompatTextView_autoSizeStepGranularity
    int AppCompatTextView_autoSizeTextType -> AppCompatTextView_autoSizeTextType
    int AppCompatTextView_fontFamily -> AppCompatTextView_fontFamily
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] AppCompatTheme -> AppCompatTheme
    int AppCompatTheme_android_windowIsFloating -> AppCompatTheme_android_windowIsFloating
    int AppCompatTheme_android_windowAnimationStyle -> AppCompatTheme_android_windowAnimationStyle
    int AppCompatTheme_actionBarDivider -> AppCompatTheme_actionBarDivider
    int AppCompatTheme_actionBarItemBackground -> AppCompatTheme_actionBarItemBackground
    int AppCompatTheme_actionBarPopupTheme -> AppCompatTheme_actionBarPopupTheme
    int AppCompatTheme_actionBarSize -> AppCompatTheme_actionBarSize
    int AppCompatTheme_actionBarSplitStyle -> AppCompatTheme_actionBarSplitStyle
    int AppCompatTheme_actionBarStyle -> AppCompatTheme_actionBarStyle
    int AppCompatTheme_actionBarTabBarStyle -> AppCompatTheme_actionBarTabBarStyle
    int AppCompatTheme_actionBarTabStyle -> AppCompatTheme_actionBarTabStyle
    int AppCompatTheme_actionBarTabTextStyle -> AppCompatTheme_actionBarTabTextStyle
    int AppCompatTheme_actionBarTheme -> AppCompatTheme_actionBarTheme
    int AppCompatTheme_actionBarWidgetTheme -> AppCompatTheme_actionBarWidgetTheme
    int AppCompatTheme_actionButtonStyle -> AppCompatTheme_actionButtonStyle
    int AppCompatTheme_actionDropDownStyle -> AppCompatTheme_actionDropDownStyle
    int AppCompatTheme_actionMenuTextAppearance -> AppCompatTheme_actionMenuTextAppearance
    int AppCompatTheme_actionMenuTextColor -> AppCompatTheme_actionMenuTextColor
    int AppCompatTheme_actionModeBackground -> AppCompatTheme_actionModeBackground
    int AppCompatTheme_actionModeCloseButtonStyle -> AppCompatTheme_actionModeCloseButtonStyle
    int AppCompatTheme_actionModeCloseDrawable -> AppCompatTheme_actionModeCloseDrawable
    int AppCompatTheme_actionModeCopyDrawable -> AppCompatTheme_actionModeCopyDrawable
    int AppCompatTheme_actionModeCutDrawable -> AppCompatTheme_actionModeCutDrawable
    int AppCompatTheme_actionModeFindDrawable -> AppCompatTheme_actionModeFindDrawable
    int AppCompatTheme_actionModePasteDrawable -> AppCompatTheme_actionModePasteDrawable
    int AppCompatTheme_actionModePopupWindowStyle -> AppCompatTheme_actionModePopupWindowStyle
    int AppCompatTheme_actionModeSelectAllDrawable -> AppCompatTheme_actionModeSelectAllDrawable
    int AppCompatTheme_actionModeShareDrawable -> AppCompatTheme_actionModeShareDrawable
    int AppCompatTheme_actionModeSplitBackground -> AppCompatTheme_actionModeSplitBackground
    int AppCompatTheme_actionModeStyle -> AppCompatTheme_actionModeStyle
    int AppCompatTheme_actionModeWebSearchDrawable -> AppCompatTheme_actionModeWebSearchDrawable
    int AppCompatTheme_actionOverflowButtonStyle -> AppCompatTheme_actionOverflowButtonStyle
    int AppCompatTheme_actionOverflowMenuStyle -> AppCompatTheme_actionOverflowMenuStyle
    int AppCompatTheme_activityChooserViewStyle -> AppCompatTheme_activityChooserViewStyle
    int AppCompatTheme_alertDialogButtonGroupStyle -> AppCompatTheme_alertDialogButtonGroupStyle
    int AppCompatTheme_alertDialogCenterButtons -> AppCompatTheme_alertDialogCenterButtons
    int AppCompatTheme_alertDialogStyle -> AppCompatTheme_alertDialogStyle
    int AppCompatTheme_alertDialogTheme -> AppCompatTheme_alertDialogTheme
    int AppCompatTheme_autoCompleteTextViewStyle -> AppCompatTheme_autoCompleteTextViewStyle
    int AppCompatTheme_borderlessButtonStyle -> AppCompatTheme_borderlessButtonStyle
    int AppCompatTheme_buttonBarButtonStyle -> AppCompatTheme_buttonBarButtonStyle
    int AppCompatTheme_buttonBarNegativeButtonStyle -> AppCompatTheme_buttonBarNegativeButtonStyle
    int AppCompatTheme_buttonBarNeutralButtonStyle -> AppCompatTheme_buttonBarNeutralButtonStyle
    int AppCompatTheme_buttonBarPositiveButtonStyle -> AppCompatTheme_buttonBarPositiveButtonStyle
    int AppCompatTheme_buttonBarStyle -> AppCompatTheme_buttonBarStyle
    int AppCompatTheme_buttonStyle -> AppCompatTheme_buttonStyle
    int AppCompatTheme_buttonStyleSmall -> AppCompatTheme_buttonStyleSmall
    int AppCompatTheme_checkboxStyle -> AppCompatTheme_checkboxStyle
    int AppCompatTheme_checkedTextViewStyle -> AppCompatTheme_checkedTextViewStyle
    int AppCompatTheme_colorAccent -> AppCompatTheme_colorAccent
    int AppCompatTheme_colorBackgroundFloating -> AppCompatTheme_colorBackgroundFloating
    int AppCompatTheme_colorButtonNormal -> AppCompatTheme_colorButtonNormal
    int AppCompatTheme_colorControlActivated -> AppCompatTheme_colorControlActivated
    int AppCompatTheme_colorControlHighlight -> AppCompatTheme_colorControlHighlight
    int AppCompatTheme_colorControlNormal -> AppCompatTheme_colorControlNormal
    int AppCompatTheme_colorError -> AppCompatTheme_colorError
    int AppCompatTheme_colorPrimary -> AppCompatTheme_colorPrimary
    int AppCompatTheme_colorPrimaryDark -> AppCompatTheme_colorPrimaryDark
    int AppCompatTheme_colorSwitchThumbNormal -> AppCompatTheme_colorSwitchThumbNormal
    int AppCompatTheme_controlBackground -> AppCompatTheme_controlBackground
    int AppCompatTheme_dialogPreferredPadding -> AppCompatTheme_dialogPreferredPadding
    int AppCompatTheme_dialogTheme -> AppCompatTheme_dialogTheme
    int AppCompatTheme_dividerHorizontal -> AppCompatTheme_dividerHorizontal
    int AppCompatTheme_dividerVertical -> AppCompatTheme_dividerVertical
    int AppCompatTheme_dropDownListViewStyle -> AppCompatTheme_dropDownListViewStyle
    int AppCompatTheme_dropdownListPreferredItemHeight -> AppCompatTheme_dropdownListPreferredItemHeight
    int AppCompatTheme_editTextBackground -> AppCompatTheme_editTextBackground
    int AppCompatTheme_editTextColor -> AppCompatTheme_editTextColor
    int AppCompatTheme_editTextStyle -> AppCompatTheme_editTextStyle
    int AppCompatTheme_homeAsUpIndicator -> AppCompatTheme_homeAsUpIndicator
    int AppCompatTheme_imageButtonStyle -> AppCompatTheme_imageButtonStyle
    int AppCompatTheme_listChoiceBackgroundIndicator -> AppCompatTheme_listChoiceBackgroundIndicator
    int AppCompatTheme_listDividerAlertDialog -> AppCompatTheme_listDividerAlertDialog
    int AppCompatTheme_listMenuViewStyle -> AppCompatTheme_listMenuViewStyle
    int AppCompatTheme_listPopupWindowStyle -> AppCompatTheme_listPopupWindowStyle
    int AppCompatTheme_listPreferredItemHeight -> AppCompatTheme_listPreferredItemHeight
    int AppCompatTheme_listPreferredItemHeightLarge -> AppCompatTheme_listPreferredItemHeightLarge
    int AppCompatTheme_listPreferredItemHeightSmall -> AppCompatTheme_listPreferredItemHeightSmall
    int AppCompatTheme_listPreferredItemPaddingLeft -> AppCompatTheme_listPreferredItemPaddingLeft
    int AppCompatTheme_listPreferredItemPaddingRight -> AppCompatTheme_listPreferredItemPaddingRight
    int AppCompatTheme_panelBackground -> AppCompatTheme_panelBackground
    int AppCompatTheme_panelMenuListTheme -> AppCompatTheme_panelMenuListTheme
    int AppCompatTheme_panelMenuListWidth -> AppCompatTheme_panelMenuListWidth
    int AppCompatTheme_popupMenuStyle -> AppCompatTheme_popupMenuStyle
    int AppCompatTheme_popupWindowStyle -> AppCompatTheme_popupWindowStyle
    int AppCompatTheme_radioButtonStyle -> AppCompatTheme_radioButtonStyle
    int AppCompatTheme_ratingBarStyle -> AppCompatTheme_ratingBarStyle
    int AppCompatTheme_ratingBarStyleIndicator -> AppCompatTheme_ratingBarStyleIndicator
    int AppCompatTheme_ratingBarStyleSmall -> AppCompatTheme_ratingBarStyleSmall
    int AppCompatTheme_searchViewStyle -> AppCompatTheme_searchViewStyle
    int AppCompatTheme_seekBarStyle -> AppCompatTheme_seekBarStyle
    int AppCompatTheme_selectableItemBackground -> AppCompatTheme_selectableItemBackground
    int AppCompatTheme_selectableItemBackgroundBorderless -> AppCompatTheme_selectableItemBackgroundBorderless
    int AppCompatTheme_spinnerDropDownItemStyle -> AppCompatTheme_spinnerDropDownItemStyle
    int AppCompatTheme_spinnerStyle -> AppCompatTheme_spinnerStyle
    int AppCompatTheme_switchStyle -> AppCompatTheme_switchStyle
    int AppCompatTheme_textAppearanceLargePopupMenu -> AppCompatTheme_textAppearanceLargePopupMenu
    int AppCompatTheme_textAppearanceListItem -> AppCompatTheme_textAppearanceListItem
    int AppCompatTheme_textAppearanceListItemSecondary -> AppCompatTheme_textAppearanceListItemSecondary
    int AppCompatTheme_textAppearanceListItemSmall -> AppCompatTheme_textAppearanceListItemSmall
    int AppCompatTheme_textAppearancePopupMenuHeader -> AppCompatTheme_textAppearancePopupMenuHeader
    int AppCompatTheme_textAppearanceSearchResultSubtitle -> AppCompatTheme_textAppearanceSearchResultSubtitle
    int AppCompatTheme_textAppearanceSearchResultTitle -> AppCompatTheme_textAppearanceSearchResultTitle
    int AppCompatTheme_textAppearanceSmallPopupMenu -> AppCompatTheme_textAppearanceSmallPopupMenu
    int AppCompatTheme_textColorAlertDialogListItem -> AppCompatTheme_textColorAlertDialogListItem
    int AppCompatTheme_textColorSearchUrl -> AppCompatTheme_textColorSearchUrl
    int AppCompatTheme_toolbarNavigationButtonStyle -> AppCompatTheme_toolbarNavigationButtonStyle
    int AppCompatTheme_toolbarStyle -> AppCompatTheme_toolbarStyle
    int AppCompatTheme_tooltipForegroundColor -> AppCompatTheme_tooltipForegroundColor
    int AppCompatTheme_tooltipFrameBackground -> AppCompatTheme_tooltipFrameBackground
    int AppCompatTheme_windowActionBar -> AppCompatTheme_windowActionBar
    int AppCompatTheme_windowActionBarOverlay -> AppCompatTheme_windowActionBarOverlay
    int AppCompatTheme_windowActionModeOverlay -> AppCompatTheme_windowActionModeOverlay
    int AppCompatTheme_windowFixedHeightMajor -> AppCompatTheme_windowFixedHeightMajor
    int AppCompatTheme_windowFixedHeightMinor -> AppCompatTheme_windowFixedHeightMinor
    int AppCompatTheme_windowFixedWidthMajor -> AppCompatTheme_windowFixedWidthMajor
    int AppCompatTheme_windowFixedWidthMinor -> AppCompatTheme_windowFixedWidthMinor
    int AppCompatTheme_windowMinWidthMajor -> AppCompatTheme_windowMinWidthMajor
    int AppCompatTheme_windowMinWidthMinor -> AppCompatTheme_windowMinWidthMinor
    int AppCompatTheme_windowNoTitle -> AppCompatTheme_windowNoTitle
    int[] ButtonBarLayout -> ButtonBarLayout
    int ButtonBarLayout_allowStacking -> ButtonBarLayout_allowStacking
    int[] ColorStateListItem -> ColorStateListItem
    int ColorStateListItem_android_color -> ColorStateListItem_android_color
    int ColorStateListItem_android_alpha -> ColorStateListItem_android_alpha
    int ColorStateListItem_alpha -> ColorStateListItem_alpha
    int[] CompoundButton -> CompoundButton
    int CompoundButton_android_button -> CompoundButton_android_button
    int CompoundButton_buttonTint -> CompoundButton_buttonTint
    int CompoundButton_buttonTintMode -> CompoundButton_buttonTintMode
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_arrowHeadLength -> DrawerArrowToggle_arrowHeadLength
    int DrawerArrowToggle_arrowShaftLength -> DrawerArrowToggle_arrowShaftLength
    int DrawerArrowToggle_barLength -> DrawerArrowToggle_barLength
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int[] ElevationShadowView -> ElevationShadowView
    int ElevationShadowView_emulateParallelLight -> ElevationShadowView_emulateParallelLight
    int ElevationShadowView_shadowElevation -> ElevationShadowView_shadowElevation
    int ElevationShadowView_shadowOrientation -> ElevationShadowView_shadowOrientation
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int[] MenuItem -> MenuItem
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_alphabeticModifiers -> MenuItem_alphabeticModifiers
    int MenuItem_contentDescription -> MenuItem_contentDescription
    int MenuItem_iconTint -> MenuItem_iconTint
    int MenuItem_iconTintMode -> MenuItem_iconTintMode
    int MenuItem_numericModifiers -> MenuItem_numericModifiers
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int MenuItem_tooltipText -> MenuItem_tooltipText
    int[] MenuView -> MenuView
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int MenuView_subMenuArrow -> MenuView_subMenuArrow
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_android_popupAnimationStyle -> PopupWindow_android_popupAnimationStyle
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int[] RecycleListView -> RecycleListView
    int RecycleListView_paddingBottomNoButtons -> RecycleListView_paddingBottomNoButtons
    int RecycleListView_paddingTopNoTitle -> RecycleListView_paddingTopNoTitle
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_android_descendantFocusability -> RecyclerView_android_descendantFocusability
    int RecyclerView_fastScrollEnabled -> RecyclerView_fastScrollEnabled
    int RecyclerView_fastScrollHorizontalThumbDrawable -> RecyclerView_fastScrollHorizontalThumbDrawable
    int RecyclerView_fastScrollHorizontalTrackDrawable -> RecyclerView_fastScrollHorizontalTrackDrawable
    int RecyclerView_fastScrollVerticalThumbDrawable -> RecyclerView_fastScrollVerticalThumbDrawable
    int RecyclerView_fastScrollVerticalTrackDrawable -> RecyclerView_fastScrollVerticalTrackDrawable
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    int[] ScrimInsetsLayout -> ScrimInsetsLayout
    int ScrimInsetsLayout_insetDrawable -> ScrimInsetsLayout_insetDrawable
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] Spinner -> Spinner
    int Spinner_android_entries -> Spinner_android_entries
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_popupTheme -> Spinner_popupTheme
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_thumbTint -> SwitchCompat_thumbTint
    int SwitchCompat_thumbTintMode -> SwitchCompat_thumbTintMode
    int SwitchCompat_track -> SwitchCompat_track
    int SwitchCompat_trackTint -> SwitchCompat_trackTint
    int SwitchCompat_trackTintMode -> SwitchCompat_trackTintMode
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textColorHint -> TextAppearance_android_textColorHint
    int TextAppearance_android_textColorLink -> TextAppearance_android_textColorLink
    int TextAppearance_android_shadowColor -> TextAppearance_android_shadowColor
    int TextAppearance_android_shadowDx -> TextAppearance_android_shadowDx
    int TextAppearance_android_shadowDy -> TextAppearance_android_shadowDy
    int TextAppearance_android_shadowRadius -> TextAppearance_android_shadowRadius
    int TextAppearance_android_fontFamily -> TextAppearance_android_fontFamily
    int TextAppearance_fontFamily -> TextAppearance_fontFamily
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_buttonGravity -> Toolbar_buttonGravity
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetEndWithActions -> Toolbar_contentInsetEndWithActions
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_contentInsetStartWithNavigation -> Toolbar_contentInsetStartWithNavigation
    int Toolbar_logo -> Toolbar_logo
    int Toolbar_logoDescription -> Toolbar_logoDescription
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_subtitleTextColor -> Toolbar_subtitleTextColor
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMargin -> Toolbar_titleMargin
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int Toolbar_titleTextColor -> Toolbar_titleTextColor
    int[] View -> View
    int View_android_theme -> View_android_theme
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int ViewBackgroundHelper_android_background -> ViewBackgroundHelper_android_background
    int ViewBackgroundHelper_backgroundTint -> ViewBackgroundHelper_backgroundTint
    int ViewBackgroundHelper_backgroundTintMode -> ViewBackgroundHelper_backgroundTintMode
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    void <clinit>() -> <clinit>
de.mrapp.android.util.ThemeUtil -> de.mrapp.android.util.g:
    android.content.res.TypedArray obtainStyledAttributes(android.content.Context,int,int) -> c
    int getColor(android.content.Context,int) -> a
    int getColor(android.content.Context,int,int) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> b
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int,int) -> b
de.mrapp.android.util.ViewUtil -> de.mrapp.android.util.h:
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
    void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> a
de.mrapp.android.util.gesture.DragHelper -> de.mrapp.android.util.a.a:
    int threshold -> a
    float distance -> b
    float thresholdReachedPosition -> c
    float dragStartPosition -> d
    long dragStartTime -> e
    boolean reset -> f
    boolean reachedThreshold -> g
    float maxDragDistance -> h
    float minDragDistance -> i
    boolean reachedThreshold(float) -> d
    void <init>(int) -> <init>
    void reset() -> a
    void reset(int) -> a
    boolean isReset() -> b
    void update(float) -> a
    void setMaxDragDistance(float) -> b
    void setMinDragDistance(float) -> c
    boolean hasThresholdBeenReached() -> c
    float getDragDistance() -> d
    float getDragStartPosition() -> e
de.mrapp.android.util.logging.LogLevel -> de.mrapp.android.util.b.a:
    de.mrapp.android.util.logging.LogLevel ALL -> a
    de.mrapp.android.util.logging.LogLevel VERBOSE -> b
    de.mrapp.android.util.logging.LogLevel DEBUG -> c
    de.mrapp.android.util.logging.LogLevel INFO -> d
    de.mrapp.android.util.logging.LogLevel WARN -> e
    de.mrapp.android.util.logging.LogLevel ERROR -> f
    de.mrapp.android.util.logging.LogLevel OFF -> g
    int rank -> h
    de.mrapp.android.util.logging.LogLevel[] $VALUES -> i
    de.mrapp.android.util.logging.LogLevel[] values() -> values
    de.mrapp.android.util.logging.LogLevel valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    int getRank() -> a
    void <clinit>() -> <clinit>
de.mrapp.android.util.logging.Logger -> de.mrapp.android.util.b.b:
    de.mrapp.android.util.logging.LogLevel logLevel -> a
    void <init>(de.mrapp.android.util.logging.LogLevel) -> <init>
    de.mrapp.android.util.logging.LogLevel getLogLevel() -> a
    void setLogLevel(de.mrapp.android.util.logging.LogLevel) -> a
    void logVerbose(java.lang.Class,java.lang.String) -> a
    void logDebug(java.lang.Class,java.lang.String) -> b
    void logInfo(java.lang.Class,java.lang.String) -> c
    void logError(java.lang.Class,java.lang.String,java.lang.Throwable) -> a
de.mrapp.android.util.multithreading.AbstractDataBinder -> de.mrapp.android.util.c.a:
    android.content.Context context -> a
    de.mrapp.android.util.logging.Logger logger -> b
    java.util.Set listeners -> c
    android.support.v4.util.LruCache cache -> d
    java.util.Map views -> e
    java.util.concurrent.ExecutorService threadPool -> f
    java.lang.Object cancelLock -> g
    boolean canceled -> h
    boolean useCache -> i
    boolean notifyOnLoad(java.lang.Object,java.lang.Object[]) -> b
    void notifyOnFinished(java.lang.Object,java.lang.Object,android.view.View,java.lang.Object[]) -> a
    java.lang.Object getCachedData(java.lang.Object) -> b
    void cacheData(java.lang.Object,java.lang.Object) -> a
    void loadDataAsynchronously(de.mrapp.android.util.multithreading.AbstractDataBinder$Task) -> a
    java.lang.Object loadData(de.mrapp.android.util.multithreading.AbstractDataBinder$Task) -> b
    void setCanceled(boolean) -> a
    void onPreExecute(android.view.View,java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object,java.lang.Object[]) -> a
    void onPostExecute(android.view.View,java.lang.Object,java.lang.Object[]) -> a
    void <init>(android.content.Context,android.support.v4.util.LruCache) -> <init>
    void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.support.v4.util.LruCache) -> <init>
    android.content.Context getContext() -> a
    void setLogLevel(de.mrapp.android.util.logging.LogLevel) -> a
    void addListener(de.mrapp.android.util.multithreading.AbstractDataBinder$Listener) -> a
    void load(java.lang.Object,android.view.View,java.lang.Object[]) -> a
    void load(java.lang.Object,android.view.View,boolean,java.lang.Object[]) -> a
    boolean isCanceled() -> b
    boolean isCached(java.lang.Object) -> a
    void clearCache() -> c
    void handleMessage(android.os.Message) -> handleMessage
    boolean access$200(de.mrapp.android.util.multithreading.AbstractDataBinder,java.lang.Object,java.lang.Object[]) -> a
    java.lang.Object access$400(de.mrapp.android.util.multithreading.AbstractDataBinder,de.mrapp.android.util.multithreading.AbstractDataBinder$Task) -> a
de.mrapp.android.util.multithreading.AbstractDataBinder$1 -> de.mrapp.android.util.c.a$1:
    de.mrapp.android.util.multithreading.AbstractDataBinder$Task val$task -> a
    de.mrapp.android.util.multithreading.AbstractDataBinder this$0 -> b
    void <init>(de.mrapp.android.util.multithreading.AbstractDataBinder,de.mrapp.android.util.multithreading.AbstractDataBinder$Task) -> <init>
    void run() -> run
de.mrapp.android.util.multithreading.AbstractDataBinder$Listener -> de.mrapp.android.util.c.a$a:
    boolean onLoadData(de.mrapp.android.util.multithreading.AbstractDataBinder,java.lang.Object,java.lang.Object[]) -> a
    void onFinished(de.mrapp.android.util.multithreading.AbstractDataBinder,java.lang.Object,java.lang.Object,android.view.View,java.lang.Object[]) -> a
de.mrapp.android.util.multithreading.AbstractDataBinder$Task -> de.mrapp.android.util.c.a$b:
    android.view.View view -> a
    java.lang.Object key -> b
    java.lang.Object[] params -> c
    java.lang.Object result -> d
    void <init>(android.view.View,java.lang.Object,java.lang.Object[]) -> <init>
    java.lang.Object access$000(de.mrapp.android.util.multithreading.AbstractDataBinder$Task) -> a
    java.lang.Object[] access$100(de.mrapp.android.util.multithreading.AbstractDataBinder$Task) -> b
    java.lang.Object access$302(de.mrapp.android.util.multithreading.AbstractDataBinder$Task,java.lang.Object) -> a
    android.view.View access$500(de.mrapp.android.util.multithreading.AbstractDataBinder$Task) -> c
    java.lang.Object access$300(de.mrapp.android.util.multithreading.AbstractDataBinder$Task) -> d
de.mrapp.android.util.view.AbstractSavedState -> de.mrapp.android.util.view.AbstractSavedState:
    android.os.Parcelable superState -> superState
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    android.os.Parcelable getSuperState() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
de.mrapp.android.util.view.AbstractViewHolderAdapter -> de.mrapp.android.util.view.a:
    android.view.View currentParentView -> a
    void <init>() -> <init>
    void setCurrentParentView(android.view.View) -> a
    android.view.View findViewById(int) -> a
de.mrapp.android.util.view.AbstractViewRecycler -> de.mrapp.android.util.view.b:
    android.content.Context context -> a
    android.view.LayoutInflater inflater -> b
    java.util.Map activeViews -> c
    de.mrapp.android.util.logging.Logger logger -> d
    de.mrapp.android.util.view.AbstractViewRecycler$Adapter adapter -> e
    android.util.SparseArray unusedViews -> f
    boolean useCache -> g
    void addUnusedView(android.view.View,int) -> a
    android.view.View pollUnusedView(int) -> a
    de.mrapp.android.util.logging.Logger getLogger() -> a
    android.view.LayoutInflater getLayoutInflater() -> b
    java.util.Map getActiveViews() -> c
    void <init>(android.view.LayoutInflater) -> <init>
    android.support.v4.util.Pair inflate(java.lang.Object,boolean,java.lang.Object[]) -> a
    android.support.v4.util.Pair inflate(java.lang.Object,java.lang.Object[]) -> a
    android.content.Context getContext() -> d
    de.mrapp.android.util.view.AbstractViewRecycler$Adapter getAdapter() -> e
    void setAdapter(de.mrapp.android.util.view.AbstractViewRecycler$Adapter) -> a
    void setLogLevel(de.mrapp.android.util.logging.LogLevel) -> a
    android.view.View getView(java.lang.Object) -> a
    void clearCache() -> f
de.mrapp.android.util.view.AbstractViewRecycler$Adapter -> de.mrapp.android.util.view.b$a:
    void <init>() -> <init>
    android.view.View onInflateView(android.view.LayoutInflater,android.view.ViewGroup,java.lang.Object,int,java.lang.Object[]) -> a
    void onShowView(android.content.Context,android.view.View,java.lang.Object,boolean,java.lang.Object[]) -> a
    void onRemoveView(android.view.View,java.lang.Object) -> a
    int getViewType(java.lang.Object) -> a
    int getViewTypeCount() -> a
de.mrapp.android.util.view.AttachedViewRecycler -> de.mrapp.android.util.view.c:
    android.view.ViewGroup parent -> a
    java.util.Comparator comparator -> b
    java.util.List items -> c
    void <init>(android.view.ViewGroup,android.view.LayoutInflater,java.util.Comparator) -> <init>
    android.support.v4.util.Pair inflate(java.lang.Object,boolean,java.lang.Object[]) -> a
    void remove(java.lang.Object) -> b
    void removeAll() -> g
de.mrapp.android.util.view.ElevationShadowView -> de.mrapp.android.util.view.ElevationShadowView:
    int elevation -> a
    de.mrapp.android.util.ElevationUtil$Orientation orientation -> b
    boolean emulateParallelLight -> c
    void initialize(android.util.AttributeSet,int,int) -> a
    void obtainStyledAttributes(android.util.AttributeSet,int,int) -> b
    void obtainShadowElevation(android.content.res.TypedArray) -> a
    void obtainShadowOrientation(android.content.res.TypedArray) -> b
    void obtainEmulateParallelLight(android.content.res.TypedArray) -> c
    void adaptElevationShadow() -> a
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getShadowElevation() -> getShadowElevation
    void setShadowElevation(int) -> setShadowElevation
    de.mrapp.android.util.ElevationUtil$Orientation getShadowOrientation() -> getShadowOrientation
    void setShadowOrientation(de.mrapp.android.util.ElevationUtil$Orientation) -> setShadowOrientation
de.mrapp.android.util.view.ViewHolder -> de.mrapp.android.util.view.d:
    android.view.View parentView -> a
    android.util.SparseArray views -> b
    void <init>(android.view.View) -> <init>
    android.view.View findViewById(int) -> a
de.mrapp.android.util.view.ViewRecycler -> de.mrapp.android.util.view.e:
    void <init>(android.view.LayoutInflater) -> <init>
    android.support.v4.util.Pair inflate(java.lang.Object,android.view.ViewGroup,java.lang.Object[]) -> a
    android.support.v4.util.Pair inflate(java.lang.Object,android.view.ViewGroup,boolean,java.lang.Object[]) -> a
    android.support.v4.util.Pair inflate(java.lang.Object,boolean,java.lang.Object[]) -> a
    void remove(java.lang.Object) -> b
    void removeAll() -> g
de.psdev.licensesdialog.LicenseResolver -> de.psdev.licensesdialog.a:
    java.util.Map sLicenses -> a
    void registerDefaultLicenses() -> a
    void registerLicense(de.psdev.licensesdialog.licenses.License) -> a
    de.psdev.licensesdialog.licenses.License read(java.lang.String) -> a
    void <clinit>() -> <clinit>
de.psdev.licensesdialog.LicensesDialog -> de.psdev.licensesdialog.b:
    de.psdev.licensesdialog.model.Notice LICENSES_DIALOG_NOTICE -> a
    android.content.Context mContext -> b
    java.lang.String mTitleText -> c
    java.lang.String mLicensesText -> d
    java.lang.String mCloseText -> e
    int mThemeResourceId -> f
    int mDividerColor -> g
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> h
    void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,int) -> <init>
    android.app.Dialog create() -> a
    android.app.Dialog show() -> b
    android.webkit.WebView createWebView(android.content.Context) -> a
    de.psdev.licensesdialog.model.Notices getNotices(android.content.Context,int) -> b
    java.lang.String getLicensesText(android.content.Context,de.psdev.licensesdialog.model.Notices,boolean,boolean,java.lang.String) -> b
    android.content.DialogInterface$OnDismissListener access$000(de.psdev.licensesdialog.LicensesDialog) -> a
    int access$100(de.psdev.licensesdialog.LicensesDialog) -> b
    android.content.Context access$200(de.psdev.licensesdialog.LicensesDialog) -> c
    java.lang.String access$400(android.content.Context,de.psdev.licensesdialog.model.Notices,boolean,boolean,java.lang.String) -> a
    de.psdev.licensesdialog.model.Notices access$500(android.content.Context,int) -> a
    void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,int,de.psdev.licensesdialog.LicensesDialog$1) -> <init>
    void <clinit>() -> <clinit>
de.psdev.licensesdialog.LicensesDialog$1 -> de.psdev.licensesdialog.b$1:
    de.psdev.licensesdialog.LicensesDialog this$0 -> a
    void <init>(de.psdev.licensesdialog.LicensesDialog) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
de.psdev.licensesdialog.LicensesDialog$2 -> de.psdev.licensesdialog.b$2:
    de.psdev.licensesdialog.LicensesDialog this$0 -> a
    void <init>(de.psdev.licensesdialog.LicensesDialog) -> <init>
    void onDismiss(android.content.DialogInterface) -> onDismiss
de.psdev.licensesdialog.LicensesDialog$3 -> de.psdev.licensesdialog.b$3:
    android.app.AlertDialog val$dialog -> a
    de.psdev.licensesdialog.LicensesDialog this$0 -> b
    void <init>(de.psdev.licensesdialog.LicensesDialog,android.app.AlertDialog) -> <init>
    void onShow(android.content.DialogInterface) -> onShow
de.psdev.licensesdialog.LicensesDialog$7 -> de.psdev.licensesdialog.b$4:
    android.content.Context val$context -> a
    void <init>(android.content.Context) -> <init>
    boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message) -> onCreateWindow
de.psdev.licensesdialog.LicensesDialog$Builder -> de.psdev.licensesdialog.b$a:
    android.content.Context mContext -> a
    java.lang.String mTitleText -> b
    java.lang.String mCloseText -> c
    java.lang.Integer mRawNoticesId -> d
    de.psdev.licensesdialog.model.Notices mNotices -> e
    java.lang.String mNoticesText -> f
    java.lang.String mNoticesStyle -> g
    boolean mShowFullLicenseText -> h
    boolean mIncludeOwnLicense -> i
    int mThemeResourceId -> j
    int mDividerColor -> k
    void <init>(android.content.Context) -> <init>
    de.psdev.licensesdialog.LicensesDialog$Builder setNotices(de.psdev.licensesdialog.model.Notices) -> a
    de.psdev.licensesdialog.LicensesDialog$Builder setIncludeOwnLicense(boolean) -> a
    de.psdev.licensesdialog.LicensesDialog build() -> a
de.psdev.licensesdialog.NoticesHtmlBuilder -> de.psdev.licensesdialog.c:
    android.content.Context mContext -> a
    java.util.Map mLicenseTextCache -> b
    de.psdev.licensesdialog.model.Notices mNotices -> c
    de.psdev.licensesdialog.model.Notice mNotice -> d
    java.lang.String mStyle -> e
    boolean mShowFullLicenseText -> f
    de.psdev.licensesdialog.NoticesHtmlBuilder create(android.content.Context) -> a
    void <init>(android.content.Context) -> <init>
    de.psdev.licensesdialog.NoticesHtmlBuilder setNotices(de.psdev.licensesdialog.model.Notices) -> a
    de.psdev.licensesdialog.NoticesHtmlBuilder setStyle(java.lang.String) -> a
    de.psdev.licensesdialog.NoticesHtmlBuilder setShowFullLicenseText(boolean) -> a
    java.lang.String build() -> a
    void appendNoticesContainerStart(java.lang.StringBuilder) -> a
    void appendNoticeBlock(java.lang.StringBuilder,de.psdev.licensesdialog.model.Notice) -> a
    void appendNoticesContainerEnd(java.lang.StringBuilder) -> b
    java.lang.String getLicenseText(de.psdev.licensesdialog.licenses.License) -> a
de.psdev.licensesdialog.NoticesXmlParser -> de.psdev.licensesdialog.d:
    de.psdev.licensesdialog.model.Notices parse(java.io.InputStream) -> a
    de.psdev.licensesdialog.model.Notices parse(org.xmlpull.v1.XmlPullParser) -> a
    de.psdev.licensesdialog.model.Notice readNotice(org.xmlpull.v1.XmlPullParser) -> b
    java.lang.String readName(org.xmlpull.v1.XmlPullParser) -> c
    java.lang.String readUrl(org.xmlpull.v1.XmlPullParser) -> d
    java.lang.String readCopyright(org.xmlpull.v1.XmlPullParser) -> e
    de.psdev.licensesdialog.licenses.License readLicense(org.xmlpull.v1.XmlPullParser) -> f
    java.lang.String readTag(org.xmlpull.v1.XmlPullParser,java.lang.String) -> a
    java.lang.String readText(org.xmlpull.v1.XmlPullParser) -> g
    void skip(org.xmlpull.v1.XmlPullParser) -> h
de.psdev.licensesdialog.R -> de.psdev.licensesdialog.e:
de.psdev.licensesdialog.R$raw -> de.psdev.licensesdialog.e$a:
    int asl_20_full -> asl_20_full
    int asl_20_summary -> asl_20_summary
    int bsd2_full -> bsd2_full
    int bsd2_summary -> bsd2_summary
    int bsd3_full -> bsd3_full
    int bsd3_summary -> bsd3_summary
    int ccand_30_full -> ccand_30_full
    int ccand_30_summary -> ccand_30_summary
    int ccby_30_full -> ccby_30_full
    int ccby_30_summary -> ccby_30_summary
    int ccbysa_30_full -> ccbysa_30_full
    int ccbysa_30_summary -> ccbysa_30_summary
    int epl_v10_full -> epl_v10_full
    int epl_v10_summary -> epl_v10_summary
    int gpl_20_full -> gpl_20_full
    int gpl_20_summary -> gpl_20_summary
    int gpl_30_full -> gpl_30_full
    int gpl_30_summary -> gpl_30_summary
    int isc_full -> isc_full
    int isc_summary -> isc_summary
    int lgpl_21_full -> lgpl_21_full
    int lgpl_21_summary -> lgpl_21_summary
    int lgpl_3_full -> lgpl_3_full
    int lgpl_3_summary -> lgpl_3_summary
    int mit_full -> mit_full
    int mit_summary -> mit_summary
    int mpl_11_full -> mpl_11_full
    int mpl_11_summary -> mpl_11_summary
    int mpl_20_full -> mpl_20_full
    int mpl_20_summary -> mpl_20_summary
    int notices -> notices
    int sil_ofl_11_full -> sil_ofl_11_full
    int sil_ofl_11_summary -> sil_ofl_11_summary
de.psdev.licensesdialog.R$string -> de.psdev.licensesdialog.e$b:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_home_description_format -> abc_action_bar_home_description_format
    int abc_action_bar_home_subtitle_description_format -> abc_action_bar_home_subtitle_description_format
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_capital_off -> abc_capital_off
    int abc_capital_on -> abc_capital_on
    int abc_font_family_body_1_material -> abc_font_family_body_1_material
    int abc_font_family_body_2_material -> abc_font_family_body_2_material
    int abc_font_family_button_material -> abc_font_family_button_material
    int abc_font_family_caption_material -> abc_font_family_caption_material
    int abc_font_family_display_1_material -> abc_font_family_display_1_material
    int abc_font_family_display_2_material -> abc_font_family_display_2_material
    int abc_font_family_display_3_material -> abc_font_family_display_3_material
    int abc_font_family_display_4_material -> abc_font_family_display_4_material
    int abc_font_family_headline_material -> abc_font_family_headline_material
    int abc_font_family_menu_material -> abc_font_family_menu_material
    int abc_font_family_subhead_material -> abc_font_family_subhead_material
    int abc_font_family_title_material -> abc_font_family_title_material
    int abc_search_hint -> abc_search_hint
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int abc_toolbar_collapse_description -> abc_toolbar_collapse_description
    int notices_close -> notices_close
    int notices_default_style -> notices_default_style
    int notices_title -> notices_title
    int search_menu_title -> search_menu_title
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
de.psdev.licensesdialog.licenses.ApacheSoftwareLicense20 -> de.psdev.licensesdialog.a.a:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.BSD2ClauseLicense -> de.psdev.licensesdialog.a.b:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.BSD3ClauseLicense -> de.psdev.licensesdialog.a.c:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.CreativeCommonsAttribution30Unported -> de.psdev.licensesdialog.a.d:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.CreativeCommonsAttributionNoDerivs30Unported -> de.psdev.licensesdialog.a.e:
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.EclipsePublicLicense10 -> de.psdev.licensesdialog.a.f:
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.GnuGeneralPublicLicense20 -> de.psdev.licensesdialog.a.g:
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.GnuGeneralPublicLicense30 -> de.psdev.licensesdialog.a.h:
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.GnuLesserGeneralPublicLicense21 -> de.psdev.licensesdialog.a.i:
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.GnuLesserGeneralPublicLicense3 -> de.psdev.licensesdialog.a.j:
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.ISCLicense -> de.psdev.licensesdialog.a.k:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.License -> de.psdev.licensesdialog.a.l:
    long serialVersionUID -> serialVersionUID
    java.lang.String LINE_SEPARATOR -> a
    java.lang.String mCachedSummaryText -> b
    java.lang.String mCachedFullText -> c
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
    java.lang.String getSummaryText(android.content.Context) -> c
    java.lang.String getFullText(android.content.Context) -> d
    java.lang.String getContent(android.content.Context,int) -> a
    java.lang.String toString(java.io.BufferedReader) -> a
    void <clinit>() -> <clinit>
de.psdev.licensesdialog.licenses.MITLicense -> de.psdev.licensesdialog.a.m:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.MozillaPublicLicense11 -> de.psdev.licensesdialog.a.n:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.MozillaPublicLicense20 -> de.psdev.licensesdialog.a.o:
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.licenses.SILOpenFontLicense11 -> de.psdev.licensesdialog.a.p:
    void <init>() -> <init>
    java.lang.String getName() -> a
    java.lang.String readSummaryTextFromResources(android.content.Context) -> a
    java.lang.String readFullTextFromResources(android.content.Context) -> b
de.psdev.licensesdialog.model.Notice -> de.psdev.licensesdialog.model.Notice:
    java.lang.String mName -> mName
    java.lang.String mUrl -> mUrl
    java.lang.String mCopyright -> mCopyright
    de.psdev.licensesdialog.licenses.License mLicense -> mLicense
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String,de.psdev.licensesdialog.licenses.License) -> <init>
    java.lang.String getName() -> a
    java.lang.String getUrl() -> b
    java.lang.String getCopyright() -> c
    de.psdev.licensesdialog.licenses.License getLicense() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcel,de.psdev.licensesdialog.model.Notice$1) -> <init>
    void <clinit>() -> <clinit>
de.psdev.licensesdialog.model.Notice$1 -> de.psdev.licensesdialog.model.Notice$1:
    void <init>() -> <init>
    de.psdev.licensesdialog.model.Notice createFromParcel(android.os.Parcel) -> a
    de.psdev.licensesdialog.model.Notice[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
de.psdev.licensesdialog.model.Notices -> de.psdev.licensesdialog.model.Notices:
    java.util.List mNotices -> mNotices
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void addNotice(de.psdev.licensesdialog.model.Notice) -> a
    java.util.List getNotices() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.Parcel) -> <init>
    void <clinit>() -> <clinit>
de.psdev.licensesdialog.model.Notices$1 -> de.psdev.licensesdialog.model.Notices$1:
    void <init>() -> <init>
    de.psdev.licensesdialog.model.Notices createFromParcel(android.os.Parcel) -> a
    de.psdev.licensesdialog.model.Notices[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.neolang.ast.NeoLangEOFToken -> io.a.a.a:
    void <init>() -> <init>
io.neolang.ast.NeoLangToken -> io.a.a.b:
    int lineNumber -> a
    io.neolang.ast.NeoLangTokenType tokenType -> b
    io.neolang.ast.NeoLangTokenValue tokenValue -> c
    int getLineNumber() -> a
    void setLineNumber(int) -> a
    java.lang.String toString() -> toString
    io.neolang.ast.NeoLangTokenType getTokenType() -> b
    io.neolang.ast.NeoLangTokenValue getTokenValue() -> c
    void <init>(io.neolang.ast.NeoLangTokenType,io.neolang.ast.NeoLangTokenValue) -> <init>
io.neolang.ast.NeoLangTokenType -> io.a.a.c:
    io.neolang.ast.NeoLangTokenType NUMBER -> a
    io.neolang.ast.NeoLangTokenType ID -> b
    io.neolang.ast.NeoLangTokenType STRING -> c
    io.neolang.ast.NeoLangTokenType BRACKET_START -> d
    io.neolang.ast.NeoLangTokenType BRACKET_END -> e
    io.neolang.ast.NeoLangTokenType ARRAY_START -> f
    io.neolang.ast.NeoLangTokenType ARRAY_END -> g
    io.neolang.ast.NeoLangTokenType COLON -> h
    io.neolang.ast.NeoLangTokenType COMMA -> i
    io.neolang.ast.NeoLangTokenType EOL -> j
    io.neolang.ast.NeoLangTokenType EOF -> k
    io.neolang.ast.NeoLangTokenType[] $VALUES -> l
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    io.neolang.ast.NeoLangTokenType[] values() -> values
    io.neolang.ast.NeoLangTokenType valueOf(java.lang.String) -> valueOf
io.neolang.ast.NeoLangTokenValue -> io.a.a.d:
    io.neolang.runtime.type.NeoLangValue value -> b
    io.neolang.ast.NeoLangTokenValue COLON -> c
    io.neolang.ast.NeoLangTokenValue COMMA -> d
    io.neolang.ast.NeoLangTokenValue QUOTE -> e
    io.neolang.ast.NeoLangTokenValue EOF -> f
    io.neolang.ast.NeoLangTokenValue BRACKET_START -> g
    io.neolang.ast.NeoLangTokenValue BRACKET_END -> h
    io.neolang.ast.NeoLangTokenValue ARRAY_START -> i
    io.neolang.ast.NeoLangTokenValue ARRAY_END -> j
    io.neolang.ast.NeoLangTokenValue$Companion Companion -> a
    java.lang.String toString() -> toString
    io.neolang.runtime.type.NeoLangValue getValue() -> a
    void <init>(io.neolang.runtime.type.NeoLangValue) -> <init>
    void <clinit>() -> <clinit>
    io.neolang.ast.NeoLangTokenValue access$getCOLON$cp() -> b
    io.neolang.ast.NeoLangTokenValue access$getCOMMA$cp() -> c
    io.neolang.ast.NeoLangTokenValue access$getQUOTE$cp() -> d
    io.neolang.ast.NeoLangTokenValue access$getEOF$cp() -> e
    io.neolang.ast.NeoLangTokenValue access$getBRACKET_START$cp() -> f
    io.neolang.ast.NeoLangTokenValue access$getBRACKET_END$cp() -> g
    io.neolang.ast.NeoLangTokenValue access$getARRAY_START$cp() -> h
    io.neolang.ast.NeoLangTokenValue access$getARRAY_END$cp() -> i
io.neolang.ast.NeoLangTokenValue$Companion -> io.a.a.d$a:
    io.neolang.ast.NeoLangTokenValue getCOLON() -> a
    io.neolang.ast.NeoLangTokenValue getCOMMA() -> b
    io.neolang.ast.NeoLangTokenValue getQUOTE() -> c
    io.neolang.ast.NeoLangTokenValue getEOF() -> d
    io.neolang.ast.NeoLangTokenValue getBRACKET_START() -> e
    io.neolang.ast.NeoLangTokenValue getBRACKET_END() -> f
    io.neolang.ast.NeoLangTokenValue getARRAY_START() -> g
    io.neolang.ast.NeoLangTokenValue getARRAY_END() -> h
    io.neolang.ast.NeoLangTokenValue wrap(java.lang.String) -> a
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neolang.ast.base.NeoLangAst -> io.a.a.a.a:
    io.neolang.ast.visitor.VisitorFactory visit() -> a
    void <init>() -> <init>
io.neolang.ast.base.NeoLangBaseNode -> io.a.a.a.b:
    void <init>() -> <init>
io.neolang.ast.node.NeoLangArrayNode -> io.a.a.b.a:
    io.neolang.ast.node.NeoLangStringNode arrayNameNode -> b
    io.neolang.ast.node.NeoLangArrayNode$Companion$ArrayElement[] elements -> c
    io.neolang.ast.node.NeoLangArrayNode$Companion Companion -> a
    io.neolang.ast.node.NeoLangStringNode getArrayNameNode() -> b
    io.neolang.ast.node.NeoLangArrayNode$Companion$ArrayElement[] getElements() -> c
    void <init>(io.neolang.ast.node.NeoLangStringNode,io.neolang.ast.node.NeoLangArrayNode$Companion$ArrayElement[]) -> <init>
    void <clinit>() -> <clinit>
io.neolang.ast.node.NeoLangArrayNode$Companion -> io.a.a.b.a$a:
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neolang.ast.node.NeoLangArrayNode$Companion$ArrayElement -> io.a.a.b.a$a$a:
    int index -> a
    io.neolang.ast.node.NeoLangBlockNode block -> b
    int getIndex() -> a
    io.neolang.ast.node.NeoLangBlockNode getBlock() -> b
    void <init>(int,io.neolang.ast.node.NeoLangBlockNode) -> <init>
io.neolang.ast.node.NeoLangAstBasedNode -> io.a.a.b.b:
    io.neolang.ast.base.NeoLangBaseNode ast -> a
    java.lang.String toString() -> toString
    io.neolang.ast.base.NeoLangBaseNode getAst() -> b
    void <init>(io.neolang.ast.base.NeoLangBaseNode) -> <init>
io.neolang.ast.node.NeoLangAttributeNode -> io.a.a.b.c:
    io.neolang.ast.node.NeoLangStringNode stringNode -> a
    io.neolang.ast.node.NeoLangBlockNode blockNode -> b
    java.lang.String toString() -> toString
    io.neolang.ast.node.NeoLangStringNode getStringNode() -> b
    io.neolang.ast.node.NeoLangBlockNode getBlockNode() -> c
    void <init>(io.neolang.ast.node.NeoLangStringNode,io.neolang.ast.node.NeoLangBlockNode) -> <init>
io.neolang.ast.node.NeoLangBlockNode -> io.a.a.b.d:
    io.neolang.ast.node.NeoLangBlockNode$Companion Companion -> a
    void <init>(io.neolang.ast.base.NeoLangBaseNode) -> <init>
    void <clinit>() -> <clinit>
io.neolang.ast.node.NeoLangBlockNode$Companion -> io.a.a.b.d$a:
    io.neolang.ast.node.NeoLangBlockNode emptyNode() -> a
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neolang.ast.node.NeoLangDummyNode -> io.a.a.b.e:
    void <init>() -> <init>
io.neolang.ast.node.NeoLangGroupNode -> io.a.a.b.f:
    io.neolang.ast.node.NeoLangAttributeNode[] attributes -> a
    java.lang.String toString() -> toString
    io.neolang.ast.node.NeoLangAttributeNode[] getAttributes() -> b
    void <init>(io.neolang.ast.node.NeoLangAttributeNode[]) -> <init>
io.neolang.ast.node.NeoLangNumberNode -> io.a.a.b.g:
    void <init>(io.neolang.ast.NeoLangToken) -> <init>
io.neolang.ast.node.NeoLangProgramNode -> io.a.a.b.h:
    java.util.List groups -> b
    io.neolang.ast.node.NeoLangProgramNode$Companion Companion -> a
    java.lang.String toString() -> toString
    java.util.List getGroups() -> b
    void <init>(java.util.List) -> <init>
    void <clinit>() -> <clinit>
io.neolang.ast.node.NeoLangProgramNode$Companion -> io.a.a.b.h$a:
    io.neolang.ast.node.NeoLangProgramNode emptyNode() -> a
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neolang.ast.node.NeoLangStringNode -> io.a.a.b.i:
    void <init>(io.neolang.ast.NeoLangToken) -> <init>
io.neolang.ast.node.NeoLangTokenBasedNode -> io.a.a.b.j:
    io.neolang.ast.NeoLangToken token -> a
    java.lang.String toString() -> toString
    io.neolang.runtime.type.NeoLangValue eval() -> b
    void <init>(io.neolang.ast.NeoLangToken) -> <init>
io.neolang.ast.visitor.AstVisitor -> io.a.a.c.a:
    io.neolang.ast.base.NeoLangAst ast -> a
    io.neolang.ast.visitor.IVisitorCallback visitorCallback -> b
    void start() -> a
    io.neolang.ast.visitor.IVisitorCallback getCallback() -> b
    void <init>(io.neolang.ast.base.NeoLangAst,io.neolang.ast.visitor.IVisitorCallback) -> <init>
io.neolang.ast.visitor.AstVisitorImpl -> io.a.a.c.b:
    io.neolang.ast.visitor.AstVisitorImpl INSTANCE -> a
    void visitProgram(io.neolang.ast.node.NeoLangProgramNode,io.neolang.ast.visitor.IVisitorCallback) -> a
    void visitGroup(io.neolang.ast.node.NeoLangGroupNode,io.neolang.ast.visitor.IVisitorCallback) -> a
    void visitAttribute(io.neolang.ast.node.NeoLangAttributeNode,io.neolang.ast.visitor.IVisitorCallback) -> a
    void visitArray(io.neolang.ast.node.NeoLangArrayNode,io.neolang.ast.visitor.IVisitorCallback) -> a
    void visitArrayElementBlock(io.neolang.ast.node.NeoLangBlockNode,int,io.neolang.ast.visitor.IVisitorCallback) -> a
    void visitBlock(io.neolang.ast.node.NeoLangBlockNode,java.lang.String,io.neolang.ast.visitor.IVisitorCallback) -> a
    void definePrimaryData(java.lang.String,io.neolang.runtime.type.NeoLangValue,io.neolang.ast.visitor.IVisitorCallback) -> a
    void visitStartAst(io.neolang.ast.base.NeoLangAst,io.neolang.ast.visitor.IVisitorCallback) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neolang.ast.visitor.IVisitorCallback -> io.a.a.c.c:
    void onStart() -> a
    void onFinish() -> b
    void onEnterContext(java.lang.String) -> a
    void onExitContext() -> c
    io.neolang.runtime.context.NeoLangContext getCurrentContext() -> d
io.neolang.ast.visitor.VisitorFactory -> io.a.a.c.d:
    io.neolang.ast.base.NeoLangAst ast -> a
    io.neolang.ast.visitor.AstVisitor getVisitor(java.lang.Class) -> a
    void <init>(io.neolang.ast.base.NeoLangAst) -> <init>
io.neolang.parser.InvalidTokenException -> io.a.b.a:
    void <init>(java.lang.String) -> <init>
io.neolang.parser.NeoLangLexer -> io.a.b.b:
    java.lang.String programCode -> a
    int currentPosition -> b
    char currentChar -> c
    int lineNumber -> d
    void setInputSource$NeoLang_main(java.lang.String) -> a
    java.util.List lex$NeoLang_main() -> a
    boolean moveToNextChar(boolean) -> a
    boolean moveToNextChar$default(io.neolang.parser.NeoLangLexer,boolean,int,java.lang.Object) -> a
    io.neolang.ast.NeoLangToken getNextToken() -> b
    java.lang.String getNextTokenAsString() -> c
    java.lang.String getNextTokenAsNumber() -> d
    double getNextOctalNumber(double) -> a
    double getNextBinaryNumber(double) -> b
    double getNextHexNumber(double) -> c
    double getNextDecimalNumber(double) -> d
    java.lang.String getNextTokenAsId() -> e
    boolean isIdentifier(char,boolean) -> a
    int toNumber(char) -> a
    boolean isNumber(char) -> b
    boolean isHexNumber(char) -> c
    void <init>() -> <init>
io.neolang.parser.NeoLangParser -> io.a.b.c:
    io.neolang.parser.NeoLangLexer lexer -> a
    java.util.List tokens -> b
    int currentPosition -> c
    io.neolang.ast.NeoLangToken currentToken -> d
    void setInputSource(java.lang.String) -> a
    io.neolang.ast.base.NeoLangAst parse() -> a
    io.neolang.ast.base.NeoLangAst updateParserStatus(java.util.List) -> a
    boolean match(io.neolang.ast.NeoLangTokenType,boolean) -> a
    boolean match$default(io.neolang.parser.NeoLangParser,io.neolang.ast.NeoLangTokenType,boolean,int,java.lang.Object) -> a
    io.neolang.ast.node.NeoLangProgramNode program() -> b
    io.neolang.ast.node.NeoLangGroupNode group() -> c
    io.neolang.ast.node.NeoLangAttributeNode attribute() -> d
    io.neolang.ast.node.NeoLangArrayNode array(io.neolang.ast.node.NeoLangStringNode) -> a
    io.neolang.ast.node.NeoLangBlockNode block(io.neolang.ast.node.NeoLangStringNode) -> b
    io.neolang.ast.node.NeoLangBlockNode blockNonArrayElement(io.neolang.ast.node.NeoLangStringNode) -> c
    void <init>() -> <init>
io.neolang.parser.NeoLangParser$WhenMappings -> io.a.b.d:
    int[] $EnumSwitchMapping$0 -> a
    int[] $EnumSwitchMapping$1 -> b
    void <clinit>() -> <clinit>
io.neolang.parser.ParseException -> io.a.b.e:
    void <init>(java.lang.String) -> <init>
io.neolang.runtime.context.NeoLangContext -> io.a.c.a.a:
    java.util.Map attributes -> b
    java.util.List children -> c
    io.neolang.runtime.context.NeoLangContext parent -> d
    java.lang.String contextName -> e
    io.neolang.runtime.context.NeoLangContext emptyContext -> f
    io.neolang.runtime.context.NeoLangContext$Companion Companion -> a
    java.util.List getChildren() -> a
    io.neolang.runtime.context.NeoLangContext getParent() -> b
    void setParent(io.neolang.runtime.context.NeoLangContext) -> a
    io.neolang.runtime.context.NeoLangContext defineAttribute(java.lang.String,io.neolang.runtime.type.NeoLangValue) -> a
    io.neolang.runtime.type.NeoLangValue getAttribute(java.lang.String) -> a
    io.neolang.runtime.context.NeoLangContext getChild(java.lang.String) -> b
    java.util.Map getAttributes() -> c
    java.lang.String getContextName() -> d
    void <init>(java.lang.String) -> <init>
    void <clinit>() -> <clinit>
    io.neolang.runtime.context.NeoLangContext access$getEmptyContext$cp() -> e
io.neolang.runtime.context.NeoLangContext$Companion -> io.a.c.a.a$a:
    io.neolang.runtime.context.NeoLangContext getEmptyContext() -> a
    void <init>() -> <init>
    io.neolang.runtime.context.NeoLangContext access$getEmptyContext$p(io.neolang.runtime.context.NeoLangContext$Companion) -> a
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neolang.runtime.type.NeoLangArray -> io.a.c.b.a:
    java.util.List elements -> b
    int size -> c
    io.neolang.runtime.type.NeoLangArray$Companion Companion -> a
    boolean contains(io.neolang.runtime.type.NeoLangArrayElement) -> a
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    int getSize() -> a
    int size() -> size
    void <init>(java.util.List,int) -> <init>
    void <init>(java.util.List,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    void <clinit>() -> <clinit>
    void clear() -> clear
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeIf(java.util.function.Predicate) -> removeIf
    boolean add(java.lang.Object) -> add
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
io.neolang.runtime.type.NeoLangArray$Companion -> io.a.c.b.a$a:
    io.neolang.runtime.type.NeoLangArray createFromContext(io.neolang.runtime.context.NeoLangContext) -> a
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neolang.runtime.type.NeoLangArray$Companion$BlockElement -> io.a.c.b.a$a$a:
    io.neolang.runtime.context.NeoLangContext blockContext -> a
    io.neolang.runtime.type.NeoLangValue eval(java.lang.String) -> a
    boolean isBlock() -> a
    void <init>(io.neolang.runtime.context.NeoLangContext) -> <init>
io.neolang.runtime.type.NeoLangArray$Companion$PrimaryElement -> io.a.c.b.a$a$b:
    io.neolang.runtime.type.NeoLangValue primaryValue -> a
    io.neolang.runtime.type.NeoLangValue eval() -> b
    void <init>(io.neolang.runtime.type.NeoLangValue) -> <init>
io.neolang.runtime.type.NeoLangArrayElement -> io.a.c.b.b:
    io.neolang.runtime.type.NeoLangValue eval() -> b
    io.neolang.runtime.type.NeoLangValue eval(java.lang.String) -> a
    boolean isBlock() -> a
    void <init>() -> <init>
io.neolang.runtime.type.NeoLangValue -> io.a.c.b.c:
    java.lang.Object rawValue -> b
    io.neolang.runtime.type.NeoLangValue UNDEFINED -> c
    io.neolang.runtime.type.NeoLangValue$Companion Companion -> a
    java.lang.String asString() -> a
    boolean isValid() -> b
    void <init>(java.lang.Object) -> <init>
    void <clinit>() -> <clinit>
    io.neolang.runtime.type.NeoLangValue access$getUNDEFINED$cp() -> c
io.neolang.runtime.type.NeoLangValue$Companion -> io.a.c.b.c$a:
    io.neolang.runtime.type.NeoLangValue getUNDEFINED() -> a
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neolang.visitor.ConfigVisitor -> io.a.d.a:
    io.neolang.runtime.context.NeoLangContext currentContext -> a
    io.neolang.runtime.context.NeoLangContext getContext(java.lang.String[]) -> a
    io.neolang.runtime.type.NeoLangValue getAttribute(java.lang.String[],java.lang.String) -> a
    io.neolang.runtime.type.NeoLangArray getArray(java.lang.String[],java.lang.String) -> b
    void onStart() -> a
    void onFinish() -> b
    void onEnterContext(java.lang.String) -> a
    void onExitContext() -> c
    io.neolang.runtime.context.NeoLangContext getCurrentContext() -> d
    void <init>() -> <init>
io.neoterm.App -> io.neoterm.App:
    io.neoterm.App app -> b
    io.neoterm.App$Companion Companion -> a
    void onCreate() -> onCreate
    void errorDialog(android.content.Context,int,kotlin.jvm.functions.Function0) -> a
    void errorDialog(android.content.Context,java.lang.String,kotlin.jvm.functions.Function0) -> a
    void openHelpLink() -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    io.neoterm.App access$getApp$cp() -> b
    void access$setApp$cp(io.neoterm.App) -> a
io.neoterm.App$Companion -> io.neoterm.App$a:
    io.neoterm.App getApp() -> b
    void setApp(io.neoterm.App) -> a
    io.neoterm.App get() -> a
    void <init>() -> <init>
    void access$setApp$p(io.neoterm.App$Companion,io.neoterm.App) -> a
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.App$errorDialog$1 -> io.neoterm.App$b:
    io.neoterm.App this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.App) -> <init>
io.neoterm.App$errorDialog$2 -> io.neoterm.App$c:
    kotlin.jvm.functions.Function0 $dismissCallback -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void <init>(kotlin.jvm.functions.Function0) -> <init>
io.neoterm.backend.ByteQueue -> io.neoterm.backend.a:
    byte[] mBuffer -> a
    int mHead -> b
    int mStoredBytes -> c
    boolean mOpen -> d
    void <init>(int) -> <init>
    void close() -> a
    int read(byte[],boolean) -> a
    boolean write(byte[],int,int) -> a
io.neoterm.backend.JNI -> io.neoterm.backend.JNI:
    void <init>() -> <init>
    int createSubprocess(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int[],int,int) -> createSubprocess
    void setPtyWindowSize(int,int,int) -> setPtyWindowSize
    int waitFor(int) -> waitFor
    void close(int) -> close
    void <clinit>() -> <clinit>
io.neoterm.backend.KeyHandler -> io.neoterm.backend.b:
    java.util.Map TERMCAP_TO_KEYCODE -> a
    java.lang.String getCodeFromTermcap(java.lang.String,boolean,boolean) -> a
    java.lang.String getCode(int,int,boolean,boolean) -> a
    java.lang.String transformForModifiers(java.lang.String,int,char) -> a
    void <clinit>() -> <clinit>
io.neoterm.backend.TerminalBuffer -> io.neoterm.backend.c:
    io.neoterm.backend.TerminalRow[] mLines -> a
    int mTotalRows -> b
    int mScreenRows -> c
    int mColumns -> d
    int mActiveTranscriptRows -> e
    int mScreenFirstRow -> f
    void <init>(int,int,int) -> <init>
    java.lang.String getSelectedText(int,int,int,int) -> a
    int getActiveTranscriptRows() -> a
    int getActiveRows() -> b
    int externalToInternalRow(int) -> a
    void setLineWrap(int) -> b
    boolean getLineWrap(int) -> c
    void clearLineWrap(int) -> d
    void resize(int,int,int,int[],long,boolean) -> a
    void blockCopyLinesDown(int,int) -> b
    void scrollDownOneLine(int,int,long) -> a
    void blockCopy(int,int,int,int,int,int) -> a
    void blockSet(int,int,int,int,int,long) -> a
    io.neoterm.backend.TerminalRow allocateFullLineIfNecessary(int) -> e
    void setChar(int,int,int,long) -> a
    long getStyleAt(int,int) -> a
    void setOrClearEffect(int,boolean,boolean,boolean,int,int,int,int,int,int) -> a
io.neoterm.backend.TerminalColorScheme -> io.neoterm.backend.d:
    int[] DEFAULT_COLORS -> a
    int[] mDefaultColors -> b
    void <init>() -> <init>
    void reset() -> a
    void updateWith(java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> a
    void updateWith(java.util.Properties) -> a
    void <clinit>() -> <clinit>
io.neoterm.backend.TerminalColors -> io.neoterm.backend.e:
    io.neoterm.backend.TerminalColorScheme COLOR_SCHEME -> a
    int[] mCurrentColors -> b
    void <init>() -> <init>
    void reset(int) -> a
    void reset() -> a
    void reset(io.neoterm.backend.TerminalColorScheme) -> a
    int parse(java.lang.String) -> a
    void tryParseColor(int,java.lang.String) -> a
    void <clinit>() -> <clinit>
io.neoterm.backend.TerminalEmulator -> io.neoterm.backend.f:
    java.lang.String mTitle -> g
    java.util.Stack mTitleStack -> h
    int mCursorRow -> i
    int mCursorCol -> j
    int mCursorStyle -> k
    int mRows -> a
    int mColumns -> b
    io.neoterm.backend.TerminalBuffer mMainBuffer -> l
    io.neoterm.backend.TerminalBuffer mAltBuffer -> c
    io.neoterm.backend.TerminalBuffer mScreen -> m
    io.neoterm.backend.TerminalOutput mSession -> n
    int mArgIndex -> o
    int[] mArgs -> p
    java.lang.StringBuilder mOSCOrDeviceControlArgs -> q
    boolean mContinueSequence -> r
    int mEscapeState -> s
    io.neoterm.backend.TerminalEmulator$SavedScreenState mSavedStateMain -> t
    io.neoterm.backend.TerminalEmulator$SavedScreenState mSavedStateAlt -> u
    boolean mUseLineDrawingG0 -> v
    boolean mUseLineDrawingG1 -> w
    boolean mUseLineDrawingUsesG0 -> x
    int mCurrentDecSetFlags -> y
    int mSavedDecSetFlags -> z
    boolean mInsertMode -> A
    boolean[] mTabStop -> B
    int mTopMargin -> C
    int mBottomMargin -> D
    int mLeftMargin -> E
    int mRightMargin -> F
    boolean mAboutToAutoWrap -> G
    int mForeColor -> d
    int mBackColor -> e
    int mEffect -> H
    int mScrollCounter -> I
    byte mUtf8ToFollow -> J
    byte mUtf8Index -> K
    byte[] mUtf8InputBuffer -> L
    int mLastEmittedCodePoint -> M
    io.neoterm.backend.TerminalColors mColors -> f
    boolean isDecsetInternalBitSet(int) -> c
    void setDecsetinternalBit(int,boolean) -> a
    int mapDecSetBitToInternalBit(int) -> a
    void <init>(io.neoterm.backend.TerminalOutput,int,int,int) -> <init>
    io.neoterm.backend.TerminalBuffer getScreen() -> a
    boolean isAlternateBufferActive() -> b
    void sendMouseEvent(int,int,int,boolean) -> a
    void resize(int,int) -> a
    void resizeScreen() -> o
    int getCursorRow() -> c
    int getCursorCol() -> d
    int getCursorStyle() -> e
    boolean isReverseVideo() -> f
    boolean isShowingCursor() -> g
    boolean isKeypadApplicationMode() -> h
    boolean isCursorKeysApplicationMode() -> i
    boolean isMouseTrackingActive() -> j
    void setDefaultTabStops() -> p
    void append(byte[],int) -> a
    void processByte(byte) -> a
    void processCodePoint(int) -> b
    void doDeviceControl(int) -> d
    int nextTabStop(int) -> e
    void doCsiQuestionMark(int) -> f
    void doDecSetOrReset(boolean,int) -> a
    void doCsiBiggerThan(int) -> g
    void startEscapeSequence() -> q
    void doLinefeed() -> r
    void continueSequence(int) -> h
    void doEscPound(int) -> i
    void doEsc(int) -> j
    void saveCursor() -> s
    void restoreCursor() -> t
    void doCsi(int) -> k
    void selectGraphicRendition() -> u
    void doOsc(int) -> l
    void doOscEsc(int) -> m
    void doOscSetTextParameters(java.lang.String) -> b
    void blockClear(int,int,int) -> a
    void blockClear(int,int,int,int) -> b
    long getStyle() -> v
    void doSetMode(boolean) -> a
    void setCursorPosition(int,int) -> b
    void scrollDownOneLine() -> w
    void parseArg(int) -> n
    int getArg0(int) -> o
    int getArg1(int) -> p
    int getArg(int,int,boolean) -> a
    void collectOSCArgs(int) -> q
    void unimplementedSequence(int) -> r
    void unknownSequence(int) -> s
    void unknownParameter(int) -> t
    void logError(java.lang.String) -> c
    void finishSequenceAndLogError(java.lang.String) -> d
    void finishSequence() -> x
    void emitCodePoint(int) -> u
    void setCursorRow(int) -> v
    void setCursorCol(int) -> w
    void setCursorColRespectingOriginMode(int) -> x
    void setCursorRowCol(int,int) -> c
    int getScrollCounter() -> k
    void clearScrollCounter() -> l
    void reset() -> m
    void setColorScheme(io.neoterm.backend.TerminalColorScheme) -> a
    java.lang.String getSelectedText(int,int,int,int) -> a
    java.lang.String getTitle() -> n
    void setTitle(java.lang.String) -> e
    void paste(java.lang.String) -> a
    java.lang.String toString() -> toString
io.neoterm.backend.TerminalEmulator$SavedScreenState -> io.neoterm.backend.f$a:
    int mSavedCursorRow -> a
    int mSavedCursorCol -> b
    int mSavedEffect -> c
    int mSavedForeColor -> d
    int mSavedBackColor -> e
    int mSavedDecFlags -> f
    boolean mUseLineDrawingG0 -> g
    boolean mUseLineDrawingG1 -> h
    boolean mUseLineDrawingUsesG0 -> i
    void <init>() -> <init>
io.neoterm.backend.TerminalOutput -> io.neoterm.backend.g:
    void <init>() -> <init>
    void write(java.lang.String) -> a
    void write(byte[],int,int) -> a
    void titleChanged(java.lang.String,java.lang.String) -> a
    void clipboardText(java.lang.String) -> b
    void onBell() -> a
    void onColorsChanged() -> b
io.neoterm.backend.TerminalRow -> io.neoterm.backend.h:
    int mColumns -> d
    char[] mText -> a
    short mSpaceUsed -> e
    boolean mLineWrap -> b
    long[] mStyle -> c
    void <init>(int,long) -> <init>
    void copyInterval(io.neoterm.backend.TerminalRow,int,int,int) -> a
    int getSpaceUsed() -> a
    int findStartOfColumn(int) -> a
    boolean wideDisplayCharacterStartingAt(int) -> c
    void clear(long) -> a
    void setChar(int,int,long) -> a
    boolean isBlank() -> b
    long getStyle(int) -> b
io.neoterm.backend.TerminalSession -> io.neoterm.backend.i:
    java.lang.String mHandle -> a
    io.neoterm.backend.TerminalEmulator mEmulator -> b
    io.neoterm.backend.ByteQueue mProcessToTerminalIOQueue -> c
    io.neoterm.backend.ByteQueue mTerminalToProcessIOQueue -> d
    byte[] mUtf8InputBuffer -> j
    io.neoterm.backend.TerminalSession$SessionChangedCallback mChangeCallback -> e
    int mShellPid -> f
    int mShellExitStatus -> g
    int mTerminalFileDescriptor -> k
    java.lang.String mSessionName -> h
    android.os.Handler mMainThreadHandler -> i
    java.lang.String mShellPath -> l
    java.lang.String mCwd -> m
    java.lang.String[] mArgs -> n
    java.lang.String[] mEnv -> o
    java.io.FileDescriptor wrapFileDescriptor(int) -> c
    io.neoterm.backend.TerminalSession$SessionChangedCallback getSessionChangedCallback() -> c
    void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],io.neoterm.backend.TerminalSession$SessionChangedCallback) -> <init>
    void updateSize(int,int) -> a
    java.lang.String getTitle() -> d
    void initializeEmulator(int,int) -> b
    void write(byte[],int,int) -> a
    void writeCodePoint(boolean,int) -> a
    io.neoterm.backend.TerminalEmulator getEmulator() -> e
    void notifyScreenUpdate() -> f
    void finishIfRunning() -> g
    java.lang.String getExitDescription(int) -> a
    void cleanupResources(int) -> b
    void titleChanged(java.lang.String,java.lang.String) -> a
    boolean isRunning() -> h
    int getExitStatus() -> i
    void clipboardText(java.lang.String) -> b
    void onBell() -> a
    void onColorsChanged() -> b
io.neoterm.backend.TerminalSession$1 -> io.neoterm.backend.i$1:
    byte[] mReceiveBuffer -> a
    io.neoterm.backend.TerminalSession this$0 -> b
    void <init>(io.neoterm.backend.TerminalSession) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
io.neoterm.backend.TerminalSession$2 -> io.neoterm.backend.i$2:
    java.io.FileDescriptor val$terminalFileDescriptorWrapped -> a
    io.neoterm.backend.TerminalSession this$0 -> b
    void <init>(io.neoterm.backend.TerminalSession,java.lang.String,java.io.FileDescriptor) -> <init>
    void run() -> run
io.neoterm.backend.TerminalSession$3 -> io.neoterm.backend.i$3:
    java.io.FileDescriptor val$terminalFileDescriptorWrapped -> a
    io.neoterm.backend.TerminalSession this$0 -> b
    void <init>(io.neoterm.backend.TerminalSession,java.lang.String,java.io.FileDescriptor) -> <init>
    void run() -> run
io.neoterm.backend.TerminalSession$4 -> io.neoterm.backend.i$4:
    io.neoterm.backend.TerminalSession this$0 -> a
    void <init>(io.neoterm.backend.TerminalSession,java.lang.String) -> <init>
    void run() -> run
io.neoterm.backend.TerminalSession$SessionChangedCallback -> io.neoterm.backend.i$a:
    void onTextChanged(io.neoterm.backend.TerminalSession) -> a
    void onTitleChanged(io.neoterm.backend.TerminalSession) -> b
    void onSessionFinished(io.neoterm.backend.TerminalSession) -> c
    void onClipboardText(io.neoterm.backend.TerminalSession,java.lang.String) -> a
    void onBell(io.neoterm.backend.TerminalSession) -> d
    void onColorsChanged(io.neoterm.backend.TerminalSession) -> e
io.neoterm.backend.TextStyle -> io.neoterm.backend.j:
    long NORMAL -> a
    long encode(int,int,int) -> a
    int decodeForeColor(long) -> a
    int decodeBackColor(long) -> b
    int decodeEffect(long) -> c
    void <clinit>() -> <clinit>
io.neoterm.backend.WcWidth -> io.neoterm.backend.k:
    int[][] ZERO_WIDTH -> a
    int[][] WIDE_EASTASIAN -> b
    boolean intable(int[][],int) -> a
    int width(int) -> a
    int width(char[],int) -> a
    void <clinit>() -> <clinit>
io.neoterm.component.NeoInitializer -> io.neoterm.a.a:
    io.neoterm.component.NeoInitializer INSTANCE -> a
    void initialize(android.content.Context) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.component.codegen.CodeGenComponent -> io.neoterm.a.a.a:
    void onServiceInit() -> a
    void onServiceObtained() -> b
    io.neoterm.component.codegen.generator.ICodeGenerator newGenerator(io.neoterm.component.codegen.model.CodeGenObject) -> a
    void <init>() -> <init>
io.neoterm.component.codegen.CodeGenParameter -> io.neoterm.a.a.b:
    void <init>() -> <init>
io.neoterm.component.codegen.generator.ICodeGenerator -> io.neoterm.a.a.a.a:
    java.lang.String generateCode(io.neoterm.component.codegen.model.CodeGenObject) -> a
    void <init>(io.neoterm.component.codegen.CodeGenParameter) -> <init>
io.neoterm.component.codegen.model.CodeGenObject -> io.neoterm.a.a.b.a:
    io.neoterm.component.codegen.generator.ICodeGenerator getCodeGenerator(io.neoterm.component.codegen.CodeGenParameter) -> a
io.neoterm.component.color.ColorSchemeComponent -> io.neoterm.a.b.a:
    io.neoterm.component.color.NeoColorScheme DEFAULT_COLOR -> b
    java.util.Map colors -> c
    io.neoterm.component.color.ColorSchemeComponent$Companion Companion -> a
    boolean reloadColorSchemes() -> c
    void applyColorScheme(io.neoterm.frontend.terminal.TerminalView,io.neoterm.frontend.terminal.eks.ExtraKeysView,io.neoterm.component.color.NeoColorScheme) -> a
    io.neoterm.component.color.NeoColorScheme getCurrentColorScheme() -> d
    java.lang.String getCurrentColorSchemeName() -> e
    io.neoterm.component.color.NeoColorScheme getColorScheme(java.lang.String) -> a
    java.util.List getColorSchemeNames() -> f
    void setCurrentColorScheme(java.lang.String) -> b
    void setCurrentColorScheme(io.neoterm.component.color.NeoColorScheme) -> a
    void onServiceObtained() -> b
    void onServiceInit() -> a
    boolean extractDefaultColor(android.content.Context) -> a
    void checkForFiles() -> g
    void saveColorScheme(io.neoterm.component.color.NeoColorScheme) -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.component.color.ColorSchemeComponent$Companion -> io.neoterm.a.b.a$a:
    java.io.File colorFile(java.lang.String) -> a
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.component.color.ColorSchemeComponent$reloadColorSchemes$1 -> io.neoterm.a.b.a$b:
    io.neoterm.component.color.ColorSchemeComponent$reloadColorSchemes$1 INSTANCE -> a
    boolean accept(java.io.File) -> accept
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.component.color.DefaultColorScheme -> io.neoterm.a.b.b:
    io.neoterm.component.color.DefaultColorScheme INSTANCE -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.component.color.NeoColorScheme -> io.neoterm.a.b.c:
    java.lang.String colorName -> b
    java.lang.String colorVersion -> a
    java.lang.String foregroundColor -> d
    java.lang.String backgroundColor -> e
    java.lang.String cursorColor -> f
    java.util.Map color -> g
    java.lang.String[] COLOR_META_PATH -> h
    java.lang.String[] COLOR_PATH -> i
    io.neoterm.component.color.NeoColorScheme$Companion Companion -> c
    java.lang.String getColorName() -> a
    void setColorName(java.lang.String) -> a
    java.lang.String getColorVersion() -> b
    java.lang.String getForegroundColor() -> c
    void setForegroundColor(java.lang.String) -> b
    java.lang.String getBackgroundColor() -> d
    void setBackgroundColor(java.lang.String) -> c
    java.lang.String getCursorColor() -> e
    void setCursorColor(java.lang.String) -> d
    java.util.Map getColor() -> f
    void setColor(int,java.lang.String) -> a
    java.lang.String getColor(int) -> a
    io.neoterm.component.color.NeoColorScheme copy() -> g
    boolean loadConfigure(java.io.File) -> a
    void applyColorScheme$app_release(io.neoterm.frontend.terminal.TerminalView,io.neoterm.frontend.terminal.eks.ExtraKeysView) -> a
    io.neoterm.component.codegen.generator.ICodeGenerator getCodeGenerator(io.neoterm.component.codegen.CodeGenParameter) -> a
    void validateColors() -> j
    java.lang.String getMetaByVisitor(io.neolang.visitor.ConfigVisitor,java.lang.String) -> a
    java.lang.String getColorByVisitor(io.neolang.visitor.ConfigVisitor,java.lang.String) -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    java.lang.String[] access$getCOLOR_META_PATH$cp() -> h
    java.lang.String[] access$getCOLOR_PATH$cp() -> i
io.neoterm.component.color.NeoColorScheme$Companion -> io.neoterm.a.b.c$a:
    java.lang.String[] getCOLOR_META_PATH() -> a
    java.lang.String[] getCOLOR_PATH() -> b
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.component.color.codegen.NeoColorGenerator -> io.neoterm.a.b.a.a:
    java.lang.String generateCode(io.neoterm.component.codegen.model.CodeGenObject) -> a
    void start(java.lang.StringBuilder) -> a
    void end(java.lang.StringBuilder) -> b
    void generateMetaData(java.lang.StringBuilder,io.neoterm.component.color.NeoColorScheme) -> a
    void generateColors(java.lang.StringBuilder,io.neoterm.component.color.NeoColorScheme) -> b
    void <init>(io.neoterm.component.codegen.CodeGenParameter) -> <init>
io.neoterm.component.completion.CompletionComponent -> io.neoterm.a.c.a:
    void onServiceInit() -> a
    void onServiceObtained() -> b
    void <init>() -> <init>
io.neoterm.component.completion.provider.FileCompletionProvider -> io.neoterm.a.c.a.a:
    java.lang.String getProviderName() -> a
    java.util.List provideCandidates(java.lang.String) -> a
    boolean canComplete(java.lang.String) -> b
    java.io.File[] listDirectory(java.io.File,kotlin.jvm.functions.Function1) -> a
    java.util.List generateCandidateList(java.io.File,kotlin.jvm.functions.Function1) -> b
    java.lang.String generateDisplayName(java.io.File) -> a
    java.lang.String generateDesc(java.io.File) -> b
    void <init>() -> <init>
io.neoterm.component.completion.provider.FileCompletionProvider$provideCandidates$1 -> io.neoterm.a.c.a.a$a:
    java.lang.String $partName -> a
    java.lang.Object invoke(java.lang.Object) -> a
    boolean invoke(java.io.File) -> a
    void <init>(java.lang.String) -> <init>
io.neoterm.component.completion.provider.FileCompletionProviderKt$sam$FileFilter$4b854431 -> io.neoterm.a.c.a.b:
    kotlin.jvm.functions.Function1 function -> a
    void <init>(kotlin.jvm.functions.Function1) -> <init>
    boolean accept(java.io.File) -> accept
io.neoterm.component.completion.provider.ProgramCompletionProvider -> io.neoterm.a.c.a.c:
    java.lang.String getProviderName() -> a
    java.lang.String generateDesc(java.io.File) -> b
    void <init>() -> <init>
io.neoterm.component.config.ConfigureComponent -> io.neoterm.a.d.a:
    int CONFIG_LOADER_VERSION -> a
    void onServiceInit() -> a
    void onServiceObtained() -> b
    int getLoaderVersion() -> c
    io.neoterm.component.config.IConfigureFileLoader newLoader(java.io.File) -> a
    void <init>() -> <init>
io.neoterm.component.config.IConfigureFileLoader -> io.neoterm.a.d.b:
    io.neoterm.frontend.config.NeoConfigureFile loadConfigure() -> a
io.neoterm.component.config.loader.NeoLangConfigureLoader -> io.neoterm.a.d.a.a:
    java.io.File configFile -> a
    io.neoterm.frontend.config.NeoConfigureFile loadConfigure() -> a
    void <init>(java.io.File) -> <init>
io.neoterm.component.config.loader.OldColorSchemeConfigureFile -> io.neoterm.a.d.a.b:
    io.neolang.visitor.ConfigVisitor configVisitor -> a
    io.neolang.visitor.ConfigVisitor getConfigVisitor() -> a
    void setConfigVisitor(io.neolang.visitor.ConfigVisitor) -> a
    boolean parseConfigure() -> b
    void <init>(java.io.File) -> <init>
io.neoterm.component.config.loader.OldConfigureLoader -> io.neoterm.a.d.a.c:
    java.io.File configFile -> a
    io.neoterm.frontend.config.NeoConfigureFile loadConfigure() -> a
    io.neoterm.frontend.config.NeoConfigureFile returnConfigure(io.neoterm.frontend.config.NeoConfigureFile) -> a
    void <init>(java.io.File) -> <init>
io.neoterm.component.config.loader.OldExtraKeysConfigureFile -> io.neoterm.a.d.a.d:
    io.neolang.visitor.ConfigVisitor configVisitor -> a
    io.neolang.visitor.ConfigVisitor getConfigVisitor() -> a
    void setConfigVisitor(io.neolang.visitor.ConfigVisitor) -> a
    boolean parseConfigure() -> b
    boolean generateVisitor(io.neoterm.component.eks.NeoExtraKey) -> a
    io.neoterm.component.eks.NeoExtraKey parseOldConfig(java.io.BufferedReader) -> a
    void parseWithDefault(java.lang.String,io.neoterm.component.eks.NeoExtraKey) -> a
    void parseKeyDefine(java.lang.String,io.neoterm.component.eks.NeoExtraKey) -> b
    void parseProgram(java.lang.String,io.neoterm.component.eks.NeoExtraKey) -> c
    void parseHeader(java.lang.String,io.neoterm.component.eks.NeoExtraKey) -> d
    void <init>(java.io.File) -> <init>
io.neoterm.component.eks.ExtraKeysComponent -> io.neoterm.a.e.a:
    java.util.Map extraKeys -> b
    java.io.FileFilter FILTER -> c
    io.neoterm.component.eks.ExtraKeysComponent$Companion Companion -> a
    void onServiceInit() -> a
    void onServiceObtained() -> b
    void showShortcutKeys(java.lang.String,io.neoterm.frontend.terminal.eks.ExtraKeysView) -> a
    void registerShortcutKeys(io.neoterm.component.eks.NeoExtraKey) -> a
    void checkForFiles() -> d
    void extractDefaultConfig(android.content.Context) -> a
    void loadConfigure() -> e
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    java.io.FileFilter access$getFILTER$cp() -> c
io.neoterm.component.eks.ExtraKeysComponent$Companion -> io.neoterm.a.e.a$a:
    java.io.FileFilter getFILTER() -> a
    void <init>() -> <init>
    java.io.FileFilter access$getFILTER$p(io.neoterm.component.eks.ExtraKeysComponent$Companion) -> a
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.component.eks.ExtraKeysComponent$Companion$FILTER$1 -> io.neoterm.a.e.a$b:
    io.neoterm.component.eks.ExtraKeysComponent$Companion$FILTER$1 INSTANCE -> a
    boolean accept(java.io.File) -> accept
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.component.eks.NeoExtraKey -> io.neoterm.a.e.b:
    int version -> b
    java.util.List programNames -> c
    java.util.List shortcutKeys -> d
    boolean withDefaultKeys -> e
    java.lang.String[] EKS_META_CONTEXT_PATH -> f
    io.neoterm.component.eks.NeoExtraKey$Companion Companion -> a
    int getVersion() -> a
    void setVersion(int) -> a
    java.util.List getProgramNames() -> b
    java.util.List getShortcutKeys() -> c
    boolean getWithDefaultKeys() -> d
    void setWithDefaultKeys(boolean) -> a
    void applyExtraKeys(io.neoterm.frontend.terminal.eks.ExtraKeysView) -> a
    boolean loadConfigure(java.io.File) -> a
    java.lang.String getMetaByVisitor(io.neolang.visitor.ConfigVisitor,java.lang.String) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    java.lang.String[] access$getEKS_META_CONTEXT_PATH$cp() -> e
io.neoterm.component.eks.NeoExtraKey$Companion -> io.neoterm.a.e.b$a:
    java.lang.String[] getEKS_META_CONTEXT_PATH() -> a
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.component.font.FontComponent -> io.neoterm.a.f.a:
    java.lang.String DEFAULT_FONT_NAME -> a
    io.neoterm.component.font.NeoFont DEFAULT_FONT -> b
    java.util.Map fonts -> c
    void applyFont(io.neoterm.frontend.terminal.TerminalView,io.neoterm.frontend.terminal.eks.ExtraKeysView,io.neoterm.component.font.NeoFont) -> a
    io.neoterm.component.font.NeoFont getCurrentFont() -> c
    void setCurrentFont(java.lang.String) -> a
    java.lang.String getCurrentFontName() -> d
    io.neoterm.component.font.NeoFont getFont(java.lang.String) -> b
    java.util.List getFontNames() -> e
    boolean reloadFonts() -> f
    void onServiceInit() -> a
    void onServiceObtained() -> b
    io.neoterm.component.font.NeoFont loadDefaultFontFromAsset(android.content.Context) -> a
    boolean extractDefaultFont(android.content.Context) -> b
    java.io.File fontFile(java.lang.String) -> c
    java.lang.String fontName(java.io.File) -> a
    void checkForFiles() -> g
    void <init>() -> <init>
io.neoterm.component.font.FontComponent$reloadFonts$1 -> io.neoterm.a.f.a$a:
    io.neoterm.component.font.FontComponent$reloadFonts$1 INSTANCE -> a
    boolean accept(java.io.File) -> accept
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.component.font.NeoFont -> io.neoterm.a.f.b:
    java.io.File fontFile -> a
    android.graphics.Typeface typeface -> b
    void applyFont$app_release(io.neoterm.frontend.terminal.TerminalView,io.neoterm.frontend.terminal.eks.ExtraKeysView) -> a
    android.graphics.Typeface getTypeFace() -> a
    void <init>(java.io.File) -> <init>
    void <init>(android.graphics.Typeface) -> <init>
io.neoterm.component.pm.Architecture -> io.neoterm.a.g.a:
    io.neoterm.component.pm.Architecture ALL -> a
    io.neoterm.component.pm.Architecture ARM -> b
    io.neoterm.component.pm.Architecture AARCH64 -> c
    io.neoterm.component.pm.Architecture X86 -> d
    io.neoterm.component.pm.Architecture X86_64 -> e
    io.neoterm.component.pm.Architecture[] $VALUES -> g
    io.neoterm.component.pm.Architecture$Companion Companion -> f
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    io.neoterm.component.pm.Architecture[] values() -> values
    io.neoterm.component.pm.Architecture valueOf(java.lang.String) -> valueOf
io.neoterm.component.pm.Architecture$Companion -> io.neoterm.a.g.a$a:
    io.neoterm.component.pm.Architecture parse(java.lang.String) -> a
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.component.pm.NeoPackageComponent -> io.neoterm.a.g.b:
    java.lang.Object lock -> a
    boolean isRefreshing -> b
    boolean queryEnabled -> c
    java.util.HashMap neoPackages -> d
    void <init>() -> <init>
    io.neoterm.component.pm.NeoPackageInfo getPackageInfo(java.lang.String) -> a
    java.util.HashMap getPackages() -> c
    io.neoterm.component.pm.SourceManager getSourceManager() -> d
    void reloadPackages(java.io.File,boolean) -> a
    void clearPackages() -> e
    void tryParsePackages(java.io.File,boolean) -> b
    void resolveDepends(io.neoterm.component.pm.NeoPackageInfo) -> a
    void onServiceInit() -> a
    void onServiceObtained() -> b
    boolean access$002(io.neoterm.component.pm.NeoPackageComponent,boolean) -> a
    java.util.HashMap access$100(io.neoterm.component.pm.NeoPackageComponent) -> a
    void access$200(io.neoterm.component.pm.NeoPackageComponent,io.neoterm.component.pm.NeoPackageInfo) -> a
io.neoterm.component.pm.NeoPackageComponent$1 -> io.neoterm.a.g.b$1:
    boolean val$clearPrevious -> a
    io.neoterm.component.pm.NeoPackageComponent this$0 -> b
    void <init>(io.neoterm.component.pm.NeoPackageComponent,boolean) -> <init>
    void onStartState() -> a
    void onEndState() -> b
    io.neoterm.component.pm.NeoPackageInfo onCreatePackageInfo() -> c
    void onStartParsePackage(java.lang.String,io.neoterm.component.pm.NeoPackageInfo) -> a
    void onEndParsePackage(io.neoterm.component.pm.NeoPackageInfo) -> a
io.neoterm.component.pm.NeoPackageInfo -> io.neoterm.a.g.c:
    java.lang.String packageName -> a
    boolean isEssential -> b
    java.lang.String version -> c
    io.neoterm.component.pm.Architecture architecture -> d
    java.lang.String maintainer -> e
    long installedSizeInBytes -> f
    java.lang.String fileName -> g
    java.lang.String dependenciesString -> h
    io.neoterm.component.pm.NeoPackageInfo[] dependencies -> i
    long sizeInBytes -> j
    java.lang.String md5 -> k
    java.lang.String sha1 -> l
    java.lang.String sha256 -> m
    java.lang.String homePage -> n
    java.lang.String description -> o
    java.lang.String getPackageName() -> a
    void setPackageName(java.lang.String) -> a
    void setEssential(boolean) -> a
    java.lang.String getVersion() -> b
    void setVersion(java.lang.String) -> b
    void setArchitecture(io.neoterm.component.pm.Architecture) -> a
    void setMaintainer(java.lang.String) -> c
    long getInstalledSizeInBytes() -> c
    void setInstalledSizeInBytes(long) -> a
    void setFileName(java.lang.String) -> d
    java.lang.String getDependenciesString() -> d
    void setDependenciesString(java.lang.String) -> e
    void setDependencies(io.neoterm.component.pm.NeoPackageInfo[]) -> a
    void setSizeInBytes(long) -> b
    void setMd5(java.lang.String) -> f
    void setSha1(java.lang.String) -> g
    void setSha256(java.lang.String) -> h
    java.lang.String getHomePage() -> e
    void setHomePage(java.lang.String) -> i
    java.lang.String getDescription() -> f
    void setDescription(java.lang.String) -> j
    void <init>() -> <init>
io.neoterm.component.pm.NeoPackageParser -> io.neoterm.a.g.d:
    java.io.BufferedReader reader -> a
    io.neoterm.component.pm.NeoPackageParser$ParseStateListener stateListener -> b
    void <init>(java.io.InputStream) -> <init>
    void setStateListener(io.neoterm.component.pm.NeoPackageParser$ParseStateListener) -> a
    void parse() -> a
    void splitKeyAndValue(java.lang.String,java.lang.String[]) -> a
io.neoterm.component.pm.NeoPackageParser$ParseStateListener -> io.neoterm.a.g.d$a:
    void onStartState() -> a
    void onEndState() -> b
    io.neoterm.component.pm.NeoPackageInfo onCreatePackageInfo() -> c
    void onStartParsePackage(java.lang.String,io.neoterm.component.pm.NeoPackageInfo) -> a
    void onEndParsePackage(io.neoterm.component.pm.NeoPackageInfo) -> a
io.neoterm.component.pm.SourceManager -> io.neoterm.a.g.e:
    java.util.Set sources -> a
    java.util.Set getSources() -> a
    void addSource(java.lang.String) -> a
    void applyChanges() -> b
    void <init>() -> <init>
io.neoterm.component.pm.SourceUtils -> io.neoterm.a.g.f:
    io.neoterm.component.pm.SourceUtils INSTANCE -> a
    java.util.ArrayList detectSourceFiles() -> a
    java.lang.String detectSourceFilePrefix(java.lang.String) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.component.script.UserScript -> io.neoterm.a.h.a:
    java.io.File scriptFile -> a
    java.io.File getScriptFile() -> a
    void <init>(java.io.File) -> <init>
io.neoterm.component.script.UserScriptComponent -> io.neoterm.a.h.b:
    java.util.List userScripts -> a
    java.util.List getUserScripts() -> c
    void onServiceInit() -> a
    void onServiceObtained() -> b
    boolean extractDefaultScript(android.content.Context) -> a
    void checkForFiles() -> e
    void reloadScripts() -> d
    void <init>() -> <init>
io.neoterm.component.setup.BaseFileInstaller -> io.neoterm.a.i.a:
    boolean needSetup() -> a
    void installBaseFiles(android.app.Activity,io.neoterm.component.setup.BaseFileInstaller$ResultListener) -> a
    java.net.HttpURLConnection openBaseFileConnection() -> c
    java.lang.String determineArchName() -> d
    void deleteFolder(java.io.File) -> b
    android.app.ProgressDialog makeProgressDialog(android.content.Context) -> a
    void access$000(java.io.File) -> a
    java.net.HttpURLConnection access$100() -> b
io.neoterm.component.setup.BaseFileInstaller$1 -> io.neoterm.a.i.a$1:
    android.app.Activity val$activity -> a
    android.app.ProgressDialog val$progress -> b
    java.io.File val$PREFIX_FILE -> c
    io.neoterm.component.setup.BaseFileInstaller$ResultListener val$resultListener -> d
    void <init>(android.app.Activity,android.app.ProgressDialog,java.io.File,io.neoterm.component.setup.BaseFileInstaller$ResultListener) -> <init>
    void run() -> run
io.neoterm.component.setup.BaseFileInstaller$1$1 -> io.neoterm.a.i.a$1$1:
    int val$totalReadBytesFinal -> a
    int val$totalBytesFinal -> b
    io.neoterm.component.setup.BaseFileInstaller$1 this$0 -> c
    void <init>(io.neoterm.component.setup.BaseFileInstaller$1,int,int) -> <init>
    void run() -> run
io.neoterm.component.setup.BaseFileInstaller$1$2 -> io.neoterm.a.i.a$1$2:
    io.neoterm.component.setup.BaseFileInstaller$1 this$0 -> a
    void <init>(io.neoterm.component.setup.BaseFileInstaller$1) -> <init>
    void run() -> run
io.neoterm.component.setup.BaseFileInstaller$1$3 -> io.neoterm.a.i.a$1$3:
    java.lang.Exception val$e -> a
    io.neoterm.component.setup.BaseFileInstaller$1 this$0 -> b
    void <init>(io.neoterm.component.setup.BaseFileInstaller$1,java.lang.Exception) -> <init>
    void run() -> run
io.neoterm.component.setup.BaseFileInstaller$1$4 -> io.neoterm.a.i.a$1$4:
    io.neoterm.component.setup.BaseFileInstaller$1 this$0 -> a
    void <init>(io.neoterm.component.setup.BaseFileInstaller$1) -> <init>
    void run() -> run
io.neoterm.component.setup.BaseFileInstaller$ResultListener -> io.neoterm.a.i.a$a:
    void onResult(java.lang.Exception) -> a
io.neoterm.frontend.client.BasicSessionCallback -> io.neoterm.frontend.a.a:
    io.neoterm.frontend.terminal.TerminalView terminalView -> a
    void onTextChanged(io.neoterm.backend.TerminalSession) -> a
    void onTitleChanged(io.neoterm.backend.TerminalSession) -> b
    void onSessionFinished(io.neoterm.backend.TerminalSession) -> c
    void onClipboardText(io.neoterm.backend.TerminalSession,java.lang.String) -> a
    void onBell(io.neoterm.backend.TerminalSession) -> d
    void onColorsChanged(io.neoterm.backend.TerminalSession) -> e
    void <init>(io.neoterm.frontend.terminal.TerminalView) -> <init>
io.neoterm.frontend.client.BasicViewClient -> io.neoterm.frontend.a.b:
    io.neoterm.frontend.terminal.TerminalView terminalView -> a
    float onScale(float) -> a
    void onSingleTapUp(android.view.MotionEvent) -> a
    boolean shouldBackButtonBeMappedToEscape() -> a
    void copyModeChanged(boolean) -> a
    boolean onKeyDown(int,android.view.KeyEvent,io.neoterm.backend.TerminalSession) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> a
    boolean readControlKey() -> b
    boolean readAltKey() -> c
    boolean onCodePoint(int,boolean,io.neoterm.backend.TerminalSession) -> a
    boolean onLongPress(android.view.MotionEvent) -> b
    void <init>(io.neoterm.frontend.terminal.TerminalView) -> <init>
io.neoterm.frontend.client.TermCompleteListener -> io.neoterm.frontend.a.c:
    java.util.Stack inputStack -> a
    io.neoterm.frontend.completion.view.CandidatePopupWindow popupWindow -> b
    int lastCompletedIndex -> c
    io.neoterm.frontend.terminal.TerminalView terminalView -> d
    void onKeyCode(int,int) -> a
    void fixLastCompletedIndex() -> c
    void onCompletionRequired(java.lang.String) -> a
    void onCleanUp() -> a
    boolean onFinishCompletion() -> b
    void onCandidateSelected(io.neoterm.frontend.completion.model.CompletionCandidate) -> a
    void triggerCompletion() -> d
    void showAutoCompleteCandidates(io.neoterm.frontend.completion.model.CompletionResult) -> a
    java.lang.String getCurrentEditingText() -> e
    void clearChars() -> f
    void popChar() -> g
    void pushString(java.lang.String) -> b
    void pushChar(char) -> a
    void <init>(io.neoterm.frontend.terminal.TerminalView) -> <init>
io.neoterm.frontend.client.TermDataHolder -> io.neoterm.frontend.a.d:
    io.neoterm.backend.TerminalSession termSession -> a
    io.neoterm.frontend.client.TermSessionCallback sessionCallback -> b
    io.neoterm.frontend.client.TermViewClient viewClient -> c
    io.neoterm.frontend.completion.listener.OnAutoCompleteListener onAutoCompleteListener -> d
    io.neoterm.frontend.client.TermUiPresenter termUI -> e
    io.neoterm.frontend.terminal.TerminalView termView -> f
    io.neoterm.frontend.terminal.eks.ExtraKeysView extraKeysView -> g
    io.neoterm.backend.TerminalSession getTermSession() -> a
    io.neoterm.frontend.client.TermViewClient getViewClient() -> b
    io.neoterm.frontend.completion.listener.OnAutoCompleteListener getOnAutoCompleteListener() -> c
    void setOnAutoCompleteListener(io.neoterm.frontend.completion.listener.OnAutoCompleteListener) -> a
    io.neoterm.frontend.client.TermUiPresenter getTermUI() -> d
    io.neoterm.frontend.terminal.TerminalView getTermView() -> e
    io.neoterm.frontend.terminal.eks.ExtraKeysView getExtraKeysView() -> f
    void cleanup() -> g
    void initializeSessionWith(io.neoterm.backend.TerminalSession,io.neoterm.frontend.client.TermSessionCallback,io.neoterm.frontend.client.TermViewClient) -> a
    void initializeViewWith(io.neoterm.frontend.client.TermUiPresenter,io.neoterm.frontend.terminal.TerminalView,io.neoterm.frontend.terminal.eks.ExtraKeysView) -> a
    void <init>() -> <init>
io.neoterm.frontend.client.TermSessionCallback -> io.neoterm.frontend.a.e:
    io.neoterm.frontend.client.TermDataHolder termData -> a
    int bellId -> b
    android.media.SoundPool soundPool -> c
    void setTermData(io.neoterm.frontend.client.TermDataHolder) -> a
    void onTextChanged(io.neoterm.backend.TerminalSession) -> a
    void onTitleChanged(io.neoterm.backend.TerminalSession) -> b
    void onSessionFinished(io.neoterm.backend.TerminalSession) -> c
    void onClipboardText(io.neoterm.backend.TerminalSession,java.lang.String) -> a
    void onBell(io.neoterm.backend.TerminalSession) -> d
    void onColorsChanged(io.neoterm.backend.TerminalSession) -> e
    void <init>() -> <init>
io.neoterm.frontend.client.TermUiPresenter -> io.neoterm.frontend.a.f:
    void requireClose() -> d_
    void requireToggleFullScreen() -> b_
    void requirePaste() -> c_
    void requireUpdateTitle(java.lang.String) -> a
    void requireOnSessionFinished() -> e_
    boolean requireFinishAutoCompletion() -> e
    void requireCreateNew() -> f
    void requireSwitchToPrevious() -> g
    void requireSwitchToNext() -> h
    void requireSwitchTo(int) -> a
io.neoterm.frontend.client.TermViewClient -> io.neoterm.frontend.a.g:
    boolean mVirtualControlKeyDown -> a
    boolean mVirtualFnKeyDown -> b
    java.lang.String lastTitle -> c
    boolean sessionFinished -> d
    io.neoterm.frontend.client.TermDataHolder termData -> e
    android.content.Context context -> f
    void setSessionFinished(boolean) -> b
    void setTermData(io.neoterm.frontend.client.TermDataHolder) -> a
    float onScale(float) -> a
    void onSingleTapUp(android.view.MotionEvent) -> a
    boolean shouldBackButtonBeMappedToEscape() -> a
    void copyModeChanged(boolean) -> a
    boolean onKeyDown(int,android.view.KeyEvent,io.neoterm.backend.TerminalSession) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> a
    boolean readControlKey() -> b
    boolean readAltKey() -> c
    boolean onCodePoint(int,boolean,io.neoterm.backend.TerminalSession) -> a
    boolean onLongPress(android.view.MotionEvent) -> b
    boolean handleVirtualKeys(int,android.view.KeyEvent,boolean) -> a
    void updateExtraKeys(java.lang.String,boolean) -> a
    void updateExtraKeys$default(io.neoterm.frontend.client.TermViewClient,java.lang.String,boolean,int,java.lang.Object) -> a
    void removeExtraKeys() -> d
    void changeFontSize(boolean) -> c
    void <init>(android.content.Context) -> <init>
io.neoterm.frontend.client.event.CreateNewSessionEvent -> io.neoterm.frontend.a.a.a:
    void <init>() -> <init>
io.neoterm.frontend.client.event.SwitchIndexedSessionEvent -> io.neoterm.frontend.a.a.b:
    int index -> a
    int getIndex() -> a
    void <init>(int) -> <init>
io.neoterm.frontend.client.event.SwitchSessionEvent -> io.neoterm.frontend.a.a.c:
    boolean toNext -> a
    boolean getToNext() -> a
    void <init>(boolean) -> <init>
io.neoterm.frontend.client.event.TabCloseEvent -> io.neoterm.frontend.a.a.d:
    io.neoterm.ui.term.tab.TermTab termTab -> a
    io.neoterm.ui.term.tab.TermTab getTermTab() -> a
    void <init>(io.neoterm.ui.term.tab.TermTab) -> <init>
io.neoterm.frontend.client.event.TitleChangedEvent -> io.neoterm.frontend.a.a.e:
    java.lang.String title -> a
    java.lang.String getTitle() -> a
    void <init>(java.lang.String) -> <init>
io.neoterm.frontend.client.event.ToggleFullScreenEvent -> io.neoterm.frontend.a.a.f:
    void <init>() -> <init>
io.neoterm.frontend.client.event.ToggleImeEvent -> io.neoterm.frontend.a.a.g:
    void <init>() -> <init>
io.neoterm.frontend.completion.CompletionManager -> io.neoterm.frontend.completion.a:
    java.util.Map candidateProviders -> b
    io.neoterm.frontend.completion.CompletionManager INSTANCE -> a
    void registerProvider(io.neoterm.frontend.completion.provider.ICandidateProvider) -> a
    io.neoterm.frontend.completion.model.CompletionResult tryCompleteFor(java.lang.String) -> a
    io.neoterm.frontend.completion.ProviderDetector detectProviders(java.lang.String) -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.frontend.completion.ProviderDetector -> io.neoterm.frontend.completion.b:
    io.neoterm.frontend.completion.provider.ICandidateProvider detectedProvider -> a
    java.util.List providers -> b
    void onMarkScore(int) -> a
    io.neoterm.frontend.completion.provider.ICandidateProvider detectBest() -> a
    void <init>(java.util.List) -> <init>
io.neoterm.frontend.completion.listener.MarkScoreListener -> io.neoterm.frontend.completion.a.a:
    void onMarkScore(int) -> a
io.neoterm.frontend.completion.listener.OnAutoCompleteListener -> io.neoterm.frontend.completion.a.b:
    void onCompletionRequired(java.lang.String) -> a
    void onKeyCode(int,int) -> a
    void onCleanUp() -> a
    boolean onFinishCompletion() -> b
io.neoterm.frontend.completion.listener.OnCandidateSelectedListener -> io.neoterm.frontend.completion.a.c:
    void onCandidateSelected(io.neoterm.frontend.completion.model.CompletionCandidate) -> a
io.neoterm.frontend.completion.model.CompletionCandidate -> io.neoterm.frontend.completion.b.a:
    java.lang.String displayName -> a
    java.lang.String description -> b
    java.lang.String completeString -> c
    java.lang.String getDisplayName() -> a
    void setDisplayName(java.lang.String) -> a
    java.lang.String getDescription() -> b
    void setDescription(java.lang.String) -> b
    java.lang.String getCompleteString() -> c
    void <init>(java.lang.String) -> <init>
io.neoterm.frontend.completion.model.CompletionResult -> io.neoterm.frontend.completion.b.b:
    java.util.List candidates -> a
    io.neoterm.frontend.completion.listener.MarkScoreListener scoreMarker -> b
    void markScore(int) -> a
    boolean hasResult() -> a
    java.util.List getCandidates() -> b
    void <init>(java.util.List,io.neoterm.frontend.completion.listener.MarkScoreListener) -> <init>
io.neoterm.frontend.completion.provider.ICandidateProvider -> io.neoterm.frontend.completion.c.a:
    java.lang.String getProviderName() -> a
    java.util.List provideCandidates(java.lang.String) -> a
    boolean canComplete(java.lang.String) -> b
io.neoterm.frontend.completion.view.CandidatePopupWindow -> io.neoterm.frontend.completion.view.a:
    java.util.List candidates -> a
    io.neoterm.frontend.completion.listener.OnCandidateSelectedListener onCandidateSelectedListener -> b
    android.widget.PopupWindow popupWindow -> c
    boolean wantsToFinish -> d
    io.neoterm.frontend.completion.view.CandidatePopupWindow$CandidateAdapter candidateAdapter -> e
    android.widget.ListView candidateListView -> f
    android.content.Context context -> g
    java.util.List getCandidates() -> a
    void setCandidates(java.util.List) -> a
    io.neoterm.frontend.completion.listener.OnCandidateSelectedListener getOnCandidateSelectedListener() -> b
    void setOnCandidateSelectedListener(io.neoterm.frontend.completion.listener.OnCandidateSelectedListener) -> a
    void show(io.neoterm.frontend.terminal.TerminalView) -> a
    void dismiss() -> c
    boolean isShowing() -> d
    android.widget.PopupWindow createPopupWindow() -> g
    void cleanup() -> e
    android.content.Context getContext() -> f
    void <init>(android.content.Context) -> <init>
io.neoterm.frontend.completion.view.CandidatePopupWindow$CandidateAdapter -> io.neoterm.frontend.completion.view.a$a:
    io.neoterm.frontend.completion.view.CandidatePopupWindow candidatePopupWindow -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getCount() -> getCount
    void <init>(io.neoterm.frontend.completion.view.CandidatePopupWindow) -> <init>
io.neoterm.frontend.completion.view.CandidatePopupWindow$CandidateViewHolder -> io.neoterm.frontend.completion.view.a$b:
    android.widget.TextView display -> a
    android.widget.TextView description -> b
    android.view.View splitView -> c
    android.widget.TextView getDisplay() -> a
    android.widget.TextView getDescription() -> b
    android.view.View getSplitView() -> c
    void <init>(android.view.View) -> <init>
io.neoterm.frontend.completion.view.CandidatePopupWindow$createPopupWindow$1 -> io.neoterm.frontend.completion.view.a$c:
    io.neoterm.frontend.completion.view.CandidatePopupWindow this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void <init>(io.neoterm.frontend.completion.view.CandidatePopupWindow) -> <init>
io.neoterm.frontend.completion.view.MaxHeightView -> io.neoterm.frontend.completion.view.MaxHeightView:
    int maxHeight -> a
    void setMaxHeight(int) -> setMaxHeight
    void onMeasure(int,int) -> onMeasure
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
io.neoterm.frontend.component.ComponentDuplicateException -> io.neoterm.frontend.b.a:
    void <init>(java.lang.String) -> <init>
io.neoterm.frontend.component.ComponentManager -> io.neoterm.frontend.b.b:
    java.util.concurrent.ConcurrentHashMap COMPONENTS -> b
    io.neoterm.frontend.component.ComponentManager INSTANCE -> a
    java.util.concurrent.ConcurrentHashMap getCOMPONENTS() -> a
    void registerComponent(java.lang.Class) -> a
    io.neoterm.frontend.component.NeoComponent createServiceInstance(java.lang.Class) -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.frontend.component.ComponentNotFoundException -> io.neoterm.frontend.b.c:
    void <init>(java.lang.String) -> <init>
io.neoterm.frontend.component.NeoComponent -> io.neoterm.frontend.b.d:
    void onServiceInit() -> a
    void onServiceObtained() -> b
io.neoterm.frontend.config.NeoConfigureFile -> io.neoterm.frontend.c.a:
    io.neolang.parser.NeoLangParser configParser -> a
    io.neolang.visitor.ConfigVisitor configVisitor -> b
    java.io.File configureFile -> c
    io.neolang.visitor.ConfigVisitor getConfigVisitor() -> a
    void setConfigVisitor(io.neolang.visitor.ConfigVisitor) -> a
    io.neolang.visitor.ConfigVisitor getVisitor() -> c
    boolean parseConfigure() -> b
    void checkParsed() -> e
    java.io.File getConfigureFile() -> d
    void <init>(java.io.File) -> <init>
io.neoterm.frontend.floating.TerminalDialog -> io.neoterm.frontend.d.a:
    io.neoterm.frontend.floating.WindowTermView termWindowView -> a
    io.neoterm.frontend.client.BasicSessionCallback terminalSessionCallback -> b
    android.app.AlertDialog dialog -> c
    io.neoterm.backend.TerminalSession terminalSession -> d
    io.neoterm.frontend.floating.TerminalDialog$SessionFinishedCallback sessionFinishedCallback -> e
    android.content.DialogInterface$OnCancelListener cancelListener -> f
    android.content.Context context -> g
    io.neoterm.frontend.floating.TerminalDialog execute(java.lang.String,java.lang.String[]) -> a
    io.neoterm.frontend.floating.TerminalDialog setTitle(java.lang.String) -> a
    io.neoterm.frontend.floating.TerminalDialog onFinish(io.neoterm.frontend.floating.TerminalDialog$SessionFinishedCallback) -> a
    void show(java.lang.String) -> b
    io.neoterm.frontend.floating.TerminalDialog dismiss() -> a
    io.neoterm.frontend.floating.TerminalDialog imeEnabled(boolean) -> a
    void <init>(android.content.Context) -> <init>
    io.neoterm.backend.TerminalSession access$getTerminalSession$p(io.neoterm.frontend.floating.TerminalDialog) -> a
    android.content.DialogInterface$OnCancelListener access$getCancelListener$p(io.neoterm.frontend.floating.TerminalDialog) -> b
    io.neoterm.frontend.floating.TerminalDialog$SessionFinishedCallback access$getSessionFinishedCallback$p(io.neoterm.frontend.floating.TerminalDialog) -> c
io.neoterm.frontend.floating.TerminalDialog$1 -> io.neoterm.frontend.d.a$1:
    io.neoterm.frontend.floating.TerminalDialog this$0 -> a
    void onSessionFinished(io.neoterm.backend.TerminalSession) -> c
    void <init>(io.neoterm.frontend.floating.TerminalDialog,io.neoterm.frontend.terminal.TerminalView) -> <init>
io.neoterm.frontend.floating.TerminalDialog$SessionFinishedCallback -> io.neoterm.frontend.d.a$a:
    void onSessionFinished(io.neoterm.frontend.floating.TerminalDialog,io.neoterm.backend.TerminalSession) -> a
io.neoterm.frontend.floating.TerminalDialog$execute$1 -> io.neoterm.frontend.d.a$b:
    io.neoterm.frontend.floating.TerminalDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    void <init>(io.neoterm.frontend.floating.TerminalDialog) -> <init>
io.neoterm.frontend.floating.WindowTermView -> io.neoterm.frontend.d.b:
    android.view.View rootView -> a
    io.neoterm.frontend.terminal.TerminalView terminalView -> b
    android.content.Context context -> c
    android.view.View getRootView() -> a
    io.neoterm.frontend.terminal.TerminalView getTerminalView() -> b
    void setTerminalViewClient(io.neoterm.frontend.terminal.TerminalViewClient) -> a
    void attachSession(io.neoterm.backend.TerminalSession) -> a
    void setInputMethodEnabled(boolean) -> a
    void <init>(android.content.Context) -> <init>
io.neoterm.frontend.logging.NLog -> io.neoterm.frontend.e.a:
    char[] T -> b
    int FILE -> c
    java.util.concurrent.ExecutorService executor -> d
    java.lang.String logDir -> e
    boolean sLogSwitch -> f
    boolean sLog2ConsoleSwitch -> g
    java.lang.String sGlobalTag -> h
    boolean sTagIsSpace -> i
    boolean sLogHeadSwitch -> j
    boolean sLog2FileSwitch -> k
    int sConsoleFilter -> l
    int sFileFilter -> m
    java.lang.String LINE_SEP -> n
    int MAX_LEN -> o
    java.text.SimpleDateFormat FORMAT -> p
    java.lang.String NULL_TIPS -> q
    java.lang.String ARGS -> r
    io.neoterm.frontend.logging.NLog INSTANCE -> a
    void init(android.content.Context) -> a
    void w(java.lang.String,java.lang.Object[]) -> a
    void e(java.lang.String,java.lang.Object[]) -> b
    void log(int,java.lang.String,java.lang.Object[]) -> a
    java.lang.String[] processTagAndHead(java.lang.String) -> a
    java.lang.String processBody(java.lang.Object[]) -> a
    void printToConsole(int,java.lang.String,java.lang.String) -> a
    void print(int,java.lang.String,java.lang.String) -> b
    void printToFile(int,java.lang.String,java.lang.String) -> c
    boolean createOrExistsFile(java.lang.String) -> b
    boolean createOrExistsDir(java.io.File) -> a
    boolean isSpace(java.lang.String) -> c
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.frontend.logging.NLog$printToFile$1 -> io.neoterm.frontend.e.a$a:
    java.lang.String $fullPath -> a
    java.lang.String $content -> b
    java.lang.String $tag -> c
    void run() -> run
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
io.neoterm.frontend.preference.NeoPermission -> io.neoterm.frontend.f.a:
    io.neoterm.frontend.preference.NeoPermission INSTANCE -> a
    void initAppPermission(android.app.Activity,int) -> a
    void doRequestPermission(android.app.Activity,int) -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void access$doRequestPermission(io.neoterm.frontend.preference.NeoPermission,android.app.Activity,int) -> a
io.neoterm.frontend.preference.NeoPermission$initAppPermission$1 -> io.neoterm.frontend.f.a$a:
    android.app.Activity $context -> a
    int $requestCode -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(android.app.Activity,int) -> <init>
io.neoterm.frontend.preference.NeoPreference -> io.neoterm.frontend.f.b:
    int MIN_FONT_SIZE -> b
    int MAX_FONT_SIZE -> c
    android.content.SharedPreferences preference -> d
    io.neoterm.frontend.preference.NeoPreference INSTANCE -> a
    void init(android.content.Context) -> a
    void storeStrings(java.lang.String,java.util.Set) -> a
    java.util.Set loadStrings(java.lang.String) -> a
    void store(int,java.lang.Object) -> a
    void store(java.lang.String,java.lang.Object) -> a
    java.lang.String loadString(int,java.lang.String) -> a
    boolean loadBoolean(int,boolean) -> a
    int loadInt(java.lang.String,int) -> a
    java.lang.String loadString(java.lang.String,java.lang.String) -> a
    boolean loadBoolean(java.lang.String,boolean) -> a
    void storeCurrentSession(io.neoterm.backend.TerminalSession) -> a
    io.neoterm.backend.TerminalSession getCurrentSession(io.neoterm.services.NeoTermService) -> a
    java.lang.String getLoginShell() -> a
    int validateFontSize(int) -> a
    void symlinkLoginShell(java.lang.String) -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.frontend.preference.NeoTermPath -> io.neoterm.frontend.f.c:
    java.lang.String DEFAULT_SOURCE -> b
    java.lang.String SERVER_BASE_URL -> c
    java.lang.String SERVER_BOOT_URL -> d
    io.neoterm.frontend.preference.NeoTermPath INSTANCE -> a
    java.lang.String getDEFAULT_SOURCE() -> a
    java.lang.String getSERVER_BASE_URL() -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.frontend.shell.ShellParameter -> io.neoterm.frontend.g.a:
    java.lang.String executablePath -> a
    java.lang.String[] arguments -> b
    java.lang.String cwd -> c
    java.lang.String initialCommand -> d
    kotlin.Pair[] env -> e
    io.neoterm.backend.TerminalSession$SessionChangedCallback sessionCallback -> f
    boolean systemShell -> g
    java.lang.String getExecutablePath() -> a
    java.lang.String[] getArguments() -> b
    java.lang.String getCwd() -> c
    java.lang.String getInitialCommand() -> d
    kotlin.Pair[] getEnv() -> e
    io.neoterm.backend.TerminalSession$SessionChangedCallback getSessionCallback() -> f
    boolean getSystemShell() -> g
    io.neoterm.frontend.shell.ShellParameter executablePath(java.lang.String) -> a
    io.neoterm.frontend.shell.ShellParameter arguments(java.lang.String[]) -> a
    io.neoterm.frontend.shell.ShellParameter currentWorkingDirectory(java.lang.String) -> b
    io.neoterm.frontend.shell.ShellParameter initialCommand(java.lang.String) -> c
    io.neoterm.frontend.shell.ShellParameter callback(io.neoterm.backend.TerminalSession$SessionChangedCallback) -> a
    io.neoterm.frontend.shell.ShellParameter systemShell(boolean) -> a
    void <init>() -> <init>
io.neoterm.frontend.shell.ShellTermSession -> io.neoterm.frontend.g.b:
    java.lang.String initialCommand -> j
    java.lang.String exitPrompt -> k
    void setInitialCommand(java.lang.String) -> c
    void setExitPrompt(java.lang.String) -> d
    void initializeEmulator(int,int) -> b
    java.lang.String getExitDescription(int) -> a
    void sendInitialCommand() -> j
    void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],io.neoterm.backend.TerminalSession$SessionChangedCallback) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],io.neoterm.backend.TerminalSession$SessionChangedCallback,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.frontend.shell.ShellTermSession$Builder -> io.neoterm.frontend.g.b$a:
    java.lang.String executablePath -> a
    java.lang.String cwd -> b
    java.util.List args -> c
    java.util.List env -> d
    io.neoterm.backend.TerminalSession$SessionChangedCallback changeCallback -> e
    boolean systemShell -> f
    io.neoterm.frontend.shell.ShellTermSession$Builder executablePath(java.lang.String) -> a
    io.neoterm.frontend.shell.ShellTermSession$Builder currentWorkingDirectory(java.lang.String) -> b
    io.neoterm.frontend.shell.ShellTermSession$Builder arg(java.lang.String) -> c
    io.neoterm.frontend.shell.ShellTermSession$Builder argArray(java.lang.String[]) -> a
    io.neoterm.frontend.shell.ShellTermSession$Builder env(kotlin.Pair) -> a
    io.neoterm.frontend.shell.ShellTermSession$Builder envArray(kotlin.Pair[]) -> a
    io.neoterm.frontend.shell.ShellTermSession$Builder callback(io.neoterm.backend.TerminalSession$SessionChangedCallback) -> a
    io.neoterm.frontend.shell.ShellTermSession$Builder systemShell(boolean) -> a
    io.neoterm.frontend.shell.ShellTermSession create(android.content.Context) -> a
    java.lang.String[] transformEnvironment(java.util.List) -> a
    java.lang.String[] buildEnvironment(java.lang.String,boolean) -> a
    java.lang.String buildLdLibraryEnv() -> a
    java.lang.String buildPathEnv() -> b
    void <init>() -> <init>
io.neoterm.frontend.terminal.GestureAndScaleRecognizer -> io.neoterm.frontend.terminal.a:
    android.view.GestureDetector mGestureDetector -> a
    android.view.ScaleGestureDetector mScaleDetector -> b
    boolean isAfterLongPress -> c
    io.neoterm.frontend.terminal.GestureAndScaleRecognizer$Listener mListener -> d
    void setAfterLongPress(boolean) -> a
    void onTouchEvent(android.view.MotionEvent) -> a
    boolean isInProgress() -> a
    io.neoterm.frontend.terminal.GestureAndScaleRecognizer$Listener getMListener() -> b
    void <init>(android.content.Context,io.neoterm.frontend.terminal.GestureAndScaleRecognizer$Listener) -> <init>
    android.view.GestureDetector access$getMGestureDetector$p(io.neoterm.frontend.terminal.GestureAndScaleRecognizer) -> a
io.neoterm.frontend.terminal.GestureAndScaleRecognizer$1 -> io.neoterm.frontend.terminal.a$1:
    io.neoterm.frontend.terminal.GestureAndScaleRecognizer this$0 -> a
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDown(android.view.MotionEvent) -> onDown
    void onLongPress(android.view.MotionEvent) -> onLongPress
    void <init>(io.neoterm.frontend.terminal.GestureAndScaleRecognizer) -> <init>
io.neoterm.frontend.terminal.GestureAndScaleRecognizer$2 -> io.neoterm.frontend.terminal.a$2:
    io.neoterm.frontend.terminal.GestureAndScaleRecognizer this$0 -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    void <init>(io.neoterm.frontend.terminal.GestureAndScaleRecognizer) -> <init>
io.neoterm.frontend.terminal.GestureAndScaleRecognizer$3 -> io.neoterm.frontend.terminal.a$3:
    io.neoterm.frontend.terminal.GestureAndScaleRecognizer this$0 -> a
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    void <init>(io.neoterm.frontend.terminal.GestureAndScaleRecognizer) -> <init>
io.neoterm.frontend.terminal.GestureAndScaleRecognizer$Listener -> io.neoterm.frontend.terminal.a$a:
    boolean onSingleTapUp(android.view.MotionEvent) -> a
    boolean onDoubleTap(android.view.MotionEvent) -> b
    boolean onDoubleTapEvent(android.view.MotionEvent) -> c
    boolean onScroll(android.view.MotionEvent,float,float) -> a
    boolean onFling(android.view.MotionEvent,float,float) -> b
    boolean onScale(float,float,float) -> a
    boolean onDown(float,float) -> a
    boolean onUp(android.view.MotionEvent) -> d
    void onLongPress(android.view.MotionEvent) -> e
io.neoterm.frontend.terminal.TerminalRenderer -> io.neoterm.frontend.terminal.b:
    int mTextSize -> a
    android.graphics.Typeface mTypeface -> b
    android.graphics.Paint mTextPaint -> h
    float mFontWidth -> c
    int mFontLineSpacing -> d
    int mFontAscent -> i
    int mFontLineSpacingAndAscent -> e
    float savedLastDrawnLineX -> f
    float savedLastDrawnLineY -> g
    float[] asciiMeasures -> j
    void <init>(int,android.graphics.Typeface) -> <init>
    void render(io.neoterm.backend.TerminalEmulator,android.graphics.Canvas,int,int,int,int,int) -> a
    void drawTextRun(android.graphics.Canvas,char[],int[],float,int,int,int,int,float,int,int,long,boolean) -> a
    float getCursorX() -> a
    float getCursorY() -> b
io.neoterm.frontend.terminal.TerminalView -> io.neoterm.frontend.terminal.TerminalView:
    io.neoterm.backend.TerminalSession mTermSession -> a
    io.neoterm.backend.TerminalEmulator mEmulator -> b
    io.neoterm.frontend.terminal.TerminalRenderer mRenderer -> c
    io.neoterm.frontend.terminal.TerminalViewClient mClient -> d
    int mTopRow -> e
    boolean mIsSelectingText -> f
    boolean mIsDraggingLeftSelection -> g
    boolean mInitialTextSelection -> h
    int mSelX1 -> i
    int mSelX2 -> j
    int mSelY1 -> k
    int mSelY2 -> l
    float mSelectionDownX -> m
    float mSelectionDownY -> n
    android.view.ActionMode mActionMode -> u
    android.graphics.drawable.BitmapDrawable mLeftSelectionHandle -> v
    android.graphics.drawable.BitmapDrawable mRightSelectionHandle -> w
    float mScaleFactor -> o
    io.neoterm.frontend.terminal.GestureAndScaleRecognizer mGestureRecognizer -> p
    int mMouseScrollStartX -> x
    int mMouseScrollStartY -> y
    long mMouseStartDownTime -> z
    android.widget.Scroller mScroller -> q
    float mScrollRemainder -> r
    int mCombiningAccent -> s
    int mTextSize -> t
    io.neoterm.frontend.completion.listener.OnAutoCompleteListener onAutoCompleteListener -> A
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void commonInit(android.content.Context) -> a
    void setTerminalViewClient(io.neoterm.frontend.terminal.TerminalViewClient) -> setTerminalViewClient
    void setOnKeyListener(android.view.View$OnKeyListener) -> setOnKeyListener
    boolean attachSession(io.neoterm.backend.TerminalSession) -> a
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void onScreenUpdated() -> a
    int getTextSize() -> getTextSize
    void setTextSize(int) -> setTextSize
    void setTypeface(android.graphics.Typeface) -> setTypeface
    boolean onCheckIsTextEditor() -> onCheckIsTextEditor
    boolean isOpaque() -> isOpaque
    void sendMouseEventCode(android.view.MotionEvent,int,boolean) -> a
    void doScroll(android.view.MotionEvent,int) -> a
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void pasteFromClipboard() -> b
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void inputCodePoint(int,boolean,boolean) -> a
    boolean handleKeyCode(int,int) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateSize() -> c
    void onDraw(android.graphics.Canvas) -> onDraw
    void toggleSelectingText(android.view.MotionEvent) -> a
    io.neoterm.backend.TerminalSession getCurrentSession() -> getCurrentSession
    io.neoterm.frontend.completion.listener.OnAutoCompleteListener getOnAutoCompleteListener() -> getOnAutoCompleteListener
    void setOnAutoCompleteListener(io.neoterm.frontend.completion.listener.OnAutoCompleteListener) -> setOnAutoCompleteListener
    int getCursorAbsX() -> getCursorAbsX
    int getCursorAbsY() -> getCursorAbsY
    io.neoterm.frontend.completion.listener.OnAutoCompleteListener access$000(io.neoterm.frontend.terminal.TerminalView) -> a
io.neoterm.frontend.terminal.TerminalView$1 -> io.neoterm.frontend.terminal.TerminalView$1:
    boolean scrolledWithFinger -> b
    float doubleTapX -> c
    float doubleTapY -> d
    boolean draggedAfterDoubleTap -> e
    io.neoterm.frontend.terminal.TerminalView this$0 -> a
    void <init>(io.neoterm.frontend.terminal.TerminalView) -> <init>
    boolean onUp(android.view.MotionEvent) -> d
    boolean onSingleTapUp(android.view.MotionEvent) -> a
    boolean onScroll(android.view.MotionEvent,float,float) -> a
    boolean onScale(float,float,float) -> a
    boolean onFling(android.view.MotionEvent,float,float) -> b
    boolean onDown(float,float) -> a
    boolean onDoubleTap(android.view.MotionEvent) -> b
    boolean onDoubleTapEvent(android.view.MotionEvent) -> c
    void onLongPress(android.view.MotionEvent) -> e
io.neoterm.frontend.terminal.TerminalView$1$1 -> io.neoterm.frontend.terminal.TerminalView$1$1:
    int mLastY -> d
    boolean val$mouseTrackingAtStartOfFling -> a
    android.view.MotionEvent val$e2 -> b
    io.neoterm.frontend.terminal.TerminalView$1 this$1 -> c
    void <init>(io.neoterm.frontend.terminal.TerminalView$1,boolean,android.view.MotionEvent) -> <init>
    void run() -> run
io.neoterm.frontend.terminal.TerminalView$2 -> io.neoterm.frontend.terminal.TerminalView$2:
    io.neoterm.frontend.terminal.TerminalView this$0 -> a
    void <init>(io.neoterm.frontend.terminal.TerminalView,android.view.View,boolean) -> <init>
    boolean finishComposingText() -> finishComposingText
    boolean commitText(java.lang.CharSequence,int) -> commitText
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendTextToTerminal(java.lang.CharSequence) -> a
io.neoterm.frontend.terminal.TerminalView$3 -> io.neoterm.frontend.terminal.TerminalView$3:
    io.neoterm.frontend.terminal.TerminalView this$0 -> a
    void <init>(io.neoterm.frontend.terminal.TerminalView) -> <init>
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
io.neoterm.frontend.terminal.TerminalView$4 -> io.neoterm.frontend.terminal.TerminalView$4:
    android.view.ActionMode$Callback val$callback -> a
    io.neoterm.frontend.terminal.TerminalView this$0 -> b
    void <init>(io.neoterm.frontend.terminal.TerminalView,android.view.ActionMode$Callback) -> <init>
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    void onGetContentRect(android.view.ActionMode,android.view.View,android.graphics.Rect) -> onGetContentRect
io.neoterm.frontend.terminal.TerminalViewClient -> io.neoterm.frontend.terminal.c:
    float onScale(float) -> a
    void onSingleTapUp(android.view.MotionEvent) -> a
    boolean shouldBackButtonBeMappedToEscape() -> a
    void copyModeChanged(boolean) -> a
    boolean onKeyDown(int,android.view.KeyEvent,io.neoterm.backend.TerminalSession) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> a
    boolean readControlKey() -> b
    boolean readAltKey() -> c
    boolean onCodePoint(int,boolean,io.neoterm.backend.TerminalSession) -> a
    boolean onLongPress(android.view.MotionEvent) -> b
io.neoterm.frontend.terminal.eks.ExtraKeysView -> io.neoterm.frontend.terminal.eks.ExtraKeysView:
    java.util.List builtinKeys -> b
    java.util.List userKeys -> c
    java.util.List buttonBars -> d
    android.graphics.Typeface typeface -> e
    io.neoterm.frontend.terminal.eks.button.StatedControlButton CTRL -> f
    io.neoterm.frontend.terminal.eks.button.StatedControlButton ALT -> g
    boolean buttonPanelExpanded -> h
    io.neoterm.frontend.terminal.eks.ExtraKeysView$EXPAND_BUTTONS$1 EXPAND_BUTTONS -> i
    io.neoterm.frontend.terminal.eks.button.ControlButton ESC -> j
    io.neoterm.frontend.terminal.eks.button.ControlButton TAB -> k
    io.neoterm.frontend.terminal.eks.button.RepeatableButton PAGE_UP -> l
    io.neoterm.frontend.terminal.eks.button.RepeatableButton PAGE_DOWN -> m
    io.neoterm.frontend.terminal.eks.button.ControlButton HOME -> n
    io.neoterm.frontend.terminal.eks.button.ControlButton END -> o
    io.neoterm.frontend.terminal.eks.impl.ArrowButton ARROW_UP -> p
    io.neoterm.frontend.terminal.eks.impl.ArrowButton ARROW_DOWN -> q
    io.neoterm.frontend.terminal.eks.impl.ArrowButton ARROW_LEFT -> r
    io.neoterm.frontend.terminal.eks.impl.ArrowButton ARROW_RIGHT -> s
    io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion$TOGGLE_IME$1 TOGGLE_IME -> t
    int MAX_BUTTONS_PER_LINE -> u
    float DEFAULT_ALPHA -> v
    float EXPANDED_ALPHA -> w
    int USER_KEYS_BUTTON_LINE_START -> x
    io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion Companion -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void setTextColor(int) -> setTextColor
    void setTypeface(android.graphics.Typeface) -> setTypeface
    boolean readControlButton() -> a
    boolean readAltButton() -> b
    void addUserKey(io.neoterm.frontend.terminal.eks.button.IExtraButton) -> a
    void addBuiltinKey(io.neoterm.frontend.terminal.eks.button.IExtraButton) -> b
    void clearUserKeys() -> c
    void loadDefaultUserKeys() -> d
    void updateButtons() -> e
    void updateButtonBars() -> u
    void expandButtonPanel(java.lang.Boolean) -> a
    void expandButtonPanel$default(io.neoterm.frontend.terminal.eks.ExtraKeysView,java.lang.Boolean,int,java.lang.Object) -> a
    android.widget.LinearLayout createNewButtonBar() -> v
    android.widget.LinearLayout getButtonBarOrNew(int) -> a
    void addKeyButton(java.util.List,io.neoterm.frontend.terminal.eks.button.IExtraButton) -> a
    void addKeyButton(android.widget.LinearLayout,io.neoterm.frontend.terminal.eks.button.IExtraButton) -> a
    void initBuiltinKeys() -> w
    int calculateButtonWidth() -> x
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <clinit>() -> <clinit>
    io.neoterm.frontend.terminal.eks.button.ControlButton access$getESC$cp() -> f
    io.neoterm.frontend.terminal.eks.button.ControlButton access$getTAB$cp() -> g
    io.neoterm.frontend.terminal.eks.button.RepeatableButton access$getPAGE_UP$cp() -> h
    io.neoterm.frontend.terminal.eks.button.RepeatableButton access$getPAGE_DOWN$cp() -> i
    io.neoterm.frontend.terminal.eks.button.ControlButton access$getHOME$cp() -> j
    io.neoterm.frontend.terminal.eks.button.ControlButton access$getEND$cp() -> k
    io.neoterm.frontend.terminal.eks.impl.ArrowButton access$getARROW_UP$cp() -> l
    io.neoterm.frontend.terminal.eks.impl.ArrowButton access$getARROW_DOWN$cp() -> m
    io.neoterm.frontend.terminal.eks.impl.ArrowButton access$getARROW_LEFT$cp() -> n
    io.neoterm.frontend.terminal.eks.impl.ArrowButton access$getARROW_RIGHT$cp() -> o
    io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion$TOGGLE_IME$1 access$getTOGGLE_IME$cp() -> p
    int access$getMAX_BUTTONS_PER_LINE$cp() -> q
    float access$getDEFAULT_ALPHA$cp() -> r
    float access$getEXPANDED_ALPHA$cp() -> s
    int access$getUSER_KEYS_BUTTON_LINE_START$cp() -> t
io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion -> io.neoterm.frontend.terminal.eks.ExtraKeysView$a:
    io.neoterm.frontend.terminal.eks.button.ControlButton getESC() -> a
    io.neoterm.frontend.terminal.eks.button.ControlButton getTAB() -> b
    io.neoterm.frontend.terminal.eks.button.RepeatableButton getPAGE_UP() -> c
    io.neoterm.frontend.terminal.eks.button.RepeatableButton getPAGE_DOWN() -> d
    io.neoterm.frontend.terminal.eks.button.ControlButton getHOME() -> e
    io.neoterm.frontend.terminal.eks.button.ControlButton getEND() -> f
    io.neoterm.frontend.terminal.eks.impl.ArrowButton getARROW_UP() -> g
    io.neoterm.frontend.terminal.eks.impl.ArrowButton getARROW_DOWN() -> h
    io.neoterm.frontend.terminal.eks.impl.ArrowButton getARROW_LEFT() -> i
    io.neoterm.frontend.terminal.eks.impl.ArrowButton getARROW_RIGHT() -> j
    io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion$TOGGLE_IME$1 getTOGGLE_IME() -> k
    int getMAX_BUTTONS_PER_LINE() -> l
    float getDEFAULT_ALPHA() -> m
    float getEXPANDED_ALPHA() -> n
    int getUSER_KEYS_BUTTON_LINE_START() -> o
    void <init>() -> <init>
    int access$getMAX_BUTTONS_PER_LINE$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> a
    float access$getEXPANDED_ALPHA$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> b
    float access$getDEFAULT_ALPHA$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> c
    int access$getUSER_KEYS_BUTTON_LINE_START$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> d
    io.neoterm.frontend.terminal.eks.button.ControlButton access$getESC$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> e
    io.neoterm.frontend.terminal.eks.button.ControlButton access$getTAB$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> f
    io.neoterm.frontend.terminal.eks.button.RepeatableButton access$getPAGE_DOWN$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> g
    io.neoterm.frontend.terminal.eks.impl.ArrowButton access$getARROW_LEFT$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> h
    io.neoterm.frontend.terminal.eks.impl.ArrowButton access$getARROW_DOWN$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> i
    io.neoterm.frontend.terminal.eks.impl.ArrowButton access$getARROW_RIGHT$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> j
    io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion$TOGGLE_IME$1 access$getTOGGLE_IME$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> k
    io.neoterm.frontend.terminal.eks.button.RepeatableButton access$getPAGE_UP$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> l
    io.neoterm.frontend.terminal.eks.button.ControlButton access$getHOME$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> m
    io.neoterm.frontend.terminal.eks.impl.ArrowButton access$getARROW_UP$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> n
    io.neoterm.frontend.terminal.eks.button.ControlButton access$getEND$p(io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion) -> o
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.frontend.terminal.eks.ExtraKeysView$Companion$TOGGLE_IME$1 -> io.neoterm.frontend.terminal.eks.ExtraKeysView$b:
    void onClick(android.view.View) -> onClick
    void <init>(java.lang.String) -> <init>
io.neoterm.frontend.terminal.eks.ExtraKeysView$EXPAND_BUTTONS$1 -> io.neoterm.frontend.terminal.eks.ExtraKeysView$c:
    io.neoterm.frontend.terminal.eks.ExtraKeysView this$0 -> a
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.frontend.terminal.eks.ExtraKeysView,java.lang.String) -> <init>
io.neoterm.frontend.terminal.eks.ExtraKeysView$addKeyButton$1 -> io.neoterm.frontend.terminal.eks.ExtraKeysView$d:
    io.neoterm.frontend.terminal.eks.ExtraKeysView this$0 -> a
    android.widget.Button $outerButton -> b
    io.neoterm.frontend.terminal.eks.button.IExtraButton $extraButton -> c
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.frontend.terminal.eks.ExtraKeysView,android.widget.Button,io.neoterm.frontend.terminal.eks.button.IExtraButton) -> <init>
io.neoterm.frontend.terminal.eks.button.ControlButton -> io.neoterm.frontend.terminal.eks.a.a:
    void <init>(java.lang.String) -> <init>
io.neoterm.frontend.terminal.eks.button.IExtraButton -> io.neoterm.frontend.terminal.eks.a.b:
    java.lang.String buttonText -> a
    java.lang.String displayText -> c
    java.lang.String KEY_ESC -> d
    java.lang.String KEY_TAB -> e
    java.lang.String KEY_CTRL -> f
    java.lang.String KEY_ALT -> g
    java.lang.String KEY_PAGE_UP -> h
    java.lang.String KEY_PAGE_DOWN -> i
    java.lang.String KEY_HOME -> j
    java.lang.String KEY_END -> k
    java.lang.String KEY_ARROW_UP -> l
    java.lang.String KEY_ARROW_DOWN -> m
    java.lang.String KEY_ARROW_LEFT -> n
    java.lang.String KEY_ARROW_RIGHT -> o
    java.lang.String KEY_SHOW_ALL_BUTTONS -> p
    java.lang.String KEY_TOGGLE_IME -> q
    int NORMAL_TEXT_COLOR -> r
    int SELECTED_TEXT_COLOR -> s
    io.neoterm.frontend.terminal.eks.button.IExtraButton$Companion Companion -> b
    java.lang.String getButtonText() -> a
    void setButtonText(java.lang.String) -> a
    java.lang.String getDisplayText() -> b
    void setDisplayText(java.lang.String) -> b
    java.lang.String toString() -> toString
    void onClick(android.view.View) -> onClick
    android.widget.Button makeButton(android.content.Context,android.util.AttributeSet,int) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    java.lang.String access$getKEY_ESC$cp() -> c
    java.lang.String access$getKEY_TAB$cp() -> d
    java.lang.String access$getKEY_CTRL$cp() -> e
    java.lang.String access$getKEY_ALT$cp() -> f
    java.lang.String access$getKEY_PAGE_UP$cp() -> g
    java.lang.String access$getKEY_PAGE_DOWN$cp() -> h
    java.lang.String access$getKEY_HOME$cp() -> i
    java.lang.String access$getKEY_END$cp() -> j
    java.lang.String access$getKEY_ARROW_UP$cp() -> k
    java.lang.String access$getKEY_ARROW_DOWN$cp() -> l
    java.lang.String access$getKEY_ARROW_LEFT$cp() -> m
    java.lang.String access$getKEY_ARROW_RIGHT$cp() -> n
    java.lang.String access$getKEY_SHOW_ALL_BUTTONS$cp() -> o
    java.lang.String access$getKEY_TOGGLE_IME$cp() -> p
    int access$getNORMAL_TEXT_COLOR$cp() -> q
    void access$setNORMAL_TEXT_COLOR$cp(int) -> a
    int access$getSELECTED_TEXT_COLOR$cp() -> r
io.neoterm.frontend.terminal.eks.button.IExtraButton$Companion -> io.neoterm.frontend.terminal.eks.a.b$a:
    java.lang.String getKEY_ESC() -> a
    java.lang.String getKEY_TAB() -> b
    java.lang.String getKEY_CTRL() -> c
    java.lang.String getKEY_ALT() -> d
    java.lang.String getKEY_PAGE_UP() -> e
    java.lang.String getKEY_PAGE_DOWN() -> f
    java.lang.String getKEY_HOME() -> g
    java.lang.String getKEY_END() -> h
    java.lang.String getKEY_ARROW_UP() -> i
    java.lang.String getKEY_ARROW_DOWN() -> j
    java.lang.String getKEY_ARROW_LEFT() -> k
    java.lang.String getKEY_ARROW_RIGHT() -> l
    java.lang.String getKEY_SHOW_ALL_BUTTONS() -> m
    java.lang.String getKEY_TOGGLE_IME() -> n
    int getNORMAL_TEXT_COLOR() -> o
    void setNORMAL_TEXT_COLOR(int) -> a
    int getSELECTED_TEXT_COLOR() -> p
    void sendKey(android.view.View,java.lang.String) -> a
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.frontend.terminal.eks.button.RepeatableButton -> io.neoterm.frontend.terminal.eks.a.c:
    android.widget.Button makeButton(android.content.Context,android.util.AttributeSet,int) -> a
    void <init>(java.lang.String) -> <init>
io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget -> io.neoterm.frontend.terminal.eks.a.c$a:
    long LONG_CLICK_ACTION_INTERVAL -> a
    boolean isMotionEventUp -> b
    android.os.Handler mHandler -> c
    android.os.Handler getMHandler() -> a
    boolean performClick() -> performClick
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean access$isMotionEventUp$p(io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget) -> a
    void access$setMotionEventUp$p(io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget,boolean) -> a
    long access$getLONG_CLICK_ACTION_INTERVAL$p(io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget) -> b
io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget$1 -> io.neoterm.frontend.terminal.eks.a.c$a$1:
    io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
    void <init>(io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget) -> <init>
io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget$2 -> io.neoterm.frontend.terminal.eks.a.c$a$2:
    io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void <init>(io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget) -> <init>
io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget$mHandler$1 -> io.neoterm.frontend.terminal.eks.a.c$a$a:
    io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(io.neoterm.frontend.terminal.eks.button.RepeatableButton$RepeatableButtonWidget,android.os.Looper) -> <init>
io.neoterm.frontend.terminal.eks.button.StatedControlButton -> io.neoterm.frontend.terminal.eks.a.d:
    android.widget.ToggleButton toggleButton -> a
    boolean initState -> c
    void onClick(android.view.View) -> onClick
    android.widget.Button makeButton(android.content.Context,android.util.AttributeSet,int) -> a
    void setStatus(java.lang.Boolean) -> a
    boolean readState() -> s
    void <init>(java.lang.String,boolean) -> <init>
    void <init>(java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.frontend.terminal.eks.button.TextButton -> io.neoterm.frontend.terminal.eks.a.e:
    boolean withEnter -> a
    boolean getWithEnter() -> t
    void onClick(android.view.View) -> onClick
    android.widget.Button makeButton(android.content.Context,android.util.AttributeSet,int) -> a
    void <init>(java.lang.String,boolean) -> <init>
io.neoterm.frontend.terminal.eks.impl.ArrowButton -> io.neoterm.frontend.terminal.eks.b.a:
    void <init>(java.lang.String) -> <init>
io.neoterm.services.NeoTermService -> io.neoterm.services.NeoTermService:
    io.neoterm.services.NeoTermService$NeoTermBinder neoTermBinder -> b
    java.util.ArrayList mTerminalSessions -> c
    android.os.PowerManager$WakeLock mWakeLock -> d
    android.net.wifi.WifiManager$WifiLock mWifiLock -> e
    java.lang.String ACTION_SERVICE_STOP -> f
    java.lang.String ACTION_ACQUIRE_LOCK -> g
    java.lang.String ACTION_RELEASE_LOCK -> h
    int NOTIFICATION_ID -> i
    java.lang.String DEFAULT_CHANNEL_ID -> j
    io.neoterm.services.NeoTermService$Companion Companion -> a
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    java.util.List getSessions() -> a
    io.neoterm.backend.TerminalSession createTermSession(io.neoterm.frontend.shell.ShellParameter) -> a
    int removeTermSession(io.neoterm.backend.TerminalSession) -> a
    void updateNotification() -> g
    android.app.Notification createNotification() -> h
    void acquireLock() -> i
    void releaseLock() -> j
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    java.lang.String access$getACTION_SERVICE_STOP$cp() -> b
    java.lang.String access$getACTION_ACQUIRE_LOCK$cp() -> c
    java.lang.String access$getACTION_RELEASE_LOCK$cp() -> d
    int access$getNOTIFICATION_ID$cp() -> e
    java.lang.String access$getDEFAULT_CHANNEL_ID$cp() -> f
io.neoterm.services.NeoTermService$Companion -> io.neoterm.services.NeoTermService$a:
    java.lang.String getACTION_SERVICE_STOP() -> a
    java.lang.String getACTION_ACQUIRE_LOCK() -> b
    java.lang.String getACTION_RELEASE_LOCK() -> c
    int getNOTIFICATION_ID() -> e
    java.lang.String getDEFAULT_CHANNEL_ID() -> d
    void <init>() -> <init>
    int access$getNOTIFICATION_ID$p(io.neoterm.services.NeoTermService$Companion) -> a
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.services.NeoTermService$NeoTermBinder -> io.neoterm.services.NeoTermService$b:
    io.neoterm.services.NeoTermService service -> b
    io.neoterm.services.NeoTermService this$0 -> a
    io.neoterm.services.NeoTermService getService() -> a
    void <init>(io.neoterm.services.NeoTermService) -> <init>
io.neoterm.ui.bonus.BonusActivity -> io.neoterm.ui.bonus.BonusActivity:
    android.widget.FrameLayout mLayout -> a
    int mTapCount -> c
    int mKeyCount -> d
    android.view.animation.PathInterpolator mInterpolator -> e
    int[] FLAVORS -> f
    io.neoterm.ui.bonus.BonusActivity$Companion Companion -> b
    int getMTapCount$app_release() -> a
    void setMTapCount$app_release(int) -> a
    int getMKeyCount$app_release() -> b
    void setMKeyCount$app_release(int) -> b
    android.view.animation.PathInterpolator getMInterpolator$app_release() -> c
    android.graphics.drawable.Drawable makeRipple$app_release() -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onAttachedToWindow() -> onAttachedToWindow
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    int[] access$getFLAVORS$cp() -> e
io.neoterm.ui.bonus.BonusActivity$Companion -> io.neoterm.ui.bonus.BonusActivity$a:
    int[] getFLAVORS$app_release() -> a
    int newColorIndex$app_release() -> b
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.ui.bonus.BonusActivity$onAttachedToWindow$1 -> io.neoterm.ui.bonus.BonusActivity$b:
    io.neoterm.ui.bonus.BonusActivity this$0 -> a
    android.widget.ImageView $im -> b
    android.graphics.drawable.Drawable $platlogo -> c
    io.neoterm.ui.bonus.BonusActivity$onAttachedToWindow$stick$1 $stick -> d
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.ui.bonus.BonusActivity,android.widget.ImageView,android.graphics.drawable.Drawable,io.neoterm.ui.bonus.BonusActivity$onAttachedToWindow$stick$1) -> <init>
io.neoterm.ui.bonus.BonusActivity$onAttachedToWindow$2 -> io.neoterm.ui.bonus.BonusActivity$c:
    io.neoterm.ui.bonus.BonusActivity this$0 -> a
    android.widget.ImageView $im -> b
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void <init>(io.neoterm.ui.bonus.BonusActivity,android.widget.ImageView) -> <init>
io.neoterm.ui.bonus.BonusActivity$onAttachedToWindow$stick$1 -> io.neoterm.ui.bonus.BonusActivity$d:
    android.graphics.Paint mPaint -> c
    android.graphics.Path mShadow -> d
    io.neoterm.ui.bonus.BonusActivity this$0 -> a
    int $size -> b
    android.graphics.Paint getMPaint$app_release() -> getMPaint$app_release
    void setMPaint$app_release(android.graphics.Paint) -> setMPaint$app_release
    android.graphics.Path getMShadow$app_release() -> getMShadow$app_release
    void setMShadow$app_release(android.graphics.Path) -> setMShadow$app_release
    void onAttachedToWindow() -> onAttachedToWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    void <init>(io.neoterm.ui.bonus.BonusActivity,int,android.content.Context) -> <init>
io.neoterm.ui.bonus.BonusActivity$onAttachedToWindow$stick$1$onAttachedToWindow$1 -> io.neoterm.ui.bonus.BonusActivity$d$a:
    io.neoterm.ui.bonus.BonusActivity$onAttachedToWindow$stick$1 this$0 -> a
    void getOutline(android.view.View,android.graphics.Outline) -> getOutline
    void <init>(io.neoterm.ui.bonus.BonusActivity$onAttachedToWindow$stick$1) -> <init>
io.neoterm.ui.crash.CrashActivity -> io.neoterm.ui.crash.CrashActivity:
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String collectExceptionInfo() -> b
    java.lang.String collectAppInfo() -> a
    java.lang.String collectModelInfo() -> c
    java.lang.String determineArchName() -> d
    void <init>() -> <init>
io.neoterm.ui.customize.BaseCustomizeActivity -> io.neoterm.ui.customize.a:
    io.neoterm.frontend.terminal.TerminalView terminalView -> a
    io.neoterm.frontend.client.BasicViewClient viewClient -> b
    io.neoterm.frontend.client.BasicSessionCallback sessionCallback -> c
    io.neoterm.backend.TerminalSession session -> d
    io.neoterm.frontend.terminal.eks.ExtraKeysView extraKeysView -> e
    io.neoterm.frontend.terminal.TerminalView getTerminalView() -> a
    io.neoterm.backend.TerminalSession getSession() -> b
    io.neoterm.frontend.terminal.eks.ExtraKeysView getExtraKeysView() -> c
    void initCustomizationComponent(int) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void <init>() -> <init>
io.neoterm.ui.customize.ColorSchemeActivity -> io.neoterm.ui.customize.ColorSchemeActivity:
    java.util.Comparator COMPARATOR -> h
    boolean changed -> i
    io.neoterm.component.color.NeoColorScheme editingColorScheme -> f
    io.neoterm.ui.customize.adapter.ColorItemAdapter adapter -> g
    io.neoterm.component.color.ColorSchemeComponent colorSchemeComponent -> j
    void setChanged(boolean) -> a
    io.neoterm.component.color.NeoColorScheme getEditingColorScheme() -> d
    io.neoterm.ui.customize.adapter.ColorItemAdapter getAdapter() -> e
    io.neoterm.component.color.ColorSchemeComponent getColorSchemeComponent() -> f
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void showItemEditor(io.neoterm.ui.customize.model.ColorItem) -> a
    void applyColorScheme(io.neoterm.component.color.NeoColorScheme,boolean) -> a
    void applyColorScheme$default(io.neoterm.ui.customize.ColorSchemeActivity,io.neoterm.component.color.NeoColorScheme,boolean,int,java.lang.Object) -> a
    void <init>() -> <init>
    void access$showItemEditor(io.neoterm.ui.customize.ColorSchemeActivity,io.neoterm.ui.customize.model.ColorItem) -> a
    void access$applyColorScheme(io.neoterm.ui.customize.ColorSchemeActivity,io.neoterm.component.color.NeoColorScheme,boolean) -> a
io.neoterm.ui.customize.ColorSchemeActivity$COMPARATOR$1 -> io.neoterm.ui.customize.ColorSchemeActivity$a:
    io.neoterm.ui.customize.ColorSchemeActivity$COMPARATOR$1 INSTANCE -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compare(io.neoterm.ui.customize.model.ColorItem,io.neoterm.ui.customize.model.ColorItem) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.ui.customize.ColorSchemeActivity$applyColorScheme$1 -> io.neoterm.ui.customize.ColorSchemeActivity$b:
    io.neoterm.ui.customize.ColorSchemeActivity this$0 -> a
    io.neoterm.component.color.NeoColorScheme $colorScheme -> b
    android.widget.EditText $edit -> c
    boolean $finishAfter -> d
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.customize.ColorSchemeActivity,io.neoterm.component.color.NeoColorScheme,android.widget.EditText,boolean) -> <init>
io.neoterm.ui.customize.ColorSchemeActivity$onCreate$1 -> io.neoterm.ui.customize.ColorSchemeActivity$c:
    io.neoterm.ui.customize.ColorSchemeActivity this$0 -> a
    void onModelClicked(io.neoterm.ui.customize.model.ColorItem) -> a
    void <init>(io.neoterm.ui.customize.ColorSchemeActivity) -> <init>
io.neoterm.ui.customize.ColorSchemeActivity$onKeyDown$1 -> io.neoterm.ui.customize.ColorSchemeActivity$d:
    io.neoterm.ui.customize.ColorSchemeActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.customize.ColorSchemeActivity) -> <init>
io.neoterm.ui.customize.ColorSchemeActivity$onKeyDown$2 -> io.neoterm.ui.customize.ColorSchemeActivity$e:
    io.neoterm.ui.customize.ColorSchemeActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.customize.ColorSchemeActivity) -> <init>
io.neoterm.ui.customize.ColorSchemeActivity$showItemEditor$1 -> io.neoterm.ui.customize.ColorSchemeActivity$f:
    io.neoterm.ui.customize.ColorSchemeActivity this$0 -> a
    android.widget.EditText $edit -> b
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void <init>(io.neoterm.ui.customize.ColorSchemeActivity,android.widget.EditText) -> <init>
io.neoterm.ui.customize.ColorSchemeActivity$showItemEditor$2 -> io.neoterm.ui.customize.ColorSchemeActivity$g:
    io.neoterm.ui.customize.ColorSchemeActivity this$0 -> a
    io.neoterm.ui.customize.model.ColorItem $model -> b
    android.widget.EditText $edit -> c
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.customize.ColorSchemeActivity,io.neoterm.ui.customize.model.ColorItem,android.widget.EditText) -> <init>
io.neoterm.ui.customize.CustomizeActivity -> io.neoterm.ui.customize.CustomizeActivity:
    int REQUEST_SELECT_FONT -> f
    int REQUEST_SELECT_COLOR -> g
    void onCreate(android.os.Bundle) -> onCreate
    void setupSpinners() -> d
    android.widget.Spinner setupSpinner(int,java.util.List,java.lang.String,android.widget.AdapterView$OnItemSelectedListener) -> a
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void installColor(java.lang.String) -> a
    void installFont(java.lang.String) -> b
    void installFileTo(java.lang.String,java.lang.String) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void <init>() -> <init>
    int access$getREQUEST_SELECT_FONT$p(io.neoterm.ui.customize.CustomizeActivity) -> a
    int access$getREQUEST_SELECT_COLOR$p(io.neoterm.ui.customize.CustomizeActivity) -> b
io.neoterm.ui.customize.CustomizeActivity$onCreate$1 -> io.neoterm.ui.customize.CustomizeActivity$a:
    io.neoterm.ui.customize.CustomizeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.ui.customize.CustomizeActivity) -> <init>
io.neoterm.ui.customize.CustomizeActivity$onCreate$2 -> io.neoterm.ui.customize.CustomizeActivity$b:
    io.neoterm.ui.customize.CustomizeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.ui.customize.CustomizeActivity) -> <init>
io.neoterm.ui.customize.CustomizeActivity$setupSpinners$1 -> io.neoterm.ui.customize.CustomizeActivity$c:
    io.neoterm.ui.customize.CustomizeActivity this$0 -> a
    io.neoterm.component.font.FontComponent $fontComponent -> b
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void <init>(io.neoterm.ui.customize.CustomizeActivity,io.neoterm.component.font.FontComponent) -> <init>
io.neoterm.ui.customize.CustomizeActivity$setupSpinners$2 -> io.neoterm.ui.customize.CustomizeActivity$d:
    io.neoterm.ui.customize.CustomizeActivity this$0 -> a
    io.neoterm.component.color.ColorSchemeComponent $colorSchemeComponent -> b
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void <init>(io.neoterm.ui.customize.CustomizeActivity,io.neoterm.component.color.ColorSchemeComponent) -> <init>
io.neoterm.ui.customize.adapter.ColorItemAdapter -> io.neoterm.ui.customize.a.a:
    java.util.List colorList -> a
    io.neoterm.ui.customize.adapter.ColorItemAdapter$Listener listener -> b
    java.util.List getColorList() -> c
    java.lang.String getSectionName(int) -> a_
    com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$ViewHolder onCreateViewHolder(android.view.LayoutInflater,android.view.ViewGroup,int) -> b
    com.github.wrdlbrnft.modularadapter.ModularAdapter$ViewHolder onCreateViewHolder(android.view.LayoutInflater,android.view.ViewGroup,int) -> a
    void <init>(android.content.Context,io.neoterm.component.color.NeoColorScheme,java.util.Comparator,io.neoterm.ui.customize.adapter.ColorItemAdapter$Listener) -> <init>
io.neoterm.ui.customize.adapter.ColorItemAdapter$Listener -> io.neoterm.ui.customize.a.a$a:
    void onModelClicked(io.neoterm.ui.customize.model.ColorItem) -> a
io.neoterm.ui.customize.adapter.holder.ColorItemViewHolder -> io.neoterm.ui.customize.a.a.a:
    android.widget.TextView colorItemName -> a
    android.widget.TextView colorItemDesc -> b
    android.view.View rootView -> c
    io.neoterm.ui.customize.adapter.ColorItemAdapter$Listener listener -> d
    void performBind(io.neoterm.ui.customize.model.ColorItem) -> a
    void performBind(java.lang.Object) -> b
    void <init>(android.view.View,io.neoterm.ui.customize.adapter.ColorItemAdapter$Listener) -> <init>
    io.neoterm.ui.customize.adapter.ColorItemAdapter$Listener access$getListener$p(io.neoterm.ui.customize.adapter.holder.ColorItemViewHolder) -> a
io.neoterm.ui.customize.adapter.holder.ColorItemViewHolder$performBind$1 -> io.neoterm.ui.customize.a.a.a$a:
    io.neoterm.ui.customize.adapter.holder.ColorItemViewHolder this$0 -> a
    io.neoterm.ui.customize.model.ColorItem $item -> b
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.ui.customize.adapter.holder.ColorItemViewHolder,io.neoterm.ui.customize.model.ColorItem) -> <init>
io.neoterm.ui.customize.model.ColorItem -> io.neoterm.ui.customize.b.a:
    java.lang.String colorName -> a
    int colorType -> b
    java.lang.String colorValue -> c
    boolean isSameModelAs(java.lang.Object) -> a
    boolean isContentTheSameAs(java.lang.Object) -> b
    java.lang.String getColorName() -> a
    int getColorType() -> b
    java.lang.String getColorValue() -> c
    void setColorValue(java.lang.String) -> a
    void <init>(int,java.lang.String) -> <init>
io.neoterm.ui.pm.PackageManagerActivity -> io.neoterm.ui.pm.PackageManagerActivity:
    java.util.Comparator COMPARATOR -> e
    android.support.v7.widget.RecyclerView recyclerView -> a
    io.neoterm.ui.pm.adapter.PackageAdapter adapter -> b
    android.widget.ProgressBar progressBar -> c
    java.util.ArrayList models -> d
    android.animation.Animator mAnimator -> f
    io.neoterm.ui.pm.adapter.PackageAdapter getAdapter() -> c
    android.widget.ProgressBar getProgressBar() -> d
    java.util.ArrayList getModels() -> e
    void onCreate(android.os.Bundle) -> onCreate
    void installPackage(java.lang.String) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void changeSource() -> f
    void changeSourceToUserInput(io.neoterm.component.pm.SourceManager) -> a
    void changeSourceInternal(io.neoterm.component.pm.SourceManager,java.lang.String) -> a
    void executeAptUpdate() -> g
    void executeAptUpgrade() -> h
    void refreshPackageList() -> i
    java.util.List filter(java.util.List,java.lang.String) -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    void onEditStarted() -> a
    void onEditFinished() -> b
    void <init>() -> <init>
    void access$installPackage(io.neoterm.ui.pm.PackageManagerActivity,java.lang.String) -> a
    void access$changeSourceInternal(io.neoterm.ui.pm.PackageManagerActivity,io.neoterm.component.pm.SourceManager,java.lang.String) -> a
    void access$changeSourceToUserInput(io.neoterm.ui.pm.PackageManagerActivity,io.neoterm.component.pm.SourceManager) -> a
    void access$refreshPackageList(io.neoterm.ui.pm.PackageManagerActivity) -> a
    void access$changeSource(io.neoterm.ui.pm.PackageManagerActivity) -> b
io.neoterm.ui.pm.PackageManagerActivity$COMPARATOR$1 -> io.neoterm.ui.pm.PackageManagerActivity$a:
    io.neoterm.ui.pm.PackageManagerActivity$COMPARATOR$1 INSTANCE -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compare(io.neoterm.ui.pm.model.PackageModel,io.neoterm.ui.pm.model.PackageModel) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.ui.pm.PackageManagerActivity$changeSource$1 -> io.neoterm.ui.pm.PackageManagerActivity$b:
    kotlin.jvm.internal.Ref$IntRef $selectedIndex -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(kotlin.jvm.internal.Ref$IntRef) -> <init>
io.neoterm.ui.pm.PackageManagerActivity$changeSource$2 -> io.neoterm.ui.pm.PackageManagerActivity$c:
    io.neoterm.ui.pm.PackageManagerActivity this$0 -> a
    io.neoterm.component.pm.SourceManager $sourceManager -> b
    java.util.Set $sourceList -> c
    kotlin.jvm.internal.Ref$IntRef $selectedIndex -> d
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.pm.PackageManagerActivity,io.neoterm.component.pm.SourceManager,java.util.Set,kotlin.jvm.internal.Ref$IntRef) -> <init>
io.neoterm.ui.pm.PackageManagerActivity$changeSource$3 -> io.neoterm.ui.pm.PackageManagerActivity$d:
    io.neoterm.ui.pm.PackageManagerActivity this$0 -> a
    io.neoterm.component.pm.SourceManager $sourceManager -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.pm.PackageManagerActivity,io.neoterm.component.pm.SourceManager) -> <init>
io.neoterm.ui.pm.PackageManagerActivity$changeSourceToUserInput$1 -> io.neoterm.ui.pm.PackageManagerActivity$e:
    io.neoterm.ui.pm.PackageManagerActivity this$0 -> a
    android.widget.EditText $editText -> b
    io.neoterm.component.pm.SourceManager $sourceManager -> c
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.pm.PackageManagerActivity,android.widget.EditText,io.neoterm.component.pm.SourceManager) -> <init>
io.neoterm.ui.pm.PackageManagerActivity$executeAptUpdate$1 -> io.neoterm.ui.pm.PackageManagerActivity$f:
    io.neoterm.ui.pm.PackageManagerActivity this$0 -> a
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> a
    void invoke(int,io.neoterm.frontend.floating.TerminalDialog) -> a
    void <init>(io.neoterm.ui.pm.PackageManagerActivity) -> <init>
io.neoterm.ui.pm.PackageManagerActivity$executeAptUpgrade$1 -> io.neoterm.ui.pm.PackageManagerActivity$g:
    io.neoterm.ui.pm.PackageManagerActivity this$0 -> a
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> a
    void invoke(int,io.neoterm.frontend.floating.TerminalDialog) -> a
    void <init>(io.neoterm.ui.pm.PackageManagerActivity) -> <init>
io.neoterm.ui.pm.PackageManagerActivity$executeAptUpgrade$1$1 -> io.neoterm.ui.pm.PackageManagerActivity$g$1:
    io.neoterm.ui.pm.PackageManagerActivity$executeAptUpgrade$1 this$0 -> a
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> a
    void invoke(int,io.neoterm.frontend.floating.TerminalDialog) -> a
    void <init>(io.neoterm.ui.pm.PackageManagerActivity$executeAptUpgrade$1) -> <init>
io.neoterm.ui.pm.PackageManagerActivity$installPackage$1 -> io.neoterm.ui.pm.PackageManagerActivity$h:
    io.neoterm.ui.pm.PackageManagerActivity this$0 -> a
    void onSessionFinished(io.neoterm.frontend.floating.TerminalDialog,io.neoterm.backend.TerminalSession) -> a
    void <init>(io.neoterm.ui.pm.PackageManagerActivity) -> <init>
io.neoterm.ui.pm.PackageManagerActivity$onCreate$1 -> io.neoterm.ui.pm.PackageManagerActivity$i:
    io.neoterm.ui.pm.PackageManagerActivity this$0 -> a
    void onModelClicked(io.neoterm.ui.pm.model.PackageModel) -> a
    void <init>(io.neoterm.ui.pm.PackageManagerActivity) -> <init>
io.neoterm.ui.pm.PackageManagerActivity$onCreate$1$onModelClicked$1 -> io.neoterm.ui.pm.PackageManagerActivity$i$a:
    io.neoterm.ui.pm.PackageManagerActivity$onCreate$1 this$0 -> a
    io.neoterm.ui.pm.model.PackageModel $model -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.pm.PackageManagerActivity$onCreate$1,io.neoterm.ui.pm.model.PackageModel) -> <init>
io.neoterm.ui.pm.PackageManagerActivity$onEditFinished$1 -> io.neoterm.ui.pm.PackageManagerActivity$j:
    boolean mCanceled -> b
    io.neoterm.ui.pm.PackageManagerActivity this$0 -> a
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void <init>(io.neoterm.ui.pm.PackageManagerActivity) -> <init>
io.neoterm.ui.pm.PackageManagerActivity$refreshPackageList$1 -> io.neoterm.ui.pm.PackageManagerActivity$k:
    io.neoterm.ui.pm.PackageManagerActivity this$0 -> a
    void run() -> run
    void <init>(io.neoterm.ui.pm.PackageManagerActivity) -> <init>
io.neoterm.ui.pm.PackageManagerActivity$refreshPackageList$1$1 -> io.neoterm.ui.pm.PackageManagerActivity$k$1:
    io.neoterm.ui.pm.PackageManagerActivity$refreshPackageList$1 this$0 -> a
    void run() -> run
    void <init>(io.neoterm.ui.pm.PackageManagerActivity$refreshPackageList$1) -> <init>
io.neoterm.ui.pm.adapter.PackageAdapter -> io.neoterm.ui.pm.a.a:
    io.neoterm.ui.pm.adapter.PackageAdapter$Listener listener -> a
    java.lang.String getSectionName(int) -> a_
    com.github.wrdlbrnft.sortedlistadapter.SortedListAdapter$ViewHolder onCreateViewHolder(android.view.LayoutInflater,android.view.ViewGroup,int) -> b
    com.github.wrdlbrnft.modularadapter.ModularAdapter$ViewHolder onCreateViewHolder(android.view.LayoutInflater,android.view.ViewGroup,int) -> a
    void <init>(android.content.Context,java.util.Comparator,io.neoterm.ui.pm.adapter.PackageAdapter$Listener) -> <init>
io.neoterm.ui.pm.adapter.PackageAdapter$Listener -> io.neoterm.ui.pm.a.a$a:
    void onModelClicked(io.neoterm.ui.pm.model.PackageModel) -> a
io.neoterm.ui.pm.adapter.holder.PackageViewHolder -> io.neoterm.ui.pm.a.a.a:
    android.widget.TextView packageNameView -> a
    android.widget.TextView packageDescView -> b
    android.view.View rootView -> c
    io.neoterm.ui.pm.adapter.PackageAdapter$Listener listener -> d
    void performBind(io.neoterm.ui.pm.model.PackageModel) -> a
    void performBind(java.lang.Object) -> b
    void <init>(android.view.View,io.neoterm.ui.pm.adapter.PackageAdapter$Listener) -> <init>
    io.neoterm.ui.pm.adapter.PackageAdapter$Listener access$getListener$p(io.neoterm.ui.pm.adapter.holder.PackageViewHolder) -> a
io.neoterm.ui.pm.adapter.holder.PackageViewHolder$performBind$1 -> io.neoterm.ui.pm.a.a.a$a:
    io.neoterm.ui.pm.adapter.holder.PackageViewHolder this$0 -> a
    io.neoterm.ui.pm.model.PackageModel $item -> b
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.ui.pm.adapter.holder.PackageViewHolder,io.neoterm.ui.pm.model.PackageModel) -> <init>
io.neoterm.ui.pm.model.PackageModel -> io.neoterm.ui.pm.b.a:
    io.neoterm.component.pm.NeoPackageInfo packageInfo -> a
    boolean isSameModelAs(java.lang.Object) -> a
    boolean isContentTheSameAs(java.lang.Object) -> b
    java.lang.String getPackageDetails(android.content.Context) -> a
    io.neoterm.component.pm.NeoPackageInfo getPackageInfo() -> a
    void <init>(io.neoterm.component.pm.NeoPackageInfo) -> <init>
io.neoterm.ui.settings.BasePreferenceActivity -> io.neoterm.ui.settings.a:
    android.support.v7.app.AppCompatDelegate mDelegate -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.support.v7.app.ActionBar getSupportActionBar() -> a
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onPostResume() -> onPostResume
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    android.support.v7.app.AppCompatDelegate getDelegate() -> b
    void <init>() -> <init>
io.neoterm.ui.settings.GeneralSettingsActivity -> io.neoterm.ui.settings.GeneralSettingsActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onBuildHeaders(java.util.List) -> onBuildHeaders
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void <init>() -> <init>
io.neoterm.ui.settings.SettingActivity -> io.neoterm.ui.settings.SettingActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onBuildHeaders(java.util.List) -> onBuildHeaders
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void <init>() -> <init>
io.neoterm.ui.settings.UISettingsActivity -> io.neoterm.ui.settings.UISettingsActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onBuildHeaders(java.util.List) -> onBuildHeaders
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void <init>() -> <init>
io.neoterm.ui.setup.SetupActivity -> io.neoterm.ui.setup.SetupActivity:
    boolean aptUpdated -> a
    void setAptUpdated(boolean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void installBaseFiles() -> a
    void executeAptUpdate() -> b
    void executeAptUpgrade() -> c
    void <init>() -> <init>
    void access$executeAptUpdate(io.neoterm.ui.setup.SetupActivity) -> a
    void access$executeAptUpgrade(io.neoterm.ui.setup.SetupActivity) -> b
io.neoterm.ui.setup.SetupActivity$executeAptUpdate$1 -> io.neoterm.ui.setup.SetupActivity$a:
    io.neoterm.ui.setup.SetupActivity this$0 -> a
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> a
    void invoke(int,io.neoterm.frontend.floating.TerminalDialog) -> a
    void <init>(io.neoterm.ui.setup.SetupActivity) -> <init>
io.neoterm.ui.setup.SetupActivity$executeAptUpgrade$1 -> io.neoterm.ui.setup.SetupActivity$b:
    io.neoterm.ui.setup.SetupActivity this$0 -> a
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> a
    void invoke(int,io.neoterm.frontend.floating.TerminalDialog) -> a
    void <init>(io.neoterm.ui.setup.SetupActivity) -> <init>
io.neoterm.ui.setup.SetupActivity$installBaseFiles$1 -> io.neoterm.ui.setup.SetupActivity$c:
    io.neoterm.ui.setup.SetupActivity this$0 -> a
    kotlin.jvm.internal.Ref$ObjectRef $resultListener -> b
    void onResult(java.lang.Exception) -> a
    void <init>(io.neoterm.ui.setup.SetupActivity,kotlin.jvm.internal.Ref$ObjectRef) -> <init>
io.neoterm.ui.setup.SetupActivity$installBaseFiles$1$1 -> io.neoterm.ui.setup.SetupActivity$c$1:
    io.neoterm.ui.setup.SetupActivity$installBaseFiles$1 this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.setup.SetupActivity$installBaseFiles$1) -> <init>
io.neoterm.ui.setup.SetupActivity$installBaseFiles$1$2 -> io.neoterm.ui.setup.SetupActivity$c$2:
    io.neoterm.ui.setup.SetupActivity$installBaseFiles$1 this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.setup.SetupActivity$installBaseFiles$1) -> <init>
io.neoterm.ui.setup.SetupActivity$installBaseFiles$1$3 -> io.neoterm.ui.setup.SetupActivity$c$3:
    io.neoterm.ui.setup.SetupActivity$installBaseFiles$1$3 INSTANCE -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.ui.support.AboutActivity -> io.neoterm.ui.support.AboutActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void openUrl(java.lang.String) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void <init>() -> <init>
    void access$openUrl(io.neoterm.ui.support.AboutActivity,java.lang.String) -> a
io.neoterm.ui.support.AboutActivity$onCreate$1 -> io.neoterm.ui.support.AboutActivity$a:
    io.neoterm.ui.support.AboutActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.ui.support.AboutActivity) -> <init>
io.neoterm.ui.support.AboutActivity$onCreate$2 -> io.neoterm.ui.support.AboutActivity$b:
    io.neoterm.ui.support.AboutActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.ui.support.AboutActivity) -> <init>
io.neoterm.ui.support.AboutActivity$onCreate$3 -> io.neoterm.ui.support.AboutActivity$c:
    io.neoterm.ui.support.AboutActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.ui.support.AboutActivity) -> <init>
io.neoterm.ui.support.AboutActivity$onCreate$4 -> io.neoterm.ui.support.AboutActivity$d:
    io.neoterm.ui.support.AboutActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.ui.support.AboutActivity) -> <init>
io.neoterm.ui.support.AboutActivity$onCreate$5 -> io.neoterm.ui.support.AboutActivity$e:
    io.neoterm.ui.support.AboutActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.ui.support.AboutActivity) -> <init>
io.neoterm.ui.support.AboutActivity$onCreate$5$1 -> io.neoterm.ui.support.AboutActivity$e$1:
    io.neoterm.ui.support.AboutActivity$onCreate$5 this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.support.AboutActivity$onCreate$5) -> <init>
io.neoterm.ui.support.AboutActivity$onCreate$5$2 -> io.neoterm.ui.support.AboutActivity$e$2:
    io.neoterm.ui.support.AboutActivity$onCreate$5 this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.support.AboutActivity$onCreate$5) -> <init>
io.neoterm.ui.support.Donation -> io.neoterm.ui.support.a:
    java.lang.String ALIPAY_PACKAGE_NAME -> b
    java.lang.String INTENT_URL_FORMAT -> c
    io.neoterm.ui.support.Donation INSTANCE -> a
    boolean donateByAlipay(android.app.Activity,java.lang.String) -> a
    void donateByQQ(android.content.Context) -> a
    boolean startIntentUrl(android.app.Activity,java.lang.String) -> b
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.ui.support.HelpActivity -> io.neoterm.ui.support.HelpActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void <init>() -> <init>
io.neoterm.ui.term.NeoTermActivity -> io.neoterm.ui.term.NeoTermActivity:
    de.mrapp.android.tabswitcher.TabSwitcher tabSwitcher -> a
    io.neoterm.utils.FullScreenHelper fullScreenHelper -> d
    android.support.v7.widget.Toolbar toolbar -> b
    android.view.View$OnClickListener addSessionListener -> e
    io.neoterm.services.NeoTermService termService -> f
    io.neoterm.ui.term.NeoTermActivity$Companion Companion -> c
    de.mrapp.android.tabswitcher.TabSwitcher getTabSwitcher() -> a
    android.support.v7.widget.Toolbar getToolbar() -> b
    android.view.View$OnClickListener getAddSessionListener() -> c
    void onCreate(android.os.Bundle) -> onCreate
    void toggleToolbar(android.support.v7.widget.Toolbar,boolean) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void forceAddSystemSession() -> d
    void enterMain() -> e
    void recreate() -> recreate
    boolean isRecreating() -> f
    void saveCurrentStatus() -> g
    boolean peekRecreating() -> h
    void setFullScreenMode(boolean) -> a
    void addNewSession() -> i
    void addNewSession(io.neoterm.backend.TerminalSession) -> a
    void addNewSession(java.lang.String,boolean,de.mrapp.android.tabswitcher.Animation) -> a
    void switchToSession(io.neoterm.backend.TerminalSession) -> b
    void switchToSession(de.mrapp.android.tabswitcher.Tab) -> a
    void addNewTab(de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> a
    io.neoterm.backend.TerminalSession getStoredCurrentSessionOrLast() -> j
    android.view.View$OnClickListener createAddSessionListener() -> k
    de.mrapp.android.tabswitcher.Tab createTab(java.lang.String) -> a
    de.mrapp.android.tabswitcher.Animation createRevealAnimation() -> l
    android.view.View getNavigationMenuItem() -> m
    android.support.v4.view.OnApplyWindowInsetsListener createWindowInsetsListener() -> n
    void closeTab(io.neoterm.ui.term.tab.TermTab) -> a
    void toggleSwitcher(boolean,boolean) -> a
    void setSystemShellMode(boolean) -> b
    boolean getSystemShellMode() -> o
    void forEachTab(kotlin.jvm.functions.Function1) -> a
    void onTabCloseEvent(io.neoterm.frontend.client.event.TabCloseEvent) -> onTabCloseEvent
    void onToggleFullScreenEvent(io.neoterm.frontend.client.event.ToggleFullScreenEvent) -> onToggleFullScreenEvent
    void onToggleImeEvent(io.neoterm.frontend.client.event.ToggleImeEvent) -> onToggleImeEvent
    void onTitleChangedEvent(io.neoterm.frontend.client.event.TitleChangedEvent) -> onTitleChangedEvent
    void onCreateNewSessionEvent(io.neoterm.frontend.client.event.CreateNewSessionEvent) -> onCreateNewSessionEvent
    void onSwitchSessionEvent(io.neoterm.frontend.client.event.SwitchSessionEvent) -> onSwitchSessionEvent
    void onSwitchIndexedSessionEvent(io.neoterm.frontend.client.event.SwitchIndexedSessionEvent) -> onSwitchIndexedSessionEvent
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void access$toggleToolbar(io.neoterm.ui.term.NeoTermActivity,android.support.v7.widget.Toolbar,boolean) -> a
    void access$toggleSwitcher(io.neoterm.ui.term.NeoTermActivity,boolean,boolean) -> a
    void access$closeTab(io.neoterm.ui.term.NeoTermActivity,io.neoterm.ui.term.tab.TermTab) -> a
    void access$addNewSession(io.neoterm.ui.term.NeoTermActivity) -> a
io.neoterm.ui.term.NeoTermActivity$Companion -> io.neoterm.ui.term.NeoTermActivity$a:
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.ui.term.NeoTermActivity$createAddSessionListener$1 -> io.neoterm.ui.term.NeoTermActivity$b:
    io.neoterm.ui.term.NeoTermActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.ui.term.NeoTermActivity) -> <init>
io.neoterm.ui.term.NeoTermActivity$createWindowInsetsListener$1 -> io.neoterm.ui.term.NeoTermActivity$c:
    io.neoterm.ui.term.NeoTermActivity this$0 -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    void <init>(io.neoterm.ui.term.NeoTermActivity) -> <init>
io.neoterm.ui.term.NeoTermActivity$onConfigurationChanged$1 -> io.neoterm.ui.term.NeoTermActivity$d:
    io.neoterm.ui.term.NeoTermActivity$onConfigurationChanged$1 INSTANCE -> a
    java.lang.Object invoke(java.lang.Object) -> a
    void invoke(io.neoterm.ui.term.tab.TermTab) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.ui.term.NeoTermActivity$onCreate$1 -> io.neoterm.ui.term.NeoTermActivity$e:
    io.neoterm.ui.term.NeoTermActivity this$0 -> a
    void onKeyboardChange(boolean,int) -> a
    void <init>(io.neoterm.ui.term.NeoTermActivity) -> <init>
io.neoterm.ui.term.NeoTermActivity$onCreateOptionsMenu$1 -> io.neoterm.ui.term.NeoTermActivity$f:
    io.neoterm.ui.term.NeoTermActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    void <init>(io.neoterm.ui.term.NeoTermActivity) -> <init>
io.neoterm.ui.term.NeoTermActivity$onRequestPermissionsResult$1 -> io.neoterm.ui.term.NeoTermActivity$g:
    io.neoterm.ui.term.NeoTermActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.term.NeoTermActivity) -> <init>
io.neoterm.ui.term.NeoTermActivity$onResume$1 -> io.neoterm.ui.term.NeoTermActivity$h:
    io.neoterm.ui.term.NeoTermActivity this$0 -> a
    void onSwitcherShown(de.mrapp.android.tabswitcher.TabSwitcher) -> a
    void onSwitcherHidden(de.mrapp.android.tabswitcher.TabSwitcher) -> b
    void onSelectionChanged(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab) -> a
    void onTabAdded(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> a
    void onTabRemoved(de.mrapp.android.tabswitcher.TabSwitcher,int,de.mrapp.android.tabswitcher.Tab,de.mrapp.android.tabswitcher.Animation) -> b
    void <init>(io.neoterm.ui.term.NeoTermActivity) -> <init>
io.neoterm.ui.term.NeoTermActivity$onResume$1$onSwitcherShown$1 -> io.neoterm.ui.term.NeoTermActivity$h$a:
    io.neoterm.ui.term.NeoTermActivity$onResume$1 this$0 -> a
    void run() -> run
    void <init>(io.neoterm.ui.term.NeoTermActivity$onResume$1) -> <init>
io.neoterm.ui.term.NeoTermActivity$onStop$1 -> io.neoterm.ui.term.NeoTermActivity$i:
    io.neoterm.ui.term.NeoTermActivity$onStop$1 INSTANCE -> a
    java.lang.Object invoke(java.lang.Object) -> a
    void invoke(io.neoterm.ui.term.tab.TermTab) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.ui.term.NeoTermActivity$toggleToolbar$1 -> io.neoterm.ui.term.NeoTermActivity$j:
    android.support.v7.widget.Toolbar $toolbar -> a
    void run() -> run
    void <init>(android.support.v7.widget.Toolbar) -> <init>
io.neoterm.ui.term.NeoTermRemoteInterface -> io.neoterm.ui.term.NeoTermRemoteInterface:
    io.neoterm.services.NeoTermService termService -> b
    io.neoterm.ui.term.NeoTermRemoteInterface$Companion Companion -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void handleIntent() -> a
    void handleNormal() -> b
    void handleTermHere() -> c
    void handleUserScript() -> d
    void setupUserScriptView(java.util.List,java.util.List) -> a
    java.lang.String[] buildUserScriptArgument(java.lang.String,java.util.List) -> a
    void openTerm(io.neoterm.frontend.shell.ShellParameter) -> a
    void openCustomExecTerm(java.lang.String,java.lang.String[],java.lang.String) -> a
    void openTerm(java.lang.String) -> a
    boolean detectSystemShell() -> e
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    java.lang.String[] access$buildUserScriptArgument(io.neoterm.ui.term.NeoTermRemoteInterface,java.lang.String,java.util.List) -> a
    void access$openCustomExecTerm(io.neoterm.ui.term.NeoTermRemoteInterface,java.lang.String,java.lang.String[],java.lang.String) -> a
io.neoterm.ui.term.NeoTermRemoteInterface$Companion -> io.neoterm.ui.term.NeoTermRemoteInterface$a:
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.ui.term.NeoTermRemoteInterface$handleNormal$1 -> io.neoterm.ui.term.NeoTermRemoteInterface$b:
    io.neoterm.ui.term.NeoTermRemoteInterface this$0 -> a
    java.lang.Object invoke() -> a
    void invoke() -> b
    void <init>(io.neoterm.ui.term.NeoTermRemoteInterface) -> <init>
io.neoterm.ui.term.NeoTermRemoteInterface$handleUserScript$1 -> io.neoterm.ui.term.NeoTermRemoteInterface$c:
    io.neoterm.ui.term.NeoTermRemoteInterface this$0 -> a
    java.lang.Object invoke() -> a
    void invoke() -> b
    void <init>(io.neoterm.ui.term.NeoTermRemoteInterface) -> <init>
io.neoterm.ui.term.NeoTermRemoteInterface$handleUserScript$5 -> io.neoterm.ui.term.NeoTermRemoteInterface$d:
    io.neoterm.ui.term.NeoTermRemoteInterface this$0 -> a
    java.lang.Object invoke() -> a
    void invoke() -> b
    void <init>(io.neoterm.ui.term.NeoTermRemoteInterface) -> <init>
io.neoterm.ui.term.NeoTermRemoteInterface$onCreate$1 -> io.neoterm.ui.term.NeoTermRemoteInterface$e:
    io.neoterm.ui.term.NeoTermRemoteInterface this$0 -> a
    java.lang.Object invoke() -> a
    void invoke() -> b
    void <init>(io.neoterm.ui.term.NeoTermRemoteInterface) -> <init>
io.neoterm.ui.term.NeoTermRemoteInterface$setupUserScriptView$1 -> io.neoterm.ui.term.NeoTermRemoteInterface$f:
    io.neoterm.ui.term.NeoTermRemoteInterface this$0 -> a
    java.util.List $filesToHandle -> b
    android.widget.ArrayAdapter $filesAdapter -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void <init>(io.neoterm.ui.term.NeoTermRemoteInterface,java.util.List,android.widget.ArrayAdapter) -> <init>
io.neoterm.ui.term.NeoTermRemoteInterface$setupUserScriptView$1$1 -> io.neoterm.ui.term.NeoTermRemoteInterface$f$1:
    io.neoterm.ui.term.NeoTermRemoteInterface$setupUserScriptView$1 this$0 -> a
    int $position -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    void <init>(io.neoterm.ui.term.NeoTermRemoteInterface$setupUserScriptView$1,int) -> <init>
io.neoterm.ui.term.NeoTermRemoteInterface$setupUserScriptView$3 -> io.neoterm.ui.term.NeoTermRemoteInterface$g:
    io.neoterm.ui.term.NeoTermRemoteInterface this$0 -> a
    java.util.List $userScripts -> b
    java.util.List $filesToHandle -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void <init>(io.neoterm.ui.term.NeoTermRemoteInterface,java.util.List,java.util.List) -> <init>
io.neoterm.ui.term.SessionRemover -> io.neoterm.ui.term.a:
    io.neoterm.ui.term.SessionRemover INSTANCE -> a
    void removeSession(io.neoterm.services.NeoTermService,io.neoterm.ui.term.tab.TermTab) -> a
    void removeFinishedSession(io.neoterm.services.NeoTermService,io.neoterm.backend.TerminalSession) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.ui.term.tab.TermTab -> io.neoterm.ui.term.tab.TermTab:
    io.neoterm.frontend.client.TermDataHolder termData -> termData
    android.support.v7.widget.Toolbar toolbar -> toolbar
    io.neoterm.frontend.client.TermDataHolder getTermData() -> i
    android.support.v7.widget.Toolbar getToolbar() -> j
    void setToolbar(android.support.v7.widget.Toolbar) -> a
    void updateColorScheme() -> k
    void cleanup() -> l
    void onFullScreenModeChanged(boolean) -> b
    void requireHideIme() -> m
    boolean requireFinishAutoCompletion() -> e
    void requireToggleFullScreen() -> b_
    void requirePaste() -> c_
    void requireClose() -> d_
    void requireUpdateTitle(java.lang.String) -> a
    void requireOnSessionFinished() -> e_
    void requireCreateNew() -> f
    void requireSwitchToPrevious() -> g
    void requireSwitchToNext() -> h
    void requireSwitchTo(int) -> a
    void resetAutoCompleteStatus() -> n
    void resetStatus() -> o
    void <init>(java.lang.CharSequence) -> <init>
io.neoterm.ui.term.tab.TermTabDecorator -> io.neoterm.ui.term.tab.a:
    io.neoterm.ui.term.NeoTermActivity context -> a
    android.view.View onInflateView(android.view.LayoutInflater,android.view.ViewGroup,int) -> a
    void onShowTab(android.content.Context,de.mrapp.android.tabswitcher.TabSwitcher,android.view.View,de.mrapp.android.tabswitcher.Tab,int,int,android.os.Bundle) -> a
    void bindTerminalView(de.mrapp.android.tabswitcher.Tab,io.neoterm.frontend.terminal.TerminalView,io.neoterm.frontend.terminal.eks.ExtraKeysView) -> a
    io.neoterm.frontend.completion.listener.OnAutoCompleteListener createAutoCompleteListener(io.neoterm.frontend.terminal.TerminalView) -> a
    int getViewTypeCount() -> a
    int getViewType(de.mrapp.android.tabswitcher.Tab,int) -> a
    void <init>(io.neoterm.ui.term.NeoTermActivity) -> <init>
io.neoterm.utils.AssetsUtils -> io.neoterm.b.a:
    io.neoterm.utils.AssetsUtils INSTANCE -> a
    void extractAssetsDir(android.content.Context,java.lang.String,java.lang.String) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.utils.CrashHandler -> io.neoterm.b.b:
    java.lang.Thread$UncaughtExceptionHandler defaultHandler -> b
    io.neoterm.utils.CrashHandler INSTANCE -> a
    void init() -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.utils.FileUtils -> io.neoterm.b.c:
    io.neoterm.utils.FileUtils INSTANCE -> a
    boolean writeFile(java.io.File,byte[]) -> a
    boolean writeFile(java.io.File,java.io.InputStream) -> a
    byte[] readFile(java.io.File) -> a
    java.lang.String formatSizeInKB(long) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.utils.FullScreenHelper -> io.neoterm.b.d:
    android.view.View mChildOfContent -> b
    int usableHeightPrevious -> c
    android.widget.FrameLayout$LayoutParams frameLayoutParams -> d
    int mOriginHeight -> e
    int mPreHeight -> f
    io.neoterm.utils.FullScreenHelper$KeyBoardListener mKeyBoardListener -> g
    boolean fullScreen -> h
    boolean shouldSkipFirst -> i
    io.neoterm.utils.FullScreenHelper$Companion Companion -> a
    void setKeyBoardListener(io.neoterm.utils.FullScreenHelper$KeyBoardListener) -> a
    void monitorImeStatus() -> b
    void possiblyResizeChildOfContent() -> c
    int computeUsableHeight() -> d
    boolean getFullScreen() -> a
    void setFullScreen(boolean) -> a
    void <init>(android.app.Activity,boolean,boolean) -> <init>
    void <clinit>() -> <clinit>
    void access$possiblyResizeChildOfContent(io.neoterm.utils.FullScreenHelper) -> a
    void access$monitorImeStatus(io.neoterm.utils.FullScreenHelper) -> b
    void <init>(android.app.Activity,boolean,boolean,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.utils.FullScreenHelper$1 -> io.neoterm.b.d$1:
    io.neoterm.utils.FullScreenHelper this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
    void <init>(io.neoterm.utils.FullScreenHelper) -> <init>
io.neoterm.utils.FullScreenHelper$Companion -> io.neoterm.b.d$a:
    io.neoterm.utils.FullScreenHelper injectActivity(android.app.Activity,boolean,boolean) -> a
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
io.neoterm.utils.FullScreenHelper$KeyBoardListener -> io.neoterm.b.d$b:
    void onKeyboardChange(boolean,int) -> a
io.neoterm.utils.MediaUtils -> io.neoterm.b.e:
    io.neoterm.utils.MediaUtils INSTANCE -> a
    java.lang.String getPath(android.content.Context,android.net.Uri) -> a
    java.lang.String getDataColumn(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[]) -> a
    boolean isExternalStorageDocument(android.net.Uri) -> a
    boolean isDownloadsDocument(android.net.Uri) -> b
    boolean isMediaDocument(android.net.Uri) -> c
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.utils.PackageUtils -> io.neoterm.b.f:
    io.neoterm.utils.PackageUtils INSTANCE -> a
    void syncSource() -> a
    java.lang.String generateSourceFile(java.lang.String) -> a
    void executeApt(android.content.Context,java.lang.String,java.lang.String[],kotlin.jvm.functions.Function2) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
io.neoterm.utils.PackageUtils$executeApt$1 -> io.neoterm.b.f$a:
    kotlin.jvm.functions.Function2 $callback -> a
    void onSessionFinished(io.neoterm.frontend.floating.TerminalDialog,io.neoterm.backend.TerminalSession) -> a
    void <init>(kotlin.jvm.functions.Function2) -> <init>
io.neoterm.utils.RangedInt -> io.neoterm.b.g:
    int number -> a
    kotlin.ranges.IntRange range -> b
    int increaseOne() -> a
    int decreaseOne() -> b
    void <init>(int,kotlin.ranges.IntRange) -> <init>
io.neoterm.utils.TerminalUtils -> io.neoterm.b.h:
    io.neoterm.utils.TerminalUtils INSTANCE -> a
    void setupTerminalView(io.neoterm.frontend.terminal.TerminalView,io.neoterm.frontend.terminal.TerminalViewClient) -> a
    void setupTerminalView$default(io.neoterm.utils.TerminalUtils,io.neoterm.frontend.terminal.TerminalView,io.neoterm.frontend.terminal.TerminalViewClient,int,java.lang.Object) -> a
    void setupExtraKeysView(io.neoterm.frontend.terminal.eks.ExtraKeysView) -> a
    void setupTerminalSession(io.neoterm.backend.TerminalSession) -> a
    io.neoterm.backend.TerminalSession createShellSession(android.content.Context,io.neoterm.frontend.shell.ShellParameter) -> a
    java.lang.String escapeString(java.lang.String) -> a
    void <init>() -> <init>
    void <clinit>() -> <clinit>
kotlin.KotlinNullPointerException -> a.a:
    void <init>() -> <init>
kotlin.Pair -> a.b:
    java.lang.Object first -> a
    java.lang.Object second -> b
    java.lang.String toString() -> toString
    java.lang.Object getFirst() -> a
    java.lang.Object getSecond() -> b
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    java.lang.Object component1() -> c
    java.lang.Object component2() -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
kotlin.TuplesKt -> a.c:
    kotlin.Pair to(java.lang.Object,java.lang.Object) -> a
kotlin.TypeCastException -> a.d:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
kotlin.UninitializedPropertyAccessException -> a.e:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
kotlin.Unit -> a.f:
    kotlin.Unit INSTANCE -> a
    java.lang.String toString() -> toString
    void <init>() -> <init>
    void <clinit>() -> <clinit>
kotlin.collections.AbstractMutableList -> a.a.a:
    java.lang.Object removeAt(int) -> a
    java.lang.Object remove(int) -> remove
    void <init>() -> <init>
    int size() -> size
    int getSize() -> a
kotlin.collections.ArrayAsCollection -> a.a.b:
    java.lang.Object[] values -> a
    boolean isVarargs -> b
    int getSize() -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    void <init>(java.lang.Object[],boolean) -> <init>
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
kotlin.collections.ArraysKt -> a.a.c:
kotlin.collections.ArraysKt__ArraysJVMKt -> a.a.d:
kotlin.collections.ArraysKt__ArraysKt -> a.a.e:
kotlin.collections.ArraysKt___ArraysKt -> a.a.f:
    boolean contains(java.lang.Object[],java.lang.Object) -> a
    int indexOf(java.lang.Object[],java.lang.Object) -> b
    char single(char[]) -> a
    java.util.List asList(java.lang.Object[]) -> a
kotlin.collections.ArraysUtilJVM -> a.a.g:
    java.util.List asList(java.lang.Object[]) -> a
kotlin.collections.CollectionsKt -> a.a.h:
kotlin.collections.CollectionsKt__CollectionsKt -> a.a.i:
    java.util.List emptyList() -> a
    java.util.List listOf(java.lang.Object[]) -> a
    java.util.List listOf(java.lang.Object) -> a
    java.util.List mutableListOf(java.lang.Object[]) -> b
    int getLastIndex(java.util.List) -> a
    java.util.List optimizeReadOnlyList(java.util.List) -> b
    java.lang.Object[] copyToArrayOfAny$CollectionsKt__CollectionsKt(java.lang.Object[],boolean) -> b
    java.lang.Object[] access$copyToArrayOfAny(java.lang.Object[],boolean) -> a
kotlin.collections.CollectionsKt__IterablesKt -> a.a.j:
    int collectionSizeOrDefault(java.lang.Iterable,int) -> a
kotlin.collections.CollectionsKt__IteratorsKt -> a.a.k:
kotlin.collections.CollectionsKt__MutableCollectionsKt -> a.a.l:
    boolean addAll(java.util.Collection,java.lang.Iterable) -> a
    boolean addAll(java.util.Collection,java.lang.Object[]) -> a
    boolean retainAll(java.lang.Iterable,kotlin.jvm.functions.Function1) -> a
    boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.lang.Iterable,kotlin.jvm.functions.Function1,boolean) -> a
kotlin.collections.CollectionsKt__ReversedViewsKt -> a.a.m:
    int reverseElementIndex$CollectionsKt__ReversedViewsKt(java.util.List,int) -> c
    int reversePositionIndex$CollectionsKt__ReversedViewsKt(java.util.List,int) -> d
    java.util.List asReversedMutable(java.util.List) -> c
    int access$reverseElementIndex(java.util.List,int) -> a
    int access$reversePositionIndex(java.util.List,int) -> b
kotlin.collections.CollectionsKt___CollectionsKt -> a.a.n:
    java.lang.Object elementAt(java.lang.Iterable,int) -> b
    java.lang.Object elementAtOrElse(java.lang.Iterable,int,kotlin.jvm.functions.Function1) -> a
    java.lang.Object first(java.lang.Iterable) -> a
    java.lang.Object first(java.util.List) -> d
    int indexOf(java.lang.Iterable,java.lang.Object) -> a
    java.lang.Object single(java.lang.Iterable) -> b
    java.lang.Object single(java.util.List) -> e
    java.util.List take(java.lang.Iterable,int) -> c
    java.util.Collection toCollection(java.lang.Iterable,java.util.Collection) -> a
    java.util.List toList(java.lang.Iterable) -> c
    java.util.List toMutableList(java.lang.Iterable) -> d
    java.util.List toMutableList(java.util.Collection) -> a
    java.lang.Iterable withIndex(java.lang.Iterable) -> e
    java.util.List plus(java.util.Collection,java.lang.Iterable) -> b
    java.util.List filterIsInstance(java.lang.Iterable,java.lang.Class) -> a
    java.util.Collection filterIsInstanceTo(java.lang.Iterable,java.util.Collection,java.lang.Class) -> a
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1 -> a.a.n$a:
    int $index -> a
    java.lang.Object invoke(java.lang.Object) -> a
    java.lang.Void invoke(int) -> a
    void <init>(int) -> <init>
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1 -> a.a.n$b:
    java.lang.Iterable receiver$0 -> a
    java.lang.Object invoke() -> a
    java.util.Iterator invoke() -> b
    void <init>(java.lang.Iterable) -> <init>
kotlin.collections.EmptyIterator -> a.a.o:
    kotlin.collections.EmptyIterator INSTANCE -> a
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    java.lang.Void next() -> a
    java.lang.Object next() -> next
    java.lang.Void previous() -> b
    java.lang.Object previous() -> previous
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    void remove() -> remove
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
kotlin.collections.EmptyList -> a.a.p:
    long serialVersionUID -> serialVersionUID
    kotlin.collections.EmptyList INSTANCE -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getSize() -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Void) -> a
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Void get(int) -> a
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Void) -> b
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Void) -> c
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.Iterator iterator() -> iterator
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
    java.lang.Object readResolve() -> readResolve
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void clear() -> clear
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
kotlin.collections.EmptySet -> a.a.q:
    long serialVersionUID -> serialVersionUID
    kotlin.collections.EmptySet INSTANCE -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getSize() -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Void) -> a
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.util.Iterator iterator() -> iterator
    java.lang.Object readResolve() -> readResolve
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
kotlin.collections.IndexedValue -> a.a.r:
    int index -> a
    java.lang.Object value -> b
    void <init>(int,java.lang.Object) -> <init>
    int component1() -> a
    java.lang.Object component2() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
kotlin.collections.IndexingIterable -> a.a.s:
    kotlin.jvm.functions.Function0 iteratorFactory -> a
    java.util.Iterator iterator() -> iterator
    void <init>(kotlin.jvm.functions.Function0) -> <init>
kotlin.collections.IndexingIterator -> a.a.t:
    int index -> a
    java.util.Iterator iterator -> b
    boolean hasNext() -> hasNext
    kotlin.collections.IndexedValue next() -> a
    java.lang.Object next() -> next
    void <init>(java.util.Iterator) -> <init>
    void remove() -> remove
kotlin.collections.IntIterator -> a.a.u:
    java.lang.Integer next() -> a
    java.lang.Object next() -> next
    int nextInt() -> b
    void <init>() -> <init>
    void remove() -> remove
kotlin.collections.ReversedList -> a.a.v:
    java.util.List delegate -> a
    int getSize() -> a
    java.lang.Object get(int) -> get
    void clear() -> clear
    java.lang.Object removeAt(int) -> a
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    void <init>(java.util.List) -> <init>
kotlin.collections.SetsKt -> a.a.w:
kotlin.collections.SetsKt__SetsKt -> a.a.x:
    java.util.Set emptySet() -> a
kotlin.collections.SetsKt___SetsKt -> a.a.y:
kotlin.internal.ProgressionUtilKt -> a.b.a:
    int mod(int,int) -> a
    int differenceModulo(int,int,int) -> b
    int getProgressionLastElement(int,int,int) -> a
kotlin.io.FilesKt -> a.c.a:
kotlin.io.FilesKt__FilePathComponentsKt -> a.c.b:
kotlin.io.FilesKt__FileReadWriteKt -> a.c.c:
kotlin.io.FilesKt__FileTreeWalkKt -> a.c.d:
kotlin.io.FilesKt__UtilsKt -> a.c.e:
    java.lang.String getExtension(java.io.File) -> a
    java.lang.String getNameWithoutExtension(java.io.File) -> b
kotlin.jvm.functions.Function0 -> a.d.a.a:
    java.lang.Object invoke() -> a
kotlin.jvm.functions.Function1 -> a.d.a.b:
    java.lang.Object invoke(java.lang.Object) -> a
kotlin.jvm.functions.Function2 -> a.d.a.c:
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> a
kotlin.jvm.internal.ArrayIterator -> a.d.b.a:
    int index -> a
    java.lang.Object[] array -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void <init>(java.lang.Object[]) -> <init>
    void remove() -> remove
kotlin.jvm.internal.ArrayIteratorKt -> a.d.b.b:
    java.util.Iterator iterator(java.lang.Object[]) -> a
kotlin.jvm.internal.CollectionToArray -> a.d.b.c:
    java.lang.Object[] EMPTY_OBJECT_ARRAY -> a
    java.lang.Object[] toArray(java.util.Collection) -> a
    java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> a
    java.lang.Object[] finishToArray(java.lang.Object[],java.util.Iterator) -> a
    void <clinit>() -> <clinit>
kotlin.jvm.internal.DefaultConstructorMarker -> a.d.b.d:
kotlin.jvm.internal.FunctionBase -> a.d.b.e:
kotlin.jvm.internal.Intrinsics -> a.d.b.f:
    void <init>() -> <init>
    void throwNpe() -> a
    void throwUninitializedProperty(java.lang.String) -> a
    void throwUninitializedPropertyAccessException(java.lang.String) -> b
    void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String) -> a
    void checkParameterIsNotNull(java.lang.Object,java.lang.String) -> b
    void throwParameterIsNullException(java.lang.String) -> c
    int compare(int,int) -> a
    boolean areEqual(java.lang.Object,java.lang.Object) -> a
    java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> a
    java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String) -> a
kotlin.jvm.internal.Lambda -> a.d.b.g:
    int arity -> a
    java.lang.String toString() -> toString
    void <init>(int) -> <init>
kotlin.jvm.internal.Ref -> a.d.b.h:
kotlin.jvm.internal.Ref$IntRef -> a.d.b.h$a:
    int element -> a
    void <init>() -> <init>
    java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ObjectRef -> a.d.b.h$b:
    java.lang.Object element -> a
    void <init>() -> <init>
    java.lang.String toString() -> toString
kotlin.jvm.internal.Reflection -> a.d.b.i:
    kotlin.jvm.internal.ReflectionFactory factory -> a
    kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY -> b
    java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> a
    void <clinit>() -> <clinit>
kotlin.jvm.internal.ReflectionFactory -> a.d.b.j:
    void <init>() -> <init>
    java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> a
kotlin.jvm.internal.SpreadBuilder -> a.d.b.k:
    java.util.ArrayList list -> a
    void <init>(int) -> <init>
    void addSpread(java.lang.Object) -> a
    int size() -> a
    void add(java.lang.Object) -> b
    java.lang.Object[] toArray(java.lang.Object[]) -> a
kotlin.ranges.IntProgression -> a.e.a:
    int first -> b
    int last -> c
    int step -> d
    kotlin.ranges.IntProgression$Companion Companion -> a
    int getFirst() -> a
    int getLast() -> b
    int getStep() -> c
    kotlin.collections.IntIterator iterator() -> d
    java.util.Iterator iterator() -> iterator
    boolean isEmpty() -> e
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void <init>(int,int,int) -> <init>
    void <clinit>() -> <clinit>
kotlin.ranges.IntProgression$Companion -> a.e.a$a:
    kotlin.ranges.IntProgression fromClosedRange(int,int,int) -> a
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.ranges.IntProgressionIterator -> a.e.b:
    int finalElement -> a
    boolean hasNext -> b
    int next -> c
    int step -> d
    boolean hasNext() -> hasNext
    int nextInt() -> b
    void <init>(int,int,int) -> <init>
kotlin.ranges.IntRange -> a.e.c:
    kotlin.ranges.IntRange EMPTY -> c
    kotlin.ranges.IntRange$Companion Companion -> b
    java.lang.Integer getStart() -> f
    java.lang.Integer getEndInclusive() -> g
    boolean contains(int) -> a
    boolean isEmpty() -> e
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void <init>(int,int) -> <init>
    void <clinit>() -> <clinit>
    kotlin.ranges.IntRange access$getEMPTY$cp() -> h
kotlin.ranges.IntRange$Companion -> a.e.c$a:
    kotlin.ranges.IntRange getEMPTY() -> a
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.ranges.RangesKt -> a.e.d:
kotlin.ranges.RangesKt__RangesKt -> a.e.e:
kotlin.ranges.RangesKt___RangesKt -> a.e.f:
    kotlin.ranges.IntProgression downTo(int,int) -> a
    kotlin.ranges.IntProgression reversed(kotlin.ranges.IntProgression) -> a
    kotlin.ranges.IntRange until(int,int) -> b
    int coerceAtLeast(int,int) -> c
    int coerceAtMost(int,int) -> d
    int coerceIn(int,int,int) -> a
kotlin.reflect.KClass -> a.f.a:
kotlin.sequences.Sequence -> a.g.a:
    java.util.Iterator iterator() -> a
kotlin.sequences.SequencesKt -> a.g.b:
kotlin.sequences.SequencesKt__SequencesKt -> a.g.c:
kotlin.sequences.SequencesKt___SequencesKt -> a.g.d:
    kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> a
    java.lang.Appendable joinTo(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> a
    java.lang.String joinToString(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> a
    java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> a
    java.lang.Iterable asIterable(kotlin.sequences.Sequence) -> a
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1 -> a.g.d$a:
    kotlin.sequences.Sequence receiver$0$inlined -> a
    void <init>(kotlin.sequences.Sequence) -> <init>
    java.util.Iterator iterator() -> iterator
kotlin.sequences.TransformingSequence -> a.g.e:
    kotlin.sequences.Sequence sequence -> a
    kotlin.jvm.functions.Function1 transformer -> b
    java.util.Iterator iterator() -> a
    void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence) -> a
    kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence) -> b
kotlin.sequences.TransformingSequence$iterator$1 -> a.g.e$a:
    java.util.Iterator iterator -> b
    kotlin.sequences.TransformingSequence this$0 -> a
    java.lang.Object next() -> next
    boolean hasNext() -> hasNext
    void <init>(kotlin.sequences.TransformingSequence) -> <init>
    void remove() -> remove
kotlin.text.CharsKt -> a.h.a:
kotlin.text.CharsKt__CharJVMKt -> a.h.b:
    boolean isWhitespace(char) -> a
kotlin.text.CharsKt__CharKt -> a.h.c:
    boolean equals(char,char,boolean) -> a
kotlin.text.Charsets -> a.h.d:
    java.nio.charset.Charset UTF_8 -> a
    java.nio.charset.Charset UTF_16 -> b
    java.nio.charset.Charset UTF_16BE -> c
    java.nio.charset.Charset UTF_16LE -> d
    java.nio.charset.Charset US_ASCII -> e
    java.nio.charset.Charset ISO_8859_1 -> f
    kotlin.text.Charsets INSTANCE -> g
    void <init>() -> <init>
    void <clinit>() -> <clinit>
kotlin.text.DelimitedRangesSequence -> a.h.e:
    java.lang.CharSequence input -> a
    int startIndex -> b
    int limit -> c
    kotlin.jvm.functions.Function2 getNextMatch -> d
    java.util.Iterator iterator() -> a
    void <init>(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2) -> <init>
    int access$getLimit$p(kotlin.text.DelimitedRangesSequence) -> a
    java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence) -> b
    kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence) -> c
    int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence) -> d
kotlin.text.DelimitedRangesSequence$iterator$1 -> a.h.e$a:
    int nextState -> b
    int currentStartIndex -> c
    int nextSearchIndex -> d
    kotlin.ranges.IntRange nextItem -> e
    int counter -> f
    kotlin.text.DelimitedRangesSequence this$0 -> a
    void calcNext() -> b
    kotlin.ranges.IntRange next() -> a
    java.lang.Object next() -> next
    boolean hasNext() -> hasNext
    void <init>(kotlin.text.DelimitedRangesSequence) -> <init>
    void remove() -> remove
kotlin.text.FlagEnum -> a.h.f:
    int getValue() -> a
    int getMask() -> b
kotlin.text.Regex -> a.h.g:
    java.util.Set options -> b
    java.util.regex.Pattern nativePattern -> c
    kotlin.text.Regex$Companion Companion -> a
    java.util.List split(java.lang.CharSequence,int) -> a
    java.lang.String toString() -> toString
    void <init>(java.util.regex.Pattern) -> <init>
    void <init>(java.lang.String) -> <init>
    void <clinit>() -> <clinit>
kotlin.text.Regex$Companion -> a.h.g$a:
    void <init>() -> <init>
    void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.text.Regex$fromInt$$inlined$apply$lambda$1 -> a.h.h$a:
    int $value$inlined -> a
    void <init>(int) -> <init>
    java.lang.Object invoke(java.lang.Object) -> a
    boolean invoke(java.lang.Enum) -> a
kotlin.text.RegexKt -> a.h.h:
kotlin.text.RegexOption -> a.h.i:
    kotlin.text.RegexOption IGNORE_CASE -> a
    kotlin.text.RegexOption MULTILINE -> b
    kotlin.text.RegexOption LITERAL -> c
    kotlin.text.RegexOption UNIX_LINES -> d
    kotlin.text.RegexOption COMMENTS -> e
    kotlin.text.RegexOption DOT_MATCHES_ALL -> f
    kotlin.text.RegexOption CANON_EQ -> g
    kotlin.text.RegexOption[] $VALUES -> h
    int value -> i
    int mask -> j
    void <clinit>() -> <clinit>
    int getValue() -> a
    int getMask() -> b
    void <init>(java.lang.String,int,int,int) -> <init>
    void <init>(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    kotlin.text.RegexOption[] values() -> values
    kotlin.text.RegexOption valueOf(java.lang.String) -> valueOf
kotlin.text.StringsKt -> a.h.j:
kotlin.text.StringsKt__IndentKt -> a.h.k:
kotlin.text.StringsKt__RegexExtensionsKt -> a.h.l:
kotlin.text.StringsKt__StringBuilderJVMKt -> a.h.m:
kotlin.text.StringsKt__StringBuilderKt -> a.h.n:
    void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> a
kotlin.text.StringsKt__StringNumberConversionsKt -> a.h.o:
kotlin.text.StringsKt__StringsJVMKt -> a.h.p:
    boolean equals(java.lang.String,java.lang.String,boolean) -> a
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> a
    boolean startsWith(java.lang.String,java.lang.String,boolean) -> b
    boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> a
    boolean endsWith(java.lang.String,java.lang.String,boolean) -> c
    boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> b
    boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> a
kotlin.text.StringsKt__StringsKt -> a.h.q:
    java.lang.CharSequence trim(java.lang.CharSequence) -> a
    java.lang.CharSequence trimEnd(java.lang.CharSequence) -> b
    kotlin.ranges.IntRange getIndices(java.lang.CharSequence) -> c
    int getLastIndex(java.lang.CharSequence) -> d
    java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange) -> a
    java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> a
    java.lang.String substringBeforeLast(java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String substringBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> b
    java.lang.String substringAfterLast(java.lang.String,char,java.lang.String) -> a
    java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> a
    boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> a
    boolean startsWith(java.lang.CharSequence,char,boolean) -> a
    boolean startsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> a
    kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,char[],int,boolean,boolean) -> a
    int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> a
    int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> b
    int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean) -> a
    int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object) -> a
    kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> b
    int indexOf(java.lang.CharSequence,char,int,boolean) -> a
    int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> a
    int indexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> a
    int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> a
    int lastIndexOf(java.lang.CharSequence,char,int,boolean) -> b
    int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> b
    int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> b
    int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> b
    boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> a
    boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> a
    boolean contains(java.lang.CharSequence,char,boolean) -> b
    boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> b
    kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int) -> a
    kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object) -> a
    kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int) -> a
    kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> a
    java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int) -> b
    java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> b
    kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> a
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4 -> a.h.q$a:
    java.util.List $delimitersList -> a
    boolean $ignoreCase -> b
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> a
    kotlin.Pair invoke(java.lang.CharSequence,int) -> a
    void <init>(java.util.List,boolean) -> <init>
kotlin.text.StringsKt__StringsKt$splitToSequence$1 -> a.h.q$b:
    java.lang.CharSequence receiver$0 -> a
    java.lang.Object invoke(java.lang.Object) -> a
    java.lang.String invoke(kotlin.ranges.IntRange) -> a
    void <init>(java.lang.CharSequence) -> <init>
kotlin.text.StringsKt___StringsKt -> a.h.r:
org.greenrobot.eventbus.AsyncPoster -> org.greenrobot.eventbus.a:
    org.greenrobot.eventbus.PendingPostQueue queue -> a
    org.greenrobot.eventbus.EventBus eventBus -> b
    void <init>(org.greenrobot.eventbus.EventBus) -> <init>
    void enqueue(org.greenrobot.eventbus.Subscription,java.lang.Object) -> a
    void run() -> run
org.greenrobot.eventbus.BackgroundPoster -> org.greenrobot.eventbus.b:
    org.greenrobot.eventbus.PendingPostQueue queue -> a
    org.greenrobot.eventbus.EventBus eventBus -> b
    boolean executorRunning -> c
    void <init>(org.greenrobot.eventbus.EventBus) -> <init>
    void enqueue(org.greenrobot.eventbus.Subscription,java.lang.Object) -> a
    void run() -> run
org.greenrobot.eventbus.EventBus -> org.greenrobot.eventbus.c:
    java.lang.String TAG -> a
    org.greenrobot.eventbus.EventBus defaultInstance -> b
    org.greenrobot.eventbus.EventBusBuilder DEFAULT_BUILDER -> c
    java.util.Map eventTypesCache -> d
    java.util.Map subscriptionsByEventType -> e
    java.util.Map typesBySubscriber -> f
    java.util.Map stickyEvents -> g
    java.lang.ThreadLocal currentPostingThreadState -> h
    org.greenrobot.eventbus.HandlerPoster mainThreadPoster -> i
    org.greenrobot.eventbus.BackgroundPoster backgroundPoster -> j
    org.greenrobot.eventbus.AsyncPoster asyncPoster -> k
    org.greenrobot.eventbus.SubscriberMethodFinder subscriberMethodFinder -> l
    java.util.concurrent.ExecutorService executorService -> m
    boolean throwSubscriberException -> n
    boolean logSubscriberExceptions -> o
    boolean logNoSubscriberMessages -> p
    boolean sendSubscriberExceptionEvent -> q
    boolean sendNoSubscriberEvent -> r
    boolean eventInheritance -> s
    int indexCount -> t
    org.greenrobot.eventbus.EventBus getDefault() -> a
    void <init>() -> <init>
    void <init>(org.greenrobot.eventbus.EventBusBuilder) -> <init>
    void register(java.lang.Object) -> a
    void subscribe(java.lang.Object,org.greenrobot.eventbus.SubscriberMethod) -> a
    void checkPostStickyEventToSubscription(org.greenrobot.eventbus.Subscription,java.lang.Object) -> b
    void unsubscribeByEventType(java.lang.Object,java.lang.Class) -> a
    void unregister(java.lang.Object) -> b
    void post(java.lang.Object) -> c
    void postSingleEvent(java.lang.Object,org.greenrobot.eventbus.EventBus$PostingThreadState) -> a
    boolean postSingleEventForEventType(java.lang.Object,org.greenrobot.eventbus.EventBus$PostingThreadState,java.lang.Class) -> a
    void postToSubscription(org.greenrobot.eventbus.Subscription,java.lang.Object,boolean) -> a
    java.util.List lookupAllEventTypes(java.lang.Class) -> a
    void addInterfaces(java.util.List,java.lang.Class[]) -> a
    void invokeSubscriber(org.greenrobot.eventbus.PendingPost) -> a
    void invokeSubscriber(org.greenrobot.eventbus.Subscription,java.lang.Object) -> a
    void handleSubscriberException(org.greenrobot.eventbus.Subscription,java.lang.Object,java.lang.Throwable) -> a
    java.util.concurrent.ExecutorService getExecutorService() -> b
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
org.greenrobot.eventbus.EventBus$1 -> org.greenrobot.eventbus.c$1:
    org.greenrobot.eventbus.EventBus this$0 -> a
    void <init>(org.greenrobot.eventbus.EventBus) -> <init>
    org.greenrobot.eventbus.EventBus$PostingThreadState initialValue() -> a
    java.lang.Object initialValue() -> initialValue
org.greenrobot.eventbus.EventBus$2 -> org.greenrobot.eventbus.c$2:
    int[] $SwitchMap$org$greenrobot$eventbus$ThreadMode -> a
    void <clinit>() -> <clinit>
org.greenrobot.eventbus.EventBus$PostingThreadState -> org.greenrobot.eventbus.c$a:
    java.util.List eventQueue -> a
    boolean isPosting -> b
    boolean isMainThread -> c
    org.greenrobot.eventbus.Subscription subscription -> d
    java.lang.Object event -> e
    boolean canceled -> f
    void <init>() -> <init>
org.greenrobot.eventbus.EventBusBuilder -> org.greenrobot.eventbus.d:
    java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE -> k
    boolean logSubscriberExceptions -> a
    boolean logNoSubscriberMessages -> b
    boolean sendSubscriberExceptionEvent -> c
    boolean sendNoSubscriberEvent -> d
    boolean throwSubscriberException -> e
    boolean eventInheritance -> f
    boolean ignoreGeneratedIndex -> g
    boolean strictMethodVerification -> h
    java.util.concurrent.ExecutorService executorService -> i
    java.util.List subscriberInfoIndexes -> j
    void <init>() -> <init>
    void <clinit>() -> <clinit>
org.greenrobot.eventbus.EventBusException -> org.greenrobot.eventbus.e:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.greenrobot.eventbus.HandlerPoster -> org.greenrobot.eventbus.f:
    org.greenrobot.eventbus.PendingPostQueue queue -> a
    int maxMillisInsideHandleMessage -> b
    org.greenrobot.eventbus.EventBus eventBus -> c
    boolean handlerActive -> d
    void <init>(org.greenrobot.eventbus.EventBus,android.os.Looper,int) -> <init>
    void enqueue(org.greenrobot.eventbus.Subscription,java.lang.Object) -> a
    void handleMessage(android.os.Message) -> handleMessage
org.greenrobot.eventbus.NoSubscriberEvent -> org.greenrobot.eventbus.g:
    org.greenrobot.eventbus.EventBus eventBus -> a
    java.lang.Object originalEvent -> b
    void <init>(org.greenrobot.eventbus.EventBus,java.lang.Object) -> <init>
org.greenrobot.eventbus.PendingPost -> org.greenrobot.eventbus.h:
    java.util.List pendingPostPool -> d
    java.lang.Object event -> a
    org.greenrobot.eventbus.Subscription subscription -> b
    org.greenrobot.eventbus.PendingPost next -> c
    void <init>(java.lang.Object,org.greenrobot.eventbus.Subscription) -> <init>
    org.greenrobot.eventbus.PendingPost obtainPendingPost(org.greenrobot.eventbus.Subscription,java.lang.Object) -> a
    void releasePendingPost(org.greenrobot.eventbus.PendingPost) -> a
    void <clinit>() -> <clinit>
org.greenrobot.eventbus.PendingPostQueue -> org.greenrobot.eventbus.i:
    org.greenrobot.eventbus.PendingPost head -> a
    org.greenrobot.eventbus.PendingPost tail -> b
    void <init>() -> <init>
    void enqueue(org.greenrobot.eventbus.PendingPost) -> a
    org.greenrobot.eventbus.PendingPost poll() -> a
    org.greenrobot.eventbus.PendingPost poll(int) -> a
org.greenrobot.eventbus.Subscribe -> org.greenrobot.eventbus.j:
    org.greenrobot.eventbus.ThreadMode threadMode() -> a
    boolean sticky() -> b
    int priority() -> c
org.greenrobot.eventbus.SubscriberExceptionEvent -> org.greenrobot.eventbus.k:
    org.greenrobot.eventbus.EventBus eventBus -> a
    java.lang.Throwable throwable -> b
    java.lang.Object causingEvent -> c
    java.lang.Object causingSubscriber -> d
    void <init>(org.greenrobot.eventbus.EventBus,java.lang.Throwable,java.lang.Object,java.lang.Object) -> <init>
org.greenrobot.eventbus.SubscriberMethod -> org.greenrobot.eventbus.l:
    java.lang.reflect.Method method -> a
    org.greenrobot.eventbus.ThreadMode threadMode -> b
    java.lang.Class eventType -> c
    int priority -> d
    boolean sticky -> e
    java.lang.String methodString -> f
    void <init>(java.lang.reflect.Method,java.lang.Class,org.greenrobot.eventbus.ThreadMode,int,boolean) -> <init>
    boolean equals(java.lang.Object) -> equals
    void checkMethodString() -> a
    int hashCode() -> hashCode
org.greenrobot.eventbus.SubscriberMethodFinder -> org.greenrobot.eventbus.m:
    java.util.Map METHOD_CACHE -> a
    java.util.List subscriberInfoIndexes -> b
    boolean strictMethodVerification -> c
    boolean ignoreGeneratedIndex -> d
    org.greenrobot.eventbus.SubscriberMethodFinder$FindState[] FIND_STATE_POOL -> e
    void <init>(java.util.List,boolean,boolean) -> <init>
    java.util.List findSubscriberMethods(java.lang.Class) -> a
    java.util.List findUsingInfo(java.lang.Class) -> b
    java.util.List getMethodsAndRelease(org.greenrobot.eventbus.SubscriberMethodFinder$FindState) -> a
    org.greenrobot.eventbus.SubscriberMethodFinder$FindState prepareFindState() -> a
    org.greenrobot.eventbus.meta.SubscriberInfo getSubscriberInfo(org.greenrobot.eventbus.SubscriberMethodFinder$FindState) -> b
    java.util.List findUsingReflection(java.lang.Class) -> c
    void findUsingReflectionInSingleClass(org.greenrobot.eventbus.SubscriberMethodFinder$FindState) -> c
    void <clinit>() -> <clinit>
org.greenrobot.eventbus.SubscriberMethodFinder$FindState -> org.greenrobot.eventbus.m$a:
    java.util.List subscriberMethods -> a
    java.util.Map anyMethodByEventType -> b
    java.util.Map subscriberClassByMethodKey -> c
    java.lang.StringBuilder methodKeyBuilder -> d
    java.lang.Class subscriberClass -> e
    java.lang.Class clazz -> f
    boolean skipSuperClasses -> g
    org.greenrobot.eventbus.meta.SubscriberInfo subscriberInfo -> h
    void <init>() -> <init>
    void initForSubscriber(java.lang.Class) -> a
    void recycle() -> a
    boolean checkAdd(java.lang.reflect.Method,java.lang.Class) -> a
    boolean checkAddWithMethodSignature(java.lang.reflect.Method,java.lang.Class) -> b
    void moveToSuperclass() -> b
org.greenrobot.eventbus.Subscription -> org.greenrobot.eventbus.n:
    java.lang.Object subscriber -> a
    org.greenrobot.eventbus.SubscriberMethod subscriberMethod -> b
    boolean active -> c
    void <init>(java.lang.Object,org.greenrobot.eventbus.SubscriberMethod) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.greenrobot.eventbus.ThreadMode -> org.greenrobot.eventbus.ThreadMode:
    org.greenrobot.eventbus.ThreadMode POSTING -> POSTING
    org.greenrobot.eventbus.ThreadMode MAIN -> MAIN
    org.greenrobot.eventbus.ThreadMode BACKGROUND -> BACKGROUND
    org.greenrobot.eventbus.ThreadMode ASYNC -> ASYNC
    org.greenrobot.eventbus.ThreadMode[] $VALUES -> $VALUES
    org.greenrobot.eventbus.ThreadMode[] values() -> values
    org.greenrobot.eventbus.ThreadMode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
org.greenrobot.eventbus.meta.SubscriberInfo -> org.greenrobot.eventbus.a.a:
    java.lang.Class getSubscriberClass() -> a
    org.greenrobot.eventbus.SubscriberMethod[] getSubscriberMethods() -> b
    org.greenrobot.eventbus.meta.SubscriberInfo getSuperSubscriberInfo() -> c
org.greenrobot.eventbus.meta.SubscriberInfoIndex -> org.greenrobot.eventbus.a.b:
    org.greenrobot.eventbus.meta.SubscriberInfo getSubscriberInfo(java.lang.Class) -> a
